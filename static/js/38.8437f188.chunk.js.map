{"version":3,"sources":["Page/StockEntry/StockTransfer/Upload/index.jsx"],"names":["ExcelFile","ReactExport","ExcelSheet","ExcelColumn","withRouter","props","dispatch","useDispatch","React","useState","warehousesData","useSelector","state","warehouseData","useEffect","getWarehouses","className","element","id","style","display","filename","data","areaSource","warehouseSource","warehouseDestination","expiryDate","po","skuNumber","inputWeight","name","label","value","nextPage","history","push","transaction","field","dataField","text","editable","sort","hidden","type"],"mappings":"2RAQMA,G,QAAYC,IAAYD,WACxBE,EAAaD,IAAYD,UAAUE,WACnCC,EAAcF,IAAYD,UAAUG,YAmH3BC,uBAlHA,SAACC,GACd,IAAMC,EAAWC,cADO,EAE0BC,IAAMC,UAAS,GAFzC,mBAGlBC,GAHkB,UAGDC,aAAY,SAACC,GAAD,OAAWA,EAAMC,kBAwEpD,OANAC,qBAAU,WACHJ,GACHK,YAAc,CAAET,eAEjB,IAGD,yBAAKU,UAAU,QAEb,kBAAChB,EAAD,CACEiB,QAEE,4BAAQC,GAAG,wBAAwBC,MAAO,CAAEC,QAAS,SAArD,iBAKFC,SAAS,gCAET,kBAACnB,EAAD,CAAYoB,KA/BD,CACf,CACEC,WAAY,GACZC,gBAAiB,GACjBC,qBAAsB,GACtBC,WAAY,GACZC,GAAI,GACJC,UAAW,GACXC,YAAa,KAuBiBC,KAAK,YAC/B,kBAAC3B,EAAD,CAAa4B,MAAM,cAAcC,MAAM,OACvC,kBAAC7B,EAAD,CAAa4B,MAAM,aAAaC,MAAM,cACtC,kBAAC7B,EAAD,CAAa4B,MAAM,cAAcC,MAAM,eACvC,kBAAC7B,EAAD,CAAa4B,MAAM,mBAAmBC,MAAM,oBAC5C,kBAAC7B,EAAD,CAAa4B,MAAM,cAAcC,MAAM,eACvC,kBAAC7B,EAAD,CAAa4B,MAAM,wBAAwBC,MAAM,yBACjD,kBAAC7B,EAAD,CAAa4B,MAAM,eAAeC,MAAM,kBAK5C,kBAAC,IAAD,CACEC,SAAU,kBACR5B,EAAM6B,QAAQC,KACZ,sDAGJC,YAAa,gBACbC,MAvGQ,CACZ,CACEC,UAAW,KACXC,KAAM,KACNC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,KAAM,UAER,CACEL,UAAW,eACXC,KAAM,cACNI,KAAM,SACNF,MAAM,GAER,CACEH,UAAW,YACXC,KAAM,aACNI,KAAM,SACNF,MAAM,GAER,CACEH,UAAW,gBACXC,KAAM,cACNI,KAAM,YACNF,MAAM,GAER,CACEH,UAAW,YACXC,KAAM,mBACNI,KAAM,SACNF,MAAM,GAER,CACEH,UAAW,WACXC,KAAM,cACNI,KAAM,SACNF,MAAM,GAER,CACEH,UAAW,uBACXC,KAAM,wBACNI,KAAM,SACNF,MAAM,GAER,CACEH,UAAW,MACXC,KAAM,eACNI,KAAM,SACNF,MAAM,IAuDJE,KAAK,uB","file":"static/js/38.8437f188.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport FileUploader from \"Component/FileUploader\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport { getWarehouses } from \"apiServices\";\r\nimport \"./index.scss\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\nconst Upload = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [isDisplayProgress, setIsDisplayProgress] = React.useState(false);\r\n  const warehousesData = useSelector((state) => state.warehouseData);\r\n  const Field = [\r\n    {\r\n      dataField: \"id\", //field ini wajib ada untuk editable column\r\n      text: \"ID\",\r\n      editable: false,\r\n      sort: true,\r\n      hidden: true,\r\n      type: \"number\",\r\n    },\r\n    {\r\n      dataField: \"wmsPoSkuCode\",\r\n      text: \"PO SKU Code\",\r\n      type: \"number\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"skuNumber\",\r\n      text: \"SKU Number\",\r\n      type: \"number\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"expiryDateCol\",\r\n      text: \"Expiry Date\",\r\n      type: \"date_indo\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"warehouse\",\r\n      text: \"Warehouse Source\",\r\n      type: \"string\",\r\n      sort: true,\r\n    },\r\n    { \r\n      dataField: \"areaName\", \r\n      text: \"Area Source\", \r\n      type: \"string\", \r\n      sort: true \r\n    },\r\n    {\r\n      dataField: \"warehouseDestination\",\r\n      text: \"Warehouse Destination\",\r\n      type: \"string\",\r\n      sort: true,\r\n    }, \r\n    { \r\n      dataField: \"qty\", \r\n      text: \"Input Weight\", \r\n      type: \"number\", \r\n      sort: true \r\n    },\r\n  ];\r\n\r\n  const dataSet1 = [\r\n    {\r\n      areaSource: \"\",\r\n      warehouseSource: \"\",\r\n      warehouseDestination: \"\",\r\n      expiryDate: \"\",\r\n      po: \"\",\r\n      skuNumber: \"\",\r\n      inputWeight: \"\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (!warehousesData) {\r\n      getWarehouses({ dispatch });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mb-5\">\r\n      {/* export this table to excel */}\r\n      <ExcelFile\r\n        element={\r\n          //dont change id and style please\r\n          <button id=\"download-template-xls\" style={{ display: \"none\" }}>\r\n            Download Data\r\n          </button>\r\n        }\r\n        //file name without types\r\n        filename=\"StockTransferUpload_Template\"\r\n      >\r\n        <ExcelSheet data={dataSet1} name=\"template\">\r\n          <ExcelColumn label=\"PO SKU Code\" value=\"po\" />\r\n          <ExcelColumn label=\"SKU Number\" value=\"skuNumber\" />\r\n          <ExcelColumn label=\"Expiry Date\" value=\"expiryDate\" />\r\n          <ExcelColumn label=\"Warehouse Source\" value=\"warehouseSource\" />\r\n          <ExcelColumn label=\"Area Source\" value=\"areaSource\" />\r\n          <ExcelColumn label=\"Warehouse Destination\" value=\"warehouseDestination\" />\r\n          <ExcelColumn label=\"Input Weight\" value=\"inputWeight\" />\r\n        </ExcelSheet>\r\n      </ExcelFile>\r\n      {/* end export this table to excel */}\r\n\r\n      <FileUploader\r\n        nextPage={() =>\r\n          props.history.push(\r\n            \"/inventory-entry/stock-transfer/CSV-upload/review\"\r\n          )\r\n        }\r\n        transaction={\"stockTransfer\"}\r\n        field={Field}\r\n        type=\"stockTransfer\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Upload);\r\n"],"sourceRoot":""}