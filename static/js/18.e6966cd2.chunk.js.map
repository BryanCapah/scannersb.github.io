{"version":3,"sources":["Page/StockEntry/Movement/WeightEntry/SelectedSKUList/SelectedSKU/index.jsx","Page/StockEntry/Movement/WeightEntry/SelectedSKUList/index.jsx","Page/StockEntry/Movement/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry/index.jsx","Page/StockEntry/Movement/WeightEntry/services.js","Page/StockEntry/Movement/WeightEntry/WeightEntryList/WeightEntryCard/index.jsx","Page/StockEntry/Movement/WeightEntry/WeightEntryList/index.jsx","Page/StockEntry/Movement/WeightEntry/index.jsx","Component/Dropdown/index.jsx","Component/Modal/ModalConfirmation/services.js","Component/Modal/ModalConfirmation/index.jsx","Component/Modal/PopUpDiscard/index.jsx","Component/Input/index.jsx","Component/Input/decimal.jsx","assets/icons/trash.png","Component/Input/Note.jsx","Component/Modal/PopUpSaved/services.js","Component/Modal/PopUpSaved/index.jsx","assets/icons/refreshIcon.svg","assets/icons/asc.svg","assets/icons/desc.svg","Component/DatePickerNew/index.jsx","Component/DatePickerNew/services.js","Component/Sort/index.jsx","Component/CustomTable/index.jsx","Component/Input/InputImage.jsx","Component/Modal/PopUpRequired/services.js","Component/Modal/PopUpRequired/index.jsx","Page/StockEntry/Movement/services.js"],"names":["SelectedSKU","isNewItem","img","skuDescription","skuNumber","activeSku","uomValue","idx","uom","onClick","data","edited","getEditedData","isEmpty","checkisEmpty","className","onKeyDown","e","onEnter","src","alt","toUpperCase","SelectedSKUList","hideSKUList","setActiveSKU","moduleEntry","moduleName","setUpdateEntry","selectedSku","jobPost","list","length","dimention","document","documentElement","clientWidth","height","clientHeight","useState","hideContent","setHideContent","dispatch","useDispatch","thereAreRequest","useSelector","state","style","padding","content","placement","Reload","updateEntries","tabIndex","to","maxHeight","map","skuName","uomLabel","unitOfMeassures","totalQty","photo","WeightEntry","entryListIdx","wmsPoSkuInfoId","gradeList","ripeness","inputWidth","showTitle","item","onChange","onChangeDropdown","poListIdx","category","areaDestination","ripenessLevel","areaMovement","wasteReasonList","rip","filteredGradeList","useEffect","w","findIndex","r","value","sw","push","label","filter","grade","qtyIsEmpty","values","qty","title","Input","Dropdown","gradeIsEmpty","selectedValue","show","selected","name","placeholder","options","width","ripenessIsEmpty","reasonIsEmpty","reason","Note","noteIsEmpty","note","InputImage","uploadPhotoIsEmpty","uploadPhoto","addRow","js","skuUuid","itemList","poList","lastSelected","gradeSelected","expiryDate","type","CREATE_JOB_SHEET","updateJSWeightLine","a","target","saveImage","image","regex","console","clear","test","newValue","arr","split","number","parseInt","commaNumber","undefined","sliceNumber","slice","qtyToCompare","qtyToCompareIsEmpty","initialWeight","inboundQty","initialWeightUpdate","minus","isNaN","initialWeightScreen","initialWeightScreenUpdate","over","totalListItemWeightCount","moduleList","initialWeightOver","WeightEntryCard","poItem","inboundDate","supplierName","poUuid","supplierId","wmsPoSkuCode","codeGrade","isHidden","initialWeightTotal","uomType","area","areaName","areaDestinationName","id","dateFull","date","opacity","noTime","updateJSWeightLineDropdown","Trash","deleteRow","countQty","keyCode","isFloat","WeightEntryList","setHideSKUList","updateEntry","useStockMovementEntry","setIsSuccess","confirmation","setConfirmation","discard","setDiscard","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","isLoading","totalWeight","postInfo","status","useTargetMovement","showTargetRepack","table","slot","setSlot","slotList","useEntryDimention","heightAdj","loading","isMobile","isPlural","isEdited","showTarget","targetRepackHeight","slotListFilter","hideResetOpt","customTableClass","paddingLeft","module","close","discardEntry","removeEntryModule","PopUpSaved","submit","totalSku","PopUpRequired","noSkuChecking","isSuccess","save","saveJobSheet","submitValidation","minHeight","overflow","Date","addDay","withDay","classNamePrefix","isMulti","resetName","marginRight","noMarginBottom","CustomTable","editColumn","styles","color","textAlign","display","columns","Sort","stockMovementEntryData","_","getPoList","isDisabled","zInfinity","isOpen","setIsOpen","isEmptyStyle","border","elem","getElementById","position","getBoundingClientRect","defaultvalue","val","menuPlacement","bottom","inputId","isSearchable","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","cursor","fontWeight","theme","borderRadius","next","isCaptcha","setIsValidated","setIsType","isType","key","includes","type_","focus","log","setSelectionRange","stat","index","ModalsConfirmation","moveAll","singleViewData","buttonName","window","onkeydown","warehouseDestinationName","skuListUpdate","newModule","po","_qty","isInteger","parseFloat","_sku","wasteType","_toWaste","_uom","newSku","sku","wqty","swqty","isExist","i","s","forEach","skuListUpdateCheck","closeOnBackdrop","borderBottom","maxWidth","ModalsCaptcha","setIsShowModal","submitText","text","characters","charactersLength","text_split","charAt","Math","floor","random","selectorCsvFileName","csvFileName","React","isCaptchaText","isValidated","onClose","size","autocomplete","onKeyUp","textTransform","maxLength","PopUpDiscard","autoComplete","toCompare","exports","isReadOnly","readOnly","submitAction","setLocalEntryData","complete","saved","success","header","headerIcon","textColor","button","buttonText","failed","updateSuccess","updatedAlready","showErrorMessage","setShowErrorMessage","arrowIcon","errorText","reset","bodyOpenClassName","message","wordWrap","toString","handleFailed","SKUDatePicker","showDate","selectDate","setShowDate","startDate","endDate","dateRange","setDateRange","setDate","mode","setMode","singleDate","multipleDate","wrapperRef","useRef","handleClickOutside","event","current","contains","addEventListener","removeEventListener","useOutside","ref","ranges","newdate","dt","selection","setDates","dateShow","sortBy","setSortBy","resetFilter","setResetFilter","dateDMY","datePicker","sortByInboundDate","filterByDate","minWidth","d","desc","asc","ReactTableFixedColumns","withFixedColumns","ReactTable","props","getColumnWidth","rows","accessor","headerText","max","row","listHeader","h","obj","Header","Cell","sortable","resizable","headerClassName","showModal","activeTab","editColumnTemp","this","tableStatus","Fragment","showPagination","noDataText","minRows","getTdProps","rowInfo","column","instance","handleOriginal","original","defaultPageSize","Component","hover","setHover","onMouseLeave","onMouseEnter","backgroundImage","backgroundSize","margin","fontSize","nv-file-select","uploader","accept","defaults","threshold","invalidThreshold","setInvalidThreshold","totalEmptyThreshold","traceEmptyRow","isLessThanInitWeight","setFilter","excess","selectEmptyExceed","selectSku","checked","moduleSummary","warehouseUuid","areaId","areaIdDesposition","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","jsD","targetMovements","sI","getGrade","skuId","getPoBySkuId","addPoItem","poItems","expiryMs","moment","valueOf","inBoundyMs","Number","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","areaSource","sort","b","filterBySkuName","preAddSku","preAddHandler","isClear","jsR","qtyCount","valid","checkIsSkuRequired","moveAllStockMovement","localEntryData","Object","assign","JSON","parse","stringify","updateData","ls"],"mappings":"qTA0CeA,EAvCK,SAAC,GAWd,IAVHC,EAUE,EAVFA,UACAC,EASE,EATFA,IACAC,EAQE,EARFA,eACAC,EAOE,EAPFA,UACAC,EAME,EANFA,UACAC,EAKE,EALFA,SACAC,EAIE,EAJFA,IACAC,EAGE,EAHFA,IACAC,EAEE,EAFFA,QACAC,EACE,EADFA,KAEMC,EAASC,YAAc,CAAEF,SACzBG,EAAUC,YAAaJ,GAC7B,OACI,yBAAKK,UAAS,8EAAyEJ,EAAS,aAAe,KAAjG,YAAyGN,IAAcE,EAAM,eAAkBM,EAAU,aAAe,WAClL,yBAAKE,UAAU,qCACX,yBAAKA,UAAWd,EAAY,YAAc,SAE9C,yBAAKe,UAAW,SAAAC,GAAC,OAAIC,YAAQ,CAAED,IAAGV,MAAKE,aAAYA,QAAS,kBAAMA,KAAWM,UAAS,uFAAkFJ,EAAS,aAAe,OAC5L,yBAAKI,UAAU,mCACX,yBAAKA,UAAU,6BACX,yBAAKI,IAAKjB,EAAKkB,IAAI,YAAYL,UAAU,uCAE7C,yBAAKA,UAAU,SACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,oCAAoCZ,IAEvD,yBAAKY,UAAU,kCACX,yBAAKA,UAAU,QAAQX,GAAiBC,EACxC,yBAAKU,UAAU,kBAAkBT,EAAjC,IAA2C,wCAAUE,EAAMA,EAAIa,cAAgB,IAApC,OAAyCf,EAAW,EAAI,IAAM,Y,oCC+BtHgB,EAxDS,SAAC,GAOlB,IAAD,IANFC,EAME,EANFA,YACAC,EAKE,EALFA,aACAnB,EAIE,EAJFA,UACAoB,EAGE,EAHFA,YACAC,EAEE,EAFFA,WACAC,EACE,EADFA,eAEMC,EAAcH,EAAYI,QAAQC,KAAKC,OACvCC,EAAYC,SAASC,gBAAgBC,YACvCC,EAASH,SAASC,gBAAgBG,aACtCD,GAAkB,IAJhB,MAKoCE,oBAAS,GAL7C,mBAKKC,EALL,KAKkBC,EALlB,KAMIC,EAAWC,cACXC,EAAkBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,mBAEnD,OACI,yBAAK5B,UAAS,UAAKQ,EAAc,MAAQ,OAA3B,yCACV,yBAAKuB,MAAO,CAAEC,QAAS,IAAMhC,UAAU,0IAA0IN,QAAS,kBAAMuB,GAAa,IAAMQ,GAAgBD,GAAe,OAC9O,yBAAKxB,UAAU,YAAf,iBAAwC,0BAAMA,UAAU,cAAhB,WAAkCa,EAAlC,eAAoDA,EAAc,EAAI,IAAM,GAA5E,OACxC,yBAAKb,UAAU,qDACX,kBAAC,IAAD,CAAUiC,QAAO,6BAAgCC,UAAWjB,GAAa,IAAM,OAAS,SACpF,6BACI,yBAAKjB,UAAS,UAAK4B,EAAkB,GAAI,gBAA3B,iBAAmExB,IAAK+B,IAAQzC,QAAS,kBAAM0C,YAAc,CAAE1B,cAAaC,aAAYe,WAAUd,wBAGxK,kBAAC,IAAD,CAAMyB,SAAS,IAAIrC,UAAU,WAAWsC,GAAG,qDACvC,yBAAKtC,UAAU,oDAEnB,kBAAC,IAAD,CAAMqC,SAAS,IAAIrC,UAAU,WAAWsC,GAAG,kDACvC,yBAAKtC,UAAU,6DAI3B,yBAAK+B,MAAO,CAAEV,SAAQJ,GAAa,MAAcI,EAAQkB,UAAWlB,GAAUrB,UAAS,iGAA4FwB,EAAc,SAAW,OAA5M,OAEQd,QAFR,IAEQA,GAFR,UAEQA,EAAaI,eAFrB,iBAEQ,EAAsBC,YAF9B,aAEQ,EAA4ByB,KAAI,SAAC7C,EAAMH,GAAP,OAC5B,kBAAC,EAAD,CACIN,UAAS,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAMT,UACjBS,KAAMA,EACNH,IAAKA,EACLF,UAAWA,EACXF,eAAc,OAAEO,QAAF,IAAEA,OAAF,EAAEA,EAAM8C,QACtBpD,UAAS,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAAMN,UACjBqD,SAAQ,OAAE/C,QAAF,IAAEA,OAAF,EAAEA,EAAMgD,gBAChBpD,SAAQ,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAMiD,SAChBnD,IAAG,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAMgD,gBACXxD,IAAG,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAMkD,MACXnD,QAAS,kBAAMe,EAAajB,Y,uECuFzCsD,EArIK,SAAC,GAcd,IAAD,gBAbFC,EAaE,EAbFA,aACAC,EAYE,EAZFA,eACAC,EAWE,EAXFA,UACAC,EAUE,EAVFA,SACAC,EASE,EATFA,WACAC,EAQE,EARFA,UACAC,EAOE,EAPFA,KACAC,EAME,EANFA,SACAC,EAKE,EALFA,iBACA9D,EAIE,EAJFA,IACA+D,EAGE,EAHFA,UACAC,EAEE,EAFFA,SACAC,EACE,EADFA,gBAEIC,EAAgB9B,aAAY,SAAAC,GAAK,OAAIA,EAAM6B,iBAC3CC,EAAe/B,aAAY,SAAAC,GAAK,OAAIA,EAAM8B,gBACxCC,EAAkBhC,aAAY,SAAAC,GAAK,OAAIA,EAAM+B,mBAC/CC,EAAM,GACNC,EAAoBd,EAWxB,OAVAe,qBAAU,WACN,IAAMC,EAAIN,EAAcO,WAAU,SAAAC,GAAC,MAAgB,UAAZA,EAAEC,SACnCC,EAAKV,EAAcO,WAAU,SAAAC,GAAC,MAAgB,eAAZA,EAAEC,UAC/B,IAAPH,GAAgC,UAApBP,GAA6BC,EAAcW,KAAK,CAAEC,MAAO,QAASH,MAAO,WAC7E,IAARC,GAAiC,UAApBX,GAA6BC,EAAcW,KAAK,CAAEC,MAAO,aAAcH,MAAO,iBAChG,IACc,WAAbX,IAAuBK,EAAMH,EAAca,QAAO,SAAAL,GAAC,MAAiB,WAAZ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAGC,QAAkC,gBAAZ,OAADD,QAAC,IAADA,OAAA,EAAAA,EAAGC,WACrE,WAAbX,IAAuBK,EAAMH,GACL,KAAZ,OAAZC,QAAY,IAAZA,OAAA,EAAAA,EAAcQ,SAAaL,EAAiB,OAAGd,QAAH,IAAGA,OAAH,EAAGA,EAAWuB,QAAO,SAAAC,GAAK,MAAoB,UAAhBA,EAAMF,OAAqC,eAAhBE,EAAMF,UAG3G,yBAAKvE,UAAU,qBAEX,kBAAC,IAAD,CACIF,QAASuD,EAAKqB,WACdlB,UAAWA,EACXT,aAAcA,EACdC,eAAgBA,EAChBvD,IAAKA,EACLyD,SAAUA,EACVC,WAAYA,EACZwB,OAAM,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAMuB,IACdC,MAAO,eACPzB,UAAWA,EACXE,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MAE9B,kBAAC4E,EAAA,EAAD,CACIhF,QAASuD,EAAKqB,WACdlB,UAAWA,EACXT,aAAcA,EACdC,eAAgBA,EAChBvD,IAAKA,EACLyD,SAAUA,EACVC,WAAYA,EACZwB,OAAM,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAMuB,IACdC,MAAO,iBACPzB,UAAWA,EACXE,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MAC9B,kBAAC6E,EAAA,EAAD,CAEIjF,QAASuD,EAAK2B,aACdC,cAAa,OAAE5B,QAAF,IAAEA,OAAF,EAAEA,EAAMoB,MACrBjB,UAAWA,EACXT,aAAcA,EACdC,eAAgBA,EAChBvD,IAAKA,EACLyF,MAAM,EACN3B,iBAAkB,SAAC4B,GAAD,OAAc5B,EAAiB,CAAE4B,WAAUC,KAAM,WACnEP,MAAM,QACNQ,YAAY,eACZC,QAASvB,EACTwB,MAAM,OACNvF,UAA+B,UAApB0D,EAA8B,KAAO,SAChDN,UAAWA,IACf,kBAAC2B,EAAA,EAAD,CAEIjF,QAASuD,EAAKmC,gBACdP,cAAa,OAAE5B,QAAF,IAAEA,OAAF,EAAEA,EAAMH,SACrBuB,MAAK,UAAEpB,EAAKoB,aAAP,aAAE,EAAYF,MACnBf,UAAWA,EACXT,aAAcA,EACdC,eAAgBA,EAChBvD,IAAKA,EACLyF,MAAM,EACN3B,iBAAkB,SAAC4B,GAAD,OAAc5B,EAAiB,CAAE4B,WAAUC,KAAM,cACnEP,MAAM,WACNQ,YAAY,kBACZC,QAASxB,EACTyB,MAAM,OACNnC,UAAWA,EACXpD,UAAmC,KAAZ,OAAZ4D,QAAY,IAAZA,OAAA,EAAAA,EAAcQ,OAAc,KAAO,WAElD,kBAACW,EAAA,EAAD,CAEIjF,QAASuD,EAAKoC,cACdR,cAAa,OAAE5B,QAAF,IAAEA,OAAF,EAAEA,EAAMqC,OACrBjB,MAAK,UAAEpB,EAAKoB,aAAP,aAAE,EAAYF,MACnBf,UAAWA,EACXT,aAAcA,EACdC,eAAgBA,EAChBvD,IAAKA,EACLyF,MAAM,EACN3B,iBAAkB,SAAC4B,GAAD,OAAc5B,EAAiB,CAAE4B,WAAUC,KAAM,YACnEP,MAAM,SACNQ,YAAY,gBACZC,QAASzB,EACT0B,MAAM,OACNnC,UAAWA,EACXpD,UAAiC,gBAAtB,UAAAqD,EAAKoB,aAAL,eAAYF,QAAgD,WAAtB,UAAAlB,EAAKoB,aAAL,eAAYF,OAAoB,KAAO,WAC5F,kBAACoB,EAAA,EAAD,CACI7F,QAASuD,EAAKuC,YACdnB,MAAO,QACPjB,UAAWA,EACXT,aAAcA,EACdC,eAAgBA,EAChBE,SAAUA,EACVC,WAAU,eAAgC,gBAAtB,UAAAE,EAAKoB,aAAL,eAAYF,QAAgD,WAAtB,UAAAlB,EAAKoB,aAAL,eAAYF,OAAoB,KAAO,UACjGI,OAAM,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAMwC,KACdzC,UAAWA,EACXyB,MAAO,OACPvB,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MAC9B,kBAAC4F,EAAA,EAAD,CACIhG,QAASuD,EAAK0C,mBACdtG,IAAK,OACL0D,WAAU,sBAAuC,gBAAtB,UAAAE,EAAKoB,aAAL,eAAYF,QAAgD,WAAtB,UAAAlB,EAAKoB,aAAL,eAAYF,OAAoB,KAAO,UACxGI,OAAQtB,EAAK2C,YACb1C,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,IAC1BkD,WAAW,EACXyB,MAAO,iB,kDCrIVoB,EAAS,SAAC,GAMhB,IAAD,EALFvE,EAKE,EALFA,SACAhB,EAIE,EAJFA,YACAC,EAGE,EAHFA,WACArB,EAEE,EAFFA,UACAkE,EACE,EADFA,UAEI0C,EAAE,eAAQxF,GACR+D,EAAK,UAAGyB,EAAGpF,QAAQC,KAAKzB,GAAW2D,iBAA9B,aAAG,EAAsCuB,QAAO,SAAAC,GAAW,OAAY,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOL,SAAU8B,EAAGpF,QAAQC,KAAKzB,GAAW6G,WACnHC,EAAWF,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SACxDE,EAAeF,GAAiB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUpF,QAAS,GAC3CuF,EAAgBD,EAAeA,EAAa7B,MAAQA,EAAM,GAChEyB,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAAS9B,KAAK,CACvDG,MAAO8B,EACP3B,IAAK,GACL4B,WAAYN,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAWgD,aAE7D9E,EAAS,aAAE+E,KAAMC,KAAT,UAA+B/F,EAA/B,aAAuDuF,KAGtDS,EAAkB,uCAAG,2EAAAC,EAAA,yDAC9BlF,EAD8B,EAC9BA,SACAhB,EAF8B,EAE9BA,YACAC,EAH8B,EAG9BA,WACArB,EAJ8B,EAI9BA,UACAkE,EAL8B,EAK9BA,UACAT,EAN8B,EAM9BA,aACA7C,EAP8B,EAO9BA,EAEMkF,EATwB,OASjBlF,QATiB,IASjBA,GATiB,UASjBA,EAAG2G,cATc,aASjB,EAAWzB,KACpBhB,EAV0B,OAUlBlE,QAVkB,IAUlBA,GAVkB,UAUlBA,EAAG2G,cAVe,aAUlB,EAAWzC,OACnB8B,EAX0B,eAWhBxF,IACXI,QAAQC,KAAKzB,GAAWJ,WAAY,EAE1B,WAATkG,EAd0B,iCAeN0B,YAAU,CAAE5G,IAAGwB,aAfT,cAepBqF,EAfoB,OAgB1Bb,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAciD,YAAce,EAClFb,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAcgD,oBAAqB,EACzFrE,EAAS,aAAE+E,KAAMC,KAAT,UAA+B/F,EAA/B,aAAuDuF,IAlBrC,8BAsBjB,WAATd,GAA8B,oBAATA,EAtBK,iBAwBtB4B,EAAQ,gBACZC,QAAQC,SACmB,IAAtBF,EAAMG,KAAK/C,IAA6B,KAAVA,GAC3BgD,EAAW,EACXC,EAF0C,OAEpCjD,QAFoC,IAEpCA,OAFoC,EAEpCA,EAAOkD,MAAM,MACnBC,EAASF,EAAI,KACH,IAAGE,EAASC,SAASD,IAGd,QAFjBE,EAAcJ,EAAI,UAEuBK,IAAhBD,EACrBA,EAAYzG,OAAS,GAEjB2G,EAAcF,EAAYG,MAAM,EAAG,GACvCR,EAAQ,UAAMG,EAAN,YAAgBI,IAExBP,EAAQ,UAAMG,EAAN,YAAgBE,GAG5BL,EAAWI,SAASD,GAIX,WAATnC,IACAc,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc6B,IAAMwC,EAC1ElB,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc2B,YAAa,GAExE,oBAATU,IACAc,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc8E,aAAeT,EACnFlB,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc+E,qBAAsB,KAMjF,WAAT1C,IACAc,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc6B,IAAM,IAEjE,oBAATQ,IACAc,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc8E,aAAe,KA9DjE,2BAkEZ,QAATzC,EAlEqB,qBAoEC,IADf,YACD+B,KAAK/C,IAA8B,KAAVA,EApEV,mDAuE1B8B,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc6B,IAAMR,EAAQoD,SAASpD,GAASA,EACpG8B,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc2B,YAAa,EAxEvD,wBA2EZ,SAATU,IACLc,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc8C,KAAOzB,EAC3E8B,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc6C,aAAc,GA7ExD,QA+ExBmC,EAAgB7B,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAWwE,WAC/DC,EAAsBF,EAC1B7B,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW5D,QAAS,EACtDsG,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW0E,OAAQ,EACrDhC,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAAS5D,KAAI,SAAA7C,GAClDA,EAAKiF,MAAKsB,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW5D,QAAS,GACpEqI,GAA8CE,MAAMxI,EAAKiF,KAAkB,EAAXjF,EAAKiF,IACrEsB,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAWyE,oBAAsBA,EAC/DA,EAAsB,GACtB/B,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW0E,OAAQ,EACrDhC,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAWyE,oBAAsB,GAGnE/B,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAAS5B,QAAO,SAAAnB,GAAU,OAAOA,EAAKqB,YAAa,QAKlG0D,EAAsBlC,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAWuE,cACrEM,EAA4BD,EAChClC,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAAS5D,KAAI,SAAA7C,GACtD0I,GAA0DF,MAAMxI,EAAKiF,KAAkB,EAAXjF,EAAKiF,IACjFsB,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW6E,0BAA4BA,KAIvEC,EAAOC,YAAyB,CAAEC,WAAYtC,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,WACjGF,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAWiF,kBAAoBH,EAAOP,EAAgBO,EAAO,EAE/F5G,EAAS,aAAE+E,KAAMC,KAAT,UAA+B/F,EAA/B,aAAuDuF,IA5GjC,4CAAH,sDC8LhBwC,EA1MS,SAAC,GAQlB,IAAD,EAPJvF,EAOI,EAPJA,WACA7D,EAMI,EANJA,UACAkE,EAKI,EALJA,UACAmF,EAII,EAJJA,OACAjI,EAGI,EAHJA,YACAC,EAEI,EAFJA,WACAsC,EACI,EADJA,UAEMvB,EAAWC,cAEf6E,EAkBEmC,EAlBFnC,WACAoC,EAiBED,EAjBFC,YACAb,EAgBEY,EAhBFZ,cACAC,EAeEW,EAfFX,WACAC,EAcEU,EAdFV,oBACAI,EAaEM,EAbFN,0BAIAQ,GASEF,EAZFG,OAYEH,EAXFxC,QAWEwC,EAVFI,WAUEJ,EATFE,cACApJ,EAQEkJ,EARFlJ,IACAyD,EAOEyF,EAPFzF,SAEAtD,GAKE+I,EANFhF,cAMEgF,EALF/I,QACAoJ,EAIEL,EAJFK,aACAvF,EAGEkF,EAHFlF,SACAwF,EAEEN,EAFFM,UACAC,EACEP,EADFO,SAGIC,GADShB,MAAMF,GACOE,MAAME,GAAyDN,EAA5BM,GACzDe,EAAkB,OAAR3J,GAAwB,SAARA,EAAiB,SAAW,WACtDgF,EAAQ/D,EAAYI,QAAQC,KAAKzB,GAAW2D,UAAUuB,QAAO,SAAAC,GAAW,OAAY,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOL,SAAU6E,KAChGI,EAAO3I,EAAYI,QAAQwI,SAC3B5F,EAAkBhD,EAAYI,QAAQyI,oBAE5C,OACE,yBAEEC,GAAE,mBAAclK,EAAd,YAA2BkE,GAC7BnB,SAAS,IACTrC,UAAS,UAAKkJ,EAAW,SAAW,KAA3B,mIAA0JtJ,EAAS,aAAe,OAI3L,yBAAKI,UAAU,8DACb,yBAAKA,UAAU,2CAAf,UAA6DwD,EAAY,EAAzE,MAGA,yBAAKxD,UAAU,iFACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,uCAAf,eAEE,0BAAMA,UAAU,mBACb4I,EAAca,YAAS,CAAEC,KAAMd,IAAiB,OAIvD,yBAAK5I,UAAU,kCAAf,kBACcoJ,GACZ,0BAAMpJ,UAAU,mBAAhB,WACO+H,EADP,mBACwBtI,QADxB,IACwBA,OADxB,EACwBA,EAAKa,eAD7B,OAC6CyH,EAAgB,EAAI,IAAM,QAQ7E,yBAAK/H,UAAU,yDACb,yBAAK+B,MAAO,CAAE4H,QAAS,GAAK3J,UAAU,2CAAtC,UAAoFwD,EAAY,EAAhG,MAGA,yBAAKxD,UAAU,yDACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAS,uCAAd,UAEE,0BAAMA,UAAU,mBAAhB,WAAuCgJ,GAA8B,OAEvE,yBAAKhJ,UAAU,uCAAf,gBAEE,0BAAMA,UAAU,mBAAhB,WAAuC6I,QAO/C,yBAAK7I,UAAU,4EACb,yBAAK+B,MAAO,CAAE4H,QAAS,GAAK3J,UAAU,2CAAtC,UAAoFwD,EAAY,EAAhG,MAGA,yBAAKxD,UAAU,yDACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,uCAAf,cAEE,0BAAMA,UAAU,mBACbwG,EAAaiD,YAAS,CAAEC,KAAMlD,EAAYoD,QAAQ,IAAU,MAGjE,yBAAK5J,UAAS,8CAAkD,UAATqJ,GAA6B,eAATA,EAAwB,KAAO,WAA1G,QAEE,0BAAMrJ,UAAU,mBAAhB,WAAuCyE,EAAMzD,OAASyD,EAAM,GAAGF,MAAQ,OAEzE,yBAAKvE,UAAS,uCAAd,mBAEE,0BAAMA,UAAU,mBAAhB,WAAuCgI,GAA0B,UAUzE,yBAAKhI,UAAU,gFAAf,UACG2I,EAAOvC,gBADV,aACG,EAAiB5D,KAAI,SAACa,EAAMN,GAC3B,OACE,yBAAK/C,UAAU,2DACb,yBAAKA,UAAU,gBACb,yBAAK+B,MAAO,CAAEwD,MAAO,QAAUvF,UAAU,8DAAzC,UAA0G+C,EAAe,EAAzH,MACA,yBAAK/C,UAAU,SACb,kBAAC,EAAD,CACE0D,gBAAiBA,EACjBD,SAAUA,EACVV,aAAcA,EACdC,eAAgBK,EAAKL,eACrBI,WAAW,EACXH,UAAWA,EACXK,SAAU,SAACpD,GAAD,OACRyG,EAAmB,CACjBjF,WACAhB,cACAC,aACArB,YACAkE,YACAT,eACA7C,OAGJqD,iBAAkB,gBAAG4B,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,ODnBI,SAAC,GASpC,IARH1D,EAQE,EARFA,SACAhB,EAOE,EAPFA,YACAC,EAME,EANFA,WACArB,EAKE,EALFA,UACAkE,EAIE,EAJFA,UACAT,EAGE,EAHFA,aACAoC,EAEE,EAFFA,SACAC,EACE,EADFA,KAEIc,EAAE,eAAQxF,GACdwF,EAAGpF,QAAQC,KAAKzB,GAAWJ,WAAY,EAC1B,aAATkG,IACAc,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAcG,SAAWiC,EACvD,WAAZ,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUf,QAAyC,gBAAZ,OAARe,QAAQ,IAARA,OAAA,EAAAA,EAAUf,OAAwB8B,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc0B,MAAQU,EAC5Ie,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc0B,MAAQ,CAAEF,MAAO,GAAIH,MAAO,KAE5F,UAATgB,IACAc,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc0B,MAAQU,EAC5Ee,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc2C,OAAS,CAAEnB,MAAO,GAAIH,MAAO,KAExF,WAATgB,IACAc,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc2C,OAASP,GAEjFe,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW5D,QAAS,EACtDsG,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAcyC,iBAAkB,EACtFU,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAciC,cAAe,EACnFkB,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc8C,KAAO,GAC3EK,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc6C,aAAc,EAClFM,EAAGpF,QAAQC,KAAKzB,GAAW+G,OAAO7C,GAAW4C,SAASrD,GAAc0C,eAAgB,EAEpF/D,EAAS,aAAE+E,KAAMC,KAAT,UAA+B/F,EAA/B,aAAuDuF,ICX7C2D,CAA2B,CACzBnI,WACAhB,cACAC,aACArB,YACAkE,YACAT,eACAoC,WACAC,UAGJ3F,IAAKA,EACLyD,SAAUA,EACVC,WAAYA,EACZE,KAAMA,EACNrD,UAAYkD,EAAsB,KAAX,SACvBM,UAAWA,MAIjB,yBAAKxD,UAAU,4EACb,yBACEI,IAAK0J,IACLzJ,IAAI,cACJL,UAAU,qBACVN,QAAS,SAACQ,GAAD,OACP6J,YAAU,CACRrI,WACAhB,cACAC,aACArB,YACAkE,YACAT,eACA7C,IACA8J,wBAShB,yBACE/J,UAAW,SAAAC,GAAC,OAAkB,KAAdA,EAAE+J,SAAiBhE,EAAO,CAAEvE,WAAUhB,cAAaC,aAAYrB,YAAWkE,eAE1FxD,UAAS,2DAETN,QAAS,kBAAMuG,EAAO,CACpBvE,WAAUhB,cACVC,aAAYrB,YAAWkE,gBAGzB,uBAAGxD,UAAU,8BAVf,cAWUoJ,EAXV,aAWsBc,YAAQf,GAAsBe,YAAQf,GAAsBA,EAXlF,YAWwG1J,EAAMA,EAAIa,cAAgB,IAXlI,OAWuI6I,EAAqB,EAAI,IAAM,GAXtK,a,wECYSgB,EAnMS,SAAC,GASlB,IAAD,MA2CgB,IAnDlB1J,EAQE,EARFA,aACAD,EAOE,EAPFA,YACA4J,EAME,EANFA,eACA9K,EAKE,EALFA,UACAoB,EAIE,EAJFA,YACAC,EAGE,EAHFA,WACA0J,EAEE,EAFFA,YACAzJ,EACE,EADFA,eAEMc,EAAWC,cADf,EA4BE2I,YAAsB,CAAE5J,cAAapB,cAxBrCiL,EAJF,EAIEA,aACAC,EALF,EAKEA,aACAC,EANF,EAMEA,gBACAC,EAPF,EAOEA,QACAC,EARF,EAQEA,WACAC,EATF,EASEA,QACAC,EAVF,EAUEA,WACAC,EAXF,EAWEA,OACAC,EAZF,EAYEA,UACAC,EAbF,EAaEA,WACAC,EAdF,EAcEA,cACAzJ,EAfF,EAeEA,YACAC,EAhBF,EAgBEA,eACAyJ,EAjBF,EAiBEA,UACAzI,EAlBF,EAkBEA,QACApD,EAnBF,EAmBEA,UACAgH,EApBF,EAoBEA,OACApD,EArBF,EAqBEA,UACAN,EAtBF,EAsBEA,gBACAwI,EAvBF,EAuBEA,YACAvL,EAxBF,EAwBEA,OACAwL,EAzBF,EAyBEA,SACAxH,EA1BF,EA0BEA,aACAyH,GA3BF,EA2BEA,OA3BF,GA8B2DC,YAAkB,CAAE5K,cAAapB,YAAWoC,WAAUf,eAA3G4K,GA9BN,GA8BMA,iBAAkBC,GA9BxB,GA8BwBA,MAAOC,GA9B/B,GA8B+BA,KAAMC,GA9BrC,GA8BqCA,QAASC,GA9B9C,GA8B8CA,SA9B9C,GA+BgDC,YAAkBL,IAA5DlK,GA/BN,GA+BMA,OAAQwK,GA/Bd,GA+BcA,UAAW5K,GA/BzB,GA+ByBA,UAAW6K,GA/BpC,GA+BoCA,QAGhCC,GAAW9K,IAAa,IACxBiI,GAAW1H,EAAc,SAAW,KACpCwK,GAAWb,EAAc,EAAI,IAAM,GACnCc,GAAWrM,EAAS,WAAa,cACjCsM,GAAaX,GAAmB,KAAO,SACvCY,GAAqBJ,GAAW,IAAM,IAExCK,GAAiBT,GACjBU,IAAe,GACnB,OAAIZ,SAAJ,IAAIA,QAAJ,EAAIA,GAAMzK,UACiB,QAAnB,UAAAyK,GAAK,UAAL,eAASrH,SAAgBgI,GAAiB,KAC9C,UAAIX,GAAK,UAAT,aAAI,EAASrH,SAAOiI,IAAe,IAGvC,IAAMC,GAAmBP,GAA2B,kBAAfpL,EAAiC,yBAA2B,uBAA0C,kBAAfA,EAAiC,kBAAoB,gBACjL,OAAK0F,EAAOrF,OAQR,yBAAKe,MAAO,CAAEwK,YAAaR,GAAW,EAAI,IAAM/L,UAAU,4BAWtD,kBAAC,IAAD,CACI0K,QAASA,EACT8B,OAAQ,mCACR9L,YAAaA,EACb+L,MAAO,kBAAM9B,GAAW,IACxB+B,aAAc,SAAClD,GAAD,OAAQmD,YAAkB,CAAEnD,KAAI7I,aAAYe,gBAE9D,kBAACkL,EAAA,EAAD,CACIvC,YAAaA,EACbzJ,eAAgBA,EAChByK,OAAQA,GACR3K,YAAaA,EACbmM,OAAQ,wBAAMnL,GAAQ,GAAG+E,KAAM,oBAAT,wBAAiC9F,EAAjC,aAAyD,MAAzD,wBAAmEA,EAAnE,eAA6F,MAA7F,KACtB6J,aAAcA,EACdC,gBAAiBA,EACjBG,QAASA,EACTE,OAAQA,EACRD,WAAYA,EACZlK,WAAYA,EACZmM,SAAQ,OAAEpM,QAAF,IAAEA,GAAF,UAAEA,EAAaI,eAAf,aAAE,EAAsBC,KAAKC,SAGzC,kBAAC+L,EAAA,EAAD,CACI/B,WAAYA,EACZwB,OAAQ9L,EACRuK,cAAeA,EACftK,WAAYA,EACZmM,SAAQ,OAAEpM,QAAF,IAAEA,GAAF,UAAEA,EAAaI,eAAf,aAAE,EAAsBC,KAAKC,SAGzC,kBAAC,IAAD,CACIgM,eAAe,EACf9B,UAAWA,EACXxK,YAAaA,EACb8J,aAAcA,EACdC,gBAAiBA,EACjBwC,UAAW7B,EACXL,UAAWA,EACXD,OAAQA,EACRoC,KAAM,kBAAMC,YAAa,CAAE/H,KAAM,OAAQ1E,cAAaC,aAAYe,WAAU6I,kBAC5EsC,OAAQ,kBAAMM,YAAa,CAAE/H,KAAM,SAAU1E,cAAaC,aAAYe,WAAU6I,eAAc6C,qBAAkB3M,oBAEpH,yBAAKT,UAAU,mCACX,yBAAKA,UAAS,kIAA6HkM,IAAcnK,MAAO,CAAEQ,UAAW,cAAe8K,UAAWlB,GAAoBmB,SAAU,WACjO,yBAAKtN,UAAS,mEACV,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,iBAAf,2BACA,yBAAKA,UAAU,iEACf,yBAAKA,UAAU,uBAAuByJ,YAAS,CAAEC,KAAM,IAAI6D,KAAQ3D,QAAQ,EAAM4D,QAAQ,EAAMC,SAAS,MAE5G,kBAAC1I,EAAA,EAAD,CACIsH,aAAcA,GACdrM,UAAU,qBACV0N,gBAAgB,SAChBC,SAAS,EACTC,UAAU,WACVtI,QAAS8G,GACTnH,cAAewG,GACflI,iBAAkB,SAAC4B,GAAD,OAAcuG,GAAQvG,IACxCD,MAAM,EACNK,MAAOwG,GAAW,QAAU,UAC5B1G,YAAY,OACZR,MAAO,OACP9C,MAAO,CAAE8L,YAAa,GACtBC,gBAAgB,KAExB,kBAACC,EAAA,EAAD,CACIC,WAAY,QACZhO,UAAS,UAAKsM,GAAL,KACT2B,OAAQ,CAAEC,MAAO,MAAOC,UAAW,QAAS5I,MAAO,OAAQ6I,SAAS7C,IAA2B,QAC/F5L,KAAI,OAAE6L,SAAF,IAAEA,QAAF,EAAEA,GAAO7L,KACb0O,QAAO,OAAE7C,SAAF,IAAEA,QAAF,EAAEA,GAAO6C,WAExB,4BAAKtM,MAAO,CAAEV,YAAd,sBAA+B,CAAEW,QAAS,KAA1C,0BAA0D,iIAA1D,GACI,yBAAKhC,UAAU,uBAAuBN,QAAS,kBAAMqM,GAAWtK,GAAgBD,GAAe,OAC3F,yBAAKxB,UAAS,UAAKQ,EAAc,yBAA2B,wBAA9C,sCAA2Gd,QAAS,kBAAM0K,GAAgB5J,MACxJ,yBAAKR,UAAU,6DAAf,gBACA,yBAAKA,UAAU,yDACf,yBAAKA,UAAU,sDAAf,UAAwEyC,EAAxE,aAAoFpD,EAApF,OAEJ,kBAACiP,EAAA,EAAD,CAAM5N,YAAaA,EAAaC,WAAYA,EAAYrB,UAAWA,EAAWoC,SAAUA,KAE5F,yBAAKK,MAAO,CAAEV,OAAQ0K,GAAW1K,GAASwK,GAAWwB,UAAWtB,GAAW1K,GAASwK,IAAa7L,UAAS,mGAA8FkJ,KAAxM,OAEQ7C,QAFR,IAEQA,OAFR,EAEQA,EAAQ7D,KAAI,SAACmG,EAAQnJ,GAAS,IAAD,EACzB,OAAO,kBAAC,GAAD,GACHF,UAAWA,EACX2D,UAAWA,EACXE,WAAW,eAHR,0BAIQ7D,GAJR,0BAKQE,GALR,uBAMKmJ,GANL,4BAOUjI,GAPV,2BAQSC,GART,QAcnB,yBAAKX,UAAU,+GACX,4BACIqC,SAAS,IACToE,KAAK,SACLzG,UAAS,uBAAkBiM,GAAlB,mCACTvM,QAAS,kBAAME,EAAS6K,EAAgB,CAAEvF,MAAM,EAAME,KAAM,SAAY,OAJ5E,QAOA,6CAAkB,0BAAMpF,UAAU,cAAhB,UAAiCmL,EAAjC,mBAAgDxI,QAAhD,IAAgDA,OAAhD,EAAgDA,EAAiBrC,eAAjE,OAAiF0L,QAG3G,yBAAKhM,UAAU,iDACX,yBAAKqC,SAAS,IAAI3C,QAAS,kBAAMiL,GAAW,IAAO3K,UAAU,mDAAkD,uBAAGA,UAAU,qBAA5H,YACA,4BAAQqC,SAAS,IAAI3C,QAAS,kBAAME,EAASwN,YAAiB,CAAE3M,eAAcC,cAAaC,aAAYe,WAAU+I,kBAAiBQ,gBAAerH,iBAAkB,MAAM5D,UAAS,4CAAuCiM,GAAvC,uBAAsElK,MAAO,CAAEV,OAAQ,2BAAzQ,YAlIR,yBAAKU,MAAO,CAAEwK,YAAaR,GAAW,EAAI,IAAM/L,UAAU,sIACtD,yBAAKA,UAAU,gGAAgG+B,MAAO,CAAEsL,UAAWxB,GAAWtJ,UAAWsJ,KACrJ,yBAAK7L,UAAU,UAAUI,IAAK0L,GAASzL,IAAI,eC3B5CyC,UA3CK,WAChB,IAAMpB,EAAWC,cACX4M,EAAyB1M,aAAY,SAAAC,GAAK,OAAIA,EAAMyM,0BAFpC,EAGgBhN,oBAAS,GAHzB,mBAGff,EAHe,KAGF4J,EAHE,OAIY7I,mBAAS,GAJrB,mBAIfjC,EAJe,KAIJmB,EAJI,OAKgBc,qBALhB,mBAKf8I,EALe,KAKFzJ,EALE,KAMlBS,EAASH,SAASC,gBAAgBG,aAClCF,EAAcF,SAASC,gBAAgBC,YACvCyK,EAAYxK,EAAS,IAOzB,OAJA2C,qBAAU,SAAAwK,IACoB,OAAtBD,QAAsB,IAAtBA,OAAA,EAAAA,EAAwBzN,QAAQC,KAAKC,QAAS,GAAGyN,YAAU,CAAE/M,WAAUf,WAH5D,gBAGwED,YAAa6N,EAAwBjP,gBAC7H,CAACA,IAECiP,GAA0E,KAA1B,OAAtBA,QAAsB,IAAtBA,OAAA,EAAAA,EAAwBzN,QAAQC,KAAKC,QAKhE,yBAAKe,MAAO,CAAEV,OAAQD,GAAe,IAAMC,EAASwK,GAAa7L,UAAU,wDACvE,kBAAC,EAAD,CACIQ,YAAaA,EACblB,UAAWA,EACXmB,aAAcA,EACdE,WAhBO,gBAiBPD,YAAa6N,EACb3N,eAAgBA,IAEpB,kBAAC,EAAD,CACIH,aAAcA,EACd2J,eAAgBA,EAChB5J,YAAaA,EACbG,WAxBO,gBAyBPD,YAAa6N,EACbjP,UAAWA,EACXsB,eAAgBA,EAChByJ,YAAaA,KApBjB,yBAAKrK,UAAU,+EAA8E,kBAAC,IAAD,CAAUsC,GAAG,6BAAb,mC,uFCoF1FyC,IAzGE,SAAC,GAoBX,IAAD,IAnBFjF,EAmBE,EAnBFA,QACA+E,EAkBE,EAlBFA,MACAQ,EAiBE,EAjBFA,YACAC,EAgBE,EAhBFA,QACAL,EAeE,EAfFA,cACA7B,EAcE,EAdFA,UACAmC,EAaE,EAbFA,MACAvF,EAYE,EAZFA,UACA+C,EAWE,EAXFA,aACAQ,EAUE,EAVFA,iBACA2B,EASE,EATFA,KACA1B,EAQE,EARFA,UACAkL,EAOE,EAPFA,WACA3M,EAME,EANFA,MACA+L,EAKE,EALFA,eACAF,EAIE,EAJFA,UACAD,EAGE,EAHFA,QACAtB,EAEE,EAFFA,aACAsC,EACE,EADFA,UACE,EAK0BpN,qBAL1B,mBAKKqN,EALL,KAKaC,EALb,KAMF7K,qBAAU,WACgB,UAAlBiB,GAA2B4J,GAAU,KAC1C,CAAC5J,EAAenF,IACnB,IAAMgP,IAAehP,GAAU,SAACmO,GAC5B,OAAO,2BACAA,GADP,IAEIc,OAAQ,oBACR,SAAU,CAAEA,OAAQ,gCACpB,UAAW,CAAEA,OAAQ,mCAKvBC,EAAI,UAAG9N,gBAAH,aAAG,EAAU+N,eAAV,kBAAoClM,GAApC,OAAmDS,IAC5D0L,EAAQ,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAMG,wBAErBnL,qBAAU,WACNkL,EAAQ,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAMG,0BAClB,CAACP,IAEJ,IAAM3N,EAAYC,SAASC,gBAAgBC,YACvCgO,EAAe,CAAC,CAAE7K,MAAM,IAAD,OAAMqJ,GAAwB/I,EAA9B,KAAwCT,MAAO,OACtEkB,IAAS8J,EAAY,sBAAOA,GAAP,YAAwB9J,KAC7C+G,IAAc+C,EAAeA,EAAa5K,QAAO,SAAA6K,GAAG,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAKjL,UACjE,IACsB,EADlBkL,GAAwB,QAAR,EAAAJ,SAAA,eAAUK,QAAS,IAAM,MAAQ,SACjDtO,GAAa,MACbqO,GAAwB,QAAR,EAAAJ,SAAA,eAAUK,QAAS,IAAM,MAAQ,SACnC,eAAV1K,IAAwByK,EAAgB,QAEhD,OACI,yBAAKvN,MAAOA,EAAO/B,UAAS,eAAU+B,EAAQ,KAAO,UAAzB,YAAsC+L,EAAiB,KAAO,OAA9D,YAAwEvI,EAAxE,YAAiFvF,EAAjF,YAA8FkF,EAAO,KAAO,WACpI,yBAAKlF,UAAS,yBAAoBoD,EAAY,KAAO,WAAayB,GAClE,kBAAC,IAAD,CACI2K,QAAO,UAAK3K,EAAL,YAAcrB,EAAd,YAA2BT,GAClC4K,QAASA,EACT8B,eAAcxO,EAAY,KAC1ByN,WAAYA,IAA0B,EACtClF,GAAE,kBAAazG,GAAb,OAA4BS,GAC9BY,QAAoB,OAAba,QAAa,IAAbA,OAAA,EAAAA,EAAeb,WAAsC,OAAba,QAAa,IAAbA,OAAA,EAAAA,EAAejE,UAAhCiE,EAC9ByK,WAAYd,EACZe,YAAU,EACVtK,YAAauI,GAAwBvI,EACrCC,QAAS8J,EACTQ,WAAY,kBAAMf,GAAU,IAC5BgB,YAAa,kBAAMhB,GAAU,IAC7BvL,SAlDY,SAAC6B,GACrB5B,EAAiB4B,GACjB0J,GAAU,IAiDFiB,iBAAkB5O,SAAS6O,KAC3BC,cAAe,IACfV,cAAa,UAAKA,GAElBrB,OAAQ,CACJ0B,WAAY,SAAAM,GAAI,kCAAUA,GAAV,IAAgBC,OAAQvB,EAAY,KAAmB,QACvEwB,QAASrB,EACTsB,OAAQ,SAACnC,EAAD,GAC2B,IAA7BoC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACb,OAAO,2BACArC,GADP,IAEIsC,gBAAiBD,EAAa,wBAA0BD,EAAY,qBAAuB,KAC3FnC,MAAOoC,EAAa,QAAU,UAC9BE,OAAQ,UACRC,WAAYH,EAAa,OAAS,KAClC,UAAW,CACPC,gBAAiB,gCACjBrC,MAAO,WAEX,SAAU,CACNA,MAAQoC,EAAyB,KAAZ,eAKrCI,MAAO,SAACA,GAAD,mBAAC,eACDA,GADA,IAEHC,aAAc,U,0NCpGrBC,EAAO,SAAC,GAOd,IANL1Q,EAMI,EANJA,EACA4B,EAKI,EALJA,MACA+O,EAII,EAJJA,UACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,UACAC,EACI,EADJA,OAEMC,EAAM/Q,EAAE+Q,IACVxK,EAAI,YAAOuK,GAGf,GADc,CAAC,UAAW,YAAa,OAC3BE,SAASD,GACnB,OAAO,EACF,GAAY,cAARA,EAAqB,CAC9B,IAAIE,EAAK,YAAOH,GAEF,IADDG,EAAMrP,IACW,IAAVA,IAClBZ,SAAS+N,eAAe,KAAOzH,SAAS1F,GAAS,IAAIsP,QACrDlQ,SAAS+N,eAAe,KAAOzH,SAAS1F,GAAS,IAAIsC,MAAQ,GAC7D+M,EAAMrP,EAAQ,GAAK,GACnB2E,EAAK3E,EAAQ,GAAK,IAEpBmF,QAAQoK,IAAIF,QACP,GAAY,cAARF,GACT,GAAc,IAAVnP,EAMF,OALAZ,SAAS+N,eAAe,KAAOzH,SAAS1F,GAAS,IAAIsP,QACrDlQ,SACG+N,eAAe,KAAOzH,SAAS1F,GAAS,IACxCwP,mBAAmB,GAAI,GAEnB,OAEJ,GAAY,eAARL,GACT,GAAc,IAAVnP,EAKF,OAJAZ,SAAS+N,eAAe,KAAOzH,SAAS1F,GAAS,IAAIsP,QACrDlQ,SACG+N,eAAe,KAAOzH,SAAS1F,GAAS,IACxCwP,mBAAmB,GAAI,GACnB,OAGK,IAAVxP,GACFZ,SAAS+N,eAAe,KAAOzH,SAAS1F,GAAS,IAAIsP,QAKvD3K,EAAK3E,GADK,cAARmP,EACY,GAEAA,EAAI3Q,cAIpB,IAFW,uCACYgH,MAAM,IACb4J,SAASD,EAAI3Q,gBAAiC,IAAfmG,EAAK3E,GAIlD,OAAO,EAHPZ,SAAS+N,eAAe,IAAMzH,SAAS1F,IAAQsC,MAAQqC,EAAK3E,GAC5DiP,EAAUtK,GAKZ,IAAI8K,GAAO,EACXV,EAAUrO,KAAI,SAAC7C,EAAM6R,GACN,GAATA,GAGE/K,EAAK+K,EAAQ,IAAMX,EAAUW,KACjCD,GAAO,MAGXT,EAAeS,I,SCvDXE,EAAqB,SAAC,GAAuJ,IAAD,MAApJ/Q,EAAoJ,EAApJA,YAAa8J,EAAuI,EAAvIA,aAAcC,EAAyH,EAAzHA,gBAAiByC,EAAwG,EAAxGA,KAAML,EAAkG,EAAlGA,OAAQI,EAA0F,EAA1FA,UAAW/B,EAA+E,EAA/EA,UAAWwG,EAAoE,EAApEA,QAAS3G,EAA2D,EAA3DA,UAAWpK,EAAgD,EAAhDA,WAAYqM,EAAoC,EAApCA,cAAe2E,EAAqB,EAArBA,eAErJtQ,EADYH,SAASC,gBAAgBG,aAChB,IAEvBsQ,EAAa,SAES,SAAtBpH,EAAapF,OAAiBwM,EAAa,QAC/C5N,qBAAU,WACJiJ,GAAWxC,EAAgB,CAAEvF,MAAM,EAAOE,KAAM,SACnD,CAAC6H,IACJ4E,OAAOC,UAAY,SAAA5R,GAAC,OAAkB,KAAdA,EAAE+J,QAAiBQ,EAAgB,CAAEvF,MAAM,EAAOE,KAAM,OAAU,MAE1FpB,qBAAU,WACR+G,EAAUP,EAAapF,QACtB,CAACoF,IAEJ,IAAIgC,EAASmF,IAAmBD,EAAUC,EAAiBjR,EAErD6I,EAAmB,OAAGiD,QAAH,IAAGA,GAAH,UAAGA,EAAQ1L,eAAX,aAAG,EAAiByI,oBACvCwI,EAAwB,OAAGvF,QAAH,IAAGA,GAAH,UAAGA,EAAQ1L,eAAX,aAAG,EAAiBiR,yBAC5CzI,EAAQ,OAAGkD,QAAH,IAAGA,GAAH,UAAGA,EAAQ1L,eAAX,aAAG,EAAiBwI,SAE5B0I,EDoC0B,SAACxF,EAAQQ,EAAerM,GACxD,UAAI6L,QAAJ,IAAIA,OAAJ,EAAIA,EAAQxL,OAAQ,CAClB,IAAIiR,EAAY,GAChBzF,EAAOhK,KAAI,SAACzB,GACVA,EAAKsF,OAAO7D,KAAI,SAAC0P,GACfA,EAAG9L,SAAS5D,KAAI,SAACa,GAAU,IAAD,YAChBuB,EAAevB,EAAfuB,IAAKH,EAAUpB,EAAVoB,MACP0N,EAAOC,YAAUxN,GACnB4C,SAAS5C,GACRA,EAECyN,WAAWzN,GADX,EAEA0N,EAAOtF,EACTjM,EAAK0B,QACU,UAAf9B,GACE,UAAA0C,EAAKkP,iBAAL,eAAgBhO,OAAhB,UACElB,EAAKkP,iBADP,aACE,EAAgBhO,MAChBxD,EAAK0B,QAHT,OAIEgC,QAJF,IAIEA,OAJF,EAIEA,EAAOF,MACPiO,EACW,UAAf7R,EAC8B,gBAA1B,UAAA0C,EAAKkP,iBAAL,eAAgBhO,QACU,WAA1B,UAAAlB,EAAKkP,iBAAL,eAAgBhO,OAGC,WAAZ,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOF,QAAsC,gBAAZ,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOF,OAGnCkO,EAAOzF,EACTjM,EAAK4B,gBACU,UAAV,OAAL8B,QAAK,IAALA,OAAA,EAAAA,EAAOhF,KACL,KADF,OAEEgF,QAFF,IAEEA,OAFF,EAEEA,EAAOhF,IACTiT,EAAS,CACXC,IAAKL,EACL1N,IAAKuN,EACL1S,IAAKgT,EACLG,KAAM,EACNC,MAAO,GAELL,IACFE,EAAO9N,IAAM,EACb8N,EAAOC,IAAM5R,EAAK0B,UAGH,UAAf9B,EAC8B,WAA1B,UAAA0C,EAAKkP,iBAAL,eAAgBhO,OACC,WAAZ,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOF,UAEXmO,EAAOE,KAAOT,IAEC,UAAfxR,EAC8B,gBAA1B,UAAA0C,EAAKkP,iBAAL,eAAgBhO,OACC,gBAAZ,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOF,UAEXmO,EAAOG,MAAQV,GACjB,IAgBsB,IAhBhBW,EAAUb,EAAU/N,WACxB,SAACyO,GAAD,OAAY,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKA,QAASH,EAAWzR,EAAK0B,QAAU6P,OAGhC,UAAf3R,KACe,IAAbmS,GAAgBb,EAAU3N,KAAKoO,IAClB,IAAbI,IACGN,IAAUP,EAAUa,GAASlO,KAAOuN,GACpB,gBAAZ,OAAL1N,QAAK,IAALA,OAAA,EAAAA,EAAOF,SACT0N,EAAUa,GAASD,OAASV,GACT,WAAZ,OAAL1N,QAAK,IAALA,OAAA,EAAAA,EAAOF,SAAmB0N,EAAUa,GAASF,MAAQT,KAI1C,UAAfxR,MACe,IAAbmS,GAAgBb,EAAU3N,KAAKoO,IAClB,IAAbI,IACGN,IAAUP,EAAUa,GAASlO,KAAOuN,GACX,gBAA1B,UAAA9O,EAAKkP,iBAAL,eAAgBhO,SAClB0N,EAAUa,GAASD,OAASV,GACA,WAA1B,UAAA9O,EAAKkP,iBAAL,eAAgBhO,SAClB0N,EAAUa,GAASF,MAAQT,cAMvC,IAAM1P,EAAU+J,EAAOxL,OAASwL,EAAO,GAAG/J,QAAU,SAC9CsQ,EAAId,EAAU/N,WAAU,SAAC8O,GAAD,OAAOA,EAAEL,MAAQlQ,KAO/C,OANAwP,EAAUgB,SAAQ,SAACN,IACN,IAAPI,IACc,UAAZJ,EAAIA,MAAiBV,EAAUc,GAAGH,KAAOD,EAAI/N,KACjC,eAAZ+N,EAAIA,MAAsBV,EAAUc,GAAGF,MAAQF,EAAI/N,SAGpDqN,GC/HaiB,CAAkB,OAAC1G,QAAD,IAACA,OAAD,EAACA,EAAQ1L,QAAQC,KAAMiM,EAAerM,GAC9E,OACE,kBAAC,IAAD,CAAMX,UAAWwK,EAAatF,KAAO,KAAO,UAC1C,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,KAAMsF,EAAatF,KACnBiO,iBAAiB,GAEjB,kBAAC,IAAD,CAAcnT,UAAU,yBACtB,kBAAC,IAAD,CAAaA,UAAU,iBAAvB,gBAAoD,8BAAM,uBAAGA,UAAU,iBACvE,2BAAOqC,SAAS,IAAIpC,UAAW,SAAAC,GAAC,OAAkB,KAAdA,EAAE+J,SAAiBQ,EAAgB,CAAEvF,MAAM,EAAOE,KAAM,QAAiB1F,QAAS,kBAAM+K,EAAgB,CAAEvF,MAAM,EAAOE,KAAM,QAASpF,UAAU,+BAGtL,kBAAC,IAAD,CAAYA,UAAU,YAAY+B,MAAO,CAAEsL,UAAWhM,IACpD,uBAAGrB,UAAU,aACX,6DAA2C,SAAZsJ,EAAsB,SAAW,OAAhE,gBACA,0BAAMtJ,UAAS,WAAMuJ,EAAsB,KAAO,WAAlD,SACA,0BAAMvJ,UAAS,gBAAWuJ,EAAsB,KAAO,WAAvD,WAAwED,EAAxE,MACA,8BAAqB,YAAd3I,EAA2B,OAAwB,WAAfA,EAA0B,GAAK,KAA1E,KACA,0BAAMX,UAAS,gBAA0B,WAAfW,EAA0B,KAAO,WAA3D,WAA2F,kBAAfA,EAAiCoR,EAA4BxI,GAA4CD,EAArL,OAEF,uBAAGtJ,UAAU,QAAb,sEAGA,yBACE+B,MAAO,CACLsL,UAAWhM,EACXkB,UAAWlB,EACXiM,SAAU,OACVyB,OAAQ,8BAGV,+BACE,+BACE,wBAAIhN,MAAO,CAAEqR,aAAc,8BACzB,wBAAIrR,MAAO,CAAEmM,MAAO,0BAApB,YACA,wBAAInM,MAAO,CAAEoM,UAAW,QAASD,MAAO,0BAAxC,UACA,wBAAInM,MAAO,CAAEoM,UAAW,QAASD,MAAO,0BAAxC,cACA,wBAAInM,MAAO,CAAEoM,UAAW,QAASD,MAAO,0BAAxC,WAGJ,sCACG8D,QADH,IACGA,OADH,EACGA,EAAexP,KAAI,SAAC7C,GAAD,OAClB,wBAAIoC,MAAO,CAAEqR,aAAc,8BACzB,wBAAIrR,MAAO,CAAEsR,SAAU,UAAY1T,EAAKgT,KACxC,wBAAI3S,UAAU,kBAAkB+B,MAAO,CAAEoM,UAAW,UAApD,UACMvL,YAAQ,OAACjD,QAAD,IAACA,OAAD,EAACA,EAAMiF,OAErB,wBAAI5E,UAAU,yBAAyB+B,MAAO,CAAEoM,UAAW,UACzD,0BAAMnO,UAAU,eAAhB,UAAkC4C,YAAQ,OAACjD,QAAD,IAACA,OAAD,EAACA,EAAMkT,OAAjD,OAEF,wBAAI7S,UAAU,aAAa+B,MAAO,CAAEoM,UAAW,UAA/C,UACMvL,YAAQ,OAACjD,QAAD,IAACA,OAAD,EAACA,EAAMiT,eAQ/B,yBAAK5S,UAAU,oDACb,kBAAC,IAAD,CACEqC,SAAS,IACTpC,UAAW,SAAAC,GAAC,OAAkB,KAAdA,EAAE+J,SAAiBQ,EAAgB,CAAEvF,MAAM,EAAOE,KAAM,QACxEpF,UAAU,4DACVN,QAAS,kBAAM+K,EAAgB,CAAEvF,MAAM,EAAOE,KAAM,SAJtD,UAQA,kBAAC,IAAD,CACE/C,SAAS,IACTpC,UAAW,SAAAC,GAAC,OAAkB,KAAdA,EAAE+J,UAAkBiB,EAAY,KAA8B,SAAtBV,EAAapF,KAAkB8H,IAASL,MAChG7M,UAAS,UAAKkL,EAAY,oBAAsB,sBAAvC,gDACTxL,QAAS,kBAAMwL,EAAY,KAA8B,SAAtBV,EAAapF,KAAkB8H,IAASL,MAE1E3B,EAAY,gBAAkB0G,GACtB,UASnB0B,EAAgB,SAAC,GAWrB,IANK,IAAD,IAJJpO,YAII,SAHJqO,EAGI,EAHJA,eACA1G,EAEI,EAFJA,OAEI,IADJ2G,kBACI,MADS,SACT,EAEAC,EAAO,GACPC,EAAa,uCACbC,EAAmBD,EAAW1S,OAC9B4S,EAAa,GACRb,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAI5O,EAAIuP,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IACrDF,GAAQtP,EACRyP,EAAWtP,KAAKH,GAGDxC,cAAjB,IACMsS,EAAsBpS,aAAY,SAACC,GAAD,OAAWA,EAAMoS,eAbrD,EAc8BC,IAAM5S,SAASqS,GAd7C,mBAcG/C,EAdH,aAesCsD,IAAM5S,SAASkS,IAfrD,mBAeGW,EAfH,aAgBkCD,IAAM5S,UAAS,IAhBjD,mBAgBG8S,EAhBH,KAgBgBvD,EAhBhB,OAiBwCqD,IAAM5S,SAAS,UAjBvD,gCAkBwB4S,IAAM5S,SAAS,KAlBvC,mBAkBGyP,EAlBH,KAkBWD,EAlBX,KA6BJ,OARA/M,qBAAU,YACK,IAATkB,IACFhE,SAAS+N,eAAe,MAAM7K,MAAQ,GACtClD,SAAS+N,eAAe,MAAM7K,MAAQ,GACtClD,SAAS+N,eAAe,MAAM7K,MAAQ,MAEvC,CAACc,IAGF,kBAAC,IAAD,CAAMlF,UAAWkF,EAAO,KAAO,UAC7B,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,KAAMA,EACNoP,QAAS,WACPf,GAAe,IAEjBgB,KAAK,KACLxS,MAAO,CAAEV,OAAQ,UAEjB,kBAAC,IAAD,CAAcrB,UAAU,yBACtB,kBAAC,IAAD,CAAaA,UAAU,iBAAvB,iBAEF,kBAAC,IAAD,CAAYA,UAAU,aACpB,uBAAGA,UAAU,aAAb,+BAC8B,0BAAMA,UAAU,SAAhB,UAAsC,IACjEiU,EAFH,KAIA,uBAAGjU,UAAU,QAAb,sDAGA,uBAAGA,UAAU,aAAb,qBACgBoU,EADhB,6CAIA,yBAAKpU,UAAU,eACb,2BACEwU,aAAa,MACbC,QAAS,SAACvU,GACR0Q,EAAK,CACH1Q,IACA4B,MAAO,EACP+O,YACAC,iBACAC,YACAC,YAGJxH,GAAG,KACH/C,KAAK,OACL1E,MAAO,CAAE2S,cAAe,aACxB1U,UAAU,gBACV2U,UAAU,IACVtP,YAAawL,EAAU,KAEzB,2BACE2D,aAAa,MACbC,QAAS,SAACvU,GACR0Q,EAAK,CACH1Q,IACA4B,MAAO,EACP+O,YACAC,iBACAC,YACAC,YAGJxH,GAAG,KACH/C,KAAK,OACL1E,MAAO,CAAE2S,cAAe,aACxB1U,UAAU,0BACV2U,UAAU,IACVtP,YAAawL,EAAU,KAEzB,2BACE2D,aAAa,MACbC,QAAS,SAACvU,GACR0Q,EAAK,CACH1Q,IACA4B,MAAO,EACP+O,YACAC,iBACAC,YACAC,YAGJxH,GAAG,KACH/C,KAAK,OACL1E,MAAO,CAAE2S,cAAe,aACxB1U,UAAU,gBACV2U,UAAU,IACVtP,YAAawL,EAAU,OAK7B,kBAAC,IAAD,CAAc7Q,UAAU,oDACtB,kBAAC,IAAD,CACEA,UAAU,mDACVN,QAAS,WACP6T,GAAe,KAHnB,UAQA,kBAAC,IAAD,CACEvT,WACGqU,EAAc,WAAa,8BAC5B,sCAEF3U,QAAS,WACPmN,IACAiE,GAAe,KAGhB0C,GACQ,U,iCCzQvB,oCAoDeoB,IAzCM,SAAC,GAA2D,IAAzDlK,EAAwD,EAAxDA,QAAShK,EAA+C,EAA/CA,YAAa+L,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,aAAcF,EAAa,EAAbA,OAC7CtL,SAASC,gBAAgBG,aAE3C,OACI,kBAAC,IAAD,CAAMtB,UAAW0K,EAAU,KAAO,UAC9B,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIxF,KAAMwF,EACN6J,KAAK,KACLpB,iBAAiB,GAGjB,yBAAKnT,UAAU,0CACX,uBAAGN,QAAS,kBAAM+M,KAASzM,UAAU,sBAGzC,kBAAC,IAAD,CAAcA,UAAU,wCACpB,kBAAC,IAAD,CAAaA,UAAU,gBAAvB,YAA+C,8BAAM,uBAAGA,UAAU,wBAItE,kBAAC,IAAD,CAAYA,UAAU,uBAClB,uBAAGA,UAAU,2BAAb,oCACqC,0BAAMA,UAAU,SAAhB,kBAA6BU,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAaI,QAAQC,KAAKC,OAAvD,0BAAyF,OAAXN,QAAW,IAAXA,OAAA,EAAAA,EAAaI,QAAQC,KAAKC,QAAS,EAAI,MAAQ,KADlK,YAGI,yBAAKhB,UAAU,4BAA4BwM,IAE/C,6BACA,kBAAC,IAAD,CAAS9M,QAAS,kBAAMgN,EAAY,OAAChM,QAAD,IAACA,OAAD,EAACA,EAAaI,QAAQ0I,KAAKxJ,UAAU,yDAAzE,WAGA,kBAAC,IAAD,CAASN,QAAS,kBAAM+M,KAASzM,UAAU,0CAA3C,iBAEW,U,uDC5CnC,oBA8Be8E,IA7BD,SAAC,GAaR,IAZHhF,EAYE,EAZFA,QACAiD,EAWE,EAXFA,aACAS,EAUE,EAVFA,UAEA/D,GAQE,EATFuD,eASE,EARFvD,KACA0D,EAOE,EAPFA,WACAwB,EAME,EANFA,OACArB,EAKE,EALFA,SACAF,EAIE,EAJFA,UAEAyB,GAEE,EAHFJ,MAGE,EAFFI,OACAO,EACE,EADFA,KAEMF,EAAe,SAARzF,GAA0B,OAARA,EAI/B,OACI,yBAAKO,UAAS,WAAMmD,EAAN,sBAA8B+B,EAAO,KAAO,WACtD,yBAAKlF,UAAS,yBAAoBoD,EAAY,KAAO,WAAayB,GAClE,yBAAK7E,UAAS,UAAKF,EAAU,aAAe,SAA9B,+FACV,2BAAO0J,GAAE,cAAShG,EAAT,YAAsBT,GAAgB4R,UAAU,KAAKE,aAAa,MAAMpO,KAAK,OAAOzG,UAAU,oBAAoBoE,MAAOO,EAAQS,KAAMA,GAAc,MAAO9B,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MAC/L,yBAAKF,UAAU,kBAAkBP,EAAMA,EAAIa,cAAgB,Q,iCCxB3E,oBA2BewE,IA1BD,SAAC,GAaR,IAZHhF,EAYE,EAZFA,QACAiD,EAWE,EAXFA,aACAS,EAUE,EAVFA,UAEA/D,GAQE,EATFuD,eASE,EARFvD,KAEA0D,GAME,EAPFD,SAOE,EANFC,YACAwB,EAKE,EALFA,OACArB,EAIE,EAJFA,SACAF,EAGE,EAHFA,UACAyB,EAEE,EAFFA,MACAiQ,EACE,EADFA,UAEM5P,EAAe,SAARzF,GAA0B,OAARA,GAAwB,OAARA,EAC/C,OACI,yBAAKO,UAAS,WAAMmD,EAAN,sBAA8B+B,EAAO,KAAO,WACtD,yBAAKlF,UAAS,yBAAoBoD,EAAY,KAAO,WAAayB,GAClE,yBAAK7E,UAAS,UAAKF,EAAU,aAAe,SAA9B,+FACV,2BAAO0J,GAAE,cAAShG,EAAT,YAAsBT,GAAgB4R,UAAU,KAAKE,aAAa,MAAMpO,KAAK,OAAOzG,UAAU,oBAAoBoE,MAAOO,EAAQS,KAAM0P,EAAY,kBAAoB,SAAUxR,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MACpN,yBAAKF,UAAU,kBAAkBP,EAAMA,EAAIa,cAAgB,Q,oBCrB3EkM,EAAOuI,QAAU,IAA0B,mC,iCCA3C,oBA0BepP,IAzBF,SAAC,GAaP,IAZH7F,EAYE,EAZFA,QACAiD,EAWE,EAXFA,aAEAtD,GASE,EAVFuD,eAUE,EATFvD,KACA0D,EAQE,EARFA,WACAwB,EAOE,EAPFA,OACArB,EAME,EANFA,SACAF,EAKE,EALFA,UACAqB,EAIE,EAJFA,MACAI,EAGE,EAHFA,MACAmQ,EAEE,EAFFA,WACAxR,EACE,EADFA,UAEA,OACI,yBAAKxD,UAAS,WAAMmD,EAAN,sBAAwC,UAAVsB,EAAoB,KAAO,WACnE,yBAAKzE,UAAS,yBAAoBoD,EAAY,KAAO,WAAayB,GAClE,yBAAK7E,UAAS,UAAKF,EAAU,aAAe,SAA9B,sGACV,2BAAO0J,GAAE,eAAUhG,EAAV,YAAuBT,GAAgBkS,SAAUD,EAAYH,aAAa,MAAM7U,UAAU,oBAAoBoE,MAAOO,EAAQS,KAAK,OAAO9B,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MAC5K,yBAAKF,UAAU,kBAAkBP,EAAMA,EAAIa,cAAgB,Q,yFCpB9D4U,EAAe,SAAC,GAAsE,IAApE1K,EAAmE,EAAnEA,aAAcK,EAAqD,EAArDA,WAAYgC,EAAyC,EAAzCA,OAAQsI,EAAiC,EAAjCA,kBAAmBzD,EAAc,EAAdA,QACtD,WAAtBlH,EAAapF,MACTsM,GAASyD,IACbtI,IACAhC,KAIAA,KCwJO+B,IApJI,SAAC,GAgBb,IAAD,IAfFhC,EAeE,EAfFA,QACAjK,EAcE,EAdFA,WACAmM,EAaE,EAbFA,SACAjC,EAYE,EAZFA,WACAL,EAWE,EAXFA,aACAC,EAUE,EAVFA,gBACAoC,EASE,EATFA,OACA/B,EAQE,EARFA,OACApK,EAOE,EAPFA,YACA0U,EAME,EANFA,SACAD,EAKE,EALFA,kBACAzD,EAIE,EAJFA,QACArG,EAGE,EAHFA,OACAhB,EAEE,EAFFA,YACAzJ,EACE,EADFA,eAEMyU,EAAQ,CACVC,QAAS,CACLC,OAA8B,WAAtB/K,EAAapF,KAAoB,aAAe,UACxDoQ,WAAkC,WAAtBhL,EAAapF,KAAoB,aAAe,0BAC5DqQ,UAAW,QACX/L,KAAMD,YAAS,IACfkJ,IAAK7F,EAAQ,UAAMA,EAAN,YAAkBA,EAAW,EAAI,SAAW,OAAU,GACnEN,OAAQ7L,EACR0K,OAAO,GAAD,OAA2B,WAAtBb,EAAapF,KAAoB,YAAc,QAApD,iBACNsQ,OAAQ,WACRC,WAAY,YAEhBC,OAAQ,CACJL,OAAO,GAAD,OAA2B,WAAtB/K,EAAapF,KAAoB,SAAW,OAAjD,WACNoQ,WAAY,kBACZC,UAAW,MACX/L,KAAMD,YAAS,IACfkJ,IAAK,GACLnG,OAAO,SACPnB,OAAQ,qBACRqK,OAAQ,SACRC,WAAY,aAEhBE,cAAe,CACXN,OAAQ,UACRC,WAAkC,WAAtBhL,EAAapF,KAAoB,aAAe,0BAC5DqQ,UAAW,QACX/L,KAAMD,YAAS,IACfkJ,IAAK7F,EAAQ,UAAMA,EAAN,YAAkBA,EAAW,EAAI,SAAW,OAAU,GACnEN,OAAQ7L,EACR0K,OAAO,yBACPqK,OAAQ,WACRC,WAAY,YAEhBG,eAAgB,CACZP,OAAQ,kBACRC,WAAkC,WAAtBhL,EAAapF,KAAoB,aAAe,0BAC5DqQ,UAAW,QACX/L,KAAMD,YAAS,IACfkJ,IAAK7F,EAAQ,UAAMA,EAAN,YAAkBA,EAAW,EAAI,SAAW,OAAU,GACnEN,OAAQ7L,EACR0K,OAAO,mBACPqK,OAAQ,WACRC,WAAY,aAGhBhW,EAAOiL,EAAUyK,EAAMC,QAAUD,EAAMO,OA/CzC,EAgD8CrU,oBAAS,GAhDvD,mBAgDKwU,EAhDL,KAgDuBC,EAhDvB,KAkDE9Q,GAAmB,IAAZ0F,IAAgC,IAAZA,GAEX,IAAhBP,IAAwC,IAAhBA,IACxB1K,GAAuB,IAAhB0K,EAAuBgL,EAAMQ,eAAiC,IAAhBxL,EAAwBgL,EAAMS,eAAiBT,EAAMC,QACtGjL,IACqB,IAAhBA,EADQnF,GAAO,EAGY,oBAApBtE,IACRA,IACAsE,GAAO,IAKnB,IAAMkM,EAAQlQ,SAAS+N,eAAe,gBAClCmC,GAAOA,EAAMA,QAEjB,IAAM6E,EAAYF,EAAmB,iBAAmB,oBAClDpM,EAAUiB,GAAemL,EAAL,EAA4B,EAChDG,EAAYH,EAAmB,eAAiB,eAEhDI,EAAQ,WACVtL,IACgC,oBAApBjK,GAAgCA,KAEhD,OACI,kBAAC,IAAD,CAAMX,UAAW,SAAAC,GAAC,OAAkB,KAAdA,EAAE+J,SAAiBY,KAAsB7K,UAAWkF,EAAO,KAAO,UACpF,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIlF,UAAS,UAAK4K,EAAU,KAAO,eAC/B1F,KAAMA,EAENoP,QAAS,WACD1J,GAASsK,EAAa,CAAE1K,eAAcK,aAAYgC,WACjDjC,GAASC,KAElB0J,KAAK,KACLxS,MAAO,CAAEsL,UAAW,SACpB+I,kBAAkB,MAClBjD,iBAAiB,GAEjB,yBAAKnT,UAAU,2BACX,uBAAGA,UAAU,6BAA6BN,QAAS,kBAAMkL,EAAUsK,EAAa,CAAE1K,eAAcK,aAAYgC,WAAYsJ,QAE5H,kBAAC,IAAD,CAAYnW,UAAU,kBAClB,2BAAOA,UAAS,UAAKL,EAAK8V,UAAV,2BAA8C9V,EAAK4V,QADvE,IACuF,8BAAM,uBAAGvV,UAAS,UAAKL,EAAK6V,eAC/G,yBAAKxV,UAAU,gBAAf,kBAA0CL,EAAK0L,SAC/C,yBAAKrL,UAAWqK,EAAc,UAAY,UAA1C,8BACA,yBAAK3K,QAAS,kBAAMsW,GAAqBD,IAAmB/V,UAAS,oEAA+D4K,IAA2B,IAAhBP,IAAwC,IAAhBA,EAAwB,SAAW,OACtM,yBAAKrK,UAAS,eAAUiW,KACxB,yBAAKjW,UAAU,SAASkW,IAE5B,yBAAKnU,MAAO,CAAEwO,gBAAiB,UAAW5G,QAASA,GAAW3J,UAAU,4CACpE,yBAAKA,UAAS,kBAAa4K,EAAU,KAAO,WAAajL,EAAK+J,MAC9D,yBAAK1J,UAAU,QACX,2BAAOA,UAAS,eAAU4K,EAAU,KAAO,WAA3C,UDzHT,SAAC,GAA+B,IAA7BlK,EAA4B,EAA5BA,YAA4B,EAAf0U,SACnC,UAAI1U,QAAJ,IAAIA,OAAJ,EAAIA,EAAaI,QAAS,CACtB,IADsB,SAEoBJ,QAFpB,IAEoBA,OAFpB,EAEoBA,EAAaI,QAA/CyI,EAFc,EAEdA,oBAAqBD,EAFP,EAEOA,SAG7B,OAFIC,EAA4B,WAAOD,EAAP,mBAA0BC,EAA1B,OACpB,WAAOD,EAAP,QCoHuE+M,CAAQ,CAAE3V,cAAa0U,aAAlF,YAAiGzV,EAAKgT,MACtG,yBAAK3S,UAAS,eAAU4K,GAAWP,EAAc,SAAW,OACxD,yBAAKtI,MAAO,CAAEuU,SAAU,wBAAyB3M,QAASA,EAAStI,QAAQ0U,GAA2B,GAAK/V,UAAS,SAApH,WACc,OAANqL,QAAM,IAANA,GAAA,UAAAA,EAAQgL,eAAR,eAAiBE,YAAjB,OAA8BlL,QAA9B,IAA8BA,GAA9B,UAA8BA,EAAQgL,eAAtC,aAA8B,EAAiBE,WAAa,0EAKhF,yBAAKvW,UAAS,kBAAmC,WAAtBwK,EAAapF,MAAqBiF,EAAc,SAAW,OAAtF,6BACA,yBAAKrK,UAAU,iBACX,kBAAC,IAAD,CAASN,QAAS,kBAAMyW,KAASnW,UAAS,+DAAmD4K,EAAU,SAAW,QAAlH,UAGA,kBAAC,IAAD,CAASpB,GAAE,eAAkBnH,SAAS,IAAI3C,QAAS,kBAAMkB,KAAkBZ,UAAS,kDAA6CL,EAAK+V,OAAlD,aAA4E,IAAhBrL,IAAwC,IAAhBA,EAAwB,KAAO,WAClM1K,EAAKgW,YAEV,kBAAC,IAAD,CAASnM,GAAE,eAAkBnH,SAAS,IAAI3C,QAAS,kBAAMkL,EAAUsK,EAAa,CAAE1K,eAAcK,aAAYgC,SAAQsI,oBAAmBzD,YD/HvI,SAAC,GAAgE,IAA9D7G,EAA6D,EAA7DA,WAAYJ,EAAiD,EAAjDA,gBAAiBK,EAAgC,EAAhCA,OAAgC,EAAxBqK,kBAChEtK,IACAJ,EAAgB,CAAEvF,MAAM,EAAOE,KAAM0F,IC6HuI0L,CAAa,CAAE3L,aAAYJ,kBAAiBK,YAAW9K,UAAS,kDAA6CL,EAAK+V,OAAlD,aAA4E,IAAhBrL,IAAwC,IAAhBA,EAAwB,SAAW,OACtU1K,EAAKgW,mB,oBCtJtCnJ,EAAOuI,QAAU,IAA0B,yC,oBCA3CvI,EAAOuI,QAAU,IAA0B,iC,oBCA3CvI,EAAOuI,QAAU,IAA0B,kC,8GC4B3C,IAkDe0B,EAlDO,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAC7B1V,SAASC,gBAAgBC,YADsB,MAG7BG,mBAAS,CAACsV,UAAW,IAAItJ,KAAOuJ,QAAS,IAAIvJ,KAAO0D,IAAK,cAH5B,mBAGxD8F,EAHwD,KAG7CC,EAH6C,OAIxCzV,mBAAS,IAAIgM,MAJ2B,mBAIxD7D,EAJwD,KAInDuN,EAJmD,OAKvC1V,qBALuC,mBAKxD2V,EALwD,KAKlDC,EALkD,KAOzDC,EAAaF,EAAO,OAAS,sBAC7BG,EAAeH,EAAO,sBAAwB,OAE9CI,EAAaC,iBAAO,OA/B5B,YAAmE,IAA9CD,EAA6C,EAA7CA,WAAWZ,EAAkC,EAAlCA,SAASE,EAAyB,EAAzBA,YAAYD,EAAa,EAAbA,WACnD3S,qBAAU,WAIN,SAASwT,EAAmBC,GACpBf,GAAYY,EAAWI,UAAYJ,EAAWI,QAAQC,SAASF,EAAM5Q,UACrE+P,GAAaF,GACbC,KAMR,OADAzV,SAAS0W,iBAAiB,YAAaJ,GAChC,WAEHtW,SAAS2W,oBAAoB,YAAaL,MAE/C,CAACF,EAAWZ,IAcfoB,CAAW,CAACR,aAAWZ,WAASE,cAAYD,eAE5C3S,qBAAU,WACRgT,EAAa,CAACH,UAAW,IAAItJ,KAAOuJ,QAAS,IAAIvJ,KAAO0D,IAAK,cAC7DgG,EAAQ,IAAI1J,QACZ,CAAC2J,IASH,OACE,yBAAKa,IAAKT,EAAYvV,MAAO,CAAEwD,MAAO,SAAWvF,UAAS,yHAAoH0W,EAAW,KAAO,WAC9L,yBAAK1W,UAAU,2DACb,yBAAKA,UAAU,yFACf,0BAAMN,QAAS,kBAAMyX,GAASD,IAAOlX,UAAS,WAAMoX,EAAN,kBAA0BF,EAAO,eAAiB,UAAlD,qBAA9C,eACA,0BAAMxX,QAAS,kBAAMyX,GAASD,IAAOlX,UAAS,WAAMqX,EAAN,iBAA4BH,EAAyB,UAAlB,gBAAnC,qBAA9C,iBAGJ,kBAAC,kBAAD,CACElX,UAAWkX,EAAO,KAAO,SACzBc,OAAQ,CAACjB,GACTzT,SAAU,SAAA2U,GAAO,OChEC,SAAC,GAAuC,IAAtCA,EAAqC,EAArCA,QAASlB,EAA4B,EAA5BA,UAAUC,EAAkB,EAAlBA,aACrCkB,EAAE,eAAOnB,GACbmB,EAAGrB,UAAYoB,EAAQE,UAAUtB,UACjCqB,EAAGpB,QAAUmB,EAAQE,UAAUrB,QAC/BE,EAAakB,GD4DUE,CAAS,CAACH,UAAQlB,YAAUC,oBAEnD,kBAAC,WAAD,CACAhX,UAAWkX,EAAO,SAAW,KAC3BxN,KAAMA,EACNpG,SAAY,SAAA4U,GAAE,OAAIjB,EAAQiB,MAE5B,yBAAKlY,UAAU,2DACX,0BAAMN,QAAS,WAzBhBgX,IACMC,EAAPO,EAAkBH,EAAwBrN,GAC1CkN,MAuBuC5W,UAAS,+EAA9C,c,oCE/BOsO,IAnCF,SAAC,GAAsD,IAAD,EAK3D+J,EALQ3X,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,WAAYrB,EAA0B,EAA1BA,UAAWoC,EAAe,EAAfA,SAAe,EACnCH,qBADmC,mBACxD+W,EADwD,KAChDC,EADgD,OAEvChX,qBAFuC,mBAExDmI,EAFwD,KAElDuN,EAFkD,OAG/B1V,qBAH+B,mBAGxDmV,EAHwD,KAG9CE,EAH8C,OAIzBrV,qBAJyB,mBAIxDiX,EAJwD,KAI3CC,EAJ2C,KAMzDxX,EAAYC,SAASC,gBAAgBC,YAgB3C,OAdA,UADAiX,EAAWK,YAAQ,CAAEhP,OAAMiP,YAAY,WACvC,aAAI,EAAU9B,aAAWwB,EAAQ,UAAMA,EAASxB,UAAf,cAA8BwB,EAASvB,UAExE9S,qBAAU,WACN4U,YAAkB,CAAElY,cAAaC,aAAYrB,YAAWoC,WAAU4W,aACnE,CAACA,EAAQhZ,IAEZ0E,qBAAU,SAAAwK,GACDkI,GAAUmC,YAAa,CAAEnY,cAAaC,aAAYrB,YAAWoC,WAAUgI,WAC7E,CAACA,EAAMgN,EAAUpX,IAEpB0E,qBAAU,SAAAwK,GACN+J,IACAtB,MACD,CAACuB,EAAalZ,IAEb,yBAAKU,UAAU,mCAEX,yBAAK+B,MAAO,CAAEV,OAAQ,IAAMrB,UAAS,UAAoB,WAAfW,EAA0B,SAAW,KAA1C,+JAAqMM,EAAY,KAAOyI,EAAO,KAAmB,WAAa2O,GACpS,yBAAKtW,MAAO,CAAEV,OAAQ,GAAIyX,SAAU,IAChC9Y,UAAS,UAAK0J,EAAO,uBAAyB,kCAArC,qCAAmGA,EAAO,gBAAkB,UAA5H,YAAwJ,WAAf/I,EAA0B,SAAW,KAA9K,yEACTjB,QAAS,kBAAMgK,EAAO+O,GAAe,SAAAM,GAAC,OAAKA,KAAKnC,GAAY,SAAAmC,GAAC,OAAKA,QACtE,kBAAC,EAAD,CAAYrC,SAAUA,EAAUC,WAAY,SAACjN,GAAD,OAAUuN,EAAQvN,IAAOkN,YAAa,SAACmC,GAAD,OAAOnC,EAAYmC,MACrG,yBAAKhX,MAAO,CAAEV,OAAQ,GAAIyX,SAAU,IAAM1Y,IAAKkY,EAASU,IAAOC,IAAKvZ,QAAS,kBAAM6Y,GAAWD,IAAStY,UAAU,2D,6IC7BvHkZ,G,OAAyBC,IAAiBC,MAE1CrL,E,kDACF,WAAYsL,GAAQ,IAAD,8BACf,cAAMA,IAQVC,eAAiB,SAACC,EAAMC,EAAUC,GAU9B,OAAoB,GATD3F,KAAK4F,IAAL,MAAA5F,KAAI,YAChByF,EAAK/W,KAAI,SAAAmX,GACR,IAAIvV,EAAQ,GAEZ,MAAqB,kBADrBA,EAAQoV,EAASG,IACqBvV,EAAMmS,WAAWvV,QAC/CoD,GAAS,IAAIpD,WALN,QAOnByY,EAAWzY,WAjBA,EAsBnBwU,WAAa,SAAC7V,EAAM4V,EAAQvH,GACxB,IAAI4L,EAAa,GAwBjB,GAvBArE,GAAUA,EAAO/S,KAAI,SAACqX,EAAGrI,GACrB,GAAKxD,EAAWwD,GAkBZ,OAAOoI,EAAU,YAAOA,GAjBxB,IAIIE,EAAM,CACNC,OALY,8BACXF,EAAEE,OADS,IACD,uBAAG/Z,UAAU,cAAb,MAKXga,KAAMH,EAAEG,KACRR,SAAUK,EAAEL,SACZS,UAAyB,IAAfJ,EAAEI,SACZC,UAAWL,EAAEK,YAAa,EAC1Bla,UAAW6Z,EAAE7Z,WAAa,KAC1Bma,gBAAiBN,EAAEM,iBAAmB,KACtCpY,MAAO8X,EAAE9X,OAAS,KAClBwD,MAAOsU,EAAEtU,OAAS,MAEtB,OAAOqU,EAAU,sBAAOA,GAAP,CAAmBE,OAMd,UAA1B,EAAKT,MAAMrL,WAAwB,CACnC,IAGI8L,EAAM,CACNC,OAHA,uBAAG/Z,UAAU,gCAIbwZ,SAAU,UACVjU,MAAO,GACPxD,MAAO,CAAEoM,UAAW,WAExByL,EAAU,sBAAOA,GAAP,CAAmBE,IAGjC,OAAOF,GA1DP,EAAK9X,MAAQ,CACTsY,WAAW,EACXC,UAAW,IACXC,eAAgB,IALL,E,qDA+DT,IACEA,EAAmBC,KAAKzY,MAAxBwY,eADH,EAE4DC,KAAKlB,MAAhEhL,EAFD,EAECA,QAAS1O,EAFV,EAEUA,KAAMD,EAFhB,EAEgBA,QAASuO,EAFzB,EAEyBA,OAAQuM,EAFjC,EAEiCA,YAAaxa,EAF9C,EAE8CA,UAC/CwV,EAAa+E,KAAK/E,WAAW7V,EAAM0O,EAASiM,GAChD,OAEI,kBAAC,IAAMG,SAAP,KACI,kBAACvB,EAAD,CACIlZ,UAAWA,EACXqO,QAASmH,EACT7V,KAAMA,EACN+a,gBAAgB,EAChB3Y,MAAOkM,EACP0M,WAA2B,UAAfH,EAA0B,cAAgB,iBACtDI,QAAQ,IACRV,WAAW,EACXW,WAAY,SAAC/Y,EAAOgZ,EAASC,EAAQC,GACjC,MAAO,CACHtb,QAAS,SAACQ,EAAG+a,GACPvb,GACEA,EAAQob,EAAQI,SAAUpZ,EAAOiZ,EAAQ7a,EAAG8a,IAEpDjZ,MAAO,CACHV,OAAQ,OACRmP,SAAU9Q,GAAW,UACrByO,UAAWhG,MAAK,OAAC2S,QAAD,IAACA,OAAD,EAACA,EAASI,SAASH,EAAOvR,KACpC,OACA,WAIlB2R,gBAAiB,U,GA/FXhH,IAAMiH,WAuGjBrN,O,oFClEAjI,IA5CI,SAAC,GAQb,IAPHhG,EAOE,EAPFA,QACAL,EAME,EANFA,IACA0D,EAKE,EALFA,WACAwB,EAIE,EAJFA,OACArB,EAGE,EAHFA,SACAF,EAEE,EAFFA,UACAyB,EACE,EADFA,MACE,EACwBtD,qBADxB,mBACK8Z,EADL,KACYC,EADZ,KAEIpW,EAAe,SAARzF,GAA0B,OAARA,EAE/B,OACI,yBAAK2F,KAAK,SAASpF,UAAS,WAAMmD,EAAN,sBAA8B+B,EAAO,KAAO,UAAYxF,QAAS,kBAAM2b,GAAS1W,EAASrB,IAAa,OAC9H,yBAAKtD,UAAS,qCAAgCoD,EAAY,KAAO,WAAayB,GAC9E,yBACI0W,aAAc,kBAAMD,KACpBE,aAAc,kBAAMF,GAAS,IAC7BvZ,MAAO,CACH0Z,gBAAgB,OAAD,OAAS9W,EAAT,KACf+W,eAAgB,QAChB/R,QAAS,GACTpE,QAAOZ,GAAS,IAEpB6E,GAAG,YACHxJ,UAAS,UAAKF,EAAU,aAAe,SAA9B,qIAGL6E,GAAU0W,EACN,yBAAKrb,UAAU,cAAc+B,MAAO,CAAE4Z,OAAQ,IAC1C,0BAAM5Z,MAAO,CAAE6Z,WAAUjX,GAAS,IAAc3E,UAAS,+BAA0B2E,EAAU0W,EAAQ,mCAAqC,KAAQ,yBAGtJ,2BAAOrb,UAAU,cAAc+B,MAAO,CAAE4Z,OAAQ,IAC5C,2BAAOvW,KAAK,SAASqB,KAAK,OAAOoV,kBAAA,EAAeC,SAAS,iBAAiBC,OAAO,mCAAmCzY,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MAC9I,0BAAMF,UAAU,iBAChB,0BAAM+B,MAAO,CAAE6Z,WAAUjX,GAAS,IAAc3E,UAAS,+BAA0B2E,EAAU0W,EAAQ,mCAAqC,KAAQ,6B,gFCtCnKW,G,OAAW,CAClBzG,OAAQ,iBACRC,WAAY,cACZC,UAAW,MACX/L,KAAM,uDACNiJ,IAAK,GACLnG,OAAQ,GACRnB,OAAQ,8BACRqK,OAAQ,WACRC,WAAY,kBAGHsG,EAAY,CACrB1G,OAAQ,uBACRC,WAAY,aACZC,UAAW,MACX/L,KAAM,kEACNiJ,IAAK,GACLnG,OAAQ,GACRnB,OAAQ,uEACRqK,OAAQ,WACRC,WAAY,iBAGH5N,EAAgB,CACzBwN,OAAQ,mBACRC,WAAY,sBACZC,UAAW,MACX/L,KAAM,8CACNiJ,IAAK,GACLnG,OAAQ,GACRnB,OAAQ,8DACRqK,OAAQ,WACRC,WAAY,iB,SCoHD5I,IAjIO,SAAC,GAAoJ,IAAD,gBAAjJ/B,EAAiJ,EAAjJA,WAAYC,EAAqI,EAArIA,cAAetK,EAAsH,EAAtHA,WAAY6L,EAA0G,EAA1GA,OAAkB0P,GAAwF,EAAlGpP,SAAkG,EAAxFoP,kBAAkBC,EAAsE,EAAtEA,oBAAqBtP,EAAiD,EAAjDA,OAAQuP,EAAyC,EAAzCA,oBAAqBC,EAAoB,EAApBA,cAC9IhH,EAAQ2G,EAIN3a,EADYH,SAASC,gBAAgBG,aAChB,MAErB0J,GAAckR,GAAsBlR,GAAckR,KACpD7G,EAAQ4G,GAGO,cAAftb,GACS2b,YAAqB9P,KAClB6I,EAAQtN,GAGxB,IAAMqJ,EAAQlQ,SAAS+N,eAAe,mBAClCmC,GAAOA,EAAMA,QAjBqJ,MAoB1I7P,mBAAS,CAAE6C,MAAO,EAAGG,MAAO,eApB8G,mBAoB/JC,EApB+J,KAoBvJ+X,EApBuJ,KAqBtK,OACI,kBAAC,IAAD,CAAMvc,UAAWgL,GAAckR,EAAmB,KAAO,UACrD,kBAAC,IAAD,CAAMlc,UAAU,YACZ,kBAAC,IAAD,CACIkF,KAAM8F,GAAckR,EACpB5H,QAAS,WACLrJ,GAAc,GACViR,GAAkBC,GAAoB,IAE9C5H,KAAK,KACLxS,MAAO,CAAEsL,UAAW,SACpB+I,kBAAkB,MAClBjD,iBAAiB,GAEjB,yBAAKnT,UAAU,2BACX,uBAAGA,UAAU,6BAA6BN,QAAS,WAC/CuL,GAAc,GACViR,GAAkBC,GAAoB,OAGlD,kBAAC,IAAD,CAAYnc,UAAU,kBAClB,yBAAKA,UAAU,kCACX,2BAAOA,UAAS,oBAAKqV,SAAL,aAAK,EAAOI,UAAZ,sBAAhB,UAA2DJ,SAA3D,aAA2D,EAAOE,QADtE,IACsF,8BAAM,uBAAGvV,UAAS,oBAAKqV,SAAL,aAAK,EAAOG,gBAEpH,yBAAKzT,MAAO,CAAEwO,gBAAiB,WAAavQ,UAAU,4CAClD,yBAAKA,UAAS,kBAAagL,GAAckR,EAAmB,KAAO,WAAnE,UAAgF7G,SAAhF,aAAgF,EAAO3L,MACvF,yBAAK1J,UAAU,QACX,2BAAOA,UAAU,WAAjB,oBAA+BqV,SAA/B,aAA+B,EAAOhK,WAG9C,yBAAKrL,UAAU,mBAAmB+B,MAAO,CAAEQ,UAAWlB,EAAQgM,UAAWhM,EAAQiM,SAAU,SAAUc,SAA4B,OAAnBgO,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBpb,SAAyB,WAAfL,EAA0B,KAAO,SAC1K,+BACI,wBAAIX,UAAU,iBAAiB+B,MAAO,CAAEqR,aAAc,sBAClD,wBAAIpT,UAAU,QAAd,YACA,wBAAIA,UAAU,OAAO+B,MAAO,CAAEoM,UAAW,UACrC,kBAACpJ,EAAA,EAAD,CACI+I,gBAAgB,EAChBa,WAAW,EACXzJ,MAAM,EACN9B,WAAW,EACXkC,QAAS,CAAC,CAAElB,MAAO,EAAGG,MAAO,aAAe,CAAEH,MAAO,EAAGG,MAAO,aAC/DhB,iBAAkB,SAAC4B,GAAD,OAAcoX,EAAUpX,IAC1CN,MAAM,aACNQ,YAAY,SACZ1E,WAAYA,EACZ4E,MAAM,QACNN,cAAeT,MAI3B,sCAEQ4X,QAFR,IAEQA,GAFR,UAEQA,EAAqB5X,QAAO,SAAAnB,GAAS,IACzBe,EAAUI,EAAVJ,MACR,OAAc,IAAVA,EAAoBf,EAAKmZ,QAAU,GACzB,IAAVpY,EAAoBf,EAAKmZ,OAAS,GAC1BnZ,YANxB,aAEQ,EAKIb,KAAI,SAAA7C,GAAI,OACR,wBAAID,QAAS,kBArF/B,SAAC,GAAmF,IAAjFuL,EAAgF,EAAhFA,cAAeoR,EAAiE,EAAjEA,cAAe1c,EAAkD,EAAlDA,KAAMuc,EAA4C,EAA5CA,iBAAkBC,EAA0B,EAA1BA,oBAC3ED,GAAkBC,GAAoB,GAC1ClR,GAAc,GACiB,oBAAnBoR,GAA+BA,EAAc1c,GAkFE8c,CAAkB,CAAExR,gBAAeoR,gBAAe1c,OAAMuc,mBAAkBC,yBAAwBpa,MAAO,CAAEqR,aAAc,qBAAuBpT,UAAU,6BACzK,4BAAKL,EAAK8C,SACV,wBAAIV,MAAO,CAAEoM,UAAW,SAAWnO,UAAU,OAA7C,UAAuDL,EAAK6c,OAA5D,MAAuE,0BAAMxc,UAAU,wCAQnH,kBAAC,IAAD,CAAcA,UAAS,+BAA0Bkc,EAAmB,0BAA4B,wBAAzE,8BACnB,6BAOI,kBAAC,IAAD,CACI1S,GAAI,kBACJnH,SAAS,IACT3C,QAAS,WACLuL,GAAc,GACViR,GAAkBC,GAAoB,IAC3Cnc,UAAS,yCAA0BqV,SAA1B,aAA0B,EAAOK,SANjD,UAOKL,SAPL,aAOK,EAAOM,aAGhB,6BACI,kBAAC,IAAD,CACI5T,MAAO,CAAEwO,gBAAiB,WAC1B/G,GAAI,kBACJnH,SAAS,IACT3C,QAAS,WACLuL,GAAc,GACViR,GAAkBC,GAAoB,GAClB,oBAAZtP,GAAwBA,KACrC7M,UAAS,kCAA6Bkc,EAAmB,KAAO,SAAvD,MARhB,wB,2RCxHfQ,EAAS,uCAAG,kDAAA9V,EAAA,iBAAAA,EAAA,6DACrBpH,EADqB,EACrBA,IACAmd,EAFqB,EAErBA,QACAjb,EAHqB,EAGrBA,SACAyT,EAJqB,EAIrBA,kBACAxU,EALqB,EAKrBA,WACAic,EANqB,EAMrBA,cACAlc,EAPqB,EAOrBA,YACAmc,EARqB,EAQrBA,cACAC,EATqB,EASrBA,OACAC,EAVqB,EAUrBA,mBACIC,EAXiB,YAWMJ,IACVpd,GAAKmd,QAAUA,EAChCjb,EAAS,aAAE+E,KAAMwW,KAAT,UAAoCtc,EAApC,eAA8Dqc,IAEhEE,EAfe,OAeAF,QAfA,IAeAA,OAfA,EAeAA,EAAkBxY,QAAO,SAAA2Y,GAC1C,GAAIA,EAAMR,QAAS,OAAOQ,KAE1BC,EAAa,GACb1c,GACAA,EAAYI,QAAQC,KAAKyB,KAAI,SAAA7C,GACzB,IAAM0d,EAA4B,CAAElX,QAAYxG,EAA7BwG,SACfkX,EAAOlX,SACPiX,EAAW9Y,KAAK+Y,EAAOlX,YAI/BmX,EAAM,GACNC,EAAkB,GAEhB3W,EAAIsW,EAAa1a,IAAb,uCAAiB,WAAOzB,EAAMyc,GAAb,qBAAA5W,EAAA,yDACLwW,EAAWlM,SAASnQ,EAAKoF,SADpB,iCAGCsX,YAAS,CAAEC,MAAO3c,EAAKoF,UAHxB,cAGb1B,EAHa,OAInB1D,EAAI,UAAgB0D,EAJD,SAKAkZ,YAAa,CAAED,MAAO3c,EAAKoF,QAAS0W,gBAAenb,WAAUob,OAAQA,EAAO1Y,MAAOzD,eALnF,QAKbhB,EALa,UAOf4d,EAAe,OAAG5d,QAAH,IAAGA,OAAH,EAAGA,EAAM4d,gBAClBK,EAFA,OAEYje,QAFZ,IAEYA,GAFZ,UAEYA,EAAMke,eAFlB,aAEY,EAAerb,KAAI,SAAA6D,GACjCA,EAAOD,SAAW,GAElB,IAAM0X,EAAWzX,EAAOG,WAAauX,IAAO1X,EAAOG,YAAYwX,UAAY,KACrEC,EAAa5X,EAAOuC,YAAcmV,IAAO1X,EAAOuC,aAAaoV,UAAY,KAQ/E,OAPA3X,EAAOkX,gBAAP,OAAyB5d,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAM4d,gBAC/BlX,EAAOG,WAAasX,EACpBzX,EAAOuC,YAAcqV,EACrB5X,EAAOF,QAAUpF,EAAKoF,QACtBE,EAAO5G,IAAMsB,EAAK4B,gBAClB0D,EAAO5C,SAAW1C,EAAK0C,SACvB4C,EAAO0B,cAAgBmW,OAAO9L,UAAU/L,EAAO0B,eAAiBP,SAASnB,EAAO0B,eAAiBsK,WAAWhM,EAAO0B,eAC5G1B,KAEXtF,EAAI,OAAa6c,EACjBN,EAAIhZ,KAAKvD,IAvBM,4CAAjB,yDA9BW,UA0DJod,QAAQC,IAAIxX,GA1DR,eA2DjByX,EAAQ,GACR3d,IACA2d,EAAQ3d,EAAYI,QAAQC,KAAKud,OAAOhB,IAEvC5c,IAAa2d,EAAQf,IAEpBiB,EAAevB,EAAiBxd,IACpBmd,UACd0B,EAAQA,EAAM7Z,QAAO,SAAA7E,GAAU,OAAOA,EAAKwG,UAAYoY,EAAapY,YAGlEqD,EAtEe,OAsEV9I,QAtEU,IAsEVA,GAtEU,UAsEVA,EAAaI,eAtEH,aAsEV,EAAsB0I,GAC3BgV,EAAW,CACb1d,QAAS,CACL0I,GAAIA,GAAU,EACdiV,gBAAiB5B,EACjB6B,qBAAsB7B,EACtB8B,WAAYnX,SAAQ,OAACsV,QAAD,IAACA,OAAD,EAACA,EAAQ1Y,OAC7BkF,SAAQ,OAAEwT,QAAF,IAAEA,OAAF,EAAEA,EAAQvY,MAClBb,gBAAiB8D,SAAQ,OAACuV,QAAD,IAACA,OAAD,EAACA,EAAmB3Y,OAC7CmF,oBAAmB,OAAEwT,QAAF,IAAEA,OAAF,EAAEA,EAAmBxY,MACxCxD,KAAMsd,EAAMO,MAAK,SAAUhY,EAAGiY,GAAK,OAAOC,YAAgBlY,EAAGiY,MAAMD,MAAK,SAAUhY,EAAGiY,GAAK,OAAOC,YAAgBlY,EAAGiY,QAGvG,IAAjBR,EAAMrd,QAAcU,EAAS,aAAE+E,KAAMC,KAAT,UAA+B/F,EAA/B,aAAuD,OACnF0d,EAAMrd,OAAS,GAAGU,EAAS,CAAE+E,KAAMC,IAAkB6W,oBACzDpI,EAAkBqJ,GArFG,4CAAH,sDA0FTO,EAAS,uCAAG,4CAAAnY,EAAA,aAAAA,EAAA,6DACrBpH,EADqB,EACrBA,IACAmd,EAFqB,EAErBA,QACAjb,EAHqB,EAGrBA,SACAf,EAJqB,EAIrBA,WACAic,EALqB,EAKrBA,cACAlc,EANqB,EAMrBA,YACAmc,EAPqB,EAOrBA,cACAC,EARqB,EAQrBA,OACAkC,EATqB,EASrBA,eACIhC,EAViB,YAUMJ,IACVpd,GAAKmd,QAAUA,EAE1BO,EAbe,OAaAF,QAbA,IAaAA,OAbA,EAaAA,EAAkBxY,QAAO,SAAA2Y,GAC1C,GAAIA,EAAMR,QAAS,OAAOQ,KAE1BC,EAAa,GACb1c,GACAA,EAAY8B,KAAI,SAAA7C,GACZ,IAAM0d,EAA4B,CAAElX,QAAYxG,EAA7BwG,SACfkX,EAAOlX,SACPiX,EAAW9Y,KAAK+Y,EAAOlX,YAI/BmX,EAAM,GACY,GAChB1W,EAAIsW,EAAa1a,IAAb,uCAAiB,WAAOzB,EAAMyc,GAAb,mBAAA5W,EAAA,yDACLwW,EAAWlM,SAASnQ,EAAKoF,SADpB,iCAGCsX,YAAS,CAAEC,MAAO3c,EAAKoF,UAHxB,cAGb1B,EAHa,OAInB1D,EAAI,UAAgB0D,EAJD,SAKAkZ,YAAa,CAAED,MAAO3c,EAAKoF,QAAS0W,gBAAenb,WAAUob,OAAQA,EAAO1Y,MAAOzD,eALnF,QAKbhB,EALa,UAOA,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAM4d,gBAClBK,EAFA,OAEYje,QAFZ,IAEYA,OAFZ,EAEYA,EAAMke,QAAQrb,KAAI,SAAA6D,GAChCA,EAAOD,SAAW,GAElB,IAAM0X,EAAWzX,EAAOG,WAAauX,IAAO1X,EAAOG,YAAYwX,UAAY,KACrEC,EAAa5X,EAAOuC,YAAcmV,IAAO1X,EAAOuC,aAAaoV,UAAY,KAQ/E,OAPA3X,EAAOkX,gBAAP,OAAyB5d,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAM4d,gBAC/BlX,EAAOG,WAAasX,EACpBzX,EAAOuC,YAAcqV,EACrB5X,EAAOF,QAAUpF,EAAKoF,QACtBE,EAAO5G,IAAMsB,EAAK4B,gBAClB0D,EAAO5C,SAAW1C,EAAK0C,SACvB4C,EAAO0B,cAAgBmW,OAAO9L,UAAU/L,EAAO0B,eAAiBP,SAASnB,EAAO0B,eAAiBsK,WAAWhM,EAAO0B,eAC5G1B,KAEXtF,EAAI,OAAa6c,EACjB7c,EAAK7B,WAAY,EACjBoe,EAAIhZ,KAAKvD,IAxBM,4CAAjB,yDA3BW,UAwDJod,QAAQC,IAAIxX,GAxDR,eAyDjByX,EAAQ,GACR3d,IACA2d,EAAQ3d,EAAY4d,OAAOhB,IAE1B5c,IAAa2d,EAAQf,IAEpBiB,EAAevB,EAAiBxd,IACpBmd,UACd0B,EAAQA,EAAM7Z,QAAO,SAAA7E,GAAU,OAAOA,EAAKwG,UAAYoY,EAAapY,YAExE6Y,EAAcX,GAnEO,4CAAH,sDA+JTjR,EAAmB,SAAC,GAAuG,IAArG3M,EAAoG,EAApGA,aAAcC,EAAsF,EAAtFA,YAAaC,EAAyE,EAAzEA,WAAY8J,EAA6D,EAA7DA,gBAAiB/I,EAA4C,EAA5CA,SAAUuJ,EAAkC,EAAlCA,cAAerH,EAAmB,EAAnBA,aAC5Gqb,EAAU,GACV/Y,EAAE,eAAQxF,GACRwe,EAAMxe,EAAYI,QAAQC,KAAKyB,KAAI,SAAA7C,GAgDrC,OA/CAA,EAAK0G,OAAO7D,KAAI,SAAA0P,GACZ,IAAMiN,EAAW5W,YAAyB,CAAEC,WAAY0J,EAAG9L,WA4C3D,OA3CA8L,EAAG9L,SAAS5D,KAAI,SAAAa,GAAS,IAUhB,EAK8B,EAd3BuB,EAAuCvB,EAAvCuB,IAAKH,EAAkCpB,EAAlCoB,MAAiBoB,GAAiBxC,EAA3BH,SAA2BG,EAAjBwC,MAAMH,EAAWrC,EAAXqC,OAExB,GAAPd,IAAYuD,MAAMvD,IAA0B,QAAZ,OAALH,QAAK,IAALA,OAAA,EAAAA,EAAOL,QAQR,WAAnB,OAAJf,QAAI,IAAJA,GAAA,UAAAA,EAAMoB,aAAN,eAAaF,QAA6C,KAAZ,OAAZX,QAAY,IAAZA,OAAA,EAAAA,EAAcQ,SACdf,EAAKuC,aAAtCC,GACD,OAACH,QAAD,IAACA,OAAD,EAACA,EAAQtB,OAAoCf,EAAKoC,eAAgB,EAAjDpC,EAAKoC,eAAgB,GAEd,KAAZ,OAAZ7B,QAAY,IAAZA,OAAA,EAAAA,EAAcQ,SACd,OAACK,QAAD,IAACA,OAAD,EAACA,EAAOL,OAAmCf,EAAK2B,cAAe,EAA/C3B,EAAK2B,cAAe,EACT,WAAnB,OAAJ3B,QAAI,IAAJA,GAAA,UAAAA,EAAMoB,aAAN,eAAaF,SACqBlB,EAAKuC,aAAtCC,GACD,OAACH,QAAD,IAACA,OAAD,EAACA,EAAQtB,OAAoCf,EAAKoC,eAAgB,EAAjDpC,EAAKoC,eAAgB,KAK1CpC,EAAK2B,cAAe,EACpB3B,EAAKmC,iBAAkB,KArB3BnC,EAAKqB,YAAa,EAClBrB,EAAK2B,cAAe,EACpB3B,EAAKmC,iBAAkB,EACvBnC,EAAKuC,aAAc,EACnBvC,EAAKoC,eAAgB,GAiCzB,OAbA0C,MAAMvD,IAAe,GAAPA,GAAoB,KAARA,GAAsB,OAARA,EAAevB,EAAKqB,YAAa,EAAOrB,EAAKqB,YAAa,EAE7FrB,EAAKqB,aACFwZ,OAAOiB,GAAYjB,OAAOhM,EAAGnK,eAC7B1E,EAAKqB,YAAa,EAEjBrB,EAAKqB,YAAa,IAInB,OAAJrB,QAAI,IAAJA,OAAA,EAAAA,EAAMqB,cAAN,OAAoBrB,QAApB,IAAoBA,OAApB,EAAoBA,EAAM2B,gBAA1B,OAA0C3B,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAMmC,mBAAhD,OAAmEnC,QAAnE,IAAmEA,OAAnE,EAAmEA,EAAMuC,eAAzE,OAAwFvC,QAAxF,IAAwFA,OAAxF,EAAwFA,EAAMoC,eAAewZ,EAAQ3a,MAAK,GACzH2a,EAAQ3a,MAAK,GAEXjB,KAEJ6O,KAEJvS,KAKPyf,GAAQ,EACZF,EAAI1c,KAAI,SAAA7C,GACJA,EAAK0G,OAAO7D,KAAI,SAAA0P,GACZA,EAAG9L,SAAS5D,KAAI,SAAAa,GAERA,EAAKuB,MAAKwa,GAAQ,YAKlClZ,EAAGpF,QAAQC,KAAOme,EAClBxd,EAAS,aAAE+E,KAAMC,KAAT,UAA+B/F,EAA/B,aAAuDuF,KAC1D+Y,EAAQ/N,UAAS,IAAUkO,EACK,oBAArB3U,GAAiCA,EAAgB,CAAEvF,MAAM,EAAME,KAAM,YAGhD,oBAArBqF,GAAiCA,EAAgB,CAAEvF,MAAM,EAAOE,KAAM,OACnD,oBAAnB6F,GAA+BA,GAAc,IAG7DoU,YAAmB,CAAE5e,eAAcC,cAAaC,gBAGvC2e,EAAuB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,eAAgBpK,EAAwB,EAAxBA,kBACnD,GAAIoK,EAAgB,CAAC,IAAD,IACZ5f,EAAO6f,OAAOC,OAAO,GAAIC,KAAKC,MAAMD,KAAKE,UAAUL,KACjDM,EAAU,OAAGlgB,QAAH,IAAGA,GAAH,UAAGA,EAAMmB,eAAT,iBAAG,EAAeC,YAAlB,aAAG,EAAqByB,KAAI,SAAAsd,GAKxC,OAJAA,EAAGzZ,OAAO7D,KAAI,SAAA0P,GAEV,OADAA,EAAG9L,SAAW,CAAC,CAAExB,IAAKsN,EAAGnK,cAAevB,WAAY0L,EAAG1L,aAChD0L,KAEJ4N,KAEXngB,EAAKmB,QAAQC,KAAO8e,EACpB1K,EAAkBxV","file":"static/js/18.e6966cd2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { getEditedData, checkisEmpty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { onEnter } from 'services'\r\nconst SelectedSKU = ({\r\n    isNewItem,\r\n    img,\r\n    skuDescription,\r\n    skuNumber,\r\n    activeSku,\r\n    uomValue,\r\n    idx,\r\n    uom,\r\n    onClick,\r\n    data\r\n}) => {\r\n    const edited = getEditedData({ data })\r\n    const isEmpty = checkisEmpty(data)\r\n    return (\r\n        <div className={`w-100 sku-item softGreen pl-2 pr-2 pt-2 mb-3 cursor-pointer rounded ${edited ? 'soft-green' : null} ${activeSku === idx ? 'border-green' : (isEmpty ? 'border-red' : 'border')}`}>\r\n            <div className=\" w-100 d-flex justify-content-end\">\r\n                <div className={isNewItem ? 'green-dot' : 'dot'} />\r\n            </div>\r\n            <div onKeyDown={e => onEnter({ e, idx, onClick })} onClick={() => onClick()} className={`w-100 softGreen d-flex justify-content-between pl-2 pr-2 mb-3 cursor-pointer ${edited ? 'soft-green' : null}`}>\r\n                <div className='d-flex align-items-center w-100'>\r\n                    <div className='d-flex align-items-center'>\r\n                        <img src={img} alt='sku image' className='w-5 mr-3 border softGreen rounded' />\r\n                    </div>\r\n                    <div className=\"w-100\">\r\n                        <div className='mr-3 w-100 d-flex'>\r\n                            <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-between'>\r\n                            <div className='text'>{skuNumber}</div>{activeSku}\r\n                            <div className='green LatoBold'>{uomValue} <span>{`${uom ? uom.toUpperCase() : ''}${uomValue > 1 ? 's' : ''}`}</span></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKU","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './index.scss'\r\nimport SelectedSKU from 'Page/StockEntry/Movement/WeightEntry/SelectedSKUList/SelectedSKU'\r\nimport Reload from 'assets/icons/refreshIcon.svg'\r\nimport { updateEntries } from 'apiServices'\r\nimport { CTooltip } from '@coreui/react'\r\nconst SelectedSKUList = ({\r\n    hideSKUList,\r\n    setActiveSKU,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    setUpdateEntry,\r\n}) => {\r\n    const selectedSku = moduleEntry.jobPost.list.length\r\n    const dimention = document.documentElement.clientWidth\r\n    let height = document.documentElement.clientHeight\r\n    height = height - 212\r\n    const [hideContent, setHideContent] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const thereAreRequest = useSelector(state => state.thereAreRequest)\r\n    // const { sorted } = useIsNewItem({ setActiveSKU, moduleEntry, selectedSku })\r\n    return (\r\n        <div className={`${hideSKUList ? 'w-0' : 'w-30'}  mt-md-0 rounded-bottom rounded-top`}>\r\n            <div style={{ padding: 17 }} className='w-100 bg-white border-top border-left border-right rounded-top border-soft-green text d-flex align-items-center justify-content-between' onClick={() => dimention <= 500 ? setHideContent(!hideContent) : null}>\r\n                <div className=\"LatoBold\"> Selected SKU <span className='font-green'>{`(${selectedSku} SKU${selectedSku > 1 ? 's' : ''})`}</span></div>\r\n                <div className='d-flex align-items-center justify-content-between'>\r\n                    <CTooltip content={`Click to refresh the stock`} placement={dimention <= 500 ? 'left' : 'right'}>\r\n                        <div>\r\n                            <img className={`${thereAreRequest > 0 ? 'fa-spin-hover' : false} mt-1 pointer`} src={Reload} onClick={() => updateEntries({ moduleEntry, moduleName, dispatch, setUpdateEntry })} />\r\n                        </div>\r\n                    </CTooltip>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/movement/weight-entry/remove-sku'>\r\n                        <div className=\"fontSizeTitle px-3 emptyTextField iconU-remove\" />\r\n                    </Link>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/movement/weight-entry/add-sku'>\r\n                        <div className='fontSizeTitle emptyTextField text-bold iconU-entryAdd' ></div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div style={{ height: dimention <= 500 ? false : height, maxHeight: height }} className={` overflow-y w-100 bg-white mr-0 border rounded-bottom border-soft-green pl-3 pr-0 pt-3 ${hideContent ? 'd-none' : null}`}>\r\n                {\r\n                    moduleEntry?.jobPost?.list?.map((data, idx) =>\r\n                        <SelectedSKU\r\n                            isNewItem={data?.isNewItem}\r\n                            data={data}\r\n                            idx={idx}\r\n                            activeSku={activeSku}\r\n                            skuDescription={data?.skuName}\r\n                            skuNumber={data?.skuNumber}\r\n                            uomLabel={data?.unitOfMeassures}\r\n                            uomValue={data?.totalQty}\r\n                            uom={data?.unitOfMeassures}\r\n                            img={data?.photo}\r\n                            onClick={() => setActiveSKU(idx)}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKUList","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport Decimal from 'Component/Input/decimal'\r\nimport Input from 'Component/Input'\r\nimport Note from 'Component/Input/Note'\r\nimport { useEffect } from 'react'\r\nimport InputImage from 'Component/Input/InputImage'\r\n\r\n\r\nconst WeightEntry = ({\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    gradeList,\r\n    ripeness,\r\n    inputWidth,\r\n    showTitle,\r\n    item,\r\n    onChange,\r\n    onChangeDropdown,\r\n    uom,\r\n    poListIdx,\r\n    category,\r\n    areaDestination\r\n}) => {\r\n    let ripenessLevel = useSelector(state => state.ripenessLevel)\r\n    let areaMovement = useSelector(state => state.areaMovement)\r\n    const wasteReasonList = useSelector(state => state.wasteReasonList)\r\n    let rip = []\r\n    let filteredGradeList = gradeList\r\n    useEffect(() => {\r\n        const w = ripenessLevel.findIndex(r => r.value === 'waste')\r\n        const sw = ripenessLevel.findIndex(r => r.value === 'semi_waste')\r\n        if (w === -1 && areaDestination === 'Waste') ripenessLevel.push({ label: \"Waste\", value: \"waste\" })\r\n        if (sw === -1 && areaDestination === 'Waste') ripenessLevel.push({ label: \"Semi Waste\", value: \"semi_waste\" })\r\n    }, [])\r\n    if (category !== 'Fruits') rip = ripenessLevel.filter(r => r?.value === 'waste' || r?.value === 'semi_waste')\r\n    if (category === 'Fruits') rip = ripenessLevel\r\n    if (areaMovement?.value === 8) filteredGradeList = gradeList?.filter(grade => grade.label === 'Waste' || grade.label === 'Semi Waste')\r\n\r\n    return (\r\n        <div className='d-flex w-100 we-m'>\r\n\r\n            <Decimal\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            <Input\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Quantity'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n            <Dropdown\r\n                // isDisabled={entryListIdx === 0 ? true : false}\r\n                isEmpty={item.gradeIsEmpty}\r\n                selectedValue={item?.grade}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={true}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'grade' })}\r\n                title='Grade'\r\n                placeholder='Select Grade'\r\n                options={filteredGradeList}\r\n                width='w-30'\r\n                className={areaDestination === 'Waste' ? null : 'd-none'}\r\n                showTitle={showTitle} />\r\n            <Dropdown\r\n                // isDisabled={entryListIdx === 0 ? true : false}\r\n                isEmpty={item.ripenessIsEmpty}\r\n                selectedValue={item?.ripeness}\r\n                grade={item.grade?.label}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={true}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'ripeness' })}\r\n                title='Ripeness'\r\n                placeholder='Select Ripeness'\r\n                options={rip}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={areaMovement?.value === 3 ? null : 'd-none'} />\r\n\r\n            <Dropdown\r\n                // isDisabled={entryListIdx === 0 ? true : false}\r\n                isEmpty={item.reasonIsEmpty}\r\n                selectedValue={item?.reason}\r\n                grade={item.grade?.label}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={true}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'reason' })}\r\n                title='Reason'\r\n                placeholder='Select Reason'\r\n                options={wasteReasonList}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={item.grade?.label === 'Semi Waste' || item.grade?.label === 'Waste' ? null : 'd-none'} />\r\n            <Note\r\n                isEmpty={item.noteIsEmpty}\r\n                grade={'Waste'}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                ripeness={ripeness}\r\n                inputWidth={`w-50 ${item.grade?.label === 'Semi Waste' || item.grade?.label === 'Waste' ? null : 'd-none'}`}\r\n                values={item?.note}\r\n                showTitle={showTitle}\r\n                title={'Note'}\r\n                onChange={(e) => onChange(e)} />\r\n            <InputImage\r\n                isEmpty={item.uploadPhotoIsEmpty}\r\n                uom={'PACK'}\r\n                inputWidth={`fit-content ${item.grade?.label === 'Semi Waste' || item.grade?.label === 'Waste' ? null : 'd-none'}`}\r\n                values={item.uploadPhoto}\r\n                onChange={(e) => onChange(e)}\r\n                showTitle={true}\r\n                title={'Add Photos'} />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default WeightEntry","import { saveImage } from 'apiServices'\r\nimport { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n\r\nexport const addRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    const grade = js.jobPost.list[activeSku].gradeList?.filter(grade => { return grade?.value === js.jobPost.list[activeSku].skuUuid })\r\n    const itemList = js.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    const lastSelected = itemList[itemList?.length - 1]\r\n    const gradeSelected = lastSelected ? lastSelected.grade : grade[0]\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.push({\r\n        grade: gradeSelected,\r\n        qty: '',\r\n        expiryDate: js.jobPost.list[activeSku].poList[poListIdx].expiryDate\r\n    })\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLine = async ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e\r\n}) => {\r\n    const name = e?.target?.name\r\n    let value = e?.target?.value\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n\r\n    if (name === 'upload') {\r\n        const image = await saveImage({ e, dispatch })\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].uploadPhoto = image\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].uploadPhotoIsEmpty = false\r\n        dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n        return\r\n    }\r\n\r\n    if (name === 'weight' || name === 'weightToCompare') {\r\n        // js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = parseInt(value)\r\n        let regex = /^[0-9\\.\\x0]+$/\r\n        console.clear()\r\n        if ((regex.test(value) === true && value !== \"\")) {\r\n            let newValue = 0;\r\n            let arr = value?.split('.')\r\n            let number = arr[0];\r\n            if (number >= 0) number = parseInt(number)\r\n            let commaNumber = arr[1];\r\n\r\n            if ((commaNumber !== null && commaNumber !== undefined)) {\r\n                if (commaNumber.length > 2) {\r\n                    //jika dibelakang koma ada lebih dari 2 angka\r\n                    var sliceNumber = commaNumber.slice(0, 2);\r\n                    newValue = `${number}.${sliceNumber}`\r\n                } else {\r\n                    newValue = `${number}.${commaNumber}`\r\n                }\r\n            } else {\r\n                newValue = parseInt(number)\r\n            }\r\n\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompareIsEmpty = false\r\n            }\r\n\r\n        }\r\n        else {\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = ''\r\n            }\r\n        }\r\n    }\r\n    else if (name === 'qty') {\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = value ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n    }\r\n\r\n    else if (name === 'note') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    const initialWeight = js.jobPost.list[activeSku].poList[poListIdx].inboundQty\r\n    let initialWeightUpdate = initialWeight\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        if (data.qty) js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        initialWeightUpdate = initialWeightUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = initialWeightUpdate\r\n        if (initialWeightUpdate < 0) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n            js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = 0\r\n        }\r\n        else {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList.filter(item => { return item.qtyIsEmpty = false })\r\n        }\r\n    })\r\n\r\n    //initial weight from it self\r\n    const initialWeightScreen = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n    let initialWeightScreenUpdate = initialWeightScreen\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        initialWeightScreenUpdate = initialWeightScreenUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = initialWeightScreenUpdate\r\n    })\r\n    //end of initial weight from it self\r\n\r\n    const over = totalListItemWeightCount({ moduleList: js.jobPost.list[activeSku].poList[poListIdx].itemList })\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightOver = over > initialWeight ? over : 0\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLineDropdown = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    selected,\r\n    name\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n    if (name === 'ripeness') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = selected\r\n        if (selected?.value === 'waste' || selected?.value === 'semi_waste') js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n        else js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = { label: '', value: '' }\r\n    }\r\n    if (name === 'grade') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].reason = { label: '', value: '' }\r\n    }\r\n    if (name === 'reason') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].reason = selected\r\n    }\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].gradeIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = ''\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].reasonIsEmpty = false\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const countQty = ({ dispatch, activeSku, moduleEntry, poListIdx, entryListIdx }) => {\r\n    let number = parseInt(0)\r\n    const list = moduleEntry.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    list.map((item, idx) => {\r\n        if (idx !== entryListIdx) number += Number.isInteger(item?.qty) ? item?.qty : parseFloat(item?.qty)\r\n    })\r\n\r\n    return number\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dateFull, isFloat } from 'services';\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport WeightEntry from \"Page/StockEntry/Movement/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry\";\r\nimport \"./index.scss\";\r\nimport {\r\n  addRow,\r\n  updateJSWeightLine,\r\n  updateJSWeightLineDropdown\r\n} from \"Page/StockEntry/Movement/WeightEntry/services\";\r\nimport { deleteRow, countQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst WeightEntryCard = ({\r\n  inputWidth,\r\n  activeSku,\r\n  poListIdx,\r\n  poItem,\r\n  moduleEntry,\r\n  moduleName,\r\n  gradeList\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    expiryDate,\r\n    inboundDate,\r\n    initialWeight,\r\n    inboundQty,\r\n    initialWeightUpdate,\r\n    initialWeightScreenUpdate,\r\n    poUuid,\r\n    skuUuid,\r\n    supplierId,\r\n    supplierName,\r\n    uom,\r\n    ripeness,\r\n    ripenessLevel,\r\n    edited,\r\n    wmsPoSkuCode,\r\n    category,\r\n    codeGrade,\r\n    isHidden\r\n  } = poItem;\r\n  const total = !isNaN(initialWeightUpdate) ? initialWeightUpdate : inboundQty;\r\n  const initialWeightTotal = !isNaN(initialWeightScreenUpdate) ? initialWeightScreenUpdate : initialWeight\r\n  const uomType = uom === \"kg\" || uom === \"gram\" ? \"Weight\" : \"Quantity\";\r\n  const grade = moduleEntry.jobPost.list[activeSku].gradeList.filter(grade => { return grade?.value === codeGrade })\r\n  const area = moduleEntry.jobPost.areaName\r\n  const areaDestination = moduleEntry.jobPost.areaDestinationName\r\n\r\n  return (\r\n    <div\r\n      // onKeyDown={e => e.keyCode === 13 ? addRow({dispatch, moduleEntry,moduleName, activeSku, poListIdx}) : false}\r\n      id={`sku_item_${activeSku}_${poListIdx}`}\r\n      tabIndex='0'\r\n      className={`${isHidden ? 'd-none' : null} z-0 d-flex flex-column sku-item justify-content-between w-100 mb-3 align-items-center border rounded border-soft-green ${edited ? \"soft-green\" : null\r\n        }`}\r\n    >\r\n      {/* Line 1 */}\r\n      <div className=\"w-100 border-soft-green mt-3 d-flex align-items-start px-3\">\r\n        <div className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex justify-content-between align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Inbound Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {inboundDate ? dateFull({ date: inboundDate }) : '-'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex align-items-center mb-3\">\r\n            {`Initial ${uomType}`}\r\n            <span className=\"ml-2 font-green\">\r\n              {` ${initialWeight} ${uom?.toUpperCase()}${initialWeight > 1 ? \"s\" : \"\"}`}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 2 */}\r\n\r\n      <div className=\"w-100 border-soft-green d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`PO Code`}\r\n              <span className=\"ml-2 font-green\">{` ${wmsPoSkuCode ? wmsPoSkuCode : '-'}`}</span>\r\n            </div>\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Supplier Name`}\r\n              <span className=\"ml-2 font-green\">{` ${supplierName}`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 3 */}\r\n      <div className=\"w-100 border-bottom border-soft-green mb-3 d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Expiry Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {expiryDate ? dateFull({ date: expiryDate, noTime: true }) : '-'}\r\n              </span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-3 ${area === 'Waste' || area === 'Semi Waste' ? null : 'd-none'}`}>\r\n              {`Grade`}\r\n              <span className=\"ml-2 font-green\">{` ${grade.length ? grade[0].label : '-'}`}</span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`Inbound Quantity`}\r\n              <span className=\"ml-2 font-green\">{` ${inboundQty ? inboundQty : '-'}`}</span>\r\n            </div>\r\n            {/* <div className={`d-flex align-items-center mb-3 mr-5 ${area === 'Waste' || area === 'Semi Waste' ? 'd-none' : (category === 'Fruits' || category === 'Vegetables' ? null : 'd-none')}`}>\r\n              {`Ripeness Level`}\r\n              <span className=\"ml-2 font-green\">{` ${ripenessLevel}`}</span>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex flex-column justify-content-between w-100 align-items-center px-3 z-0\">\r\n        {poItem.itemList?.map((item, entryListIdx) => {\r\n          return (\r\n            <div className=\"d-flex w-100 align-items-center justify-content-between\">\r\n              <div className=\"w-100 d-flex\">\r\n                <div style={{ width: '10px' }} className=\"input-height d-flex align-items-center mb-3 mr-3 pt-4 mt-2\">{`${entryListIdx + 1}.`}</div>\r\n                <div className=\"w-100\">\r\n                  <WeightEntry\r\n                    areaDestination={areaDestination}\r\n                    category={category}\r\n                    entryListIdx={entryListIdx}\r\n                    wmsPoSkuInfoId={item.wmsPoSkuInfoId}\r\n                    showTitle={true}\r\n                    gradeList={gradeList}\r\n                    onChange={(e) =>\r\n                      updateJSWeightLine({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        e,\r\n                      })\r\n                    }\r\n                    onChangeDropdown={({ selected, name }) =>\r\n                      updateJSWeightLineDropdown({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        selected,\r\n                        name,\r\n                      })\r\n                    }\r\n                    uom={uom}\r\n                    ripeness={ripeness}\r\n                    inputWidth={inputWidth}\r\n                    item={item}\r\n                    className={!ripeness ? \"d-none\" : null}\r\n                    poListIdx={poListIdx}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex w-25 align-items-center justify-content-end input-height mb-0 p-0\">\r\n                <img\r\n                  src={Trash}\r\n                  alt=\"delete icon\"\r\n                  className=\"w-1 cursor-pointer\"\r\n                  onClick={(e) =>\r\n                    deleteRow({\r\n                      dispatch,\r\n                      moduleEntry,\r\n                      moduleName,\r\n                      activeSku,\r\n                      poListIdx,\r\n                      entryListIdx,\r\n                      e,\r\n                      countQty\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        onKeyDown={e => e.keyCode === 13 ? addRow({ dispatch, moduleEntry, moduleName, activeSku, poListIdx }) : false}\r\n        // className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer ${total === 0 ? 'd-none' : null}`}\r\n        className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer `}\r\n        // tabIndex='0'\r\n        onClick={() => addRow({\r\n          dispatch, moduleEntry,\r\n          moduleName, activeSku, poListIdx\r\n        })}\r\n      >\r\n        <i className=\"green iconU-entryAdd pr-2\"></i>\r\n        {`Add ${uomType} (${isFloat(initialWeightTotal) ? isFloat(initialWeightTotal) : initialWeightTotal} ${uom ? uom.toUpperCase() : ''}${initialWeightTotal > 1 ? \"s\" : \"\"} left)`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WeightEntryCard;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport WeightEntryCard from 'Page/StockEntry/Movement/WeightEntry/WeightEntryList/WeightEntryCard'\r\nimport { removeEntryModule, saveJobSheet, updateEntries } from 'apiServices'\r\nimport { submitValidation } from 'Page/StockEntry/Movement/services'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\";\r\nimport PopUpRequired from \"Component/Modal/PopUpRequired\";\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport Sort from 'Component/Sort'\r\nimport { Prompt } from 'react-router'\r\nimport { useEntryDimention, useStockMovementEntry, useTargetMovement } from 'Page/StockEntry/GeneralServices'\r\nimport CustomTable from 'Component/CustomTable'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport { dateFull } from 'services'\r\n\r\nconst WeightEntryList = ({\r\n    setActiveSKU,\r\n    hideSKUList,\r\n    setHideSKUList,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    updateEntry,\r\n    setUpdateEntry\r\n}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const {\r\n        setIsSuccess,\r\n        confirmation,\r\n        setConfirmation,\r\n        discard,\r\n        setDiscard,\r\n        isSaved,\r\n        setIsSaved,\r\n        action,\r\n        setAction,\r\n        isRequired,\r\n        setIsRequired,\r\n        hideContent,\r\n        setHideContent,\r\n        isLoading,\r\n        skuName,\r\n        skuNumber,\r\n        poList,\r\n        gradeList,\r\n        unitOfMeassures,\r\n        totalWeight,\r\n        edited,\r\n        postInfo,\r\n        areaMovement,\r\n        status\r\n    } = useStockMovementEntry({ moduleEntry, activeSku })\r\n\r\n    const { showTargetRepack, table, slot, setSlot, slotList } = useTargetMovement({ moduleEntry, activeSku, dispatch, moduleName })\r\n    const { height, heightAdj, dimention, loading } = useEntryDimention(showTargetRepack)\r\n\r\n    //Condition\r\n    const isMobile = dimention <= 500\r\n    const isHidden = hideContent ? 'd-none' : null\r\n    const isPlural = totalWeight > 1 ? \"s\" : ''\r\n    const isEdited = edited ? 'bg-green' : 'bg-lineGrey'\r\n    const showTarget = showTargetRepack ? null : 'd-none'\r\n    const targetRepackHeight = isMobile ? 175 : 235\r\n\r\n    let slotListFilter = slotList\r\n    let hideResetOpt = false\r\n    if (slot?.length) {\r\n        if (slot[0]?.value === null) slotListFilter = []\r\n        if (slot[0]?.value) hideResetOpt = true\r\n    }\r\n\r\n    const customTableClass = isMobile ? (moduleName === 'stockMovement' ? 'target-movement-mobile' : 'target-repack-mobile') : (moduleName === 'stockMovement' ? 'target-movement' : 'target-repack')\r\n    if (!poList.length) return (\r\n        <div style={{ paddingLeft: isMobile ? 0 : 10 }} className='bg-white w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green ml-2'>\r\n            <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: heightAdj, maxHeight: heightAdj }}>\r\n                <img className=\"loading\" src={loading} alt=\"loading\" />\r\n            </div>\r\n        </div>\r\n    )\r\n    return (\r\n        <div style={{ paddingLeft: isMobile ? 0 : 10 }} className='w-100 h-100 mt-3 mt-md-0'>\r\n            {/* <Prompt\r\n                when={true}\r\n                message={location => {\r\n                    let pathname = location.pathname\r\n                    if (!allowPage.includes(pathname)) {\r\n                        setDiscard(true)\r\n                        return false\r\n                    }\r\n                }}\r\n            /> */}\r\n            <Discard\r\n                discard={discard}\r\n                module={'Inventory Entry - Stock Movement'}\r\n                moduleEntry={moduleEntry}\r\n                close={() => setDiscard(false)}\r\n                discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch })}\r\n            />\r\n            <PopUpSaved\r\n                updateEntry={updateEntry}\r\n                setUpdateEntry={setUpdateEntry}\r\n                status={status}\r\n                moduleEntry={moduleEntry}\r\n                submit={() => dispatch({ type: 'CREATE_JOB_SHEET', [`${moduleName}EntryData`]: null, [`${moduleName}SummaryData`]: null })}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSaved={isSaved}\r\n                action={action}\r\n                setIsSaved={setIsSaved}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <PopUpRequired\r\n                isRequired={isRequired}\r\n                module={moduleEntry}\r\n                setIsRequired={setIsRequired}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <Confirmation\r\n                noSkuChecking={true}\r\n                isLoading={isLoading}\r\n                moduleEntry={moduleEntry}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSuccess={postInfo}\r\n                setAction={setAction}\r\n                action={action}\r\n                save={() => saveJobSheet({ name: 'save', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n                submit={() => saveJobSheet({ name: 'submit', moduleEntry, moduleName, dispatch, setIsSuccess, submitValidation, setActiveSKU })}\r\n            />\r\n            <div className='rounded-bottom rounded-top mb-3'>\r\n                <div className={`target-repack mb-2 p-3 bg-white rounded border-top border-left border-right border-bottom rounded-top border-soft-green ${showTarget}`} style={{ maxHeight: 'fit-content', minHeight: targetRepackHeight, overflow: 'hidden' }}>\r\n                    <div className={`d-md-flex justify-content-between mb-3 align-items-center w-100`}>\r\n                        <div className='d-flex mb-md-0 mb-3'>\r\n                            <div className='LatoBold mr-3'>Target Movement Summary</div>\r\n                            <div className='mr-3 iconU-sideBarDot d-flex align-items-center m-0 p-0 text' />\r\n                            <div className='LatoBold font-green'>{dateFull({ date: new Date(), noTime: true, addDay: true, withDay: true })}</div>\r\n                        </div>\r\n                        <Dropdown\r\n                            hideResetOpt={hideResetOpt}\r\n                            className=\"basic-multi-select\"\r\n                            classNamePrefix=\"select\"\r\n                            isMulti={true}\r\n                            resetName='All Slot'\r\n                            options={slotListFilter}\r\n                            selectedValue={slot}\r\n                            onChangeDropdown={(selected) => setSlot(selected)}\r\n                            show={true}\r\n                            width={isMobile ? 'w-100' : 'w-md-25'}\r\n                            placeholder='Slot'\r\n                            title={'Slot'}\r\n                            style={{ marginRight: 0 }}\r\n                            noMarginBottom={true} />\r\n                    </div>\r\n                    <CustomTable\r\n                        editColumn={'false'}\r\n                        className={`${customTableClass} `}\r\n                        styles={{ color: 'red', textAlign: 'right', width: '100%', display: showTargetRepack ? false : 'none' }}\r\n                        data={table?.data}\r\n                        columns={table?.columns} />\r\n                </div>\r\n                <div style={{ height }} style={{ padding: 10 }} className='bg-white w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green'>\r\n                    <div className='d-flex w-100 m-0 p-0' onClick={() => isMobile ? setHideContent(!hideContent) : null}>\r\n                        <div className={`${hideSKUList ? 'iconU-sideBarHideRight' : 'iconU-sideBarHideLeft'} emptyTextField fontSizeTitle mr-3`} onClick={() => setHideSKUList(!hideSKUList)} />\r\n                        <div className='mr-3 pr-1 d-flex align-items-center m-0 p-0 LatoBold text'>Weight Entry</div>\r\n                        <div className='mr-3 iconU-sideBarDot d-flex align-items-center text' />\r\n                        <div className='mr-3 d-flex align-items-center font-green LatoBold'>{`${skuName} (${skuNumber})`}</div>\r\n                    </div>\r\n                    <Sort moduleEntry={moduleEntry} moduleName={moduleName} activeSku={activeSku} dispatch={dispatch} />\r\n                </div>\r\n                <div style={{ height: isMobile ? height : heightAdj, minHeight: isMobile ? height : heightAdj }} className={`w-100 bg-white overflow-y mr-0 border-left border-right border-soft-green pl-3 pr-2 pt-3 ${isHidden}`}>\r\n                    {\r\n                        poList?.map((poItem, idx) => {\r\n                            return <WeightEntryCard\r\n                                activeSku={activeSku}\r\n                                gradeList={gradeList}\r\n                                inputWidth='input-w-100'\r\n                                activeSku={activeSku}\r\n                                poListIdx={idx}\r\n                                poItem={poItem}\r\n                                moduleEntry={moduleEntry}\r\n                                moduleName={moduleName}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <div className='w-100 d-flex align-items-center p-3 border-left border-right border-bottom rounded-bottom LatoBold bg-white'>\r\n                    <button\r\n                        tabIndex='0'\r\n                        type=\"button\"\r\n                        className={`btn sku-item ${isEdited}  text-white px-5 mr-3 LatoBold`}\r\n                        onClick={() => edited ? setConfirmation({ show: true, name: 'save' }) : null}>\r\n                        Save\r\n                    </button>\r\n                    <div>Total Weight <span className='font-green'>{`${totalWeight} ${unitOfMeassures?.toUpperCase()}${isPlural}`}</span></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end\">\r\n                <div tabIndex='0' onClick={() => setDiscard(true)} className='red pr-3 sku-item fontSizeButton cursor-pointer'><i className='iconU-entryTrash'></i> Discard</div>\r\n                <button tabIndex='0' onClick={() => edited ? submitValidation({ setActiveSKU, moduleEntry, moduleName, dispatch, setConfirmation, setIsRequired, areaMovement }) : null} className={`btn sku-item px-5 py-2 text-white ${isEdited} LatoBold no-shadow`} style={{ height: \"fit-content !important\" }} >Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntryList","import React, { useEffect, useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getPoList } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport SelectedSKUList from 'Page/StockEntry/Movement/WeightEntry/SelectedSKUList'\r\nimport WeightEntryList from 'Page/StockEntry/Movement/WeightEntry/WeightEntryList'\r\n\r\nconst WeightEntry = () => {\r\n    const dispatch = useDispatch()\r\n    const stockMovementEntryData = useSelector(state => state.stockMovementEntryData)\r\n    const [hideSKUList, setHideSKUList] = useState(false)\r\n    const [activeSku, setActiveSKU] = useState(0)\r\n    const [updateEntry, setUpdateEntry] = useState()\r\n    let height = document.documentElement.clientHeight\r\n    let clientWidth = document.documentElement.clientWidth\r\n    let heightAdj = height - 150\r\n    const moduleName = 'stockMovement'\r\n\r\n    useEffect(_ => {\r\n        if (stockMovementEntryData?.jobPost.list.length > 0) getPoList({ dispatch, moduleName, moduleEntry: stockMovementEntryData, activeSku })\r\n    }, [activeSku])\r\n\r\n    if (!stockMovementEntryData || stockMovementEntryData?.jobPost.list.length === 0) {\r\n        return (\r\n            <div className='d-flex align-items-center justify-content-center text-center w-100 h-screen'><Redirect to='/inventory-entry/movement'>Please Select At Least 1 SKU</Redirect></div >)\r\n    }\r\n    return (\r\n        <div style={{ height: clientWidth <= 500 ? height : heightAdj }} className='w-100 d-md-flex justify-content-between scroll-y z-0'>\r\n            <SelectedSKUList\r\n                hideSKUList={hideSKUList}\r\n                activeSku={activeSku}\r\n                setActiveSKU={setActiveSKU}\r\n                moduleName={moduleName}\r\n                moduleEntry={stockMovementEntryData}\r\n                setUpdateEntry={setUpdateEntry}\r\n            />\r\n            <WeightEntryList\r\n                setActiveSKU={setActiveSKU}\r\n                setHideSKUList={setHideSKUList}\r\n                hideSKUList={hideSKUList}\r\n                moduleName={moduleName}\r\n                moduleEntry={stockMovementEntryData}\r\n                activeSku={activeSku}\r\n                setUpdateEntry={setUpdateEntry}\r\n                updateEntry={updateEntry}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntry","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom,\r\n    resetName,\r\n    isMulti,\r\n    hideResetOpt,\r\n    zInfinity\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? (styles) => {\r\n        return {\r\n            ...styles,\r\n            border: 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{ label: `-${resetName ? resetName : title}-`, value: null }]\r\n    if (options) defaultvalue = [...defaultvalue, ...options]\r\n    if (hideResetOpt) defaultvalue = defaultvalue.filter(val => val?.value)\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if (dimention <= 500) {\r\n        menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n        if (title === 'Categories') menuPlacement = 'top'\r\n    }\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                inputId={`${title}_${poListIdx}_${entryListIdx}`}\r\n                isMulti={isMulti}\r\n                isSearchable={dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : (selectedValue?.length ? selectedValue : false)}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={resetName ? resetName : placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={150}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: zInfinity ? 9999999999999999 : 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#a8b1be',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import { isInteger } from \"formik\";\r\n\r\nexport const next = ({\r\n  e,\r\n  state,\r\n  isCaptcha,\r\n  setIsValidated,\r\n  setIsType,\r\n  isType,\r\n}) => {\r\n  const key = e.key; // const {key} = event; ES6+\r\n  let type = [...isType];\r\n\r\n  let arr_tmp = [\"ArrowUp\", \"ArrowDown\", \"Tab\"];\r\n  if (arr_tmp.includes(key)) {\r\n    return 0;\r\n  } else if (key === \"Backspace\") {\r\n    let type_ = [...isType];\r\n    let state_ = type_[state];\r\n    if (state_ == \"\" && state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).value = \"\";\r\n      type_[state - 1] = \"\";\r\n      type[state - 1] = \"\";\r\n    }\r\n    console.log(type_);\r\n  } else if (key === \"ArrowLeft\") {\r\n    if (state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) - 1))\r\n        .setSelectionRange(-1, -1);\r\n\r\n      return 0;\r\n    }\r\n  } else if (key === \"ArrowRight\") {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) + 1))\r\n        .setSelectionRange(-1, -1);\r\n      return 0;\r\n    }\r\n  } else {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n    }\r\n  }\r\n\r\n  if (key === \"Backspace\") {\r\n    type[state] = \"\";\r\n  } else {\r\n    type[state] = key.toUpperCase();\r\n  }\r\n  let char = \"QWERTYUIOPLKJHGFDSAZXCVBNM1234567890\";\r\n  let allowedChar = char.split(\"\");\r\n  if (allowedChar.includes(key.toUpperCase()) || type[state] == \"\") {\r\n    document.getElementById(\"t\" + parseInt(state)).value = type[state];\r\n    setIsType(type);\r\n  } else {\r\n    return 0;\r\n  }\r\n\r\n  let stat = true;\r\n  isCaptcha.map((data, index) => {\r\n    if (index == 0) {\r\n      return;\r\n    }\r\n    if (!(type[index + 1] == isCaptcha[index])) {\r\n      stat = false;\r\n    }\r\n  });\r\n  setIsValidated(stat);\r\n};\r\n\r\nexport const skuListUpdateCheck = (module, noSkuChecking, moduleName) => {\r\n  if (module?.length) {\r\n    let newModule = [];\r\n    module.map((list) => {\r\n      list.poList.map((po) => {\r\n        po.itemList.map((item) => {\r\n          const { qty, grade } = item;\r\n          const _qty = isInteger(qty)\r\n            ? parseInt(qty)\r\n            : !qty\r\n              ? 0\r\n              : parseFloat(qty);\r\n          const _sku = noSkuChecking\r\n            ? list.skuName\r\n            : moduleName === \"waste\"\r\n              ? item.wasteType?.label\r\n                ? item.wasteType?.label\r\n                : list.skuName\r\n              : grade?.label;\r\n          const _toWaste =\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\" ||\r\n                item.wasteType?.label === \"Waste\"\r\n                ? true\r\n                : false\r\n              : grade?.label === \"Waste\" || grade?.label === \"Semi Waste\"\r\n                ? true\r\n                : false;\r\n          const _uom = noSkuChecking\r\n            ? list.unitOfMeassures\r\n            : grade?.uom === \"gram\"\r\n              ? \"kg\"\r\n              : grade?.uom;\r\n          let newSku = {\r\n            sku: _sku,\r\n            qty: _qty,\r\n            uom: _uom,\r\n            wqty: 0,\r\n            swqty: 0,\r\n          };\r\n          if (_toWaste) {\r\n            newSku.qty = 0;\r\n            newSku.sku = list.skuName;\r\n          }\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Waste\"\r\n              : grade?.label === \"Waste\"\r\n          )\r\n            newSku.wqty = _qty;\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\"\r\n              : grade?.label === \"Semi Waste\"\r\n          )\r\n            newSku.swqty = _qty;\r\n          const isExist = newModule.findIndex(\r\n            (sku) => sku?.sku === (_toWaste ? list.skuName : _sku)\r\n          );\r\n\r\n          if (moduleName !== \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (grade?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (grade?.label === \"Waste\") newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n\r\n          if (moduleName === \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (item.wasteType?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (item.wasteType?.label === \"Waste\")\r\n                newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n    const skuName = module.length ? module[0].skuName : \"No SKU\";\r\n    const i = newModule.findIndex((s) => s.sku === skuName);\r\n    newModule.forEach((sku) => {\r\n      if (i !== -1) {\r\n        if (sku.sku === \"Waste\") newModule[i].wqty = sku.qty;\r\n        if (sku.sku === \"Semi Waste\") newModule[i].swqty = sku.qty;\r\n      }\r\n    });\r\n    return newModule;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { next, skuListUpdateCheck } from \"./services.js\";\r\nimport { totalQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst ModalsConfirmation = ({ moduleEntry, confirmation, setConfirmation, save, submit, isSuccess, isLoading, moveAll, setAction, moduleName, noSkuChecking, singleViewData }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 300\r\n\r\n  let buttonName = 'Submit'\r\n\r\n  if (confirmation.name === 'save') buttonName = 'Save'\r\n  useEffect(() => {\r\n    if (isSuccess) setConfirmation({ show: false, name: null })\r\n  }, [isSuccess])\r\n  window.onkeydown = e => e.keyCode === 27 ? setConfirmation({ show: false, name: null }) : null\r\n\r\n  useEffect(() => {\r\n    setAction(confirmation.name)\r\n  }, [confirmation])\r\n\r\n  let module = singleViewData && !moveAll ? singleViewData : moduleEntry\r\n\r\n  const areaDestinationName = module?.jobPost?.areaDestinationName\r\n  const warehouseDestinationName = module?.jobPost?.warehouseDestinationName\r\n  const areaName = module?.jobPost?.areaName\r\n\r\n  const skuListUpdate = skuListUpdateCheck(module?.jobPost.list, noSkuChecking, moduleName)\r\n  return (\r\n    <CRow className={confirmation.show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={confirmation.show}\r\n          closeOnBackdrop={false}\r\n        >\r\n          <CModalHeader className=\"px-4 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation <span><i className=\"em em-pray\"></i></span></CModalTitle>\r\n            <label tabIndex='0' onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false} onClick={() => setConfirmation({ show: false, name: null })} className='sku-item iconU-modalClose' />\r\n\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-4 py-0\" style={{ minHeight: height }}>\r\n            <p className=\"text mb-2\">\r\n              <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n              <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n              <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n              <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n              <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${moduleName === 'stockTransfer' ? warehouseDestinationName : (areaDestinationName ? areaDestinationName : areaName)} `}</span>\r\n            </p>\r\n            <p className=\"text\">\r\n              Please double check this list, this record will store to database.\r\n            </p>\r\n            <div\r\n              style={{\r\n                minHeight: height,\r\n                maxHeight: height,\r\n                overflow: \"auto\",\r\n                border: \"1px solid var(--lineGrey)\",\r\n              }}\r\n            >\r\n              <table>\r\n                <thead>\r\n                  <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                    <th style={{ color: \"var(--emptyTextField)\" }}>SKU List</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Weight</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Semi Waste</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Waste</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {skuListUpdate?.map((data) => (\r\n                    <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                      <td style={{ maxWidth: '160px' }}>{data.sku}</td>\r\n                      <td className=\"text-right py-3\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.qty)}`}\r\n                      </td>\r\n                      <td className=\"text-right text-nowrap\" style={{ textAlign: \"right\" }}>\r\n                        <span className='text-nowrap'>{`${totalQty(data?.swqty)} `}</span>\r\n                      </td>\r\n                      <td className=\"text-right\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.wqty)}`}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"px-0 pb-5 pt-0 justify-content-start border-none\">\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false}\r\n                className=\"bg-background sku-item text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n                onClick={() => setConfirmation({ show: false, name: null })}\r\n              >\r\n                Cancel\r\n            </CButton>\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? (isLoading ? null : (confirmation.name === 'save' ? save() : submit())) : false}\r\n                className={`${isLoading ? 'bg-softGreen text' : 'bg-green text-white'} no-shadow px-5 mt-4 sku-item mb-0 ml-3 mr-0`}\r\n                onClick={() => isLoading ? null : (confirmation.name === 'save' ? save() : submit())}\r\n              >\r\n                {isLoading ? 'Processing...' : buttonName}\r\n              </CButton>{\" \"}\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst ModalsCaptcha = ({\r\n  show = false,\r\n  setIsShowModal,\r\n  submit,\r\n  submitText = \"Submit\",\r\n}) => {\r\n  //random text\r\n  var text = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  var text_split = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    let r = characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    text += r;\r\n    text_split.push(r);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const [isCaptcha, setIsCaptcha] = React.useState(text_split);\r\n  const [isCaptchaText, setIsCaptchaText] = React.useState(text);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n  const [isButtonSubmit, setIsButtonSubmit] = React.useState(\"Submit\");\r\n  const [isType, setIsType] = React.useState([]);\r\n\r\n  //reset if visible = false \r\n  useEffect(() => {\r\n    if (show === true) {\r\n      document.getElementById('t1').value = '';\r\n      document.getElementById('t2').value = '';\r\n      document.getElementById('t3').value = '';\r\n    }\r\n  }, [show]);\r\n\r\n  return (\r\n    <CRow className={show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          onClose={() => {\r\n            setIsShowModal(false);\r\n          }}\r\n          size=\"lg\"\r\n          style={{ height: \"400px\" }}\r\n        >\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">\r\n              Are you sure want to upload <span className=\"green\">Edited</span>{\" \"}\r\n              {selectorCsvFileName}?\r\n            </p>\r\n            <p className=\"text\">\r\n              Once uploaded this record will store to databases.\r\n            </p>\r\n            <p className=\"text mb-2\">\r\n              Please type ‘{isCaptchaText}’ on the Box to confirm upload file.\r\n            </p>\r\n\r\n            <div className=\"captcha-box\">\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 1,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t1\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[0]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 2,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t2\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input ml-0 mr-0\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[1]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 3,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t3\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[2]}\r\n              />\r\n            </div>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            <CButton\r\n              className=\"bg-background text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n              onClick={() => {\r\n                setIsShowModal(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </CButton>\r\n            <CButton\r\n              className={\r\n                (isValidated ? \"bg-green\" : \"bg-emptyTextField disabled\") +\r\n                \" no-shadow px-5 mt-4 mb-0 ml-3 mr-0\"\r\n              }\r\n              onClick={() => {\r\n                submit();\r\n                setIsValidated(false);\r\n              }}\r\n            >\r\n              {submitText}\r\n            </CButton>{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport { ModalsConfirmation, ModalsCaptcha };\r\n","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    return (\r\n        <CRow className={discard ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                             from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-5 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    name\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n\r\n    // const input = document.getElementById(`qty_${poListIdx}_${entryListIdx}`)\r\n    // if (isEmpty && input) input.focus()\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    ripeness,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title,\r\n    toCompare\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' || uom === 'KG' ? true : false\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`wgt_${poListIdx}_${entryListIdx}`} maxLength='12' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={toCompare ? 'weightToCompare' : 'weight'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","module.exports = __webpack_public_path__ + \"static/media/trash.121a7b10.png\";","import React from 'react'\r\nconst Note = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    isReadOnly,\r\n    poListIdx\r\n}) => {\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${grade === 'Waste' ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} border rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`note_${poListIdx}_${entryListIdx}`} readOnly={isReadOnly} autoComplete='off' className='w-100 plain-input' value={values} name='note' onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","export const submitAction = ({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) => {\r\n    if (confirmation.name === 'submit') {\r\n        if (moveAll) setLocalEntryData()\r\n        submit()\r\n        setIsSaved()\r\n\r\n    }\r\n    else {\r\n        setIsSaved()\r\n    }\r\n}\r\n\r\nexport const message = ({ moduleEntry, complete }) => {\r\n    if (moduleEntry?.jobPost) {\r\n        let message = null\r\n        const { areaDestinationName, areaName } = moduleEntry?.jobPost\r\n        if (areaDestinationName) message = ` ${areaName} reefer ${areaDestinationName} - `\r\n        else message = ` ${areaName} - `\r\n        return message\r\n    }\r\n}\r\n\r\nexport const handleFailed = ({ setIsSaved, setConfirmation, action, setLocalEntryData }) => {\r\n    setIsSaved()\r\n    setConfirmation({ show: false, name: action })\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { dateFull } from 'services'\r\nimport { submitAction, message, handleFailed } from './services'\r\n\r\nconst PopUpSaved = ({\r\n    isSaved,\r\n    moduleName,\r\n    totalSku,\r\n    setIsSaved,\r\n    confirmation,\r\n    setConfirmation,\r\n    submit,\r\n    action,\r\n    moduleEntry,\r\n    complete,\r\n    setLocalEntryData,\r\n    moveAll,\r\n    status,\r\n    updateEntry,\r\n    setUpdateEntry\r\n}) => {\r\n    const saved = {\r\n        success: {\r\n            header: confirmation.name === 'submit' ? 'Success ! ' : 'Saved !',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: `${confirmation.name === 'submit' ? 'Submitted' : 'Saved'} successfully`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        failed: {\r\n            header: `${confirmation.name === 'submit' ? 'Submit' : 'Save'} Failed`,\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            date: dateFull({}),\r\n            sku: '',\r\n            module: `Sorry `,\r\n            status: 'item not recorded.',\r\n            button: 'bg-red',\r\n            buttonText: 'Try Again'\r\n        },\r\n        updateSuccess: {\r\n            header: 'Updated',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: ` updated successfully.`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        updatedAlready: {\r\n            header: 'Already Updated',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: ` already updated`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        }\r\n    }\r\n    let data = isSaved ? saved.success : saved.failed\r\n    const [showErrorMessage, setShowErrorMessage] = useState(false)\r\n\r\n    let show = isSaved === true || isSaved === false ? true : false\r\n\r\n    if (updateEntry === true || updateEntry === false) {\r\n        data = updateEntry === true ? saved.updateSuccess : (updateEntry === false ? saved.updatedAlready : saved.success)\r\n        if (updateEntry) show = true\r\n        else if (updateEntry === false) show = true\r\n        else {\r\n            if (typeof (setUpdateEntry) === 'function') {\r\n                setUpdateEntry()\r\n                show = false\r\n            }\r\n        }\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_saved')\r\n    if (focus) focus.focus()\r\n\r\n    const arrowIcon = showErrorMessage ? 'iconU-arrowTop' : 'iconU-arrowBottom'\r\n    const opacity = isSaved ? 1 : (showErrorMessage ? 1 : 0)\r\n    const errorText = showErrorMessage ? 'Hide Message' : 'Show Message'\r\n\r\n    const reset = () => {\r\n        setIsSaved()\r\n        if (typeof (setUpdateEntry) === 'function') setUpdateEntry()\r\n    }\r\n    return (\r\n        <CRow onKeyDown={e => e.keyCode === 27 ? setIsSaved() : false} className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    className={`${isSaved ? null : 'popup-saved'}`}\r\n                    show={show}\r\n\r\n                    onClose={() => {\r\n                        if (isSaved) submitAction({ confirmation, setIsSaved, submit })\r\n                        if (!isSaved) setIsSaved()\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit }) : reset()} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${data.textColor} LatoBold mr-2 h5 mb-3`}>{data.header}</label> <span><i className={`${data.headerIcon}`}></i></span>\r\n                        <div className='mr-1 h5 mb-3'>{`Entries ${data.status}`}</div>\r\n                        <div className={updateEntry ? 'mb-3 h5' : 'd-none'}>Please continue your work.</div>\r\n                        <div onClick={() => setShowErrorMessage(!showErrorMessage)} className={`d-flex align-items-center mr-1 mb-3 error-message pointer ${isSaved || updateEntry === true || updateEntry === false ? 'd-none' : null}`}>\r\n                            <div className={`mr-2 ${arrowIcon}`} />\r\n                            <div className='green'>{errorText}</div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA', opacity: opacity }} className='w-100 border rounded px-3 pt-3 pb-3 mb-3'>\r\n                            <div className={`h5 mb-3 ${isSaved ? null : 'd-none'}`}>{data.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className={`mr-1 ${isSaved ? null : 'd-none'}`}>{`${message({ moduleEntry, complete })} ${data.sku}`}</label>\r\n                                <div className={`mr-1 ${isSaved || updateEntry ? 'd-none' : null}`}>\r\n                                    <div style={{ wordWrap: 'break-word !important', opacity: opacity, height: showErrorMessage ? false : 0 }} className={`mr-1 `}>\r\n                                        {`${status?.message?.toString() ? status?.message?.toString() : 'The transaction cannot be processed. Please update current entries'}`}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`mb-2 h5 ${confirmation.name === 'submit' || updateEntry ? 'd-none' : null}`}>Please continue your work</div>\r\n                        <div className='w-100 d-flex '>\r\n                            <CButton onClick={() => reset()} className={`text no-shadow px-5 mr-4 mb-3 ${`bg-softGreen ${isSaved ? 'd-none' : null}`}`}>\r\n                                Cancel\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => setUpdateEntry()} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button} ${updateEntry === true || updateEntry === false ? null : 'd-none'}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) : handleFailed({ setIsSaved, setConfirmation, action })} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button} ${updateEntry === true || updateEntry === false ? 'd-none' : null}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","module.exports = __webpack_public_path__ + \"static/media/refreshIcon.20a8ff95.svg\";","module.exports = __webpack_public_path__ + \"static/media/asc.9b60817e.svg\";","module.exports = __webpack_public_path__ + \"static/media/desc.bec03077.svg\";","import React, {useEffect,useState,useRef } from 'react'\r\nimport {Calendar,DateRangePicker } from 'react-date-range'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport './index.scss'\r\nimport {setDates} from './services'\r\n\r\nfunction useOutside({wrapperRef,showDate,setShowDate,selectDate}) {\r\n  useEffect(() => {\r\n      /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n      function handleClickOutside(event) {\r\n          if (showDate && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n              setShowDate(!showDate)\r\n              selectDate()\r\n          }\r\n      }\r\n\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n          // Unbind the event listener on clean up\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n  }, [wrapperRef,showDate]);\r\n}\r\n\r\nconst SKUDatePicker = ({ showDate, selectDate, setShowDate }) => {\r\n  let dimention = document.documentElement.clientWidth\r\n  dimention = dimention - 1555\r\n  const [dateRange, setDateRange] = useState({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n  const [date,setDate] = useState(new Date())\r\n  const [mode, setMode] = useState()\r\n\r\n  const singleDate = mode ? 'text' : 'bg-green text-white'\r\n  const multipleDate = mode ? 'bg-green text-white' : 'text'\r\n\r\n  const wrapperRef = useRef(null);\r\n  useOutside({wrapperRef,showDate,setShowDate,selectDate});\r\n\r\n  useEffect(() => {\r\n    setDateRange({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n    setDate(new Date())\r\n  },[mode])\r\n\r\n  const setDateValue = () => {\r\n    if(showDate){\r\n      mode ? selectDate(dateRange) : selectDate(date)\r\n      setShowDate()\r\n    } \r\n  }\r\n\r\n  return (\r\n    <div ref={wrapperRef} style={{ width: '350px' }} className={` mt-5 position-fixed bg-white border border-soft-green rounded z-100 d-flex flex-column justify-content-center ${showDate ? null : 'd-none'}`}>\r\n      <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <div className=' border border-soft-green d-flex rounded justify-content-between w-100 cursor-pointer'>\r\n        <span onClick={() => setMode(!mode)} className={` ${singleDate} w-50  ${mode ? 'rounded-left' : 'rounded'} text-center p-2`}>Single Date</span>\r\n        <span onClick={() => setMode(!mode)} className={` ${multipleDate} w-50 ${!mode ? 'rounded-right' : 'rounded'} text-center p-2`}>Ranged Date</span>\r\n        </div>\r\n      </div>\r\n    <DateRangePicker\r\n      className={mode ? null : 'd-none'}\r\n      ranges={[dateRange]}\r\n      onChange={newdate => setDates({newdate,dateRange,setDateRange})}\r\n      />\r\n    <Calendar\r\n    className={mode ? 'd-none' : null}\r\n      date={date}\r\n      onChange = {dt => setDate(dt)}\r\n    />\r\n    <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <span onClick={() => setDateValue()} className={` bg-green text-white w-100 border border-soft-green rounded text-center p-2`}>Confirm</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SKUDatePicker","export const setDates = ({newdate, dateRange,setDateRange}) => {\r\n    let dt = {...dateRange}\r\n    dt.startDate = newdate.selection.startDate\r\n    dt.endDate = newdate.selection.endDate\r\n    setDateRange(dt)\r\n  }","import React, { useState, useEffect } from 'react'\r\nimport { sortByInboundDate, filterByDate, dateDMY } from 'services'\r\nimport DatePicker from 'Component/DatePickerNew'\r\nimport asc from 'assets/icons/asc.svg'\r\nimport desc from 'assets/icons/desc.svg'\r\n\r\nconst Sort = ({ moduleEntry, moduleName, activeSku, dispatch }) => {\r\n    const [sortBy, setSortBy] = useState()\r\n    const [date, setDate] = useState()\r\n    const [showDate, setShowDate] = useState()\r\n    const [resetFilter, setResetFilter] = useState()\r\n    let dateShow;\r\n    const dimention = document.documentElement.clientWidth\r\n    dateShow = dateDMY({ date, datePicker: true })\r\n    if (dateShow?.startDate) dateShow = `${dateShow.startDate} - ${dateShow.endDate}`\r\n\r\n    useEffect(() => {\r\n        sortByInboundDate({ moduleEntry, moduleName, activeSku, dispatch, sortBy })\r\n    }, [sortBy, activeSku])\r\n\r\n    useEffect(_ => {\r\n        if (!showDate) filterByDate({ moduleEntry, moduleName, activeSku, dispatch, date })\r\n    }, [date, showDate, activeSku])\r\n\r\n    useEffect(_ => {\r\n        setSortBy()\r\n        setDate()\r\n    }, [resetFilter, activeSku])\r\n    return (\r\n        <div className='w-25 d-flex justify-content-end'>\r\n            {/* <div className='iconU-modalClose red border-soft-green border emptyTextField rounded px-2 pt-2 mr-3 cursor-pointer' onClick={() => setResetFilter(d => !d)} /> */}\r\n            <div style={{ height: 40 }} className={`${moduleName === 'repack' ? 'd-none' : null} border-soft-green border-top border-bottom border-left m-0 rounded-left green h6 d-flex align-items-center justify-content-center px-2 text-nowrap ${dimention > 500 ? (date ? null : 'd-none') : 'd-none'}`}>{dateShow}</div>\r\n            <div style={{ height: 40, minWidth: 40 }}\r\n                className={`${date ? 'iconU-modalClose red' : 'iconU-filterDate emptyTextField'} border-soft-green border ${date ? 'rounded-right' : 'rounded'} ${moduleName === 'repack' ? 'd-none' : null} d-flex align-items-center justify-content-center mr-3 cursor-pointer`}\r\n                onClick={() => date ? setResetFilter(d => !d) : setShowDate(d => !d)} />\r\n            <DatePicker showDate={showDate} selectDate={(date) => setDate(date)} setShowDate={(d) => setShowDate(d)} />\r\n            <img style={{ height: 40, minWidth: 40 }} src={sortBy ? desc : asc} onClick={() => setSortBy(!sortBy)} className='p-2 border rounded border-soft-green cursor-pointer' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sort","import ReactTable from 'react-table-v6'\r\nimport 'react-table-v6/react-table.css'\r\nimport './CustomTable.scss'\r\nimport React from 'react'\r\n\r\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\r\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\r\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\r\n\r\nclass CustomTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            activeTab: '1',\r\n            editColumnTemp: {},\r\n        }\r\n    }\r\n\r\n    getColumnWidth = (rows, accessor, headerText) => {\r\n        const cellLength = Math.max(\r\n            ...rows.map(row => {\r\n                let value = '';\r\n                value = accessor(row);\r\n                if (typeof value === 'number') return value.toString().length;\r\n                return (value || '').length;\r\n            }),\r\n            headerText.length\r\n        );\r\n        return cellLength * 12\r\n    }\r\n\r\n    headerIcon = (data, header, editColumn) => {\r\n        let listHeader = []\r\n        header && header.map((h, index) => {\r\n            if (!editColumn[index]) {\r\n                let withIcon = (<span>\r\n                    {h.Header} <i className=\"iconU-sort\"> </i>\r\n                </span>\r\n                )\r\n                let obj = {\r\n                    Header: withIcon,\r\n                    Cell: h.Cell,\r\n                    accessor: h.accessor,\r\n                    sortable: h.sortable === false ? false : true,\r\n                    resizable: h.resizable || false,\r\n                    className: h.className || null,\r\n                    headerClassName: h.headerClassName || null,\r\n                    style: h.style || null,\r\n                    width: h.width || null,\r\n                }\r\n                return listHeader = [...listHeader, obj]\r\n            } else {\r\n                return listHeader = [...listHeader]\r\n            }\r\n        })\r\n\r\n        if (this.props.editColumn !== 'false') {\r\n            let editBtn = (\r\n                <i className='iconU-tableEdit pencilTable' />\r\n            )\r\n            let obj = {\r\n                Header: editBtn,\r\n                accessor: 'editBtn',\r\n                width: 50,\r\n                style: { textAlign: 'center' },\r\n            };\r\n            listHeader = [...listHeader, obj];\r\n        }\r\n\r\n        return listHeader;\r\n    };\r\n\r\n    render() {\r\n        const { editColumnTemp } = this.state\r\n        let { columns, data, onClick, styles, tableStatus, className } = this.props\r\n        let headerIcon = this.headerIcon(data, columns, editColumnTemp);\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <ReactTableFixedColumns\r\n                    className={className}\r\n                    columns={headerIcon}\r\n                    data={data}\r\n                    showPagination={false}\r\n                    style={styles}\r\n                    noDataText={tableStatus == \"noData\" ? 'Please Wait' : 'No  Data Found'}\r\n                    minRows='0'\r\n                    resizable={false}\r\n                    getTdProps={(state, rowInfo, column, instance) => {\r\n                        return {\r\n                            onClick: (e, handleOriginal) => {\r\n                                !!onClick &&\r\n                                    onClick(rowInfo.original, state, column, e, instance);\r\n                            },\r\n                            style: {\r\n                                height: \"3rem\",\r\n                                cursor: !!onClick && 'pointer',\r\n                                textAlign: isNaN(rowInfo?.original[column.id])\r\n                                    ? 'left'\r\n                                    : 'right',\r\n                            },\r\n                        };\r\n                    }}\r\n                    defaultPageSize={50}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CustomTable","import React, { useEffect, useState } from 'react'\r\n\r\nconst InputImage = ({\r\n    isEmpty,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title\r\n}) => {\r\n    const [hover, setHover] = useState()\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n\r\n    return (\r\n        <div name='upload' className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`} onClick={() => hover && values ? onChange() : null}>\r\n            <div className={` pb-1 LatoBold text-nowrap ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div\r\n                onMouseLeave={() => setHover()}\r\n                onMouseEnter={() => setHover(true)}\r\n                style={{\r\n                    backgroundImage: `url(${values})`,\r\n                    backgroundSize: 'cover',\r\n                    opacity: 0.7,\r\n                    width: values ? 42 : false\r\n                }}\r\n                id='input-img'\r\n                className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green bg-white d-flex w-fit-content px-2 justify-content-center align-items-center input-height d-flex mr-3`}\r\n            >\r\n                {\r\n                    values && hover ?\r\n                        <div className=\"hand-cursor\" style={{ margin: 0 }}>\r\n                            <span style={{ fontSize: values ? 25 : false }} className={`photo_text hidden-xs ${values ? (hover ? 'iconU-entryTrash css-2613qy-menu' : null) : \" iconU-entryPhotos\"}`} />\r\n                        </div>\r\n                        :\r\n                        <label className=\"hand-cursor\" style={{ margin: 0 }}>\r\n                            <input name='upload' type=\"file\" nv-file-select uploader=\"$ctrl.uploader\" accept=\"image/x-png,image/gif,image/jpeg\" onChange={(e) => onChange(e)} />\r\n                            <span className=\"fa fa-camera\" />\r\n                            <span style={{ fontSize: values ? 25 : false }} className={`photo_text hidden-xs ${values ? (hover ? 'iconU-entryTrash css-2613qy-menu' : null) : \" iconU-entryPhotos\"}`} />\r\n                        </label>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputImage","export let defaults = {\r\n    header: 'Complete All !',\r\n    headerIcon: 'em em-anger',\r\n    textColor: 'red',\r\n    date: 'You are  required to update all entries on the list.',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Check several entries left.',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const threshold = {\r\n    header: 'Please double check!',\r\n    headerIcon: 'em em-pray',\r\n    textColor: 'red',\r\n    date: 'Some entries are less -20% or exceed 50% the excess percentage.',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again. If you’re sure enough, click Submit anyway.',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const initialWeight = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'Add Weight should not exceed Initial Weight',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}","import React, { useState } from \"react\";\r\nimport { isLessThanInitWeight } from 'services'\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n    CModalFooter\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { threshold, initialWeight, defaults } from './services'\r\nimport Dropdown from 'Component/Dropdown'\r\n\r\nconst selectEmptyExceed = ({ setIsRequired, traceEmptyRow, data, invalidThreshold, setInvalidThreshold }) => {\r\n    if (invalidThreshold) setInvalidThreshold(false)\r\n    setIsRequired(false)\r\n    if (typeof (traceEmptyRow) === 'function') traceEmptyRow(data)\r\n}\r\n\r\nconst PopUpRequired = ({ isRequired, setIsRequired, moduleName, module, totalSku, invalidThreshold, setInvalidThreshold, submit, totalEmptyThreshold, traceEmptyRow }) => {\r\n    let saved = defaults;\r\n    let isTrue\r\n\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 400\r\n\r\n    if ((!isRequired && invalidThreshold) || (isRequired && invalidThreshold)) {\r\n        saved = threshold\r\n    }\r\n\r\n    if (moduleName !== 'stockTake') {\r\n        isTrue = isLessThanInitWeight(module)\r\n        if (isTrue) saved = initialWeight\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_required')\r\n    if (focus) focus.focus()\r\n\r\n    //repacking state for filter\r\n    const [filter, setFilter] = useState({ value: 0, label: 'All Exceed' })\r\n    return (\r\n        <CRow className={isRequired || invalidThreshold ? null : 'd-none'}>\r\n            <CCol className='required'>\r\n                <CModal\r\n                    show={isRequired || invalidThreshold}\r\n                    onClose={() => {\r\n                        setIsRequired(false)\r\n                        if (invalidThreshold) setInvalidThreshold(false)\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <div className='d-flex align-items-center mb-5'>\r\n                            <label className={`${saved?.textColor} LatoBold mr-2 h5`}>{saved?.header}</label> <span><i className={`${saved?.headerIcon}`}></i></span>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100 border rounded px-3 pt-4 pb-3 mb-4'>\r\n                            <div className={`h5 mb-3 ${isRequired || invalidThreshold ? null : 'd-none'}`}>{saved?.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className='mr-1 h5'>{`${saved?.status}`}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className='border-all w-100' style={{ maxHeight: height, minHeight: height, overflow: 'scroll', display: totalEmptyThreshold?.length && moduleName === 'repack' ? null : 'none' }}>\r\n                            <table>\r\n                                <tr className='emptyTextField' style={{ borderBottom: '1px solid #e4e4e4' }}>\r\n                                    <th className='w-50'>SKU List</th>\r\n                                    <td className='w-50' style={{ textAlign: 'right' }}>\r\n                                        <Dropdown\r\n                                            noMarginBottom={true}\r\n                                            zInfinity={true}\r\n                                            show={true}\r\n                                            showTitle={false}\r\n                                            options={[{ value: 1, label: 'Over -20%' }, { value: 2, label: 'Over 50%' }]}\r\n                                            onChangeDropdown={(selected) => setFilter(selected)}\r\n                                            title='All Exceed'\r\n                                            placeholder='Exceed'\r\n                                            moduleName={moduleName}\r\n                                            width='w-100'\r\n                                            selectedValue={filter}\r\n                                        /></td>\r\n                                </tr>\r\n\r\n                                <tbody>\r\n                                    {\r\n                                        totalEmptyThreshold?.filter(item => {\r\n                                            const { value } = filter\r\n                                            if (value === 1) return item.excess < -20\r\n                                            if (value === 2) return item.excess > 50\r\n                                            else return item\r\n                                        })?.map(data => (\r\n                                            <tr onClick={() => selectEmptyExceed({ setIsRequired, traceEmptyRow, data, invalidThreshold, setInvalidThreshold })} style={{ borderBottom: '1px solid #e4e4e4' }} className='cursor-pointer excess-row'>\r\n                                                <td>{data.skuName}</td>\r\n                                                <td style={{ textAlign: 'right' }} className='red'>{`${data.excess} %`}<span className='iconU-arrowRightAfter text' /></td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </CModalBody>\r\n                    <CModalFooter className={`px-5 pb-5 pt-0 w-100 ${invalidThreshold ? 'justify-content-between' : 'justify-content-start'}  border-none d-flex mt-2`}>\r\n                        <div>\r\n                            {/* <CButton onClick={() => {\r\n                                setIsRequired(false)\r\n                                if (invalidThreshold) setInvalidThreshold(false)\r\n                            }} className={`text no-shadow ${`bg-softGreen ${isRequired ? 'd-none' : null}`}`}>\r\n                                Cancel\r\n                        </CButton> */}\r\n                            <CButton\r\n                                id={'btn_is_required'}\r\n                                tabIndex='0'\r\n                                onClick={() => {\r\n                                    setIsRequired(false)\r\n                                    if (invalidThreshold) setInvalidThreshold(false)\r\n                                }} className={`text-white no-shadow ${saved?.button}`}>\r\n                                {saved?.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                        <div>\r\n                            <CButton\r\n                                style={{ backgroundColor: '#F5F7FA' }}\r\n                                id={'btn_is_required'}\r\n                                tabIndex='0'\r\n                                onClick={() => {\r\n                                    setIsRequired(false)\r\n                                    if (invalidThreshold) setInvalidThreshold(false)\r\n                                    if (typeof (submit) === 'function') submit()\r\n                                }} className={`text LatoBold no-shadow ${invalidThreshold ? null : 'd-none'} `}>\r\n                                Submit anyway\r\n                        </CButton>\r\n                        </div>\r\n\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n\r\n    );\r\n};\r\n\r\nexport default PopUpRequired;\r\n","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { getPoBySkuId, removeEntryModule } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { filterBySkuName, totalListItemWeightCount, checkIsSkuRequired } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    areaIdDesposition }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    let targetMovements = []\r\n\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                targetMovements = data?.targetMovements\r\n                const addPoItem = data?.poItems?.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.targetMovements = data?.targetMovements\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaIdDesposition?.value),\r\n            areaDestinationName: areaIdDesposition?.label,\r\n            list: newJs.sort(function (a, b) { return filterBySkuName(a, b) }).sort(function (a, b) { return filterBySkuName(a, b) })\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    if (newJs.length > 0) dispatch({ type: CREATE_JOB_SHEET, targetMovements })\r\n    setLocalEntryData(jobSheet)\r\n    // dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    let targetMovements = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                targetMovements = data?.targetMovements\r\n                const addPoItem = data?.poItems.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.targetMovements = data?.targetMovements\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                list.isNewItem = true\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const setAreaIdDesposition = ({ dispatch, selected }) => {\r\n    if (selected) dispatch({ type: SET_AREA, areaIdDesposition: selected })\r\n}\r\n\r\nexport const selectArea = ({ selected, area, setAreaId, setAreaIdDesposition, setAreaMovement, dispatch }) => {\r\n    const value = selected?.value\r\n    let source;\r\n    let destination;\r\n\r\n    switch (value) {\r\n        case 1:\r\n            source = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Production')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 2:\r\n            source = area.filter(ar => ar?.label == 'Production')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 3:\r\n            source = area.filter(ar => ar?.label == 'Staging')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 4:\r\n            source = area.filter(ar => ar?.label == 'Staging')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Quarantine')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 5:\r\n            source = area.filter(ar => ar?.label == 'Quarantine')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Staging')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 6:\r\n            source = area.filter(ar => ar?.label == 'Staging')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Waste')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 7:\r\n            source = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Staging')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 8:\r\n            source = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Waste')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 0:\r\n            source = null\r\n            destination = null\r\n            break\r\n    }\r\n    // setAreaId(source)\r\n    // setAreaIdDesposition(destination)\r\n    // setAreaMovement(selected)\r\n    dispatch({ type: CREATE_JOB_SHEET, areaId: source, areaIdDesposition: destination, areaMovement: selected })\r\n}\r\n\r\n\r\n\r\n\r\n//remove sku\r\nexport const removeSku = async ({ dispatch, moduleEntry, moduleName }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n    const list = moduleEntry.jobPost.list.filter(data => { if (data.checked) return data })\r\n    jobSheet.jobPost.list = list\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n    if (list.length === 0) removeEntryModule({ id: jobSheet.jobPost.id, moduleName, dispatch })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired, areaMovement }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            po.itemList.map(item => {\r\n                const { qty, grade, ripeness, note, reason } = item\r\n                // if (po.uom === 'kg') {\r\n                if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                    item.qtyIsEmpty = false\r\n                    item.gradeIsEmpty = false\r\n                    item.ripenessIsEmpty = false\r\n                    item.noteIsEmpty = false\r\n                    item.reasonIsEmpty = false\r\n                }\r\n                else {\r\n                    if (item?.grade?.label === 'Waste' && areaMovement?.value !== 8) {\r\n                        !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        !reason?.value ? item.reasonIsEmpty = true : item.reasonIsEmpty = false\r\n                    }\r\n                    if (areaMovement?.value === 8) {\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        if (item?.grade?.label === 'Waste') {\r\n                            !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                            !reason?.value ? item.reasonIsEmpty = true : item.reasonIsEmpty = false\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                    }\r\n                }\r\n                isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                // if(!item.qtyIsEmpty) po.initialWeightOver > po.initialWeight ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty || item?.reasonIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}\r\n\r\nexport const moveAllStockMovement = ({ localEntryData, setLocalEntryData }) => {\r\n    if (localEntryData) {\r\n        let data = Object.assign({}, JSON.parse(JSON.stringify(localEntryData)))\r\n        const updateData = data?.jobPost?.list?.map(ls => {\r\n            ls.poList.map(po => {\r\n                po.itemList = [{ qty: po.initialWeight, expiryDate: po.expiryDate }]\r\n                return po\r\n            })\r\n            return ls\r\n        })\r\n        data.jobPost.list = updateData\r\n        setLocalEntryData(data)\r\n    }\r\n}"],"sourceRoot":""}