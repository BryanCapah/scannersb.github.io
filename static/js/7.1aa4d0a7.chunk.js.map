{"version":3,"sources":["Component/Dropdown/index.jsx","Component/Modal/ModalConfirmation/services.js","Component/Modal/ModalConfirmation/index.jsx","Component/Modal/PopUpDiscard/index.jsx","Component/Input/decimal.jsx","assets/icons/trash.png","Component/Modal/PopUpSaved/services.js","Component/Modal/PopUpSaved/index.jsx","Component/Modal/PopUpRequired/services.js","Component/Modal/PopUpRequired/index.jsx"],"names":["Dropdown","isEmpty","title","placeholder","options","selectedValue","showTitle","width","className","entryListIdx","onChangeDropdown","show","poListIdx","isDisabled","style","noMarginBottom","resetName","isMulti","hideResetOpt","zInfinity","useState","isOpen","setIsOpen","useEffect","isEmptyStyle","styles","border","elem","document","getElementById","position","getBoundingClientRect","dimention","documentElement","clientWidth","defaultvalue","label","value","filter","val","menuPlacement","bottom","inputId","isSearchable","id","length","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","onChange","selected","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","color","cursor","fontWeight","theme","borderRadius","next","e","state","isCaptcha","setIsValidated","setIsType","isType","key","type","includes","type_","parseInt","focus","console","log","setSelectionRange","toUpperCase","split","stat","map","data","index","ModalsConfirmation","moduleEntry","confirmation","setConfirmation","save","submit","isSuccess","isLoading","moveAll","setAction","moduleName","noSkuChecking","singleViewData","height","clientHeight","buttonName","name","window","onkeydown","keyCode","module","areaDestinationName","jobPost","warehouseDestinationName","areaName","skuListUpdate","newModule","list","poList","po","itemList","item","qty","grade","_qty","isInteger","parseFloat","_sku","skuName","wasteType","_toWaste","_uom","unitOfMeassures","uom","newSku","sku","wqty","swqty","isExist","findIndex","push","i","s","forEach","skuListUpdateCheck","closeOnBackdrop","tabIndex","onKeyDown","onClick","minHeight","maxHeight","overflow","borderBottom","textAlign","maxWidth","totalQty","ModalsCaptcha","setIsShowModal","submitText","text","characters","charactersLength","text_split","r","charAt","Math","floor","random","useDispatch","selectorCsvFileName","useSelector","csvFileName","React","isCaptchaText","isValidated","onClose","size","autocomplete","onKeyUp","textTransform","maxLength","PopUpDiscard","discard","close","discardEntry","Input","wmsPoSkuInfoId","inputWidth","ripeness","values","toCompare","autoComplete","exports","submitAction","setIsSaved","setLocalEntryData","PopUpSaved","isSaved","totalSku","action","complete","status","updateEntry","setUpdateEntry","saved","success","header","headerIcon","textColor","date","dateFull","button","buttonText","failed","updateSuccess","updatedAlready","showErrorMessage","setShowErrorMessage","arrowIcon","opacity","errorText","reset","bodyOpenClassName","message","wordWrap","toString","handleFailed","defaults","threshold","initialWeight","PopUpRequired","isRequired","setIsRequired","invalidThreshold","setInvalidThreshold","totalEmptyThreshold","traceEmptyRow","isLessThanInitWeight","setFilter","display","excess","selectEmptyExceed"],"mappings":"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","file":"static/js/7.1aa4d0a7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom,\r\n    resetName,\r\n    isMulti,\r\n    hideResetOpt,\r\n    zInfinity\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? (styles) => {\r\n        return {\r\n            ...styles,\r\n            border: 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{ label: `-${resetName ? resetName : title}-`, value: null }]\r\n    if (options) defaultvalue = [...defaultvalue, ...options]\r\n    if (hideResetOpt) defaultvalue = defaultvalue.filter(val => val?.value)\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if (dimention <= 500) {\r\n        menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n        if (title === 'Categories') menuPlacement = 'top'\r\n    }\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                inputId={`${title}_${poListIdx}_${entryListIdx}`}\r\n                isMulti={isMulti}\r\n                isSearchable={dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : (selectedValue?.length ? selectedValue : false)}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={resetName ? resetName : placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={150}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: zInfinity ? 9999999999999999 : 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#969696',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import { isInteger } from \"formik\";\r\n\r\nexport const next = ({\r\n  e,\r\n  state,\r\n  isCaptcha,\r\n  setIsValidated,\r\n  setIsType,\r\n  isType,\r\n}) => {\r\n  const key = e.key; // const {key} = event; ES6+\r\n  let type = [...isType];\r\n\r\n  let arr_tmp = [\"ArrowUp\", \"ArrowDown\", \"Tab\"];\r\n  if (arr_tmp.includes(key)) {\r\n    return 0;\r\n  } else if (key === \"Backspace\") {\r\n    let type_ = [...isType];\r\n    let state_ = type_[state];\r\n    if (state_ == \"\" && state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).value = \"\";\r\n      type_[state - 1] = \"\";\r\n      type[state - 1] = \"\";\r\n    }\r\n    console.log(type_);\r\n  } else if (key === \"ArrowLeft\") {\r\n    if (state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) - 1))\r\n        .setSelectionRange(-1, -1);\r\n\r\n      return 0;\r\n    }\r\n  } else if (key === \"ArrowRight\") {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) + 1))\r\n        .setSelectionRange(-1, -1);\r\n      return 0;\r\n    }\r\n  } else {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n    }\r\n  }\r\n\r\n  if (key === \"Backspace\") {\r\n    type[state] = \"\";\r\n  } else {\r\n    type[state] = key.toUpperCase();\r\n  }\r\n  let char = \"QWERTYUIOPLKJHGFDSAZXCVBNM1234567890\";\r\n  let allowedChar = char.split(\"\");\r\n  if (allowedChar.includes(key.toUpperCase()) || type[state] == \"\") {\r\n    document.getElementById(\"t\" + parseInt(state)).value = type[state];\r\n    setIsType(type);\r\n  } else {\r\n    return 0;\r\n  }\r\n\r\n  let stat = true;\r\n  isCaptcha.map((data, index) => {\r\n    if (index == 0) {\r\n      return;\r\n    }\r\n    if (!(type[index + 1] == isCaptcha[index])) {\r\n      stat = false;\r\n    }\r\n  });\r\n  setIsValidated(stat);\r\n};\r\n\r\nexport const skuListUpdateCheck = (module, noSkuChecking, moduleName) => {\r\n  if (module?.length) {\r\n    let newModule = [];\r\n    module.map((list) => {\r\n      list.poList.map((po) => {\r\n        po.itemList.map((item) => {\r\n          const { qty, grade } = item;\r\n          const _qty = isInteger(qty)\r\n            ? parseInt(qty)\r\n            : !qty\r\n              ? 0\r\n              : parseFloat(qty);\r\n          const _sku = noSkuChecking\r\n            ? list.skuName\r\n            : moduleName === \"waste\"\r\n              ? item.wasteType?.label\r\n                ? item.wasteType?.label\r\n                : list.skuName\r\n              : grade?.label;\r\n          const _toWaste =\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\" ||\r\n                item.wasteType?.label === \"Waste\"\r\n                ? true\r\n                : false\r\n              : grade?.label === \"Waste\" || grade?.label === \"Semi Waste\"\r\n                ? true\r\n                : false;\r\n          const _uom = noSkuChecking\r\n            ? list.unitOfMeassures\r\n            : grade?.uom === \"gram\"\r\n              ? \"kg\"\r\n              : grade?.uom;\r\n          let newSku = {\r\n            sku: _sku,\r\n            qty: _qty,\r\n            uom: _uom,\r\n            wqty: 0,\r\n            swqty: 0,\r\n          };\r\n          if (_toWaste) {\r\n            newSku.qty = 0;\r\n            newSku.sku = list.skuName;\r\n          }\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Waste\"\r\n              : grade?.label === \"Waste\"\r\n          )\r\n            newSku.wqty = _qty;\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\"\r\n              : grade?.label === \"Semi Waste\"\r\n          )\r\n            newSku.swqty = _qty;\r\n          const isExist = newModule.findIndex(\r\n            (sku) => sku?.sku === (_toWaste ? list.skuName : _sku)\r\n          );\r\n\r\n          if (moduleName !== \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (grade?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (grade?.label === \"Waste\") newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n\r\n          if (moduleName === \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (item.wasteType?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (item.wasteType?.label === \"Waste\")\r\n                newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n    const skuName = module.length ? module[0].skuName : \"No SKU\";\r\n    const i = newModule.findIndex((s) => s.sku === skuName);\r\n    newModule.forEach((sku) => {\r\n      if (i !== -1) {\r\n        if (sku.sku === \"Waste\") newModule[i].wqty = sku.qty;\r\n        if (sku.sku === \"Semi Waste\") newModule[i].swqty = sku.qty;\r\n      }\r\n    });\r\n    return newModule;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { next, skuListUpdateCheck } from \"./services.js\";\r\nimport { totalQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst ModalsConfirmation = ({ moduleEntry, confirmation, setConfirmation, save, submit, isSuccess, isLoading, moveAll, setAction, moduleName, noSkuChecking, singleViewData }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 300\r\n\r\n  let buttonName = 'Submit'\r\n\r\n  if (confirmation.name === 'save') buttonName = 'Save'\r\n  useEffect(() => {\r\n    if (isSuccess) setConfirmation({ show: false, name: null })\r\n  }, [isSuccess])\r\n  window.onkeydown = e => e.keyCode === 27 ? setConfirmation({ show: false, name: null }) : null\r\n\r\n  useEffect(() => {\r\n    setAction(confirmation.name)\r\n  }, [confirmation])\r\n\r\n  let module = singleViewData && !moveAll ? singleViewData : moduleEntry\r\n\r\n  const areaDestinationName = module?.jobPost?.areaDestinationName\r\n  const warehouseDestinationName = module?.jobPost?.warehouseDestinationName\r\n  const areaName = module?.jobPost?.areaName\r\n\r\n  const skuListUpdate = skuListUpdateCheck(module?.jobPost.list, noSkuChecking, moduleName)\r\n  return (\r\n    <CRow className={confirmation.show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={confirmation.show}\r\n          closeOnBackdrop={false}\r\n        >\r\n          <CModalHeader className=\"px-4 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation <span><i className=\"em em-pray\"></i></span></CModalTitle>\r\n            <label tabIndex='0' onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false} onClick={() => setConfirmation({ show: false, name: null })} className='sku-item iconU-modalClose' />\r\n\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-4 py-0\" style={{ minHeight: height }}>\r\n            <p className=\"text mb-2\">\r\n              <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n              <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n              <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n              <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n              <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${moduleName === 'stockTransfer' ? warehouseDestinationName : (areaDestinationName ? areaDestinationName : areaName)} `}</span>\r\n            </p>\r\n            <p className=\"text\">\r\n              Please double check this list, this record will store to database.\r\n            </p>\r\n            <div\r\n              style={{\r\n                minHeight: height,\r\n                maxHeight: height,\r\n                overflow: \"auto\",\r\n                border: \"1px solid var(--lineGrey)\",\r\n              }}\r\n            >\r\n              <table>\r\n                <thead>\r\n                  <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                    <th style={{ color: \"var(--emptyTextField)\" }}>SKU List</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Weight</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Semi Waste</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Waste</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {skuListUpdate?.map((data) => (\r\n                    <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                      <td style={{ maxWidth: '160px' }}>{data.sku}</td>\r\n                      <td className=\"text-right py-3\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.qty)}`}\r\n                      </td>\r\n                      <td className=\"text-right text-nowrap\" style={{ textAlign: \"right\" }}>\r\n                        <span className='text-nowrap'>{`${totalQty(data?.swqty)} `}</span>\r\n                      </td>\r\n                      <td className=\"text-right\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.wqty)}`}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"px-0 pb-5 pt-0 justify-content-start border-none\">\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false}\r\n                className=\"bg-background sku-item text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n                onClick={() => setConfirmation({ show: false, name: null })}\r\n              >\r\n                Cancel\r\n            </CButton>\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? (isLoading ? null : (confirmation.name === 'save' ? save() : submit())) : false}\r\n                className={`${isLoading ? 'bg-softGreen text' : 'bg-green text-white'} no-shadow px-5 mt-4 sku-item mb-0 ml-3 mr-0`}\r\n                onClick={() => isLoading ? null : (confirmation.name === 'save' ? save() : submit())}\r\n              >\r\n                {isLoading ? 'Processing...' : buttonName}\r\n              </CButton>{\" \"}\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst ModalsCaptcha = ({\r\n  show = false,\r\n  setIsShowModal,\r\n  submit,\r\n  submitText = \"Submit\",\r\n}) => {\r\n  //random text\r\n  var text = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  var text_split = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    let r = characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    text += r;\r\n    text_split.push(r);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const [isCaptcha, setIsCaptcha] = React.useState(text_split);\r\n  const [isCaptchaText, setIsCaptchaText] = React.useState(text);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n  const [isButtonSubmit, setIsButtonSubmit] = React.useState(\"Submit\");\r\n  const [isType, setIsType] = React.useState([]);\r\n\r\n  //reset if visible = false \r\n  useEffect(() => {\r\n    if (show === true) {\r\n      document.getElementById('t1').value = '';\r\n      document.getElementById('t2').value = '';\r\n      document.getElementById('t3').value = '';\r\n    }\r\n  }, [show]);\r\n\r\n  return (\r\n    <CRow className={show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          onClose={() => {\r\n            setIsShowModal(false);\r\n          }}\r\n          size=\"lg\"\r\n          style={{ height: \"400px\" }}\r\n        >\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">\r\n              Are you sure want to upload <span className=\"green\">Edited</span>{\" \"}\r\n              {selectorCsvFileName}?\r\n            </p>\r\n            <p className=\"text\">\r\n              Once uploaded this record will store to databases.\r\n            </p>\r\n            <p className=\"text mb-2\">\r\n              Please type ‘{isCaptchaText}’ on the Box to confirm upload file.\r\n            </p>\r\n\r\n            <div className=\"captcha-box\">\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 1,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t1\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[0]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 2,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t2\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input ml-0 mr-0\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[1]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 3,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t3\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[2]}\r\n              />\r\n            </div>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            <CButton\r\n              className=\"bg-background text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n              onClick={() => {\r\n                setIsShowModal(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </CButton>\r\n            <CButton\r\n              className={\r\n                (isValidated ? \"bg-green\" : \"bg-emptyTextField disabled\") +\r\n                \" no-shadow px-5 mt-4 mb-0 ml-3 mr-0\"\r\n              }\r\n              onClick={() => {\r\n                submit();\r\n                setIsValidated(false);\r\n              }}\r\n            >\r\n              {submitText}\r\n            </CButton>{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport { ModalsConfirmation, ModalsCaptcha };\r\n","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    return (\r\n        <CRow className={discard ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                             from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-5 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    ripeness,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title,\r\n    toCompare\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' || uom === 'KG' ? true : false\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`wgt_${poListIdx}_${entryListIdx}`} maxLength='12' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={toCompare ? 'weightToCompare' : 'weight'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","module.exports = __webpack_public_path__ + \"static/media/trash.121a7b10.png\";","export const submitAction = ({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) => {\r\n    if (confirmation.name === 'submit') {\r\n        if (moveAll) setLocalEntryData()\r\n        submit()\r\n        setIsSaved()\r\n\r\n    }\r\n    else {\r\n        setIsSaved()\r\n    }\r\n}\r\n\r\nexport const message = ({ moduleEntry, complete }) => {\r\n    if (moduleEntry?.jobPost) {\r\n        let message = null\r\n        const { areaDestinationName, areaName } = moduleEntry?.jobPost\r\n        if (areaDestinationName) message = ` ${areaName} reefer ${areaDestinationName} - `\r\n        else message = ` ${areaName} - `\r\n        return message\r\n    }\r\n}\r\n\r\nexport const handleFailed = ({ setIsSaved, setConfirmation, action, setLocalEntryData }) => {\r\n    setIsSaved()\r\n    setConfirmation({ show: false, name: action })\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { dateFull } from 'services'\r\nimport { submitAction, message, handleFailed } from './services'\r\n\r\nconst PopUpSaved = ({\r\n    isSaved,\r\n    moduleName,\r\n    totalSku,\r\n    setIsSaved,\r\n    confirmation,\r\n    setConfirmation,\r\n    submit,\r\n    action,\r\n    moduleEntry,\r\n    complete,\r\n    setLocalEntryData,\r\n    moveAll,\r\n    status,\r\n    updateEntry,\r\n    setUpdateEntry\r\n}) => {\r\n    const saved = {\r\n        success: {\r\n            header: confirmation.name === 'submit' ? 'Success ! ' : 'Saved !',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: `${confirmation.name === 'submit' ? 'Submitted' : 'Saved'} successfully`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        failed: {\r\n            header: `${confirmation.name === 'submit' ? 'Submit' : 'Save'} Failed`,\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            date: dateFull({}),\r\n            sku: '',\r\n            module: `Sorry `,\r\n            status: 'item not recorded.',\r\n            button: 'bg-red',\r\n            buttonText: 'Try Again'\r\n        },\r\n        updateSuccess: {\r\n            header: 'Updated',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: ` updated successfully.`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        updatedAlready: {\r\n            header: 'Already Updated',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: ` already updated`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        }\r\n    }\r\n    let data = isSaved ? saved.success : saved.failed\r\n    const [showErrorMessage, setShowErrorMessage] = useState(false)\r\n\r\n    let show = isSaved === true || isSaved === false ? true : false\r\n\r\n    if (updateEntry === true || updateEntry === false) {\r\n        data = updateEntry === true ? saved.updateSuccess : (updateEntry === false ? saved.updatedAlready : saved.success)\r\n        if (updateEntry) show = true\r\n        else if (updateEntry === false) show = true\r\n        else {\r\n            if (typeof (setUpdateEntry) === 'function') {\r\n                setUpdateEntry()\r\n                show = false\r\n            }\r\n        }\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_saved')\r\n    if (focus) focus.focus()\r\n\r\n    const arrowIcon = showErrorMessage ? 'iconU-arrowTop' : 'iconU-arrowBottom'\r\n    const opacity = isSaved ? 1 : (showErrorMessage ? 1 : 0)\r\n    const errorText = showErrorMessage ? 'Hide Message' : 'Show Message'\r\n\r\n    const reset = () => {\r\n        setIsSaved()\r\n        if (typeof (setUpdateEntry) === 'function') setUpdateEntry()\r\n    }\r\n    return (\r\n        <CRow onKeyDown={e => e.keyCode === 27 ? setIsSaved() : false} className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    className={`${isSaved ? null : 'popup-saved'}`}\r\n                    show={show}\r\n\r\n                    onClose={() => {\r\n                        if (isSaved) submitAction({ confirmation, setIsSaved, submit })\r\n                        if (!isSaved) setIsSaved()\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit }) : reset()} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${data.textColor} LatoBold mr-2 h5 mb-3`}>{data.header}</label> <span><i className={`${data.headerIcon}`}></i></span>\r\n                        <div className='mr-1 h5 mb-3'>{`Entries ${data.status}`}</div>\r\n                        <div className={updateEntry ? 'mb-3 h5' : 'd-none'}>Please continue your work.</div>\r\n                        <div onClick={() => setShowErrorMessage(!showErrorMessage)} className={`d-flex align-items-center mr-1 mb-3 error-message pointer ${isSaved || updateEntry === true || updateEntry === false ? 'd-none' : null}`}>\r\n                            <div className={`mr-2 ${arrowIcon}`} />\r\n                            <div className='green'>{errorText}</div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA', opacity: opacity }} className='w-100 border rounded px-3 pt-3 pb-3 mb-3'>\r\n                            <div className={`h5 mb-3 ${isSaved ? null : 'd-none'}`}>{data.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className={`mr-1 ${isSaved ? null : 'd-none'}`}>{`${message({ moduleEntry, complete })} ${data.sku}`}</label>\r\n                                <div className={`mr-1 ${isSaved || updateEntry ? 'd-none' : null}`}>\r\n                                    <div style={{ wordWrap: 'break-word !important', opacity: opacity, height: showErrorMessage ? false : 0 }} className={`mr-1 `}>\r\n                                        {`${status?.message?.toString() ? status?.message?.toString() : 'The transaction cannot be processed. Please update current entries'}`}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`mb-2 h5 ${confirmation.name === 'submit' || updateEntry ? 'd-none' : null}`}>Please continue your work</div>\r\n                        <div className='w-100 d-flex '>\r\n                            <CButton onClick={() => reset()} className={`text no-shadow px-5 mr-4 mb-3 ${`bg-softGreen ${isSaved ? 'd-none' : null}`}`}>\r\n                                Cancel\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => setUpdateEntry()} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button} ${updateEntry === true || updateEntry === false ? null : 'd-none'}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) : handleFailed({ setIsSaved, setConfirmation, action })} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button} ${updateEntry === true || updateEntry === false ? 'd-none' : null}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","export let defaults = {\r\n    header: 'Complete All !',\r\n    headerIcon: 'em em-anger',\r\n    textColor: 'red',\r\n    date: 'You are  required to update all entries on the list.',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Check several entries left.',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const threshold = {\r\n    header: 'Please double check!',\r\n    headerIcon: 'em em-pray',\r\n    textColor: 'red',\r\n    date: 'Some entries are less -20% or exceed 50% the excess percentage.',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again. If you’re sure enough, click Submit anyway.',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const initialWeight = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'Add Weight should not exceed Initial Weight',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}","import React, { useState } from \"react\";\r\nimport { isLessThanInitWeight } from 'services'\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n    CModalFooter\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { threshold, initialWeight, defaults } from './services'\r\nimport Dropdown from 'Component/Dropdown'\r\n\r\nconst selectEmptyExceed = ({ setIsRequired, traceEmptyRow, data, invalidThreshold, setInvalidThreshold }) => {\r\n    if (invalidThreshold) setInvalidThreshold(false)\r\n    setIsRequired(false)\r\n    if (typeof (traceEmptyRow) === 'function') traceEmptyRow(data)\r\n}\r\n\r\nconst PopUpRequired = ({ isRequired, setIsRequired, moduleName, module, totalSku, invalidThreshold, setInvalidThreshold, submit, totalEmptyThreshold, traceEmptyRow }) => {\r\n    let saved = defaults;\r\n    let isTrue\r\n\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 400\r\n\r\n    if ((!isRequired && invalidThreshold) || (isRequired && invalidThreshold)) {\r\n        saved = threshold\r\n    }\r\n\r\n    if (moduleName !== 'stockTake') {\r\n        isTrue = isLessThanInitWeight(module)\r\n        if (isTrue) saved = initialWeight\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_required')\r\n    if (focus) focus.focus()\r\n\r\n    //repacking state for filter\r\n    const [filter, setFilter] = useState({ value: 0, label: 'All Exceed' })\r\n    return (\r\n        <CRow className={isRequired || invalidThreshold ? null : 'd-none'}>\r\n            <CCol className='required'>\r\n                <CModal\r\n                    show={isRequired || invalidThreshold}\r\n                    onClose={() => {\r\n                        setIsRequired(false)\r\n                        if (invalidThreshold) setInvalidThreshold(false)\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <div className='d-flex align-items-center mb-5'>\r\n                            <label className={`${saved?.textColor} LatoBold mr-2 h5`}>{saved?.header}</label> <span><i className={`${saved?.headerIcon}`}></i></span>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100 border rounded px-3 pt-4 pb-3 mb-4'>\r\n                            <div className={`h5 mb-3 ${isRequired || invalidThreshold ? null : 'd-none'}`}>{saved?.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className='mr-1 h5'>{`${saved?.status}`}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className='border-all w-100' style={{ maxHeight: height, minHeight: height, overflow: 'scroll', display: totalEmptyThreshold?.length && moduleName === 'repack' ? null : 'none' }}>\r\n                            <table>\r\n                                <tr className='emptyTextField' style={{ borderBottom: '1px solid #e4e4e4' }}>\r\n                                    <th className='w-50'>SKU List</th>\r\n                                    <td className='w-50' style={{ textAlign: 'right' }}>\r\n                                        <Dropdown\r\n                                            noMarginBottom={true}\r\n                                            zInfinity={true}\r\n                                            show={true}\r\n                                            showTitle={false}\r\n                                            options={[{ value: 1, label: 'Less than -20%' }, { value: 2, label: 'More than 50%' }]}\r\n                                            onChangeDropdown={(selected) => setFilter(selected)}\r\n                                            title='All Exceed'\r\n                                            placeholder='Exceed'\r\n                                            moduleName={moduleName}\r\n                                            width='w-100'\r\n                                            selectedValue={filter}\r\n                                        /></td>\r\n                                </tr>\r\n\r\n                                <tbody>\r\n                                    {\r\n                                        totalEmptyThreshold?.filter(item => {\r\n                                            const { value } = filter\r\n                                            if (value === 1) return item.excess < -20\r\n                                            if (value === 2) return item.excess > 50\r\n                                            else return item\r\n                                        })?.map(data => (\r\n                                            <tr onClick={() => selectEmptyExceed({ setIsRequired, traceEmptyRow, data, invalidThreshold, setInvalidThreshold })} style={{ borderBottom: '1px solid #e4e4e4' }} className='cursor-pointer excess-row'>\r\n                                                <td>{data.skuName}</td>\r\n                                                <td style={{ textAlign: 'right' }} className='red'>{`${data.excess} %`}<span className='iconU-arrowRightAfter text' /></td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </CModalBody>\r\n                    <CModalFooter className={`px-5 pb-5 pt-0 w-100 ${invalidThreshold ? 'justify-content-between' : 'justify-content-start'}  border-none d-flex mt-2`}>\r\n                        <div>\r\n                            {/* <CButton onClick={() => {\r\n                                setIsRequired(false)\r\n                                if (invalidThreshold) setInvalidThreshold(false)\r\n                            }} className={`text no-shadow ${`bg-softGreen ${isRequired ? 'd-none' : null}`}`}>\r\n                                Cancel\r\n                        </CButton> */}\r\n                            <CButton\r\n                                id={'btn_is_required'}\r\n                                tabIndex='0'\r\n                                onClick={() => {\r\n                                    setIsRequired(false)\r\n                                    if (invalidThreshold) setInvalidThreshold(false)\r\n                                }} className={`text-white no-shadow ${saved?.button}`}>\r\n                                {saved?.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                        <div>\r\n                            <CButton\r\n                                style={{ backgroundColor: '#F5F7FA' }}\r\n                                id={'btn_is_required'}\r\n                                tabIndex='0'\r\n                                onClick={() => {\r\n                                    setIsRequired(false)\r\n                                    if (invalidThreshold) setInvalidThreshold(false)\r\n                                    if (typeof (submit) === 'function') submit()\r\n                                }} className={`text LatoBold no-shadow ${invalidThreshold ? null : 'd-none'} `}>\r\n                                Submit anyway\r\n                        </CButton>\r\n                        </div>\r\n\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n\r\n    );\r\n};\r\n\r\nexport default PopUpRequired;\r\n"],"sourceRoot":""}