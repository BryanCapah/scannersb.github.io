{"version":3,"sources":["Page/StockEntry/StockTransfer/index.jsx","Component/Modal/PopUpDiscard/index.jsx","Component/Modal/PopUpUnfinished/index.jsx"],"names":["withRouter","props","dispatch","useDispatch","story","useHistory","thereAreRequest","useSelector","state","moduleFirstLoad","stockTransferFirstLoad","warehouseUuid","user","status","isLoading","stockTransferEntryData","useState","summary","setSummary","localEntryData","setLocalEntryData","isCheckedTotal","selectedSkuCheck","moduleEntry","moduleName","isCheckedBefore","setIsCheckedBefore","added","search","setSearch","warehouse","setWarehouse","area","setArea","discard","setDiscard","warehouseId","setWarehouseId","warehouseIdDestination","setWarehouseIdDestination","areaId","setAreaId","areaIdDesposition","setAreaIdDesposition","areaMatched","setAreaMatched","useEffect","a","getWarehouse","warehouseList","getRipenessLevel","ripeness","getWarehouseArea","areaList","getUnfinishedEntries","isExist","warehouseSource","filter","wh","value","getData","_","dimention","document","documentElement","clientHeight","height","emptyItem","className","module","close","discardEntry","id","removeEntryModule","redirect","history","push","previousPage","goBack","show","isDisabled","title","placeholder","options","onChangeDropdown","selected","selectedValue","showTitle","searchHandler","desc","getStockTakeSummary","setModule","length","style","minHeight","maxHeight","map","data","idx","key","img","photo","skuDescription","skuName","skuNumber","uomLabel","uomValue","totalQty","uom","unitOfMeassures","isCheckedHandler","checked","selectSku","moduleSummary","check","responseCheck","label","src","loading","alt","onClick","type","jobPost","list","CREATE_JOB_SHEET","PopUpDiscard","size","closeOnBackdrop","PopUpUnfinished","backgroundColor","moment","createdAt","format","areaName","opacity","fontSize"],"mappings":"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","file":"static/js/61.67480695.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport Dropdown from \"Component/Dropdown\";\r\nimport Search from \"Component/Search\";\r\nimport { getStockTakeSummary, getUnfinishedEntries,removeEntryModule } from \"apiServices\";\r\nimport { getWarehouseArea, getRipenessLevel,getWarehouse } from \"apiServices/dropdown\";\r\nimport SKUItem from \"Component/SKUItem\";\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport \"./index.scss\";\r\nimport {selectSku} from './services'\r\nimport { responseCheck, selectedSkuCheck } from \"Page/StockEntry/GeneralServices/moduleServices\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport PopUpUnfinished from 'Component/Modal/PopUpUnfinished'\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\n\r\nconst StockTransfer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const story = useHistory()\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTransferFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const moduleName = 'stockTransfer'\r\n  const stockTransferEntryData = useSelector((state) => state.stockTransferEntryData);\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  const [search, setSearch] = useState()\r\n  const [warehouse, setWarehouse] = useState()\r\n  const [area,setArea] = useState()\r\n  const [discard, setDiscard] = useState()\r\n \r\n\r\n  const [warehouseId, setWarehouseId] = useState()\r\n  const [warehouseIdDestination, setWarehouseIdDestination] = useState()\r\n  const [areaId,setAreaId] = useState()\r\n  const [areaIdDesposition, setAreaIdDesposition] = useState()\r\n  const [areaMatched,setAreaMatched] = useState()\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const warehouseList = await getWarehouse({})\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockTransferEntryData ? true : false, ripeness })\r\n\r\n      const warehouseSource = warehouseList.filter(wh => wh.value === warehouseUuid)\r\n      setWarehouseId(warehouseSource[0])\r\n      // setWarehouseId({label:'Sentul', value:warehouseUuid})\r\n\r\n      setArea(areaList)\r\n      setWarehouse(warehouseList)\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect( _ => {\r\n    // if(areaId && areaIdDesposition && areaId !== areaIdDesposition && warehouseId && warehouseIdDestination && warehouseId !== warehouseIdDestination) setAreaMatched(true)\r\n    if(areaId && warehouseId && warehouseIdDestination && warehouseId !== warehouseIdDestination) setAreaMatched(true)\r\n\r\n    else setAreaMatched(false)\r\n  },[areaId,areaIdDesposition,added, warehouseId,warehouseIdDestination])\r\n\r\n  useEffect(()=> {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  },[areaId,areaIdDesposition,warehouseId,warehouseIdDestination])\r\n  \r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 400\r\n  const emptyItem = dimention - 400\r\n  return (\r\n    <div className=\"w-100  stock-take-summary\">\r\n      <Discard\r\n          discard={discard}\r\n          module={'Inventory Entry - Stock Transfer'}\r\n          moduleEntry={stockTransferEntryData}\r\n          close={() => setDiscard(false)}\r\n          discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch,setDiscard })}\r\n      />\r\n      <PopUpUnfinished\r\n        discard={discard}\r\n        moduleFirstLoad={moduleFirstLoad}\r\n        moduleEntry={stockTransferEntryData}\r\n        redirect={() => props.history.push(\"/inventory-entry/stock-transfer/weight-entry\")}\r\n        previousPage={() => story.goBack()}\r\n        setDiscard={() => setDiscard(true)}\r\n      />\r\n      <PopUp status={status} />\r\n      <div className=\"px-3 pt-3 bg-white border-all radius-all d-md-flex dd-group\">\r\n      <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n          <Dropdown\r\n            show={true}\r\n            isDisabled={true}\r\n            title=\"Warehouse Source\"\r\n            placeholder='Select Warehouse Source'\r\n            options={warehouse}\r\n            onChangeDropdown={(selected) => setWarehouseId(selected)}\r\n            selectedValue={warehouseId}\r\n            showTitle={true}\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n          <Dropdown\r\n            show={true}\r\n            title=\"Area Source\"\r\n            placeholder='Select Area Source'\r\n            options={area}\r\n            onChangeDropdown={(selected) => setAreaId(selected)}\r\n            selectedValue={areaId}\r\n            showTitle={true}\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n          <Dropdown\r\n            show={true}\r\n            title=\"Warehouse Destination\"\r\n            placeholder='Select Warehouse Destination'\r\n            options={warehouse}\r\n            onChangeDropdown={(selected) => setWarehouseIdDestination(selected)}\r\n            selectedValue={warehouseIdDestination}\r\n            showTitle={true}\r\n          />\r\n        </div>\r\n        {/* <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n          <Dropdown\r\n            show={true}\r\n            title=\"Area Destination\"\r\n            placeholder='Select Area Destination'\r\n            options={area}\r\n            onChangeDropdown={(selected) => setAreaIdDesposition(selected)}\r\n            selectedValue={areaIdDesposition}\r\n            showTitle={true}\r\n          />\r\n        </div> */}\r\n      </div>\r\n\r\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white mt-3 border-all radius-all mb-3\">\r\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n          <div className=\"text LatoBold d-flex justify-content-between align-items-center sku-des\">\r\n            <div>\r\n              Enter SKU or Description{\" \"}\r\n              <span className=\"green\">{`(${isCheckedTotal} Selected SKU${isCheckedTotal > 1 ? \"s\" : \"\"\r\n                })`}</span>\r\n            </div>\r\n            {/* <div className=\"icon-unfinishEn\">\r\n              <i className=\"iconU-sideBarInventoryEntry emptyTextField\"></i>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <Search\r\n          placeholder={\"Enter SKU\"}\r\n          filter={false}\r\n          searchHandler={(desc) =>\r\n            areaId?.value && warehouseId?.value && warehouseIdDestination?.value && warehouseId?.value !== warehouseIdDestination?.value ?\r\n              getStockTakeSummary({ dispatch, desc, warehouseUuid, areaId, areaIdDesposition ,setModule: setSummary, module:localEntryData },setSearch(desc)) : (!areaId?.value ? setAreaId('empty' ) : (areaId?.value === areaIdDesposition?.value ? setAreaIdDesposition('empty') : (!warehouseId?.value ? setWarehouseId('empty') : (!warehouseIdDestination?.value ? setWarehouseIdDestination('empty') : (warehouseIdDestination?.value === warehouseId?.value ? setWarehouseIdDestination('empty') : null)))))\r\n          }\r\n        />\r\n        <div\r\n          className={`mb-3 mt-3 d-flex align-items-center scroll-sku ${summary?.length ? \"flex-column\" : \"flex-row\"\r\n            } w-100 text-center`}\r\n            style={{ minHeight: height , maxHeight:height}}\r\n        >\r\n          {summary?.length ? (\r\n            summary?.map((data, idx) => {\r\n              return (\r\n                <SKUItem\r\n                  key={idx}\r\n                  img={data?.photo}\r\n                  skuDescription={data?.skuName}\r\n                  skuNumber={data?.skuNumber}\r\n                  uomLabel=\"weight\"\r\n                  uomValue={data?.totalQty}\r\n                  uom={data?.unitOfMeassures}\r\n                  isCheckedHandler={(checked) =>\r\n                    selectSku({\r\n                      idx,\r\n                      checked,\r\n                      dispatch,\r\n                      setLocalEntryData,\r\n                      moduleSummary: summary,\r\n                      moduleEntry: localEntryData,\r\n                      moduleName,\r\n                      warehouseUuid,\r\n                      warehouseIdDestination,\r\n                      areaId,\r\n                      areaIdDesposition,\r\n                    })\r\n                  }\r\n                  check={data?.checked}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n              <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem,maxHeight: emptyItem}}>\r\n                {!responseCheck({ isLoading, summary }) ? (\r\n                  <img className=\"loading\" src={loading} alt=\"loading\" />\r\n                ) : areaId && areaIdDesposition && summary?.length === 0 ? (\r\n                  <div>\r\n                    Sorry, we couldn't find any matches\r\n                    for '<span className='LatoBold'>{search}</span>' in {areaId && areaIdDesposition?.label} area.\r\n                    <br/>\r\n                    Please Try search with another term.\r\n                  </div>\r\n                ) : 'Enter SKU'}\r\n              </div>\r\n            )}\r\n        </div>\r\n      </div>\r\n      <div className=\"h-screen-summary-footer d-flex flex-column justify-content-start\">\r\n        <div className=\"w-100 d-flex align-items-center justify-content-between mb-1\">\r\n         <div>\r\n            <button\r\n            onClick={() => props.history.push(\"/inventory-entry/stock-transfer/CSV-upload\")}\r\n            type=\"button\"\r\n            className=\"btn px-4 no-shadow border-all bg-white fontSizeButton\"\r\n          >\r\n            Upload File\r\n          </button>\r\n         </div>\r\n          <button\r\n            onClick={() => {\r\n              if (thereAreRequest === 0 && (localEntryData && localEntryData?.jobPost?.list?.length > 0) && areaMatched === true) {\r\n                dispatch({ type: CREATE_JOB_SHEET, stockTransferEntryData: localEntryData })\r\n                props.history.push(\"/inventory-entry/stock-transfer/weight-entry\")\r\n              }\r\n            }\r\n            }\r\n            type=\"button\"\r\n            className={`btn px-5 fontSizeButton no-shadow text-white ${thereAreRequest === 0 && (localEntryData && localEntryData?.jobPost?.list?.length > 0) && areaMatched === true ? \"bg-green\" : \"bg-lineGrey\"\r\n              }`}\r\n          >\r\n            {(!localEntryData || localEntryData?.jobPost?.list?.length === 0) && thereAreRequest === 0 ? 'Next' :thereAreRequest === 0 && (localEntryData && localEntryData?.jobPost?.list?.length > 0) ? 'Next' : 'Processing...'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(StockTransfer);\r\n","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    return (\r\n        <CRow className={discard ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                             from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-5 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","import React, { useState, useEffect } from \"react\";\r\nimport moment from 'moment'\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpUnfinished = ({ moduleEntry, redirect, previousPage, discard,setDiscard,moduleFirstLoad }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    const show = discard || !moduleEntry ? false : true\r\n\r\n    if (!moduleFirstLoad) return (\r\n        <CModal\r\n            show={true}\r\n            size=\"lg\"\r\n            closeOnBackdrop={false}\r\n        >\r\n            <div className=\"green h4 w-100 text-center p-4\">\r\n                Checking Unfinished Entry\r\n            </div>\r\n        </CModal>\r\n    )\r\n    return (\r\n        <CRow className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={show}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => previousPage()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pt-3 border-none\">\r\n                        <CModalTitle className=\"green LatoBold respon-txt\">Unfinished Entry Left! <span><i className=\"em em-speak_no_evil\"></i></span></CModalTitle>\r\n                    </CModalHeader>\r\n                    <CModalBody className=\"px-5 py-0\" style={{ minHeight: height }}>\r\n                        <p className=\"text mb-3 fontSizeWeightNumber\">\r\n                            You must complete the Entry that you worked on :\r\n                        </p>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100  rounded p-3 d-flex justify-content-between align-items-center'>\r\n                            <div>\r\n                                <div className=\"respon-txt\">{moment(moduleEntry?.jobPost?.createdAt).format(\"dddd, MMMM DD YYYY, h:mm:ss a\")}</div>\r\n                                <div className=\"green respon-txt\">\r\n                                    {`${moduleEntry?.jobPost?.areaName} - ${moduleEntry?.jobPost?.list.length} SKU${moduleEntry?.jobPost?.list.length > 1 ? '(s)' : ''}`}\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={() => setDiscard()} className='iconU-entryTrash emptyTextField' style={{opacity:0.5, fontSize:'1.2rem'}}/>\r\n                        </div>\r\n                        <p className=\"text mt-3 fontSizeWeightNumber\">\r\n                            Do you want to continue this Entries ?\r\n                        </p>\r\n                        <br />\r\n                    </CModalBody>\r\n\r\n                    <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n                        <CButton onClick={() => previousPage()} className=\"bg-background text no-shadow px-5 mb-0 mx-0\">\r\n                            Later\r\n                        </CButton>\r\n                        <CButton onClick={() => redirect()} className=\"bg-green no-shadow px-5 mb-0 ml-3 mr-0\">\r\n                            Continue\r\n                        </CButton>{\" \"}\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpUnfinished\r\n"],"sourceRoot":""}