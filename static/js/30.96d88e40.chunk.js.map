{"version":3,"sources":["Page/StockEntry/AdditionalOutbound/Upload/index.jsx","Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/FileUploader/services.js","Component/FileUploadProgress/index.jsx","Component/FileUploader/index.jsx"],"names":["ExcelFile","ReactExport","ExcelSheet","ExcelColumn","withRouter","props","useDispatch","React","useState","className","element","id","style","display","filename","data","areaName","po","skuNumber","ripenessLevel","qty","outboundType","outboundReason","name","label","value","nextPage","history","push","transaction","field","dataField","text","editable","sort","hidden","type","PopUp","refresh","status","icon","statusDisplay","title","cancelButtonTitle","actionButtonTitle","cancelButtonClass","actionButtonClass","actionButtonEvent","colorText","msg1","msg2","onCloseFunction","refreshOnCancel","setIsSuccess","dispatch","code","message","show","setShow","useEffect","window","onkeydown","e","keyCode","closeOnBackdrop","onClose","isFunction","success","STATUS","size","minHeight","bodyOpenClassName","onClick","location","reload","refreshPage","parentOncCloseFunction","console","log","templateDownload","document","getElementById","click","csvReader","fieldArray","setIsProgressPercent","Promise","resolve","reject","i","jsonArray","reader","FileReader","onload","csv","parse","result","err","length","map","obj","index","newObject","toString","split","csvObj","csvIndex","percentage","Math","ceil","setTimeout","readAsBinaryString","xlsReader","setIsJsonArray","a","evt","bstr","target","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","putCsvFieldJson","STOK_TAKE_UPLOAD_JSON","csvField","validateColumn","fileName","warehouseArea","warehouseUuid","setIsCheckingSchema","warehousesData","warehouseCodeList","warehouseUuidList","d","wh_area_label","toUpperCase","wh_area_value","wh_outboundtype_label","wh_outboundtype_value","csv_schema","replace","distinctPOSKUInfoId","distinctSKUNumber","schemaRow","key","keys","includes","clear","shift","emptyRow","fieldData","fieldIndex","undefined","indexOf","parseInt","tmp_data","stat","isNaN","match","csvData","csvFileName","csvDistinctPOSKUInfoId","csvDistinctSKUNumber","cleaningData","poSkuInfoValidated","poSkuNumberValidated","setIsProgressStatus","wmsPoSkuCode","wmsPoSkuUom","uom","skuNumberArray","skuUuidArray","skuPhotosArray","skuUomArray","imageMd","cleanData","areaSource","areaDestination","warehouseDestination","warehouseSource","indexId","skuValidatedData","isExist","inboundDate","wmsPoSkuCodeStatus","wmsPoSkuCodeReason","tmp_grade","newGrade","arr_grade","idx","newGradeStatus","newGradeUuid","newGradeReason","tmp_sku_number","skuUuid","photo","skuNumberStatus","skuNumberReason","tmp_new_grade","newGradeUom","resetCsvResist","resetStatus","setIsResetCsvPersist","VALIDATE_PO_SKU_INFO_ID","skuCodeValidated","FileUploadProgress","progressPercent","cancelHandler","cancelButton","lineHeight","cursor","class","role","width","aria-valuemin","aria-valuemax","baseStyle","flex","flexDirection","alignItems","paddingTop","paddingBottom","paddingLeft","paddingRight","outline","transition","height","parentStyle","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","activeStyle","acceptStyle","rejectStyle","FileUploader","isProgressDisplay","setIsProgressDisplay","isProgressStatus","isProgressPercent","isProgressFileName","setIsProgressFileName","isWarehouseArea","setIsWarehouseArea","isAdditionalOutbound","setIsAdditionalOutbound","isUploadStatus","setIsUploadStatus","isCheckingSchema","isResetCsvPersist","modalShow","setModalShow","modalShow2","setModalShow2","selectorWarehouseArea","useSelector","state","warehouseAreaCsv","selectorOutboundType","outboundTypeCsv","selectorStatus","selectorDistinctPOSKUInfoId","uploadStatus","selectorDistinctSKUNumber","selectorSkuCodeValidated","selectorSkuNumberValidated","skuNumberValidated","selectorCsvData","warehouseData","user","getWarehouseArea","getOutboundType","onDropAccepted","file","fileArr","fileType","useDropzone","noClick","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","open","acceptedFiles","useMemo","validatePoSkuInfoId","skuData","validateSkuNumber","skuNumberData","bulk","fontSize"],"mappings":"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","file":"static/js/30.96d88e40.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport FileUploader from \"Component/FileUploader\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport \"./index.scss\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\nconst Upload = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [isDisplayProgress, setIsDisplayProgress] = React.useState(false);\r\n  const Field = [\r\n    {\r\n      dataField: \"id\", //field ini wajib ada untuk editable column\r\n      text: \"ID\",\r\n      editable: false,\r\n      sort: true,\r\n      hidden: true,\r\n      type: \"number\",\r\n    },\r\n    { dataField: \"areaName\", text: \"Area\", type: \"string\", sort: true },\r\n    {\r\n      dataField: \"wmsPoSkuCode\",\r\n      text: \"PO SKU Code\",\r\n      type: \"number\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"skuNumber\",\r\n      text: \"SKU Number\",\r\n      type: \"number\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"expiryDateCol\",\r\n      text: \"Expiry Date\",\r\n      type: \"date_indo\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"ripenessLevel\",\r\n      text: \"Ripeness Level\",\r\n      type: \"string\",\r\n      sort: true,\r\n    },\r\n    { dataField: \"qty\", text: \"QTY\", type: \"number\", sort: true },\r\n    { dataField: \"newPack\", text: \"Pack\", type: \"string\", sort: true },\r\n    {\r\n      dataField: \"outboundType\",\r\n      text: \"Outbound Type\",\r\n      type: \"string\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"outboundReason\",\r\n      text: \"Outbound Reason\",\r\n      type: \"string\",\r\n      sort: true,\r\n    },\r\n  ];\r\n\r\n  const dataSet1 = [\r\n    {\r\n      areaName: \"\",\r\n      po: \"\",\r\n      skuNumber: \"\",\r\n      ripenessLevel: \"\",\r\n      qty: \"\",\r\n      outboundType: \"\",\r\n      outboundReason: \"\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"mb-5\">\r\n      {/* export this table to excel */}\r\n      <ExcelFile\r\n        element={\r\n          //dont change id and style please\r\n          <button id=\"download-template-xls\" style={{ display: \"none\" }}>\r\n            Download Data\r\n          </button>\r\n        }\r\n        //file name without types\r\n        filename=\"AdditionalOutbound_Template\"\r\n      >\r\n        <ExcelSheet data={dataSet1} name=\"template\">\r\n          <ExcelColumn label=\"Area\" value=\"area\" />\r\n          <ExcelColumn label=\"PO SKU Code\" value=\"po\" />\r\n          <ExcelColumn label=\"SKU Number\" value=\"skuNumber\" />\r\n          <ExcelColumn label=\"Expiry Date\" value=\"expirydate\" />\r\n          <ExcelColumn label=\"QTY\" value=\"qty\" />\r\n          <ExcelColumn label=\"Pack\" value=\"pack\" />\r\n          <ExcelColumn label=\"Ripeness Level\" value=\"ripenessLevel\" />\r\n          <ExcelColumn label=\"Outbound Type\" value=\"grade\" />\r\n          <ExcelColumn label=\"Outbound Reason\" value=\"ripeness\" />\r\n        </ExcelSheet>\r\n      </ExcelFile>\r\n      {/* end export this table to excel */}\r\n\r\n      <FileUploader\r\n        nextPage={() =>\r\n          props.history.push(\r\n            \"/inventory-entry/additional-outbound/CSV-upload/review\"\r\n          )\r\n        }\r\n        transaction={\"additiona_outbound\"}\r\n        field={Field}\r\n        type=\"additionalOutbound\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Upload);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { onClose, refreshPage } from \"./services.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { STATUS } from \"apiServices/action\";\r\nimport { isFunction } from \"lodash\";\r\n\r\nconst PopUp = ({\r\n  refresh,\r\n  status,\r\n  icon,\r\n  statusDisplay = false,\r\n  title = \"\",\r\n  cancelButtonTitle = \"Cancel\",\r\n  actionButtonTitle = \"Submit\",\r\n  cancelButtonClass = \"bg-background\",\r\n  actionButtonClass = \"bg-background\",\r\n  actionButtonEvent = null,\r\n  colorText = \"red\",\r\n  msg1 = null,\r\n  msg2 = null,\r\n  onCloseFunction = null,\r\n  refreshOnCancel = true,\r\n  setIsSuccess\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  if (status?.code === 500 && statusDisplay == false) {\r\n    icon = \"em-pensive\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 408 && statusDisplay == false) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Request Timeout\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 400 && statusDisplay == false) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n  if (status?.code === 404) {\r\n    title = \"Something wrong with the application\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n\r\n  const [show, setShow] = useState(statusDisplay);\r\n\r\n  useEffect(() => {\r\n    //from outside change\r\n    setShow(statusDisplay);\r\n  }, [statusDisplay]);\r\n\r\n  useEffect(() => {\r\n  }, [show]);\r\n\r\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\r\n  return (\r\n    <CRow className={`${show ? null : \"d-none\"}`}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          closeOnBackdrop={false}\r\n          onClose={() => {\r\n            setShow(false)\r\n            if (isFunction(setIsSuccess)) setIsSuccess({ success: null, name: null })\r\n            dispatch({ type: STATUS, status: null });\r\n            if (onCloseFunction) {\r\n              onCloseFunction()\r\n            }\r\n          }}\r\n          size=\"lg\"\r\n          style={{ minHeight: \"280px\" }}\r\n          bodyOpenClassName=\"p-3\"\r\n        >\r\n          {/* <div className='d-flex flex-row-reverse'>\r\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-3 border-none\">\r\n              <CModalTitle className={`text LatoBold ${colorText}`}>\r\n                {title}\r\n              </CModalTitle> */}\r\n\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <i\r\n              className=\"pr-3 pt-3 iconU-modalClose\"\r\n              onClick={() => {\r\n                setShow(false)\r\n                if (isFunction(setIsSuccess)) setIsSuccess({ success: null, name: null })\r\n                dispatch({ type: STATUS, status: null });\r\n                if (onCloseFunction) {\r\n                  onCloseFunction()\r\n                }\r\n              }}\r\n            ></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className={`text LatoBold ${colorText}`}>\r\n              {title} <span><i className={`em ${icon}`}></i></span>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">{msg1}</p>\r\n            <p className=\"text\">{msg2}</p>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            {cancelButtonTitle ? (\r\n              <CButton\r\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\r\n                onClick={() => {\r\n                  if (refreshOnCancel) {\r\n                    if(typeof(refresh) === 'function') refresh()\r\n                    else refreshPage({ refresh: true });\r\n                  } else {\r\n                    onClose({\r\n                      setShow,\r\n                      parentOncCloseFunction: onCloseFunction,\r\n                    });\r\n                  }\r\n                  dispatch({ type: STATUS, status: null });\r\n                }}\r\n              >\r\n                {cancelButtonTitle}\r\n              </CButton>\r\n            ) : null}\r\n            {actionButtonTitle ? (\r\n              <CButton\r\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\r\n                onClick={() => {\r\n                  if (actionButtonEvent) {\r\n                    actionButtonEvent();\r\n                    setShow(false);\r\n                  } else {\r\n                    setShow(false)\r\n                  }\r\n                }\r\n                }\r\n              >\r\n                {actionButtonTitle}\r\n              </CButton>\r\n            ) : null}{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\r\n  setShow(false);\r\n  console.log(parentOncCloseFunction)\r\n  if (parentOncCloseFunction) {\r\n    parentOncCloseFunction();\r\n  }\r\n\r\n};\r\n\r\nexport const refreshPage = ({ refresh = true }) => {\r\n  if (refresh === true) {\r\n    window.location.reload(false);\r\n  }\r\n};\r\n","/* eslint-disable array-callback-return */\r\nimport csv from \"csv\";\r\nimport * as XLSX from \"xlsx\";\r\nimport {\r\n  STOK_TAKE_UPLOAD_JSON,\r\n  VALIDATE_PO_SKU_INFO_ID,\r\n  STATUS,\r\n} from \"apiServices/action\";\r\n\r\nexport const templateDownload = () => {\r\n  document.getElementById(\"download-template-xls\").click();\r\n};\r\nexport const csvReader = (e, fieldArray, setIsProgressPercent) => {\r\n  return new Promise((resolve, reject) => {\r\n    let i = 0;\r\n    let jsonArray = [];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      csv.parse(reader.result, (err, data) => {\r\n        if (data.length > 2001) {\r\n          //why 2001? , because line 1 is header\r\n          setIsProgressPercent(0);\r\n          resolve(false);\r\n        }\r\n        data.map((obj, index) => {\r\n          if (index === 0) {\r\n            i++;\r\n            return false; // skip\r\n          }\r\n\r\n          let newObject = {};\r\n          newObject[\"id\"] = index;\r\n\r\n          let csvArray = data[i].toString().split(\";\");\r\n          csvArray.map((csvObj, csvIndex) => {\r\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\r\n          });\r\n          i++;\r\n          jsonArray.push(newObject);\r\n\r\n          //count percent\r\n          let percentage = ((index + 1) * 25) / data.length;\r\n          setIsProgressPercent(Math.ceil(percentage));\r\n        });\r\n      });\r\n    };\r\n\r\n    //checking\r\n    setTimeout(() => {\r\n      resolve(jsonArray);\r\n    }, 200);\r\n    reader.readAsBinaryString(e[0]);\r\n  });\r\n};\r\n\r\nexport const xlsReader = async (\r\n  e,\r\n  fieldArray,\r\n  setIsProgressPercent,\r\n  setIsJsonArray,\r\n  dispatch\r\n) => {\r\n  let i = 0;\r\n  let jsonArray = [];\r\n  const reader = new FileReader();\r\n  let data = null;\r\n  let error = false;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    var fr = new FileReader();\r\n    reader.onload = async (evt) => {\r\n      /* Parse data */\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n      /* Update state */\r\n\r\n      await csv.parse(data, (err, data) => {\r\n        if (data.length > 2001) {\r\n          //why 2001? , because line 1 is header\r\n          setIsProgressPercent(0);\r\n          resolve(false);\r\n        }\r\n        data.map((obj, index) => {\r\n          let newObject = {};\r\n          newObject[\"id\"] = index;\r\n\r\n          let csvArray = data[i].toString().split(\",\");\r\n          csvArray.map((csvObj, csvIndex) => {\r\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\r\n          });\r\n          i++;\r\n          jsonArray.push(newObject);\r\n\r\n          //count percent\r\n          let percentage = ((index + 1) * 25) / data.length;\r\n          setIsProgressPercent(Math.ceil(percentage));\r\n        });\r\n      });\r\n\r\n      //checking\r\n      setTimeout(() => {\r\n        resolve(jsonArray);\r\n      }, 200);\r\n    };\r\n\r\n    reader.readAsBinaryString(e[0]);\r\n  });\r\n};\r\n\r\nexport const putCsvFieldJson = ({ dispatch, jsonArray }) => {\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvField: jsonArray });\r\n};\r\n\r\nexport const validateColumn = async ({\r\n  field,\r\n  jsonArray,\r\n  setIsProgressPercent,\r\n  fileName,\r\n  dispatch,\r\n  warehouseArea,\r\n  warehouseUuid,\r\n  outboundType,\r\n  setIsCheckingSchema,\r\n  warehousesData\r\n}) => {\r\n\r\n  //warehouse\r\n  let warehouseCodeList = [];\r\n  let warehouseUuidList = [];\r\n  if(warehousesData){\r\n    warehousesData.data.map((d) => {\r\n      warehouseCodeList.push(d.code);\r\n      warehouseUuidList.push(d.id);\r\n    });\r\n  }  \r\n\r\n  //warehouse area\r\n  let wh_area_label = !warehouseArea\r\n    ? []\r\n    : warehouseArea.map((data) => data.label.toUpperCase());\r\n  let wh_area_value = !warehouseArea\r\n    ? []\r\n    : warehouseArea.map((data) => data.value);\r\n  let wh_outboundtype_label = !outboundType\r\n    ? []\r\n    : outboundType.map((data) => data.label.toUpperCase());\r\n  let wh_outboundtype_value = !outboundType\r\n    ? []\r\n    : outboundType.map((data) => data.value);\r\n  let csv_schema = !field\r\n    ? []\r\n    : field.map((data) => data.text.toUpperCase().replace(/\\s/g, \"\"));\r\n  let distinctPOSKUInfoId = [];\r\n  let distinctSKUNumber = [];\r\n\r\n  // check schema\r\n  let checkSchema = true;\r\n  let i = 0;\r\n  const schemaRow = jsonArray[0];\r\n  for (var key in schemaRow) {\r\n    if (key == \"id\") {\r\n      continue;\r\n    }\r\n    let keys = schemaRow[key].toUpperCase().replace(/\\s/g, \"\");\r\n    if (\r\n      key !== \"undefined\" &&\r\n      (csv_schema[i + 1] !== keys || !csv_schema.includes(keys))\r\n    ) {\r\n      console.clear();\r\n      console.log(\"--Schema Not Same--\");\r\n      console.log(\"Schema \\t\\t: \", csv_schema[i + 1]);\r\n      console.log(\"File SChema : \", keys);\r\n      checkSchema = false;\r\n      setIsCheckingSchema(false);\r\n      return 0;\r\n    }\r\n    i++;\r\n  }\r\n\r\n  jsonArray.shift();\r\n  await jsonArray.map((data, index) => {\r\n    let emptyRow = true; // if empty row dont show\r\n    field.map((fieldData, fieldIndex) => {\r\n      //if null then return\r\n      if (fieldData === undefined || fieldData === null) {\r\n        return;\r\n      }\r\n\r\n      if (fieldData.dataField !== \"id\" && data[fieldData.dataField] == \"\") {\r\n        return;\r\n      } else if (fieldData.dataField == \"id\") {\r\n      } else {\r\n        emptyRow = false;\r\n      }\r\n      // end checking empty\r\n\r\n      //set warehouse id\r\n      data[\"warehouseSource\"] = warehouseUuid;\r\n\r\n      //checking warehouse \r\n      if (warehouseCodeList && fieldData.dataField == \"warehouse\") {\r\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`; \r\n          return;\r\n        } else{\r\n          let i = warehouseCodeList.indexOf( data[fieldData.dataField]);\r\n          data[\"warehouseUuid\"] = warehouseUuidList[i];\r\n        }\r\n      }\r\n\r\n      //checking warehouse area\r\n      if (fieldData.dataField == \"areaName\") {\r\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\r\n          data[\"areaSource\"] = null;\r\n          return;\r\n        } else {\r\n          let i = wh_area_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"areaSource\"] = wh_area_value[i];\r\n        }\r\n      }\r\n\r\n      if (fieldData.dataField == \"areaNameDestination\") {\r\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\r\n          data[\"areaDestination\"] = null;\r\n          return;\r\n        } else {\r\n          let i = wh_area_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"areaDestination\"] = wh_area_value[i];\r\n        }\r\n      }\r\n\r\n      //checking outbound type\r\n      if (\r\n        wh_outboundtype_value.length > 0 &&\r\n        fieldData.dataField == \"outboundType\"\r\n      ) {\r\n        if (\r\n          !wh_outboundtype_label.includes(\r\n            data[fieldData.dataField].toUpperCase()\r\n          )\r\n        ) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Outbound Type Not Found`;\r\n          data[\"outboundTypeCode\"] = null;\r\n          return;\r\n        } else {\r\n          let i = wh_outboundtype_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"outboundTypeCode\"] = wh_outboundtype_value[i];\r\n        }\r\n      }\r\n\r\n      //newgrade\r\n      if (fieldData.dataField == \"newGrade\") {\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n        if (\r\n          data[fieldData.dataField] &&\r\n          !arr_grade.includes(data[fieldData.dataField].toUpperCase())\r\n        ) {\r\n          //if not waste or semi waste\r\n          if (parseInt(data[fieldData.dataField])) {\r\n            //if number, check sku number\r\n            if (!distinctSKUNumber.includes(data[fieldData.dataField])) {\r\n              distinctSKUNumber.push(data[fieldData.dataField]);\r\n            }\r\n            data[fieldData.dataField + \"Status\"] = true;\r\n          } else if (data[fieldData.dataField] == \"\") {\r\n            //if null\r\n            data[fieldData.dataField + \"Status\"] = true;\r\n          } else {\r\n            //if not number => undefined\r\n            data[fieldData.dataField + \"Status\"] = false;\r\n            data[fieldData.dataField + \"Reason\"] = `Grade Undefined`;\r\n          }\r\n        } else {\r\n          data[\"newGradeUuid\"] = data[fieldData.dataField];\r\n        }\r\n      }\r\n\r\n      //set ripeness\r\n      let ripeness = null;\r\n      if (\r\n        (fieldData.dataField == \"ripenessLevel\" ||\r\n          fieldData.dataField == \"newRipeness\") &&\r\n        data[fieldData.dataField] !== undefined\r\n      ) {\r\n        let ripeness_ = data[fieldData.dataField].split(\" \");\r\n        ripeness = ripeness_[1];\r\n      }\r\n\r\n      //checking type\r\n      let tmp_data = data[fieldData.dataField];\r\n      let stat = null;\r\n      if (fieldData.type == \"number\") {\r\n        if (isNaN(tmp_data)) {\r\n          stat = false;\r\n        } else {\r\n          stat = true;\r\n\r\n          if (fieldData.dataField == \"wmsPoSkuCode\") {\r\n            if (!distinctPOSKUInfoId.includes(tmp_data)) {\r\n              distinctPOSKUInfoId.push(tmp_data);\r\n            }\r\n          }\r\n\r\n          //distinct sku angka maka push ke array buat di cek\r\n          if (fieldData.dataField == \"skuNumber\") {\r\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\r\n              distinctSKUNumber.push(tmp_data);\r\n            }\r\n          }\r\n        }\r\n      } else if (fieldData.type == \"date_indo\") {\r\n        //checking date\r\n        let regex_date = /(0[1-9]|[12][0-9]|3[01])[-.](0[1-9]|1[012])[-.](19|20)\\d\\d/;\r\n        if (tmp_data.match(regex_date)) {\r\n          stat = true;\r\n        } else {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[\r\n            fieldData.dataField + \"Reason\"\r\n          ] = `Date format must be 'dd-mm-yyyy'`;\r\n          return;\r\n        }\r\n        // console.log('stat date', stat)\r\n        // console.log(`${fieldData.dataField}Reason`, data[fieldData.dataField + \"Reason\"])\r\n      } else {\r\n        stat = true;\r\n      }\r\n\r\n      //grade can null\r\n      let canNull = [\r\n        \"grade\",\r\n        \"outboundReason\",\r\n        \"ripenessLevel\",\r\n        \"newRipeness\",\r\n        \"newGrade\",\r\n      ];\r\n      if (canNull.includes(fieldData.dataField) && tmp_data == \"\") {\r\n        stat = true;\r\n      }\r\n\r\n      //check newGrade, jika angka maka cek ke distinct sku\r\n      if (fieldData.dataField == \"newGrade\") {\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n        if (!arr_grade.includes(tmp_data.toUpperCase())) {\r\n          //if not waste or semi waste\r\n          if (parseInt(tmp_data)) {\r\n            //if number\r\n            stat = true;\r\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\r\n              distinctSKUNumber.push(tmp_data);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      data[fieldData.dataField + \"Status\"] = stat;\r\n      if (!stat) {\r\n        data[\r\n          fieldData.dataField + \"Reason\"\r\n        ] = `Invalid ${fieldData.text} \\nShould be a ${fieldData.type}`;\r\n      } else {\r\n        data[fieldData.dataField + \"Reason\"] = \"\";\r\n      }\r\n\r\n      let percentage =\r\n        ((index + 1 + parseInt(jsonArray.length)) * 50) /\r\n        (parseInt(jsonArray.length) * 2);\r\n      setIsProgressPercent(Math.ceil(percentage));\r\n    });\r\n    data[\"emptyRow\"] = emptyRow;\r\n  });\r\n\r\n  //end checking type\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: jsonArray });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: fileName });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctPOSKUInfoId: distinctPOSKUInfoId,\r\n  });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctSKUNumber: distinctSKUNumber,\r\n  });\r\n};\r\n\r\nexport const cleaningData = async ({\r\n  poSkuInfoValidated,\r\n  poSkuNumberValidated,\r\n  csvData,\r\n  setIsProgressPercent,\r\n  dispatch,\r\n  status,\r\n  transaction,\r\n  setIsProgressStatus,\r\n  nextPage,\r\n}) => {\r\n  //checking\r\n  if (status === false || status === null) {\r\n    return 0;\r\n  }\r\n  if (\r\n    csvData === undefined ||\r\n    csvData === null ||\r\n    poSkuInfoValidated === null ||\r\n    poSkuInfoValidated === undefined ||\r\n    poSkuNumberValidated === null ||\r\n    poSkuNumberValidated === undefined\r\n  ) {\r\n    console.clear();\r\n    return 0;\r\n  }\r\n\r\n  //split data and id po sku code\r\n  const wmsPoSkuCode = [];\r\n  const wmsPoSkuUom = [];\r\n  poSkuInfoValidated.map((data) => {\r\n    wmsPoSkuCode.push(data.wmsPoSkuCode);\r\n    wmsPoSkuUom.push(data.uom);\r\n  });\r\n\r\n  //split sku number and skuUUid sku number\r\n  let skuNumberArray = [];\r\n  let skuUuidArray = [];\r\n  let skuPhotosArray = [];\r\n  let skuUomArray = [];\r\n  poSkuNumberValidated.map((data) => {\r\n    skuNumberArray.push(data.skuNumber);\r\n    skuUuidArray.push(data.id);\r\n    skuPhotosArray.push(data.imageMd);\r\n    skuUomArray.push(data.uom);\r\n  });\r\n\r\n  //cleaning data\r\n  let cleanData = [];\r\n  csvData.map((data, index) => {\r\n    //if empty row then skip\r\n    if (data.emptyRow === true) {\r\n      return 0;\r\n    }\r\n\r\n    //format fixing\r\n    data.areaSource = parseInt(data.areaSource);\r\n    data.areaDestination = parseInt(data.areaDestination);\r\n\r\n    //if transaction stocktake then source and destination is same\r\n    if (\r\n      transaction == \"stock_take\" ||\r\n      transaction == \"repacking\" ||\r\n      transaction == \"outbound\"\r\n    ) {\r\n      data.areaDestination = parseInt(data.areaSource);\r\n      data.warehouseDestination = parseInt(data.warehouseSource);\r\n    }\r\n    //get index dari poskucode\r\n    let indexId = wmsPoSkuCode.indexOf(data.wmsPoSkuCode);\r\n\r\n    //get validated data\r\n    let skuValidatedData = poSkuInfoValidated[indexId];\r\n\r\n    if (\r\n      !skuValidatedData ||\r\n      skuValidatedData.isExist === undefined ||\r\n      skuValidatedData.isExist === false ||\r\n      skuValidatedData.isExist === null\r\n    ) {\r\n      data.wmsPoSkuCodeStatus = false;\r\n      data.wmsPoSkuCodeReason = \"PO SKU Code Not Found\";\r\n    } else {\r\n      // skuValidatedData.expiryDate = skuValidatedData.expiryDate\r\n      data.inboundDate = skuValidatedData.inboundDate;\r\n      data.uom = wmsPoSkuUom[indexId];\r\n    }\r\n\r\n    //check grade\r\n    let tmp_grade = data.newGrade;\r\n    let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n    if (\r\n      tmp_grade !== undefined &&\r\n      !arr_grade.includes(tmp_grade.toUpperCase())\r\n    ) {\r\n      //if not waste or semi waste\r\n      if (skuNumberArray.includes(tmp_grade)) {\r\n        let idx = skuNumberArray.indexOf(tmp_grade);\r\n        data.newGradeStatus = true;\r\n        data.newGradeUuid = skuUuidArray[idx];\r\n      } else if (tmp_grade == \"\") {\r\n        data.newGradeUuid = \"\";\r\n        data.newGradeStatus = true;\r\n      } else {\r\n        //if not number => undefined\r\n        data.newGradeReason = \"Grade Undefined\";\r\n        data.newGradeStatus = false;\r\n      }\r\n    }\r\n\r\n    //check Sku Number\r\n    let tmp_sku_number = data.skuNumber;\r\n    if (!skuNumberArray.includes(tmp_sku_number)) {\r\n      data.skuNumberStatus = false;\r\n      data.skuNumberReason = \"SKU Number Not Found\";\r\n      data.skuUuid = \"\";\r\n    } else {\r\n      let idx = skuNumberArray.indexOf(tmp_sku_number);\r\n      data.skuUuid = skuUuidArray[idx];\r\n      data.photo = skuPhotosArray[idx];\r\n    }\r\n\r\n    //check New Grade\r\n    let tmp_new_grade = data.newGrade;\r\n    console.log(\"tmp_new_grade\", tmp_new_grade);\r\n    if (\r\n      (tmp_new_grade && arr_grade.includes(tmp_new_grade.toUpperCase())) ||\r\n      tmp_new_grade == \"\"\r\n    ) {\r\n      data.newGradeReason = \"\";\r\n      data.newGradeStatus = true;\r\n      data.newGradeUuid = null;\r\n      data.newGradeUom = null;\r\n    } else {\r\n      if (skuNumberArray.includes(tmp_new_grade)) {\r\n        let idx = skuNumberArray.indexOf(tmp_new_grade);\r\n        data.newGradeReason = \"\";\r\n        data.newGradeStatus = true;\r\n        data.newGradeUuid = skuUuidArray[idx];\r\n        data.newGradeUom = skuUomArray[idx];\r\n      } else {\r\n        data.newGradeReason = \"SKU Number Not Found\";\r\n        data.newGradeStatus = false;\r\n        data.newGradeUuid = null;\r\n        data.newGradeUom = null;\r\n      }\r\n    }\r\n\r\n    //merging_array\r\n    cleanData.push({ ...data, ...skuValidatedData });\r\n  });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: cleanData });\r\n  setIsProgressPercent(Math.ceil(100));\r\n  setTimeout(() => {\r\n    nextPage();\r\n  }, 200);\r\n};\r\n\r\nexport const resetCsvResist = async ({\r\n  dispatch,\r\n  resetStatus,\r\n  setIsResetCsvPersist,\r\n}) => {\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: null });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: null });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctPOSKUInfoId: null,\r\n  });\r\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\r\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\r\n  dispatch({ type: STATUS, status: null });\r\n  setIsResetCsvPersist(true);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./index.scss\";\r\n\r\nconst FileUploadProgress = ({\r\n  status,\r\n  progressPercent,\r\n  fileName,\r\n  display = false,\r\n  cancelButton = null,\r\n  cancelHandler,\r\n}) => {\r\n  useEffect(() => {\r\n  }, [progressPercent, status]);\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-100 d-flex flex-column progressBar \" +\r\n        (!display ? \"hiddenProgress\" : null)\r\n      }\r\n    >\r\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white border-all radius-all mb-3 mt-0\">\r\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n          <div className=\"uploadStatus w-100\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-7\">\r\n                <i className=\"iconU-sideBarInventoryEntry green\"></i> File\r\n                {fileName}\r\n              </div>\r\n              <div className=\"col-md-5\">\r\n                <p className=\"float-right\" style={{ lineHeight: \"30px\", cursor: \"pointer\" }} onClick={() => { cancelHandler() }}>\r\n                  Cancel\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"progress\">\r\n              <div\r\n                class=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                style={{ width: progressPercent + \"%\" }}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n              ></div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <div className=\"emptyTextField inline\">{status}</div>\r\n              <div className=\"text inline font-weight-bold\">\r\n                {\"  \"}\r\n                {progressPercent}%\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadProgress;\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./FileUploader.scss\";\r\nimport {\r\n  templateDownload,\r\n  csvReader,\r\n  putCsvFieldJson,\r\n  validateColumn,\r\n  xlsReader,\r\n  cleaningData,\r\n  resetCsvResist,\r\n} from \"./services.js\";\r\nimport FileUploadProgress from \"Component/FileUploadProgress\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport { validatePoSkuInfoId, validateSkuNumber } from \"apiServices\";\r\nimport { getWarehouseArea, getOutboundType } from \"apiServices/dropdown\";\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  paddingTop: \"20px\",\r\n  paddingBottom: \"20px\",\r\n  paddingLeft: \"20px\",\r\n  paddingRight: \"20px\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n  height: \"400px\",\r\n};\r\n\r\nconst parentStyle = {\r\n  paddingTop: \"20px\",\r\n  paddingBottom: \"10px\",\r\n  paddingLeft: \"20px\",\r\n  paddingRight: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fff\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n  height: \"600px\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nconst FileUploader = ({ field, transaction, nextPage = null, type = null }) => {\r\n  const [isProgressDisplay, setIsProgressDisplay] = React.useState(false);\r\n  const [isProgressStatus, setIsProgressStatus] = React.useState();\r\n  const [isProgressPercent, setIsProgressPercent] = React.useState(0);\r\n  const [isProgressFileName, setIsProgressFileName] = React.useState(null);\r\n  const [isWarehouseArea, setIsWarehouseArea] = React.useState(null);\r\n  const [isAdditionalOutbound, setIsAdditionalOutbound] = React.useState(null);\r\n  const [isJsonArray, setIsJsonArray] = React.useState(null);\r\n  const [isUploadStatus, setIsUploadStatus] = React.useState(null);\r\n  const [isCheckingSchema, setIsCheckingSchema] = React.useState(null);\r\n  const [isResetCsvPersist, setIsResetCsvPersist] = React.useState(false);\r\n  const [defaultValues, setDefaultValues] = React.useState(0);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [modalShow2, setModalShow2] = React.useState(false);\r\n\r\n  //declare redux\r\n  const dispatch = useDispatch();\r\n  const selectorWarehouseArea = useSelector((state) => state.warehouseAreaCsv);\r\n  const selectorOutboundType = useSelector((state) => state.outboundTypeCsv);\r\n  const selectorStatus = useSelector((state) => state.status);\r\n  const uploadStatus = useSelector((state) => state.uploadStatus);\r\n  const selectorDistinctPOSKUInfoId = useSelector(\r\n    (state) => state.csvDistinctPOSKUInfoId\r\n  );\r\n  const selectorDistinctSKUNumber = useSelector(\r\n    (state) => state.csvDistinctSKUNumber\r\n  );\r\n  const selectorSkuCodeValidated = useSelector(\r\n    (state) => state.skuCodeValidated\r\n  );\r\n  const selectorSkuNumberValidated = useSelector(\r\n    (state) => state.skuNumberValidated\r\n  );\r\n  const selectorCsvData = useSelector((state) => state.csvData); \r\n  const warehousesData =  useSelector(state => state.warehouseData);\r\n\r\n  //reset csv persist\r\n  if (isResetCsvPersist !== true) {\r\n    resetCsvResist({\r\n      dispatch,\r\n      resetStatus: isResetCsvPersist,\r\n      setIsResetCsvPersist,\r\n    });\r\n  }\r\n\r\n  //get warehouse & warehouse area data\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  if (isWarehouseArea === null) {\r\n    getWarehouseArea({\r\n      warehouseUuid: warehouseUuid,\r\n      dispatch,\r\n      type: \"csvValidator\",\r\n    });\r\n    setIsWarehouseArea(1);\r\n  }\r\n\r\n  //get additional outbound type\r\n  if (isAdditionalOutbound === null && type == \"additionalOutbound\") {\r\n    getOutboundType({\r\n      dispatch,\r\n      type: \"csvValidator\",\r\n    });\r\n    setIsAdditionalOutbound(1);\r\n  }\r\n\r\n  //when file droped or selected\r\n  const onDropAccepted = async (e) => {\r\n    //reset percent\r\n    setIsProgressPercent(0);\r\n    setIsUploadStatus(true);\r\n\r\n    //get file type\r\n    const file = e[0].name;\r\n    const fileArr = file.split(\".\");\r\n    const fileType = fileArr[1];\r\n\r\n    //read file\r\n    let fieldArray = field.map((obj) => obj.dataField);\r\n    putCsvFieldJson({ dispatch, jsonArray: field });\r\n\r\n    let jsonArray = null;\r\n    let cleanArray = [];\r\n    await setIsProgressStatus(\"Reading...\");\r\n    await setIsProgressFileName(file);\r\n    await setIsProgressDisplay(true);\r\n    if (fileType == \"csv\") {\r\n      jsonArray = await csvReader(\r\n        e,\r\n        fieldArray,\r\n        setIsProgressPercent,\r\n        setIsProgressStatus\r\n      );\r\n      //console.log(\"csv\", jsonArray);\r\n    } else {\r\n      jsonArray = await xlsReader(\r\n        e,\r\n        fieldArray,\r\n        setIsProgressPercent,\r\n        setIsProgressStatus,\r\n        setIsJsonArray,\r\n        dispatch\r\n      );\r\n      // console.log(\"xls\", jsonArray);\r\n    }\r\n    console.log(jsonArray);\r\n    if (jsonArray === false) {\r\n      // resetCsvResist({ dispatch, resetStatus: 1, setIsResetCsvPersist });\r\n      setModalShow(true);\r\n      return 0;\r\n    }\r\n\r\n    await setIsProgressStatus(\"Validating Column Type...\");\r\n    await validateColumn({\r\n      field,\r\n      jsonArray,\r\n      setIsProgressPercent,\r\n      fileName: file,\r\n      dispatch,\r\n      warehouseArea: selectorWarehouseArea,\r\n      warehouseUuid,\r\n      outboundType: selectorOutboundType,\r\n      setIsCheckingSchema,\r\n      warehousesData\r\n    });\r\n    await setIsProgressStatus(\"Validating PO SKU Code. . .\");\r\n  };\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    acceptedFiles,\r\n    open,\r\n  } = useDropzone({\r\n    noClick: true,\r\n    onDropAccepted,\r\n    accept:\r\n      //accept csv, xls, and xlsx\r\n      \"text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n  });\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept]\r\n  );\r\n\r\n  const cancelCsv = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  // Use Effect\r\n  useEffect(() => {\r\n    //setelah validasi kolom\r\n    // validasi PO SKU Code\r\n    // console.clear();\r\n    validatePoSkuInfoId({\r\n      dispatch,\r\n      skuData: selectorDistinctPOSKUInfoId,\r\n      status: isUploadStatus,\r\n    });\r\n  }, [selectorDistinctPOSKUInfoId]);\r\n\r\n  useEffect(() => {\r\n    //setelah validasi PO SKU Code\r\n    //validasi SKU Number\r\n    // console.clear();\r\n    setIsProgressPercent(70);\r\n    setIsProgressStatus(\"Validating SKU Numbers\");\r\n    validateSkuNumber({\r\n      dispatch,\r\n      skuNumberData: selectorDistinctSKUNumber,\r\n      bulk: true,\r\n      status: isUploadStatus,\r\n    });\r\n  }, [selectorSkuCodeValidated]);\r\n\r\n  useEffect(() => {\r\n    //setelah validasi sku number\r\n    //re arrange data yang akan digunakan di table\r\n    // console.clear();\r\n    setIsProgressPercent(90);\r\n    setIsProgressStatus(\"rearrange data. . .\");\r\n    cleaningData({\r\n      poSkuInfoValidated: selectorSkuCodeValidated,\r\n      poSkuNumberValidated: selectorSkuNumberValidated,\r\n      csvData: selectorCsvData,\r\n      transaction: transaction,\r\n      setIsProgressPercent,\r\n      dispatch,\r\n      status: isUploadStatus,\r\n      setIsProgressStatus,\r\n      nextPage,\r\n    });\r\n  }, [selectorSkuNumberValidated]);\r\n\r\n  useEffect(() => {\r\n    if (isCheckingSchema === false) {\r\n      console.log(isCheckingSchema);\r\n      setModalShow2(true);\r\n      setIsCheckingSchema(null);\r\n    }\r\n  }, [isCheckingSchema]);\r\n\r\n  return (\r\n    <div>\r\n      <PopUp\r\n        status={selectorStatus}\r\n        onCloseFunction={() => {\r\n          setModalShow(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        statusDisplay={modalShow}\r\n        title=\"Upload File Failed\"\r\n        cancelButtonTitle=\"Try Another File\"\r\n        actionButtonTitle={null}\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div>\r\n              Upload failed because your file has more than 2000 lines.{\" \"}\r\n            </div>\r\n            <div> Please make it less than 2000 lines. </div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to try another file?\"\r\n        cancelButtonClass=\"bg-red background\"\r\n        actionButtonClass=\" \"\r\n      />\r\n\r\n      <PopUp\r\n        status={200}\r\n        onCloseFunction={() => {\r\n          setModalShow2(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        actionButtonEvent={() => templateDownload()}\r\n        statusDisplay={modalShow2}\r\n        title=\"Different File Template\"\r\n        cancelButtonTitle=\"Cancel\"\r\n        actionButtonTitle=\"Download latest template\"\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div> Your uploaded file has a different template.</div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to download the latest file template ?\"\r\n        actionButtonClass=\"bg-green background\"\r\n        cancelButtonClass=\"\"\r\n      />\r\n\r\n      <div className=\"w-100 d-flex flex-column p-3 mb-3 bg-white\">\r\n        <div\r\n          className=\"d-flex flex-column justify-content-between\"\r\n          style={parentStyle}\r\n        >\r\n          <div className=\"FileUploader\">\r\n            <div\r\n              className=\"d-flex flex-column justify-content-end\"\r\n              {...getRootProps({ style })}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <i\r\n                style={{ fontSize: \"90px\" }}\r\n                className=\"lineGrey iconU-upload\"\r\n              ></i>\r\n              <b className=\"mt-2\">Drag and Drop files here</b>\r\n              <p className=\"mt-2 mb-2 emptyTextField\"> Or </p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={open}\r\n                className=\"btn px-5 py-2 text-white bg-green LatoBold no-shadow\"\r\n              >\r\n                Browse File\r\n              </button>\r\n\r\n              <div className=\"emptyTextField LatoBold mt-3 \">\r\n                Support only CSV, XLS, XLSX file\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"downloadTemplate w-100 align-right\">\r\n            <span onClick={() => templateDownload()} className=\"float-right\">\r\n              Download the File Template\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <FileUploadProgress\r\n        status={isProgressStatus}\r\n        progressPercent={isProgressPercent}\r\n        fileName={isProgressFileName}\r\n        display={isProgressDisplay}\r\n        cancelHandler={cancelCsv}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n"],"sourceRoot":""}