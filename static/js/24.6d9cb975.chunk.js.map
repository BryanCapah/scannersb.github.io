{"version":3,"sources":["Page/StockEntry/Repacking/WeightEntry/SelectedSKUList/SelectedSKU/index.jsx","Page/StockEntry/Repacking/WeightEntry/SelectedSKUList/index.jsx","Page/StockEntry/Repacking/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry/index.jsx","Page/StockEntry/Repacking/WeightEntry/services.js","Page/StockEntry/Repacking/WeightEntry/WeightEntryList/WeightEntryCard/index.jsx","Page/StockEntry/Repacking/WeightEntry/WeightEntryList/index.jsx","Page/StockEntry/Repacking/WeightEntry/index.jsx","Component/Dropdown/index.jsx","Component/Modal/ModalConfirmation/services.js","Component/Modal/ModalConfirmation/index.jsx","Component/Modal/PopUpDiscard/index.jsx","Component/Input/decimal.jsx","assets/icons/trash.png","Component/Input/index.jsx","Component/Modal/PopUpSaved/services.js","Component/Modal/PopUpSaved/index.jsx","Component/Input/Note.jsx","Component/Modal/PopUpRequired/services.js","Component/Modal/PopUpRequired/index.jsx","Component/CustomTable/index.jsx","assets/icons/refreshIcon.svg","Component/Input/Excess.jsx","Component/Input/Pack.jsx","Page/StockEntry/Repacking/services.js"],"names":["SelectedSKU","isNewItem","img","skuDescription","skuNumber","activeSku","uomValue","idx","uom","onClick","data","edited","getEditedData","isEmpty","checkisEmpty","className","onKeyDown","e","onEnter","src","alt","toUpperCase","SelectedSKUList","hideSKUList","setActiveSKU","moduleEntry","moduleName","setUpdateEntry","selectedSku","jobPost","list","length","dimention","document","documentElement","clientWidth","height","clientHeight","useState","hideContent","setHideContent","dispatch","useDispatch","thereAreRequest","useSelector","state","style","padding","Reload","updateEntries","tabIndex","to","maxHeight","map","skuName","uomLabel","unitOfMeassures","totalQty","photo","WeightEntry","entryListIdx","wmsPoSkuInfoId","gradeList","ripeness","inputWidth","showTitle","item","onChange","onChangeDropdown","poListIdx","targetRepacks","category","showSlot","slotList","ripenessLevel","wasteSemiWaste","grade","label","targetRepackList","t","Number","parseInt","slot","unitOfMeasuress","filter","s","includes","value","toLowerCase","keyCode","Dropdown","show","gradeIsEmpty","ddType","selectedValue","selected","name","title","placeholder","options","width","packThreshold","packIsEmpty","packThresholdIsEmpty","values","pack","Input","qtyIsEmpty","qty","Note","noteIsEmpty","note","Excess","hidePercent","addRow","activeTab","js","skuUuid","itemList","poList","lastSelected","gradeSelected","push","type","CREATE_JOB_SHEET","WeightEntryCard","poItem","initialWeight","inboundQty","initialWeightUpdate","initialWeightScreenUpdate","codeGrade","isHidden","initialWeightTotal","isNaN","uomType","areaName","setActiveTab","useEffect","variant","id","setTimeout","focus","getElementById","target","console","clear","test","newValue","arr","split","number","commaNumber","undefined","sliceNumber","slice","qtyToCompare","qtyToCompareIsEmpty","description","originalUom","packSize","ratio","grd","multiplier","standardWeight","inputWeight","isFloat","minus","over","totalListItemWeightCount","moduleList","initialWeightOver","updateJSWeightLine","slotIsEmpty","updateJSWeightLineDropdown","Trash","deleteRow","countQty","WeightEntryList","setHideSKUList","updateEntry","useRepackingEntry","isLoading","invalidThreshold","setInvalidThreshold","setIsSuccess","confirmation","setConfirmation","discard","setDiscard","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","totalWeight","postInfo","totalPack","status","useTargetRepack","showTargetRepack","table","setSlot","useEntryDimention","heightAdj","loading","isMobile","isPlural","isPluralPack","isEdited","showTarget","targetRepackHeight","slotListFilter","hideResetOpt","paddingLeft","module","close","discardEntry","removeEntryModule","PopUpSaved","submit","totalSku","PopUpRequired","isSuccess","save","saveJobSheet","submitValidation","minHeight","overflow","dateFull","date","Date","noTime","addDay","withDay","classNamePrefix","isMulti","resetName","marginRight","noMarginBottom","CustomTable","editColumn","styles","color","textAlign","display","columns","repackEntryData","_","getPoRepack","isDisabled","isOpen","setIsOpen","isEmptyStyle","border","elem","position","getBoundingClientRect","defaultvalue","val","menuPlacement","bottom","inputId","isSearchable","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","cursor","fontWeight","theme","borderRadius","next","isCaptcha","setIsValidated","setIsType","isType","key","type_","log","setSelectionRange","stat","index","ModalsConfirmation","moveAll","noSkuChecking","singleViewData","buttonName","window","onkeydown","areaDestinationName","warehouseDestinationName","skuListUpdate","newModule","po","_qty","isInteger","parseFloat","_sku","wasteType","_toWaste","_uom","newSku","sku","wqty","swqty","isExist","findIndex","i","skuListUpdateCheck","closeOnBackdrop","borderBottom","maxWidth","ModalsCaptcha","setIsShowModal","submitText","text","characters","charactersLength","text_split","r","charAt","Math","floor","random","selectorCsvFileName","csvFileName","React","isCaptchaText","isValidated","onClose","size","autocomplete","onKeyUp","textTransform","maxLength","PopUpDiscard","toCompare","autoComplete","exports","submitAction","setLocalEntryData","complete","saved","success","header","headerIcon","textColor","button","buttonText","failed","updateSuccess","updatedAlready","showErrorMessage","setShowErrorMessage","arrowIcon","opacity","errorText","reset","bodyOpenClassName","message","wordWrap","toString","handleFailed","isReadOnly","readOnly","defaults","threshold","isLessThanInitWeight","ReactTableFixedColumns","withFixedColumns","ReactTable","props","getColumnWidth","rows","accessor","headerText","max","row","listHeader","h","obj","Header","Cell","sortable","resizable","headerClassName","showModal","editColumnTemp","this","fields","tableStatus","Fragment","showPagination","noDataText","minRows","getTdProps","rowInfo","column","instance","handleOriginal","original","defaultPageSize","Component","Pack","selectSku","a","checked","moduleSummary","warehouseUuid","areaId","areaDestinationId","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","jsD","sI","getGrade","skuId","getPORepacking","warehouseId","addPoItem","expiryMs","inBoundyMs","expiryDate","inboundDate","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","areaSource","areaDestination","sort","b","filterBySkuName","preAddSku","preAddHandler","isClear","jsR","qtyCount","isTargetRepacks","valid","checkIsSkuRequired"],"mappings":"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","file":"static/js/24.6d9cb975.chunk.js","sourcesContent":["import React from 'react'\r\nimport { getEditedData, checkisEmpty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { onEnter } from 'services'\r\nconst SelectedSKU = ({\r\n    isNewItem,\r\n    img,\r\n    skuDescription,\r\n    skuNumber,\r\n    activeSku,\r\n    uomValue,\r\n    idx,\r\n    uom,\r\n    onClick,\r\n    data\r\n}) => {\r\n    const edited = getEditedData({ data })\r\n    const isEmpty = checkisEmpty(data)\r\n    return (\r\n        <div className={`w-100 sku-item softGreen pl-2 pr-2 pt-2 mb-3 cursor-pointer rounded ${edited ? 'soft-green' : null} ${activeSku === idx ? 'border-green' : (isEmpty ? 'border-red' : 'border')}`}>\r\n            <div className=\" w-100 d-flex justify-content-end\">\r\n                <div className={isNewItem ? 'green-dot' : 'dot'} />\r\n            </div>\r\n            <div onKeyDown={e => onEnter({ e, idx, onClick })} onClick={() => onClick()} className={`w-100 softGreen d-flex justify-content-between pl-2 pr-2 mb-3 cursor-pointer ${edited ? 'soft-green' : null}`}>\r\n                <div className='d-flex align-items-center w-100'>\r\n                    <div className='d-flex align-items-center'>\r\n                        <img src={img} alt='sku image' className='w-5 mr-3 border softGreen rounded' />\r\n                    </div>\r\n                    <div className=\"w-100\">\r\n                        <div className='mr-3 w-100 d-flex'>\r\n                            <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-between'>\r\n                            <div className='text'>{skuNumber}</div>{activeSku}\r\n                            <div className='green LatoBold'>{uomValue} <span>{`${uom ? uom.toUpperCase() : ''}${uomValue > 1 ? 's' : ''}`}</span></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKU","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './index.scss'\r\nimport SelectedSKU from 'Page/StockEntry/Repacking/WeightEntry/SelectedSKUList/SelectedSKU'\r\nimport Reload from 'assets/icons/refreshIcon.svg'\r\nimport { updateEntries } from 'apiServices'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nconst SelectedSKUList = ({\r\n    hideSKUList,\r\n    setActiveSKU,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    setUpdateEntry,\r\n}) => {\r\n    const selectedSku = moduleEntry.jobPost.list.length\r\n    const dimention = document.documentElement.clientWidth\r\n    let height = document.documentElement.clientHeight\r\n    height = height - 212\r\n    const [hideContent, setHideContent] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const thereAreRequest = useSelector(state => state.thereAreRequest)\r\n    // const { sorted } = useIsNewItem({ setActiveSKU, moduleEntry, selectedSku })\r\n    return (\r\n        <div className={`${hideSKUList ? 'w-0' : 'w-30'}  mt-md-0 rounded-bottom rounded-top`}>\r\n            <div style={{ padding: 10 }} className='w-100 bg-white border-top border-left border-right rounded-top border-soft-green text d-flex align-items-center justify-content-between' onClick={() => dimention <= 500 ? setHideContent(!hideContent) : null}>\r\n                <div className=\"LatoBold\"> Selected SKU <span className='font-green'>{`(${selectedSku} SKU${selectedSku > 1 ? 's' : ''})`}</span></div>\r\n                <div className='d-flex align-items-center justify-content-between'>\r\n                    <img className={`${thereAreRequest > 0 ? 'fa-spin-hover' : false} mt-1 pointer`} src={Reload} onClick={() => updateEntries({ moduleEntry, moduleName, dispatch, setUpdateEntry })} />\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/repacking/weight-entry/remove-sku'>\r\n                        <div className=\"fontSizeTitle px-3 emptyTextField iconU-remove\" />\r\n                    </Link>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/repacking/weight-entry/add-sku'>\r\n                        <div className='fontSizeTitle emptyTextField text-bold iconU-entryAdd' ></div>\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n            <div style={{ height: dimention <= 500 ? false : height, maxHeight: height }} className={` overflow-y w-100 bg-white mr-0 border rounded-bottom border-soft-green pl-3 pr-0 pt-3 ${hideContent ? 'd-none' : null}`}>\r\n                {\r\n                    moduleEntry?.jobPost?.list?.map((data, idx) =>\r\n                        <SelectedSKU\r\n                            isNewItem={data?.isNewItem}\r\n                            data={data}\r\n                            idx={idx}\r\n                            activeSku={activeSku}\r\n                            skuDescription={data?.skuName}\r\n                            skuNumber={data?.skuNumber}\r\n                            uomLabel={data?.unitOfMeassures}\r\n                            uomValue={data?.totalQty}\r\n                            uom={data?.unitOfMeassures}\r\n                            img={data?.photo}\r\n                            onClick={() => setActiveSKU(idx)}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKUList","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Dropdown from 'Component/Dropdown/index'\r\nimport Decimal from 'Component/Input/decimal'\r\nimport Inputs from 'Component/Input'\r\nimport Input from 'Component/Input/Pack'\r\nimport Note from 'Component/Input/Note'\r\nimport Excess from 'Component/Input/Excess'\r\n\r\n\r\nconst WeightEntry = ({\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    gradeList,\r\n    ripeness,\r\n    inputWidth,\r\n    showTitle,\r\n    item,\r\n    onChange,\r\n    onChangeDropdown,\r\n    uom,\r\n    poListIdx,\r\n    category,\r\n    showSlot,\r\n    targetRepacks,\r\n    onEnter\r\n}) => {\r\n    const ripenessLevel = useSelector(state => state.ripenessLevel)\r\n    const slotList = useSelector(state => state.slotList)\r\n    const wasteSemiWaste = item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? true : false\r\n\r\n    const targetRepackList = targetRepacks?.map(t => Number.parseInt(t.slot))\r\n    const filteredSlotList = slotList?.filter(s => targetRepackList?.includes(Number.parseInt(s.value)))\r\n\r\n    const unitOfMeasuress = item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? uom : (item?.grade?.uom?.toLowerCase() === 'gram' ? 'kg' : item?.grade?.uom)\r\n    return (\r\n        <div className='d-flex w-100 we-m' onKeyDown={e => e.keyCode === 13 ? onEnter() : false}>\r\n            {/* <Dropdown\r\n                show={showSlot}\r\n                isEmpty={item.slotIsEmpty}\r\n                poListIdx={poListIdx}\r\n                selectedValue={item?.slot}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'slot' })}\r\n                title='Slot'\r\n                placeholder='Select Slot'\r\n                options={filteredSlotList}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : null} /> */}\r\n            <Dropdown\r\n                show={true}\r\n                isEmpty={item.gradeIsEmpty}\r\n                ddType={'grade'}\r\n                poListIdx={poListIdx}\r\n                selectedValue={item?.grade}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'grade' })}\r\n                title='Grade'\r\n                placeholder='Select Grade'\r\n                options={gradeList}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={null} />\r\n            <Input\r\n                packThreshold={item.packThreshold}\r\n                className={wasteSemiWaste ? 'd-none' : null}\r\n                isEmpty={item.packIsEmpty || item.packThresholdIsEmpty}\r\n                entryListIdx={entryListIdx}\r\n                poListIdx={poListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={'PACK'}\r\n                inputWidth={inputWidth}\r\n                values={item?.pack}\r\n                showTitle={showTitle}\r\n                title={'Input Pack'}\r\n                onChange={(e) => onChange(e)} />\r\n            <Inputs\r\n                isEmpty={item.qtyIsEmpty}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={unitOfMeasuress}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                showTitle={showTitle}\r\n                title={'Input Quantity'}\r\n                onChange={(e) => onChange(e)} />\r\n            <Decimal\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={unitOfMeasuress}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            {/* 30-12-2020 */}\r\n            {/* <Decimal\r\n                toCompare={true}\r\n                isEmpty={item.qtyToCompareIsEmpty}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom !== 'kg' ? null : unitOfMeasuress === 'kg' ? null : 'KG'}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qtyToCompare}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} /> */}\r\n            {/* <Dropdown\r\n                // isDisabled={entryListIdx === 0 ? true : false}\r\n                isEmpty={item.ripenessIsEmpty}\r\n                selectedValue={item?.ripeness}\r\n                grade={item.grade?.label}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={true}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'ripeness' })}\r\n                title='Ripeness'\r\n                placeholder='Select Ripeness'\r\n                options={ripenessLevel}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : (category === 'Fruits' ? null : 'd-none')} /> */}\r\n            <Note\r\n                isEmpty={item.noteIsEmpty}\r\n                grade={item.grade?.label}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                ripeness={ripeness}\r\n                inputWidth={'w-50'}\r\n                values={item?.note}\r\n                showTitle={showTitle}\r\n                title={'Note'}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            <Excess\r\n                hidePercent={true}\r\n                className={wasteSemiWaste ? 'd-none' : null}\r\n                packThreshold={item?.qty / item?.pack}\r\n                isEmpty={false}\r\n                inputWidth={inputWidth}\r\n                showTitle={showTitle}\r\n                title={'Average Pack'} />\r\n\r\n            <Excess\r\n                className={wasteSemiWaste ? 'd-none' : null}\r\n                packThreshold={item.packThreshold}\r\n                isEmpty={item.packThresholdIsEmpty}\r\n                inputWidth={inputWidth}\r\n                showTitle={showTitle}\r\n                title={'Excess'} />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default WeightEntry","import { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { isFloat } from 'services'\r\n\r\nexport const addRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    activeTab\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    const grade = js.jobPost.list[activeSku].gradeList.filter(grade => { return grade?.value === js.jobPost.list[activeSku].skuUuid })\r\n    const itemList = js.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    const lastSelected = itemList[itemList?.length - 1]\r\n    const gradeSelected = lastSelected ? lastSelected.grade : grade[0]\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.push({\r\n        qty: '',\r\n        pack: '',\r\n        grade: gradeSelected,\r\n        slot: activeTab || activeTab === 0 ? { label: `Slot ${Number.parseInt(activeTab)}`, value: Number.parseInt(activeTab) } : null\r\n    })\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLine = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e\r\n}) => {\r\n    const name = e?.target?.name\r\n    let value = e?.target?.value\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n\r\n    if (name === 'weight' || name === 'weightToCompare') {\r\n        // js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = parseInt(value)\r\n        let regex = /^[0-9\\.\\x0]+$/\r\n        console.clear()\r\n        if ((regex.test(value) === true && value !== \"\")) {\r\n            let newValue = 0;\r\n            let arr = value?.split('.')\r\n            let number = arr[0];\r\n            if (number >= 0) number = parseInt(number)\r\n            let commaNumber = arr[1];\r\n\r\n            if ((commaNumber !== null && commaNumber !== undefined)) {\r\n                if (commaNumber.length > 2) {\r\n                    //jika dibelakang koma ada lebih dari 2 angka\r\n                    var sliceNumber = commaNumber.slice(0, 2);\r\n                    newValue = `${number}.${sliceNumber}`\r\n                } else {\r\n                    newValue = `${number}.${commaNumber}`\r\n                }\r\n            } else {\r\n                newValue = parseInt(number)\r\n            }\r\n\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompareIsEmpty = false\r\n            }\r\n\r\n        }\r\n        else {\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = ''\r\n            }\r\n        }\r\n    }\r\n    else if (name === 'qty') {\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = value ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n    }\r\n\r\n    if (name === 'note') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    if (name === 'pack') {\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].pack = value > 0 ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packIsEmpty = false\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThresholdIsEmpty = false\r\n    }\r\n    let description = js.jobPost.list[activeSku].originalUom\r\n    const { packSize, uom } = js.jobPost.list[activeSku].poList[poListIdx]\r\n    const { qty, grade, pack, note } = js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx]\r\n\r\n    if (grade, packSize, uom) {\r\n        let grd = js.jobPost.list[activeSku].gradeList.filter(grd => grd.value === grade?.value)\r\n        let ratio = grd[0]?.multiplier\r\n        // description = description.split(' ')\r\n        // description = description[description.length-1]\r\n        let standardWeight = description?.toLowerCase() == 'gram' ? packSize / 1000 : packSize\r\n        let inputWeight = qty / pack\r\n        inputWeight = inputWeight - (standardWeight / ratio)\r\n        inputWeight = inputWeight / (standardWeight / ratio)\r\n        inputWeight = inputWeight * 100\r\n        if (inputWeight >= 51 || inputWeight <= -20) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThresholdIsEmpty = true\r\n        }\r\n        else {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThresholdIsEmpty = false\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThreshold = isFloat(inputWeight)\r\n    }\r\n\r\n    const initialWeight = js.jobPost.list[activeSku].poList[poListIdx].inboundQty\r\n    let initialWeightUpdate = initialWeight\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        if (data.qty || data.pack) js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        initialWeightUpdate = initialWeightUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = initialWeightUpdate\r\n        if (initialWeightUpdate < 0) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n            js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = 0\r\n        }\r\n        else {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList.filter(item => { return item.qtyIsEmpty = false })\r\n        }\r\n    })\r\n\r\n    //initial weight from it self\r\n    const initialWeightScreen = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n    let initialWeightScreenUpdate = initialWeightScreen\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        initialWeightScreenUpdate = initialWeightScreenUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = initialWeightScreenUpdate\r\n    })\r\n    //end of initial weight from it self\r\n\r\n    const over = totalListItemWeightCount({ moduleList: js.jobPost.list[activeSku].poList[poListIdx].itemList })\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightOver = over > initialWeight ? over : 0\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLineDropdown = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    selected,\r\n    name\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n    if (name === 'grade') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].pack = ''\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThreshold = 0\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThresholdIsEmpty = false\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].uom = selected?.uom === 'gram' ? 'kg' : selected?.uom\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = null\r\n\r\n    }\r\n    if (name === 'ripeness') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    }\r\n\r\n    if (name === 'slot') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].slot = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    }\r\n\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].gradeIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].slotIsEmpty = false\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabs,\r\n} from '@coreui/react'\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport WeightEntry from \"Page/StockEntry/Repacking/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry\";\r\nimport \"./index.scss\";\r\nimport {\r\n  addRow,\r\n  updateJSWeightLine,\r\n  updateJSWeightLineDropdown\r\n} from \"Page/StockEntry/Repacking/WeightEntry/services\";\r\nimport { deleteRow, countQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { isFloat } from 'services';\r\n\r\nconst WeightEntryCard = ({\r\n  inputWidth,\r\n  activeSku,\r\n  poListIdx,\r\n  poItem,\r\n  moduleEntry,\r\n  moduleName,\r\n  gradeList,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    initialWeight,\r\n    inboundQty,\r\n    initialWeightUpdate,\r\n    initialWeightScreenUpdate,\r\n    uom,\r\n    edited,\r\n    category,\r\n    codeGrade,\r\n    isHidden,\r\n    targetRepacks\r\n  } = poItem;\r\n  const total = !isNaN(initialWeightUpdate) ? initialWeightUpdate : inboundQty;\r\n  const initialWeightTotal = !isNaN(initialWeightScreenUpdate) ? initialWeightScreenUpdate : initialWeight\r\n  const uomType = uom === \"kg\" || uom === \"gram\" ? \"Weight\" : \"Quantity\";\r\n  const grade = moduleEntry.jobPost.list[activeSku].gradeList.filter(grade => { return grade?.value === codeGrade })\r\n  const area = moduleEntry.jobPost.areaName\r\n\r\n\r\n  //filter item by active slot\r\n\r\n  const [activeTab, setActiveTab] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (targetRepacks?.length) {\r\n      setActiveTab(targetRepacks[0]?.slot)\r\n    }\r\n  }, [activeSku])\r\n  const filtered = poItem.itemList?.filter(data => Number.parseInt(data?.slot?.value) === Number.parseInt(activeTab) || !data?.slot)\r\n\r\n  return (\r\n    <div className='target-repack'>\r\n      <CTabs>\r\n        <CNav variant=\"tabs\">\r\n          <CNavItem className='d-flex'>\r\n            {targetRepacks?.map(data => <CNavLink onClick={() => setActiveTab(data?.slot)}>{`Slot ${data?.slot}`}</CNavLink>)}\r\n          </CNavItem>\r\n        </CNav>\r\n      </CTabs>\r\n      <div\r\n        // onKeyDown={e => e.keyCode === 13 ? addRow({dispatch, moduleEntry,moduleName, activeSku, poListIdx}) : false}\r\n        onKeyDown={e => e.keyCode === 13 ? false : false}\r\n        id={`sku_item_${activeSku}_${poListIdx}`}\r\n        // tabIndex='0'\r\n        className={`${isHidden ? 'd-none' : null} d-flex flex-column sku-item justify-content-between w-100 mb-3 align-items-center border rounded-bottom border-soft-green ${edited ? \"soft-green\" : null\r\n          }`}\r\n      >\r\n        {/* new logic */}\r\n        <div className='w-100'>\r\n          <div className=\"w-100 border-soft-green mt-3 d-flex align-items-start px-3 border-bottom border-soft-green mb-3\">\r\n            <div className=\"w-100 d-flex justify-content-between align-items-center LatoBold cardheader-m\">\r\n              <div className=\"d-flex align-items-center cardheader-m\">\r\n                <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n                  {`Combined PO SKU`}\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center mb-3\">\r\n                {`Initial ${uomType}`}\r\n                <span className=\"ml-2 font-green\">\r\n                  {` ${initialWeight} ${uom?.toUpperCase()}${initialWeight > 1 ? \"s\" : \"\"}`}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"d-flex flex-column justify-content-between w-100 align-items-center px-3\">\r\n            {poItem.itemList?.map((item, entryListIdx) => {\r\n              return (\r\n                <div className={`d-flex w-100 align-items-center justify-content-between ${targetRepacks?.length ? (item?.slot?.value != activeTab ? 'd-none' : null) : null}`}>\r\n                  <div className=\"w-100 d-flex\">\r\n                    <div style={{ width: '10px' }} className={`input-height d-flex align-items-center mb-3 mr-3 pt-4 mt-2 ${targetRepacks?.length ? 'd-none' : null}`}>{`${entryListIdx + 1}.`}</div>\r\n                    <div className=\"w-100\">\r\n                      <WeightEntry\r\n                        poListIdx={poListIdx}\r\n                        onEnter={() => {\r\n                          addRow({\r\n                            dispatch, moduleEntry,\r\n                            moduleName, activeSku, poListIdx, activeTab\r\n                          })\r\n                          setTimeout(() => {\r\n                            const focus = document.getElementById(`pack_${poListIdx}_${entryListIdx + 1}`)\r\n                            if (focus) focus.focus()\r\n                          }, 10);\r\n\r\n                        }}\r\n                        showSlot={targetRepacks?.length ? true : false}\r\n                        targetRepacks={targetRepacks}\r\n                        category={category}\r\n                        entryListIdx={entryListIdx}\r\n                        wmsPoSkuInfoId={item.wmsPoSkuInfoId}\r\n                        showTitle={true}\r\n                        gradeList={gradeList}\r\n                        onChange={(e) =>\r\n                          updateJSWeightLine({\r\n                            dispatch,\r\n                            moduleEntry,\r\n                            moduleName,\r\n                            activeSku,\r\n                            poListIdx,\r\n                            entryListIdx,\r\n                            e,\r\n                          })\r\n                        }\r\n                        onChangeDropdown={({ selected, name }) =>\r\n                          updateJSWeightLineDropdown({\r\n                            dispatch,\r\n                            moduleEntry,\r\n                            moduleName,\r\n                            activeSku,\r\n                            poListIdx,\r\n                            entryListIdx,\r\n                            selected,\r\n                            name,\r\n                          })\r\n                        }\r\n                        uom={uom}\r\n                        inputWidth={inputWidth}\r\n                        item={item}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex w-25 align-items-center justify-content-end input-height mb-0 p-0\">\r\n                    <img\r\n                      src={Trash}\r\n                      alt=\"delete icon\"\r\n                      className=\"w-1 cursor-pointer\"\r\n                      onClick={(e) =>\r\n                        deleteRow({\r\n                          dispatch,\r\n                          moduleEntry,\r\n                          moduleName,\r\n                          activeSku,\r\n                          poListIdx,\r\n                          entryListIdx,\r\n                          e,\r\n                          countQty\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            onKeyDown={e => e.keyCode === 13 ? addRow({ dispatch, moduleEntry, moduleName, activeSku, poListIdx }) : false}\r\n            // className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer ${total === 0 ? 'd-none' : null}`}\r\n            className={`w-100 ${targetRepacks?.length ? 'pl-3' : 'ml-5'} font-green mb-3 LatoBold cursor-pointer `}\r\n            // tabIndex='0'\r\n            onClick={() => addRow({\r\n              dispatch, moduleEntry,\r\n              moduleName, activeSku, poListIdx, activeTab\r\n            })}\r\n          >\r\n            <i className=\"green iconU-entryAdd pr-2\"></i>\r\n            {`Add ${uomType} (${isFloat(initialWeightTotal) ? isFloat(initialWeightTotal) : initialWeightTotal} ${uom ? uom.toUpperCase() : ''}${initialWeightTotal > 1 ? \"s\" : \"\"} left)`}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\nexport default WeightEntryCard;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport WeightEntryCard from 'Page/StockEntry/Repacking/WeightEntry/WeightEntryList/WeightEntryCard'\r\nimport { removeEntryModule, saveJobSheet } from 'apiServices'\r\nimport { submitValidation } from 'Page/StockEntry/Repacking/services'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\";\r\nimport PopUpRequired from \"Component/Modal/PopUpRequired\";\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport { useEntryDimention, useRepackingEntry, useTargetRepack } from 'Page/StockEntry/GeneralServices'\r\nimport CustomTable from 'Component/CustomTable'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport { dateFull } from 'services'\r\n\r\nconst WeightEntryList = ({\r\n    setActiveSKU,\r\n    hideSKUList,\r\n    setHideSKUList,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    updateEntry,\r\n    setUpdateEntry\r\n}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const {\r\n        isLoading,\r\n        invalidThreshold,\r\n        setInvalidThreshold,\r\n        setIsSuccess,\r\n        confirmation,\r\n        setConfirmation,\r\n        discard,\r\n        setDiscard,\r\n        isSaved,\r\n        setIsSaved,\r\n        action,\r\n        setAction,\r\n        isRequired,\r\n        setIsRequired,\r\n        hideContent,\r\n        setHideContent,\r\n        unitOfMeassures,\r\n        totalWeight,\r\n        edited,\r\n        postInfo,\r\n        skuName,\r\n        skuNumber,\r\n        poList,\r\n        gradeList,\r\n        totalPack,\r\n        status } = useRepackingEntry({ moduleEntry, activeSku, dispatch })\r\n\r\n    const { showTargetRepack, table, slot, setSlot, slotList } = useTargetRepack({ moduleEntry, activeSku, dispatch, moduleName })\r\n\r\n    const { dimention, height, heightAdj, loading } = useEntryDimention(showTargetRepack)\r\n\r\n    //Condition\r\n    const isMobile = dimention <= 500\r\n    const isHidden = hideContent ? 'd-none' : null\r\n    const isPlural = totalWeight > 1 ? \"s\" : ''\r\n    const isPluralPack = totalPack > 1 ? \"s\" : ''\r\n    const isEdited = edited ? 'bg-green' : 'bg-lineGrey'\r\n    const showTarget = showTargetRepack ? null : 'd-none'\r\n    const targetRepackHeight = isMobile ? 220 : 260\r\n\r\n    let slotListFilter = slotList\r\n    let hideResetOpt = false\r\n    if (slot?.length) {\r\n        if (slot[0]?.value === null) slotListFilter = []\r\n        if (slot[0]?.value) hideResetOpt = true\r\n    }\r\n    if (!poList.length) return (\r\n        <div style={{ paddingLeft: isMobile ? 0 : 10 }} className='bg-white w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green ml-2'>\r\n            <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: heightAdj, maxHeight: heightAdj }}>\r\n                <img className=\"loading\" src={loading} alt=\"loading\" />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div style={{ paddingLeft: dimention <= 500 ? 0 : 10 }} className='w-100 h-100 mt-3 mt-md-0'>\r\n            <Discard\r\n                discard={discard}\r\n                module={'repacking'}\r\n                moduleEntry={moduleEntry}\r\n                close={() => setDiscard(false)}\r\n                discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch })}\r\n            />\r\n            <PopUpSaved\r\n                updateEntry={updateEntry}\r\n                setUpdateEntry={setUpdateEntry}\r\n                status={status}\r\n                moduleEntry={moduleEntry}\r\n                submit={() => dispatch({ type: 'CREATE_JOB_SHEET', [`${moduleName}EntryData`]: null, [`${moduleName}SummaryData`]: null })}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSaved={isSaved}\r\n                action={action}\r\n                setIsSaved={setIsSaved}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <PopUpRequired\r\n                isRequired={isRequired}\r\n                module={moduleEntry}\r\n                invalidThreshold={invalidThreshold}\r\n                setIsRequired={setIsRequired}\r\n                setInvalidThreshold={setInvalidThreshold}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <Confirmation\r\n                moduleName={moduleName}\r\n                isLoading={isLoading}\r\n                moduleEntry={moduleEntry}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSuccess={postInfo}\r\n                setAction={setAction}\r\n                action={action}\r\n                save={() => saveJobSheet({ name: 'save', moduleEntry, moduleName, dispatch, setIsSuccess, table })}\r\n                submit={() => saveJobSheet({ name: 'submit', moduleEntry, moduleName, dispatch, setIsSuccess, table, submitValidation, setActiveSKU })}\r\n            />\r\n            <div className='rounded-bottom rounded-top'>\r\n                <div className={`target-repack mb-2 p-3 bg-white rounded border-top border-left border-right border-bottom rounded-top border-soft-green ${showTarget}`} style={{ maxHeight: targetRepackHeight, minHeight: targetRepackHeight, overflow: 'hidden' }}>\r\n                    <div className={`d-md-flex justify-content-between mb-3 align-items-center w-100`}>\r\n                        <div className='d-flex mb-md-0 mb-3'>\r\n                            <div className='LatoBold mr-3'>Target Repack Summary</div>\r\n                            <div className='mr-3 iconU-sideBarDot d-flex align-items-center m-0 p-0 text' />\r\n                            <div className='LatoBold font-green'>{dateFull({ date: new Date(), noTime: true, addDay: true, withDay: true })}</div>\r\n                        </div>\r\n                        <Dropdown\r\n                            hideResetOpt={hideResetOpt}\r\n                            className=\"basic-multi-select\"\r\n                            classNamePrefix=\"select\"\r\n                            isMulti={true} resetName='All Slot'\r\n                            options={slotListFilter}\r\n                            selectedValue={slot}\r\n                            onChangeDropdown={(selected) => setSlot(selected)}\r\n                            show={true}\r\n                            width={isMobile ? 'w-100' : 'w-md-25'}\r\n                            placeholder='Slot'\r\n                            title={'Slot'}\r\n                            style={{ marginRight: 0 }}\r\n                            noMarginBottom={true} />\r\n                    </div>\r\n                    <CustomTable\r\n                        editColumn={'false'}\r\n                        className={`${isMobile ? 'target-repack-mobile' : 'target-repack'} `}\r\n                        styles={{ color: 'red', textAlign: 'right', width: '100%', display: showTargetRepack ? false : 'none' }}\r\n                        data={table?.data}\r\n                        columns={table?.columns} />\r\n                </div>\r\n                <div style={{ height }} style={{ padding: 10 }} className={`bg-white w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green`}>\r\n                    <div className='d-flex w-100 m-0 p-0' onClick={() => isMobile ? setHideContent(!hideContent) : null}>\r\n                        <div className={`${hideSKUList ? 'iconU-sideBarHideRight' : 'iconU-sideBarHideLeft'} emptyTextField fontSizeTitle mr-3`} onClick={() => setHideSKUList(!hideSKUList)} />\r\n                        <div className='mr-3 pr-1 d-flex align-items-center m-0 p-0 LatoBold text'>Weight Entry</div>\r\n                        <div className='mr-3 iconU-sideBarDot d-flex align-items-center text' />\r\n                        <div className='mr-3 d-flex align-items-center font-green LatoBold'>{`${skuName} (${skuNumber})`}</div>\r\n                    </div>\r\n                    {/* <Sort moduleEntry = {moduleEntry} moduleName = {moduleName} activeSku = {activeSku} dispatch = {dispatch}/> */}\r\n                </div>\r\n                <div style={{ height: isMobile ? height : (heightAdj + 22), minHeight: isMobile ? height : (heightAdj + 22) }} className={`w-100 bg-white overflow-y mr-0 border-left border-right border-soft-green pl-3 pr-2 pt-3 ${isHidden}`}>\r\n                    {\r\n                        poList?.map((poItem, idx) => {\r\n                            return <WeightEntryCard\r\n                                gradeList={gradeList}\r\n                                inputWidth='input-w-100'\r\n                                activeSku={activeSku}\r\n                                poListIdx={idx}\r\n                                poItem={poItem}\r\n                                moduleEntry={moduleEntry}\r\n                                moduleName={moduleName}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <div className='w-100 d-flex align-items-center p-3 border-left border-right border-bottom rounded-bottom LatoBold bg-white'>\r\n                    {/* <button\r\n                        type=\"button\"\r\n                        className={`btn ${isEdited}  text-white px-5 mr-3 LatoBold`}\r\n                        onClick={() => edited ? setConfirmation({ show: true, name: 'save' }) : null}>\r\n                        Save\r\n                    </button> */}\r\n\r\n                    {/* <button\r\n                        tabIndex='0'\r\n                        type=\"button\"\r\n                        className={`btn bg-lineGrey sku-item text-white px-5 mr-3 LatoBold`}>\r\n                        Save\r\n                    </button> */}\r\n                    <div className='d-flex align-items-center'>\r\n                        <div>Total Pack <span className='font-green mr-3'>{`${totalPack} ${'PACK'}${isPluralPack}`}</span></div>\r\n                        <div className='rounded-circle bg-dark mr-3' style={{ width: 5, height: 5 }}></div>\r\n                        <div>Total Weight <span className='font-green'>{`${totalWeight} ${unitOfMeassures?.toUpperCase()}${isPlural}`}</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end mt-3\">\r\n                <div tabIndex='0' onClick={() => setDiscard(true)} className='red pr-3 sku-item fontSizeButton cursor-pointer'><i className='iconU-entryTrash'></i> Discard</div>\r\n                <button tabIndex='0' onClick={() => edited ? submitValidation({ setActiveSKU, moduleEntry, moduleName, dispatch, setConfirmation, setIsRequired, setInvalidThreshold }) : null} className={`btn px-5 sku-item py-2 text-white ${isEdited} LatoBold no-shadow`} style={{ height: \"fit-content !important\" }} >Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntryList","import React, { useState, useEffect } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SelectedSKUList from 'Page/StockEntry/Repacking/WeightEntry/SelectedSKUList'\r\nimport WeightEntryList from 'Page/StockEntry/Repacking/WeightEntry/WeightEntryList'\r\nimport { getPoList, getPoRepack } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst WeightEntry = () => {\r\n    const repackEntryData = useSelector(state => state.repackEntryData)\r\n    const dispatch = useDispatch()\r\n    const [hideSKUList, setHideSKUList] = useState(false)\r\n    const [activeSku, setActiveSKU] = useState(0)\r\n    const [updateEntry, setUpdateEntry] = useState()\r\n    let height = document.documentElement.clientHeight\r\n    let clientWidth = document.documentElement.clientWidth\r\n    let heightAdj = height - 150\r\n    const moduleName = 'repack'\r\n\r\n    useEffect(_ => {\r\n        if (repackEntryData?.jobPost.list.length > 0) getPoRepack({ dispatch, moduleName, moduleEntry: repackEntryData, activeSku })\r\n    }, [activeSku])\r\n\r\n\r\n    if (!repackEntryData || repackEntryData?.jobPost.list.length === 0) {\r\n        return (\r\n            <div className='d-flex align-items-center justify-content-center text-center w-100 h-screen'><Redirect to='/inventory-entry/repacking'>Please Select At Least 1 SKU</Redirect></div >)\r\n    }\r\n    return (\r\n        <div style={{ height: clientWidth <= 500 ? height : heightAdj }} className='w-100 d-md-flex justify-content-between scroll-y z-0'>\r\n            <SelectedSKUList\r\n                hideSKUList={hideSKUList}\r\n                activeSku={activeSku}\r\n                setActiveSKU={setActiveSKU}\r\n                moduleName={moduleName}\r\n                moduleEntry={repackEntryData}\r\n                setUpdateEntry={setUpdateEntry}\r\n            />\r\n            <WeightEntryList\r\n                setActiveSKU={setActiveSKU}\r\n                setHideSKUList={setHideSKUList}\r\n                hideSKUList={hideSKUList}\r\n                moduleName={moduleName}\r\n                moduleEntry={repackEntryData}\r\n                activeSku={activeSku}\r\n                setUpdateEntry={setUpdateEntry}\r\n                updateEntry={updateEntry}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntry","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom,\r\n    resetName,\r\n    isMulti,\r\n    hideResetOpt\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? (styles, { isOpen }) => {\r\n        return {\r\n            ...styles,\r\n            border: isOpen ? 'solid #eb5c5c 1px' : 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{ label: `-${resetName ? resetName : title}-`, value: null }]\r\n    if (options) defaultvalue = [...defaultvalue, ...options]\r\n    if (hideResetOpt) defaultvalue = defaultvalue.filter(val => val?.value)\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if (dimention <= 500) {\r\n        menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n        if (title === 'Categories') menuPlacement = 'top'\r\n    }\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                inputId={`${title}_${poListIdx}_${entryListIdx}`}\r\n                isMulti={isMulti}\r\n                isSearchable={dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : (selectedValue?.length ? selectedValue : false)}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={resetName ? resetName : placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={150}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected, isOpen }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#a8b1be',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import { isInteger } from \"formik\";\r\n\r\nexport const next = ({\r\n  e,\r\n  state,\r\n  isCaptcha,\r\n  setIsValidated,\r\n  setIsType,\r\n  isType,\r\n}) => {\r\n  const key = e.key; // const {key} = event; ES6+\r\n  let type = [...isType];\r\n\r\n  let arr_tmp = [\"ArrowUp\", \"ArrowDown\", \"Tab\"];\r\n  if (arr_tmp.includes(key)) {\r\n    return 0;\r\n  } else if (key === \"Backspace\") {\r\n    let type_ = [...isType];\r\n    let state_ = type_[state];\r\n    if (state_ == \"\" && state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).value = \"\";\r\n      type_[state - 1] = \"\";\r\n      type[state - 1] = \"\";\r\n    }\r\n    console.log(type_);\r\n  } else if (key === \"ArrowLeft\") {\r\n    if (state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) - 1))\r\n        .setSelectionRange(-1, -1);\r\n\r\n      return 0;\r\n    }\r\n  } else if (key === \"ArrowRight\") {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) + 1))\r\n        .setSelectionRange(-1, -1);\r\n      return 0;\r\n    }\r\n  } else {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n    }\r\n  }\r\n\r\n  if (key === \"Backspace\") {\r\n    type[state] = \"\";\r\n  } else {\r\n    type[state] = key.toUpperCase();\r\n  }\r\n  let char = \"QWERTYUIOPLKJHGFDSAZXCVBNM1234567890\";\r\n  let allowedChar = char.split(\"\");\r\n  if (allowedChar.includes(key.toUpperCase()) || type[state] == \"\") {\r\n    document.getElementById(\"t\" + parseInt(state)).value = type[state];\r\n    setIsType(type);\r\n  } else {\r\n    return 0;\r\n  }\r\n\r\n  let stat = true;\r\n  isCaptcha.map((data, index) => {\r\n    if (index == 0) {\r\n      return;\r\n    }\r\n    if (!(type[index + 1] == isCaptcha[index])) {\r\n      stat = false;\r\n    }\r\n  });\r\n  setIsValidated(stat);\r\n};\r\n\r\nexport const skuListUpdateCheck = (module, noSkuChecking, moduleName) => {\r\n  if (module?.length) {\r\n    let newModule = [];\r\n    module.map((list) => {\r\n      list.poList.map((po) => {\r\n        po.itemList.map((item) => {\r\n          const { qty, grade } = item;\r\n          const _qty = isInteger(qty)\r\n            ? parseInt(qty)\r\n            : !qty\r\n            ? 0\r\n            : parseFloat(qty);\r\n          const _sku = noSkuChecking\r\n            ? list.skuName\r\n            : moduleName === \"waste\"\r\n            ? item.wasteType?.label\r\n              ? item.wasteType?.label\r\n              : list.skuName\r\n            : grade?.label;\r\n          const _toWaste =\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\" ||\r\n                item.wasteType?.label === \"Waste\"\r\n                ? true\r\n                : false\r\n              : grade?.label === \"Waste\" || grade?.label === \"Semi Waste\"\r\n              ? true\r\n              : false;\r\n          const _uom = noSkuChecking\r\n            ? list.unitOfMeassures\r\n            : grade?.uom === \"gram\"\r\n            ? \"kg\"\r\n            : grade?.uom;\r\n          let newSku = {\r\n            sku: _sku,\r\n            qty: _qty,\r\n            uom: _uom,\r\n            wqty: 0,\r\n            swqty: 0,\r\n          };\r\n          if (_toWaste) {\r\n            newSku.qty = 0;\r\n            newSku.sku = list.skuName;\r\n          }\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Waste\"\r\n              : grade?.label === \"Waste\"\r\n          )\r\n            newSku.wqty = _qty;\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\"\r\n              : grade?.label === \"Semi Waste\"\r\n          )\r\n            newSku.swqty = _qty;\r\n          const isExist = newModule.findIndex(\r\n            (sku) => sku?.sku === (_toWaste ? list.skuName : _sku)\r\n          );\r\n\r\n          if (moduleName !== \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (grade?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (grade?.label === \"Waste\") newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n\r\n          if (moduleName === \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (item.wasteType?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (item.wasteType?.label === \"Waste\")\r\n                newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n    const skuName = module.length ? module[0].skuName : \"No SKU\";\r\n    const i = newModule.findIndex((s) => s.sku === skuName);\r\n    newModule.map((sku) => {\r\n      if (i !== -1) {\r\n        if (sku.sku === \"Waste\") newModule[i].wqty = sku.qty;\r\n        if (sku.sku === \"Semi Waste\") newModule[i].swqty = sku.qty;\r\n      }\r\n    });\r\n    return newModule;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { next, skuListUpdateCheck } from \"./services.js\";\r\nimport { totalQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst ModalsConfirmation = ({ moduleEntry, confirmation, setConfirmation, save, submit, isSuccess, isLoading, moveAll, setAction, moduleName, noSkuChecking, singleViewData }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 300\r\n\r\n  let buttonName = 'Submit'\r\n\r\n  if (confirmation.name === 'save') buttonName = 'Save'\r\n  useEffect(() => {\r\n    if (isSuccess) setConfirmation({ show: false, name: null })\r\n  }, [isSuccess])\r\n  window.onkeydown = e => e.keyCode === 27 ? setConfirmation({ show: false, name: null }) : null\r\n\r\n  useEffect(() => {\r\n    setAction(confirmation.name)\r\n  }, [confirmation])\r\n\r\n  let module = singleViewData && !moveAll ? singleViewData : moduleEntry\r\n\r\n  const areaDestinationName = module?.jobPost?.areaDestinationName\r\n  const warehouseDestinationName = module?.jobPost?.warehouseDestinationName\r\n  const areaName = module?.jobPost?.areaName\r\n\r\n  const skuListUpdate = skuListUpdateCheck(module?.jobPost.list, noSkuChecking, moduleName)\r\n  return (\r\n    <CRow className={confirmation.show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={confirmation.show}\r\n          closeOnBackdrop={false}\r\n        >\r\n          <CModalHeader className=\"px-4 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation <span><i className=\"em em-pray\"></i></span></CModalTitle>\r\n            <label tabIndex='0' onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false} onClick={() => setConfirmation({ show: false, name: null })} className='sku-item iconU-modalClose' />\r\n\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-4 py-0\" style={{ minHeight: height }}>\r\n            <p className=\"text mb-2\">\r\n              <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n              <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n              <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n              <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n              <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${moduleName === 'stockTransfer' ? warehouseDestinationName : (areaDestinationName ? areaDestinationName : areaName)} `}</span>\r\n            </p>\r\n            <p className=\"text\">\r\n              Please double check this list, this record will store to database.\r\n            </p>\r\n            <div\r\n              style={{\r\n                minHeight: height,\r\n                maxHeight: height,\r\n                overflow: \"auto\",\r\n                border: \"1px solid var(--lineGrey)\",\r\n              }}\r\n            >\r\n              <table>\r\n                <thead>\r\n                  <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                    <th style={{ color: \"var(--emptyTextField)\" }}>SKU List</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Weight</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Semi Waste</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Waste</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {skuListUpdate?.map((data) => (\r\n                    <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                      <td style={{ maxWidth: '160px' }}>{data.sku}</td>\r\n                      <td className=\"text-right py-3\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.qty)}`}\r\n                      </td>\r\n                      <td className=\"text-right text-nowrap\" style={{ textAlign: \"right\" }}>\r\n                        <span className='text-nowrap'>{`${totalQty(data?.swqty)} `}</span>\r\n                      </td>\r\n                      <td className=\"text-right\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.wqty)}`}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"px-0 pb-5 pt-0 justify-content-start border-none\">\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false}\r\n                className=\"bg-background sku-item text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n                onClick={() => setConfirmation({ show: false, name: null })}\r\n              >\r\n                Cancel\r\n            </CButton>\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? (isLoading ? null : (confirmation.name === 'save' ? save() : submit())) : false}\r\n                className={`${isLoading ? 'bg-softGreen text' : 'bg-green text-white'} no-shadow px-5 mt-4 sku-item mb-0 ml-3 mr-0`}\r\n                onClick={() => isLoading ? null : (confirmation.name === 'save' ? save() : submit())}\r\n              >\r\n                {isLoading ? 'Processing...' : buttonName}\r\n              </CButton>{\" \"}\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst ModalsCaptcha = ({\r\n  show = false,\r\n  setIsShowModal,\r\n  submit,\r\n  submitText = \"Submit\",\r\n}) => {\r\n  //random text\r\n  var text = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  var text_split = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    let r = characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    text += r;\r\n    text_split.push(r);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const [isCaptcha, setIsCaptcha] = React.useState(text_split);\r\n  const [isCaptchaText, setIsCaptchaText] = React.useState(text);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n  const [isButtonSubmit, setIsButtonSubmit] = React.useState(\"Submit\");\r\n  const [isType, setIsType] = React.useState([]);\r\n\r\n  //reset if visible = false \r\n  useEffect(() => {\r\n    if (show === true) {\r\n      document.getElementById('t1').value = '';\r\n      document.getElementById('t2').value = '';\r\n      document.getElementById('t3').value = '';\r\n    }\r\n  }, [show]);\r\n\r\n  return (\r\n    <CRow className={show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          onClose={() => {\r\n            setIsShowModal(false);\r\n          }}\r\n          size=\"lg\"\r\n          style={{ height: \"400px\" }}\r\n        >\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">\r\n              Are you sure want to upload <span className=\"green\">Edited</span>{\" \"}\r\n              {selectorCsvFileName}?\r\n            </p>\r\n            <p className=\"text\">\r\n              Once uploaded this record will store to databases.\r\n            </p>\r\n            <p className=\"text mb-2\">\r\n              Please type ‘{isCaptchaText}’ on the Box to confirm upload file.\r\n            </p>\r\n\r\n            <div className=\"captcha-box\">\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 1,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t1\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[0]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 2,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t2\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input ml-0 mr-0\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[1]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 3,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t3\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[2]}\r\n              />\r\n            </div>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            <CButton\r\n              className=\"bg-background text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n              onClick={() => {\r\n                setIsShowModal(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </CButton>\r\n            <CButton\r\n              className={\r\n                (isValidated ? \"bg-green\" : \"bg-emptyTextField disabled\") +\r\n                \" no-shadow px-5 mt-4 mb-0 ml-3 mr-0\"\r\n              }\r\n              onClick={() => {\r\n                submit();\r\n                setIsValidated(false);\r\n              }}\r\n            >\r\n              {submitText}\r\n            </CButton>{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport { ModalsConfirmation, ModalsCaptcha };\r\n","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    return (\r\n        <CRow className={discard ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                             from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-5 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    ripeness,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title,\r\n    toCompare\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' || uom === 'KG' ? true : false\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`wgt_${poListIdx}_${entryListIdx}`} maxLength='12' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={toCompare ? 'weightToCompare' : 'weight'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","module.exports = __webpack_public_path__ + \"static/media/trash.121a7b10.png\";","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    name\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n\r\n    // const input = document.getElementById(`qty_${poListIdx}_${entryListIdx}`)\r\n    // if (isEmpty && input) input.focus()\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","export const submitAction = ({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) => {\r\n    if (confirmation.name === 'submit') {\r\n        if (moveAll) setLocalEntryData()\r\n        submit()\r\n        setIsSaved()\r\n\r\n    }\r\n    else {\r\n        setIsSaved()\r\n    }\r\n}\r\n\r\nexport const message = ({ moduleEntry, complete }) => {\r\n    if (moduleEntry?.jobPost) {\r\n        let message = null\r\n        const { areaDestinationName, areaName } = moduleEntry?.jobPost\r\n        if (areaDestinationName) message = ` ${areaName} reefer ${areaDestinationName} - `\r\n        else message = ` ${areaName} - `\r\n        return message\r\n    }\r\n}\r\n\r\nexport const handleFailed = ({ setIsSaved, setConfirmation, action, setLocalEntryData }) => {\r\n    setIsSaved()\r\n    setConfirmation({ show: false, name: action })\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { dateFull } from 'services'\r\nimport { submitAction, message, handleFailed } from './services'\r\n\r\nconst PopUpSaved = ({\r\n    isSaved,\r\n    moduleName,\r\n    totalSku,\r\n    setIsSaved,\r\n    confirmation,\r\n    setConfirmation,\r\n    submit,\r\n    action,\r\n    moduleEntry,\r\n    complete,\r\n    setLocalEntryData,\r\n    moveAll,\r\n    status,\r\n    updateEntry,\r\n    setUpdateEntry\r\n}) => {\r\n    const saved = {\r\n        success: {\r\n            header: confirmation.name === 'submit' ? 'Success ! ' : 'Saved !',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: `${confirmation.name === 'submit' ? 'Submitted' : 'Saved'} successfully`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        failed: {\r\n            header: `${confirmation.name === 'submit' ? 'Submit' : 'Save'} Failed`,\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            date: dateFull({}),\r\n            sku: '',\r\n            module: `Sorry `,\r\n            status: 'item not recorded.',\r\n            button: 'bg-red',\r\n            buttonText: 'Try Again'\r\n        },\r\n        updateSuccess: {\r\n            header: 'Updated',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: ` updated successfully`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        updatedAlready: {\r\n            header: 'Already Updated',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: ` already updated`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        }\r\n    }\r\n    let data = isSaved ? saved.success : saved.failed\r\n    const [showErrorMessage, setShowErrorMessage] = useState(false)\r\n\r\n    let show = isSaved === true || isSaved === false ? true : false\r\n\r\n    if (updateEntry === true || updateEntry === false) {\r\n        data = updateEntry === true ? saved.updateSuccess : (updateEntry === false ? saved.updatedAlready : saved.success)\r\n        if (updateEntry) show = true\r\n        else if (updateEntry === false) show = true\r\n        else {\r\n            if (typeof (setUpdateEntry) === 'function') {\r\n                setUpdateEntry()\r\n                show = false\r\n            }\r\n        }\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_saved')\r\n    if (focus) focus.focus()\r\n\r\n    const arrowIcon = showErrorMessage ? 'iconU-arrowTop' : 'iconU-arrowBottom'\r\n    const opacity = isSaved ? 1 : (showErrorMessage ? 1 : 0)\r\n    const errorText = showErrorMessage ? 'Hide Message' : 'Show Message'\r\n\r\n    const reset = () => {\r\n        setIsSaved()\r\n        if (typeof (setUpdateEntry) === 'function') setUpdateEntry()\r\n    }\r\n    return (\r\n        <CRow onKeyDown={e => e.keyCode === 27 ? setIsSaved() : false} className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    className={`${isSaved ? null : 'popup-saved'}`}\r\n                    show={show}\r\n\r\n                    onClose={() => {\r\n                        if (isSaved) submitAction({ confirmation, setIsSaved, submit })\r\n                        if (!isSaved) setIsSaved()\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit }) : reset()} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${data.textColor} LatoBold mr-2 h5 mb-3`}>{data.header}</label> <span><i className={`${data.headerIcon}`}></i></span>\r\n                        <div className='mr-1 h5 mb-3'>{`Entries ${data.status}`}</div>\r\n                        <div onClick={() => setShowErrorMessage(!showErrorMessage)} className={`d-flex align-items-center mr-1 mb-3 error-message pointer ${isSaved || updateEntry === true || updateEntry === false ? 'd-none' : null}`}>\r\n                            <div className={`mr-2 ${arrowIcon}`} />\r\n                            <div className='green'>{errorText}</div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA', opacity: opacity }} className='w-100 border rounded px-3 pt-3 pb-3 mb-3'>\r\n                            <div className={`h5 mb-3 ${isSaved ? null : 'd-none'}`}>{data.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className={`mr-1 ${isSaved ? null : 'd-none'}`}>{`${message({ moduleEntry, complete })} ${data.sku}`}</label>\r\n                                <div className={`mr-1 ${isSaved || updateEntry ? 'd-none' : null}`}>\r\n                                    <div style={{ wordWrap: 'break-word !important', opacity: opacity, height: showErrorMessage ? false : 0 }} className={`mr-1 `}>\r\n                                        {`${status?.message?.toString() ? status?.message?.toString() : 'The transaction cannot be processed. Please update current entries'}`}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`mb-2 h5 ${confirmation.name === 'submit' ? 'd-none' : null}`}>Please continue your work</div>\r\n                        <div className='w-100 d-flex '>\r\n                            <CButton onClick={() => reset()} className={`text no-shadow px-5 mr-4 mb-3 ${`bg-softGreen ${isSaved ? 'd-none' : null}`}`}>\r\n                                Cancel\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => setUpdateEntry()} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button} ${updateEntry === true || updateEntry === false ? null : 'd-none'}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) : handleFailed({ setIsSaved, setConfirmation, action })} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button} ${updateEntry === true || updateEntry === false ? 'd-none' : null}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","import React from 'react'\r\nconst Note = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    isReadOnly,\r\n    poListIdx\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${grade === 'Waste' ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} border rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`note_${poListIdx}_${entryListIdx}`} readOnly={isReadOnly} autoComplete='off' className='w-100 plain-input' value={values} name='note' onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","export let defaults = {\r\n    header: 'Complete All !',\r\n    headerIcon: 'em em-anger',\r\n    textColor: 'red',\r\n    date: 'You are  required to update all entries on the list.',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Check several entries left.',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const threshold = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'The threshold calculation ratio should be between -20% until 50%',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const initialWeight = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'Add Weight should not exceed Initial Weight',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}","import React from \"react\";\r\nimport { isLessThanInitWeight } from 'services'\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n    CModalFooter\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { threshold, initialWeight, defaults } from './services'\r\n\r\nconst PopUpSaved = ({ isRequired, setIsRequired, moduleName, module, totalSku, invalidThreshold, setInvalidThreshold }) => {\r\n    let saved = defaults;\r\n    let isTrue\r\n    if ((!isRequired && invalidThreshold) || (isRequired && invalidThreshold)) {\r\n        saved = threshold\r\n    }\r\n\r\n    if (moduleName !== 'stockTake') {\r\n        isTrue = isLessThanInitWeight(module)\r\n        if (isTrue) saved = initialWeight\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_required')\r\n    if (focus) focus.focus()\r\n    return (\r\n        <CRow className={isRequired || invalidThreshold ? null : 'd-none'}>\r\n            <CCol className='required'>\r\n                <CModal\r\n                    show={isRequired || invalidThreshold}\r\n                    onClose={() => {\r\n                        setIsRequired(false)\r\n                        if (invalidThreshold) setInvalidThreshold(false)\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${saved?.textColor} LatoBold mr-2 mb-5 h5`}>{saved?.header}</label> <span><i className={`${saved?.headerIcon}`}></i></span>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100 border rounded px-3 pt-4 pb-3 mb-4'>\r\n                            <div className={`h5 mb-3 ${isRequired || invalidThreshold ? null : 'd-none'}`}>{saved?.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className='mr-1 h5'>{`${saved?.status}`}</label>\r\n                            </div>\r\n                        </div>\r\n                    </CModalBody>\r\n                    <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none d-flex mt-2\">\r\n                        <CButton onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} className={`text no-shadow ${`bg-softGreen ${isRequired ? 'd-none' : null}`}`}>\r\n                            Cancel\r\n                        </CButton>\r\n                        <CButton\r\n                            id={'btn_is_required'}\r\n                            tabIndex='0'\r\n                            onClick={() => {\r\n                                setIsRequired(false)\r\n                                if (invalidThreshold) setInvalidThreshold(false)\r\n                            }} className={`text-white no-shadow ${saved?.button}`}>\r\n                            {saved?.buttonText}\r\n                        </CButton>\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","import ReactTable from 'react-table-v6'\r\nimport 'react-table-v6/react-table.css'\r\nimport './CustomTable.scss'\r\nimport React from 'react'\r\n\r\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\r\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\r\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\r\n\r\nclass CustomTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            activeTab: '1',\r\n            editColumnTemp: {},\r\n        }\r\n    }\r\n\r\n    getColumnWidth = (rows, accessor, headerText) => {\r\n        const cellLength = Math.max(\r\n            ...rows.map(row => {\r\n                let value = '';\r\n                value = accessor(row);\r\n                // if (typeof accessor === 'string') {\r\n                //     value = _.get(row, accessor);\r\n                // } else {\r\n                //     value = accessor(row);\r\n                // }\r\n                if (typeof value === 'number') return value.toString().length;\r\n                return (value || '').length;\r\n            }),\r\n            headerText.length\r\n        );\r\n        return cellLength * 12\r\n    }\r\n\r\n    headerIcon = (data, header, editColumn) => {\r\n        let listHeader = []\r\n        header && header.map((h, index) => {\r\n            if (!editColumn[index]) {\r\n                let withIcon = (<span>\r\n                    {h.Header} <i className=\"iconU-sort\"> </i>\r\n                </span>\r\n                )\r\n                let obj = {\r\n                    Header: withIcon,\r\n                    Cell: h.Cell,\r\n                    accessor: h.accessor,\r\n                    sortable: h.sortable === false ? false : true,\r\n                    resizable: h.resizable || false,\r\n                    className: h.className || null,\r\n                    headerClassName: h.headerClassName || null,\r\n                    style: h.style || null,\r\n                    width: h.width || null,\r\n                }\r\n                return listHeader = [...listHeader, obj]\r\n            } else {\r\n                return listHeader = [...listHeader]\r\n            }\r\n        })\r\n\r\n        if (this.props.editColumn !== 'false') {\r\n            let editBtn = (\r\n                <i className='iconU-tableEdit pencilTable' />\r\n            )\r\n            let obj = {\r\n                Header: editBtn,\r\n                accessor: 'editBtn',\r\n                width: 50,\r\n                style: { textAlign: 'center' },\r\n            };\r\n            listHeader = [...listHeader, obj];\r\n        }\r\n\r\n        return listHeader;\r\n    };\r\n\r\n    render() {\r\n        const { showModal, editColumnTemp, fields } = this.state\r\n        let { columns, data, onClick, styles, tableStatus, className } = this.props\r\n        let headerIcon = this.headerIcon(data, columns, editColumnTemp);\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <ReactTableFixedColumns\r\n                    className={className}\r\n                    columns={headerIcon}\r\n                    data={data}\r\n                    showPagination={false}\r\n                    style={styles}\r\n                    noDataText={tableStatus == \"noData\" ? 'Please Wait' : 'No  Data Found'}\r\n                    minRows='0'\r\n                    resizable={false}\r\n                    getTdProps={(state, rowInfo, column, instance) => {\r\n                        return {\r\n                            onClick: (e, handleOriginal) => {\r\n                                !!onClick &&\r\n                                    onClick(rowInfo.original, state, column, e, instance);\r\n                            },\r\n                            style: {\r\n                                height: \"3rem\",\r\n                                cursor: !!onClick && 'pointer',\r\n                                textAlign: isNaN(rowInfo?.original[column.id])\r\n                                    ? 'left'\r\n                                    : 'right',\r\n                            },\r\n                        };\r\n                    }}\r\n                    defaultPageSize={50}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CustomTable","module.exports = __webpack_public_path__ + \"static/media/refreshIcon.de5bc1ae.svg\";","import React from 'react'\r\nimport { isFloat } from 'services'\r\nconst Pack = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    placeholder,\r\n    grade,\r\n    title,\r\n    className,\r\n    packThreshold,\r\n    hidePercent\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={`${inputWidth} mb-3 mr-3 ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold text-nowrap ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={` ${isEmpty ? 'tooltip-custom' : 'tooltip-custom1'} w-100 d-flex align-items-center input-height px-2 mr-3`}>\r\n                <div className={`LatoBold ${inputWidth} ${isEmpty ? 'red' : 'green'}`}>{`${packThreshold && !isNaN(parseInt(packThreshold)) ? `${isFloat(packThreshold)}${hidePercent ? '' : '%'}` : (hidePercent ? '0' : '0%')}`}</div>\r\n                <span className={`${isEmpty ? 'tooltiptext' : 'd-none'}`}>\r\n                    <span style={{ fontWeight: 600 }}>Threshold Error</span>\r\n                    <br />\r\n                    <span>{`Cannot be larger than 50%. Your current threshold is ${packThreshold}%`}</span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pack","import React from 'react'\r\nconst Pack = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    placeholder,\r\n    grade,\r\n    title,\r\n    className,\r\n    packThreshold\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`pack_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name='pack' placeholder={placeholder} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pack","import { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { getPORepacking } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { dateFull, isFloat } from 'services'\r\nimport { checkIsSkuRequired, filterBySkuName, totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    areaDestinationId }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    let targetRepacks = []\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPORepacking({ skuId: list.skuUuid, warehouseId: warehouseUuid, uom: list.unitOfMeassures })\r\n            // const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = [\r\n                    {\r\n                        itemList: [],\r\n                        expiryMs: null,\r\n                        inBoundyMs: null,\r\n                        expiryDate: null,\r\n                        inboundDate: null,\r\n                        skuUuid: list.skuUuid,\r\n                        uom: list.unitOfMeassures,\r\n                        packSize: list.packSize,\r\n                        category: list.category,\r\n                        initialWeight: Number.isInteger(data?.data.totalWeight) ? parseInt(data?.data.totalWeight) : parseFloat(data?.data.totalWeight),\r\n                        targetRepacks: data?.data.targetRepacks\r\n                    }\r\n                ]\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaDestinationId?.value),\r\n            areaDestinationName: areaDestinationId?.label,\r\n            list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    setLocalEntryData(jobSheet)\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            // const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            const data = await getPORepacking({ skuId: list.skuUuid, warehouseId: warehouseUuid, uom: list.unitOfMeassures })\r\n            if (data) {\r\n                const addPoItem = [\r\n                    {\r\n                        itemList: [],\r\n                        expiryMs: null,\r\n                        inBoundyMs: null,\r\n                        expiryDate: null,\r\n                        inboundDate: null,\r\n                        skuUuid: list.skuUuid,\r\n                        uom: list.unitOfMeassures,\r\n                        packSize: list.packSize,\r\n                        category: list.category,\r\n                        initialWeight: isFloat(data?.data.totalWeight) ? isFloat(data?.data.totalWeight) : data?.data.totalWeight,\r\n                        targetRepacks: data?.data.targetRepacks\r\n                    }\r\n                ]\r\n                // const addPoItem = data.map(poList => {\r\n                //     poList.itemList = []\r\n\r\n                //     const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                //     const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                //     poList.expiryDate = expiryMs\r\n                //     poList.inboundDate = inBoundyMs\r\n                //     poList.skuUuid = list.skuUuid\r\n                //     poList.uom = list.unitOfMeassures\r\n                //     poList.category = list.category\r\n                //     poList.packSize = list.packSize\r\n                //     poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                //     return poList\r\n                // })\r\n                list['poList'] = addPoItem\r\n                list.isNewItem = true\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired, setInvalidThreshold }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    let invalidThreshold = []\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        let description = data.originalUom\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            const { packSize, targetRepacks } = po\r\n            const isTargetRepacks = targetRepacks?.length ? true : false\r\n            po.itemList.map(item => {\r\n                const { qty, grade, pack, note, slot } = item\r\n\r\n                // if (po.uom === 'kg') {\r\n                if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                    item.qtyIsEmpty = false\r\n                    item.gradeIsEmpty = false\r\n                    item.noteIsEmpty = false\r\n                    item.packIsEmpty = false\r\n                    item.packThresholdIsEmpty = false\r\n                }\r\n                else {\r\n                    if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        // isNaN(pack) || pack == 0 || pack === \"\" || pack === null ? item.packIsEmpty = true : item.packIsEmpty = false\r\n                    }\r\n                    else {\r\n                        let grd = data.gradeList.filter(grd => grd.value === grade.value)\r\n                        let ratio = grd[0].multiplier\r\n                        // description = description.split(' ')\r\n                        // description = description[description.length-1]\r\n                        let standardWeight = description?.toLowerCase() == 'gram' ? packSize / 1000 : packSize\r\n                        let inputWeight = qty / pack\r\n                        inputWeight = inputWeight - (standardWeight / ratio)\r\n                        inputWeight = inputWeight / (standardWeight / ratio)\r\n                        inputWeight = inputWeight * 100\r\n                        if (inputWeight >= 51 || inputWeight <= -20) {\r\n                            item.packThresholdIsEmpty = true\r\n                            invalidThreshold.push(true)\r\n                        }\r\n                        else {\r\n                            item.packThresholdIsEmpty = false\r\n                            invalidThreshold.push(false)\r\n                        }\r\n                        item.packThreshold = isFloat(inputWeight)\r\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        isNaN(pack) || pack == 0 || pack === \"\" || pack === null ? item.packIsEmpty = true : item.packIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        if (isTargetRepacks) {\r\n                            !slot?.value && slot?.value?.toString() !== '0' ? item.slotIsEmpty = true : item.slotIsEmpty = false\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // 30-12-2020\r\n                // qty to compare is required\r\n                // const unitOfMeasuress = grade?.uom?.toLowerCase() === 'gram' ? 'kg' : grade?.uom ? grade?.uom : po.uom\r\n                // const qtyToCompareCheck = po.uom !== 'kg' ? false : unitOfMeasuress === 'kg' ? false : true\r\n                // if(qtyToCompareCheck){\r\n                //     item.qtyToCompare || item.qtyToCompare === 0 ? item.qtyToCompareIsEmpty = false : item.qtyToCompareIsEmpty = true\r\n                // }\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                // if(!item.qtyIsEmpty) po.initialWeightOver > po.initialWeight ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item.packIsEmpty || item?.noteIsEmpty || item?.qtyToCompareIsEmpty || item?.slotIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(false)\r\n    }\r\n    else {\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    if (!invalidThreshold.includes(true)) {\r\n        if (typeof (setInvalidThreshold) === 'function') setInvalidThreshold(false)\r\n    }\r\n    else {\r\n        if (typeof (setInvalidThreshold) === 'function') setInvalidThreshold(true)\r\n    }\r\n\r\n    if (!isClear.includes(false) && valid && !invalidThreshold.includes(true)) {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}"],"sourceRoot":""}