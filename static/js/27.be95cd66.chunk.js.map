{"version":3,"sources":["Component/FileUploaderStockTransfer/services.js","Component/FileUploaderStockTransfer/index.jsx","Page/StockEntry/StockTransfer/Upload/index.jsx","Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/FileUploadProgress/index.jsx"],"names":["templateDownload","document","getElementById","click","csvReader","e","fieldArray","setIsProgressPercent","Promise","resolve","reject","i","jsonArray","reader","FileReader","onload","csv","parse","result","err","data","length","map","obj","index","newObject","toString","split","csvObj","csvIndex","push","percentage","Math","ceil","setTimeout","readAsBinaryString","xlsReader","setIsJsonArray","dispatch","a","evt","bstr","target","wb","XLSX","type","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","csvArray2","string","includes","x","putCsvFieldJson","STOK_TAKE_UPLOAD_JSON","csvField","validateColumn","field","fileName","warehouseArea","warehouseUuid","outboundType","setIsCheckingSchema","setIsCheckingArea","warehousesData","payloadPO","warehouseCodeList","warehouseUuidList","warehouseNameList","d","code","id","name","wh_area_label","label","toUpperCase","wh_area_value","value","wh_outboundtype_label","wh_outboundtype_value","csv_schema","text","replace","distinctPOSKUInfoId","distinctSKUNumber","distinctAreaSource","distinctAreaDestination","schemaRow","key","keys","console","clear","log","shift","emptyRow","fieldData","fieldIndex","undefined","dataField","warehouseData","indexOf","warehouseDestinationData","warehouseAreaData","areaDestinationData","outboundData","parseInt","tmp_data","stat","isNaN","match","wmsPoSkuCode","skuNumber","areaSource","qty","csvData","csvFileName","csvDistinctPOSKUInfoId","csvDistinctSKUNumber","cleaningData","poSkuInfoValidated","poSkuNumberValidated","status","transaction","setIsProgressStatus","nextPage","POSKUCodeID","skuNumberArray","skuUuidArray","skuPhotosArray","skuUomArray","imageMd","uom","cleanData","areaDestination","warehouseDestination","warehouseSource","indexId","skuValidatedData","inboundDate","wmsPoSkuCodeStatus","isExist","wmsPoSkuCodeReason","errorMessage","tmp_grade","newGrade","arr_grade","idx","newGradeStatus","newGradeUuid","newGradeReason","tmp_sku_number","skuUuid","photo","skuNumberStatus","skuNumberReason","tmp_new_grade","newGradeUom","resetCsvResist","resetStatus","setIsResetCsvPersist","VALIDATE_PO_SKU_INFO_ID","skuCodeValidated","STATUS","baseStyle","flex","display","flexDirection","alignItems","paddingTop","paddingBottom","paddingLeft","paddingRight","outline","transition","height","parentStyle","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","activeStyle","acceptStyle","rejectStyle","FileUploader","React","useState","isProgressDisplay","setIsProgressDisplay","isProgressStatus","isProgressPercent","isProgressFileName","setIsProgressFileName","isWarehouseArea","setIsWarehouseArea","isAdditionalOutbound","setIsAdditionalOutbound","isUploadStatus","setIsUploadStatus","isCheckingSchema","isCheckingArea","isResetCsvPersist","modalShow","setModalShow","modalShow2","setModalShow2","modalShow3","setModalShow3","useDispatch","selectorWarehouseArea","useSelector","state","warehouseAreaCsv","selectorOutboundType","outboundTypeCsv","selectorStatus","selectorDistinctSKUNumber","selectorSkuCodeValidated","selectorSkuNumberValidated","skuNumberValidated","selectorCsvData","selectorPayloadPO","user","getWarehouseArea","getOutboundType","onDropAccepted","file","fileArr","fileType","useDropzone","noClick","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","open","style","useMemo","useEffect","validateSkuNumber","skuNumberData","bulk","poNewPayload","validatePoSkuStockTransfer","skuData","poSkuCode","weight","validatePOCode","PopUp","onCloseFunction","statusDisplay","title","cancelButtonTitle","actionButtonTitle","colorText","refreshOnCancel","msg1","msg2","cancelButtonClass","actionButtonClass","actionButtonEvent","className","fontSize","onClick","FileUploadProgress","progressPercent","cancelHandler","window","location","reload","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","withRouter","props","getWarehouses","element","filename","expiryDate","po","inputWeight","history","editable","sort","hidden","refresh","icon","setIsSuccess","message","show","setShow","onkeydown","keyCode","closeOnBackdrop","onClose","success","size","minHeight","bodyOpenClassName","refreshPage","parentOncCloseFunction","cancelButton","lineHeight","cursor","class","role","width","aria-valuemin","aria-valuemax"],"mappings":"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","file":"static/js/27.be95cd66.chunk.js","sourcesContent":["/* eslint-disable array-callback-return */\r\nimport csv from \"csv\";\r\nimport * as XLSX from \"xlsx\";\r\nimport {\r\n  STOK_TAKE_UPLOAD_JSON,\r\n  VALIDATE_PO_SKU_INFO_ID,\r\n  STATUS,\r\n} from \"apiServices/action\"; \r\n \r\n\r\nexport const templateDownload = () => {\r\n  document.getElementById(\"download-template-xls\").click();\r\n};\r\nexport const csvReader = (e, fieldArray, setIsProgressPercent) => {\r\n  return new Promise((resolve, reject) => {\r\n    let i = 0;\r\n    let jsonArray = [];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      csv.parse(reader.result, (err, data) => {\r\n        if (data.length > 2001) {\r\n          //why 2001? , because line 1 is header\r\n          setIsProgressPercent(0);\r\n          resolve(false);\r\n        }\r\n        data.map((obj, index) => {\r\n          if (index === 0) {\r\n            i++;\r\n            return false; // skip\r\n          }\r\n\r\n          let newObject = {};\r\n          newObject[\"id\"] = index;\r\n\r\n          let csvArray = data[i].toString().split(\";\");\r\n          csvArray.map((csvObj, csvIndex) => {\r\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\r\n          });\r\n          i++;\r\n          jsonArray.push(newObject);\r\n\r\n          //count percent\r\n          let percentage = ((index + 1) * 25) / data.length;\r\n          setIsProgressPercent(Math.ceil(percentage));\r\n        });\r\n      });\r\n    };\r\n\r\n    //checking\r\n    setTimeout(() => {\r\n      resolve(jsonArray);\r\n    }, 200);\r\n    reader.readAsBinaryString(e[0]);\r\n  });\r\n};\r\n\r\nexport const xlsReader = async (\r\n  e,\r\n  fieldArray,\r\n  setIsProgressPercent,\r\n  setIsJsonArray,\r\n  dispatch\r\n) => {\r\n  let i = 0;\r\n  let jsonArray = [];\r\n  const reader = new FileReader();\r\n  let data = null;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    reader.onload = async (evt) => {\r\n      /* Parse data */\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n      /* Update state */\r\n\r\n      await csv.parse(data, (err, data) => {\r\n        if (data.length > 2001) {\r\n          //why 2001? , because line 1 is header\r\n          setIsProgressPercent(0);\r\n          resolve(false);\r\n        } \r\n        data.map((obj, index) => {\r\n          let newObject = {};\r\n          newObject[\"id\"] = index;\r\n\r\n          // let csvArray = data[i].toString().split(\",\");  \r\n          let escapeString = [];\r\n          let csvArray2 = null;\r\n\r\n          if(i===0){\r\n            escapeString = data[i].map((string,i) => string.includes(\",\")  ?  `\\\"${string}\\\"` : `${string}`); \r\n            csvArray2 = escapeString.toString().split(',');   \r\n          }else{ \r\n            escapeString = data[i].map((string,x) => { \r\n              let ret = null;\r\n              if(string.includes(\",\")){\r\n                ret =  `\\\"${string}\\\"`;\r\n              }else if(x === 0){\r\n                ret = `${string}\"`;\r\n              }else if( x===data[i].length-1){\r\n                ret = `\"${string}`\r\n              }else{\r\n                ret = `\"${string}\"`\r\n              }\r\n              return ret; \r\n              // string.includes(\",\")  ?  `\\\"${string}\\\"` : (x === 0 || x===data.length-1  ? `${string}\"` : `\"${string}\"`)\r\n            }); \r\n            let x = escapeString.toString();\r\n            csvArray2 = x.split('\",\"');    \r\n          } \r\n \r\n          csvArray2.map((csvObj, csvIndex) => {\r\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\r\n          });\r\n          i++;\r\n          jsonArray.push(newObject);\r\n\r\n          //count percent\r\n          let percentage = ((index + 1) * 25) / data.length;\r\n          setIsProgressPercent(Math.ceil(percentage));\r\n        });\r\n      });\r\n\r\n      //checking\r\n      setTimeout(() => {\r\n        resolve(jsonArray);\r\n      }, 200);\r\n    };\r\n\r\n    reader.readAsBinaryString(e[0]);\r\n  });\r\n};\r\n\r\nexport const putCsvFieldJson = ({ dispatch, jsonArray }) => {\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvField: jsonArray });\r\n};\r\n\r\nexport const validateColumn = async ({\r\n  field,\r\n  jsonArray,\r\n  setIsProgressPercent,\r\n  fileName,\r\n  dispatch,\r\n  warehouseArea,\r\n  warehouseUuid,\r\n  outboundType,\r\n  setIsCheckingSchema,\r\n  setIsCheckingArea,\r\n  warehousesData,\r\n}) => {\r\n\r\n  // New Payload PO\r\n  let payloadPO = [];\r\n\r\n  //warehouse\r\n  let warehouseCodeList = [];\r\n  let warehouseUuidList = [];\r\n  let warehouseNameList = [];\r\n  if (warehousesData) {\r\n    warehousesData.data.map((d) => {\r\n      warehouseCodeList.push(d.code);\r\n      warehouseUuidList.push(d.id);\r\n      warehouseNameList.push(d.name);\r\n    });\r\n  }\r\n\r\n  //warehouse area\r\n  let wh_area_label = !warehouseArea\r\n    ? []\r\n    : warehouseArea.map((data) => data.label.toUpperCase());\r\n  let wh_area_value = !warehouseArea\r\n    ? []\r\n    : warehouseArea.map((data) => data.value);\r\n  let wh_outboundtype_label = !outboundType\r\n    ? []\r\n    : outboundType.map((data) => data.label.toUpperCase());\r\n  let wh_outboundtype_value = !outboundType\r\n    ? []\r\n    : outboundType.map((data) => data.value);\r\n  let csv_schema = !field\r\n    ? []\r\n    : field.map((data) => data.text.toUpperCase().replace(/\\s/g, \"\"));\r\n  let distinctPOSKUInfoId = [];\r\n  let distinctSKUNumber = [];\r\n  let distinctAreaSource = [];\r\n  let distinctAreaDestination = [];\r\n\r\n  // check schema\r\n  let checkSchema = true;\r\n  let i = 0;\r\n  const schemaRow = jsonArray[0];\r\n  for (var key in schemaRow) {\r\n    if (key == \"id\") {\r\n      continue;\r\n    }\r\n    let keys = schemaRow[key].toUpperCase().replace(/\\s/g, \"\");\r\n    if (\r\n      key !== \"undefined\" &&\r\n      (csv_schema[i + 1] !== keys || !csv_schema.includes(keys))\r\n    ) {\r\n      console.clear();\r\n      console.log(\"--Schema Not Same--\");\r\n      console.log(\"Schema \\t\\t: \", csv_schema[i + 1]);\r\n      console.log(\"File SChema : \", keys);\r\n      checkSchema = false;\r\n      setIsCheckingSchema(false);\r\n      return 0;\r\n    }\r\n    i++;\r\n  }\r\n\r\n  jsonArray.shift();\r\n  await jsonArray.map((data, index) => {\r\n    let emptyRow = true; // if empty row dont show\r\n    field.map((fieldData, fieldIndex) => {\r\n      //if null then return\r\n      if (fieldData === undefined || fieldData === null) {\r\n        return;\r\n      } \r\n      if (fieldData.dataField !== \"id\" && data[fieldData.dataField] == \"\" ) {\r\n        return;\r\n      } else if (fieldData.dataField !== \"id\") {\r\n        emptyRow = false;\r\n      }\r\n      // end checking empty\r\n\r\n      //set warehouse id\r\n      data[\"warehouseSource\"] = warehouseUuid;\r\n\r\n      //checking warehouse\r\n      if (warehouseCodeList && fieldData.dataField == \"warehouse\") {\r\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`;\r\n          data[\"warehouseUuid\"] = \"\";\r\n          data[\"warehouseName\"] = \"\";\r\n          return;\r\n        } else {\r\n          let warehouseData = warehouseCodeList.indexOf(data[fieldData.dataField]);\r\n          data[\"warehouseUuid\"] = warehouseUuidList[warehouseData];\r\n          data[\"warehouseName\"] = warehouseNameList[warehouseData];\r\n        }\r\n      }\r\n\r\n      //checing warehouse Destination\r\n      if (warehouseCodeList && fieldData.dataField == \"warehouseDestination\") {\r\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`;\r\n          data[\"warehouseDestinationUuid\"] = \"\";\r\n          data[\"warehouseDestinationName\"] = \"\";\r\n          return;\r\n        } else {\r\n          let warehouseDestinationData = warehouseCodeList.indexOf(data[fieldData.dataField]);\r\n          data[\"warehouseDestinationUuid\"] = warehouseUuidList[warehouseDestinationData];\r\n          data[\"warehouseDestinationName\"] = warehouseNameList[warehouseDestinationData];\r\n        }\r\n      }\r\n\r\n      //checking warehouse area\r\n      if (fieldData.dataField == \"areaName\") {\r\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\r\n          data[\"areaSource\"] = null;\r\n          return;\r\n        } else {\r\n          let warehouseAreaData = wh_area_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"areaSource\"] = wh_area_value[warehouseAreaData];\r\n\r\n          if (!distinctAreaSource.includes(wh_area_value[warehouseAreaData])) {\r\n            distinctAreaSource.push(wh_area_value[warehouseAreaData]);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (fieldData.dataField == \"areaNameDestination\") {\r\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\r\n          data[\"areaDestination\"] = null;\r\n          return;\r\n        } else {\r\n          let areaDestinationData = wh_area_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"areaDestination\"] = wh_area_value[areaDestinationData];\r\n\r\n          if (!distinctAreaDestination.includes(wh_area_value[areaDestinationData])) {\r\n            distinctAreaDestination.push(wh_area_value[areaDestinationData]);\r\n          }\r\n        }\r\n      }\r\n\r\n      //checking outbound type\r\n      if (\r\n        wh_outboundtype_value.length > 0 &&\r\n        fieldData.dataField == \"outboundType\"\r\n      ) {\r\n        if (\r\n          !wh_outboundtype_label.includes(\r\n            data[fieldData.dataField].toUpperCase()\r\n          )\r\n        ) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Outbound Type Not Found`;\r\n          data[\"outboundTypeCode\"] = null;\r\n          return;\r\n        } else {\r\n          let outboundData = wh_outboundtype_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"outboundTypeCode\"] = wh_outboundtype_value[outboundData];\r\n        }\r\n      }\r\n\r\n      //newgrade\r\n      if (fieldData.dataField == \"newGrade\") {\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n        if (\r\n          data[fieldData.dataField] &&\r\n          !arr_grade.includes(data[fieldData.dataField].toUpperCase())\r\n        ) {\r\n          //if not waste or semi waste\r\n          if (parseInt(data[fieldData.dataField])) {\r\n            //if number, check sku number\r\n            if (!distinctSKUNumber.includes(data[fieldData.dataField])) {\r\n              distinctSKUNumber.push(data[fieldData.dataField]);\r\n            }\r\n            data[fieldData.dataField + \"Status\"] = true;\r\n          } else if (data[fieldData.dataField] == \"\") {\r\n            //if null\r\n            data[fieldData.dataField + \"Status\"] = true;\r\n          } else {\r\n            //if not number => undefined\r\n            data[fieldData.dataField + \"Status\"] = false;\r\n            data[fieldData.dataField + \"Reason\"] = `Grade Undefined`;\r\n          }\r\n        } else {\r\n          data[\"newGradeUuid\"] = data[fieldData.dataField];\r\n        }\r\n      }\r\n\r\n      //set ripeness\r\n      let ripeness = null;\r\n      if (\r\n        (fieldData.dataField == \"ripenessLevel\" ||\r\n          fieldData.dataField == \"newRipeness\") &&\r\n        data[fieldData.dataField] !== undefined\r\n      ) {\r\n        let ripeness_ = data[fieldData.dataField].split(\" \");\r\n        ripeness = ripeness_[1];\r\n      }\r\n\r\n      //checking type\r\n      let tmp_data = data[fieldData.dataField];\r\n      let stat = null;\r\n      if (fieldData.type == \"number\") {\r\n        if (isNaN(tmp_data)) {\r\n          stat = false;\r\n        } else {\r\n          stat = true;\r\n\r\n          if (fieldData.dataField == \"wmsPoSkuCode\") {\r\n            if (!distinctPOSKUInfoId.includes(tmp_data)) {\r\n              distinctPOSKUInfoId.push(tmp_data);\r\n            }\r\n          }\r\n\r\n          //distinct sku angka maka push ke array buat di cek\r\n          if (fieldData.dataField == \"skuNumber\") {\r\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\r\n              distinctSKUNumber.push(tmp_data);\r\n            }\r\n          }\r\n        }\r\n      } else if (fieldData.type == \"date_indo\") {\r\n        //checking date\r\n        let regex_date = /(0[1-9]|[12][0-9]|3[01])[-.](0[1-9]|1[012])[-.](19|20)\\d\\d/;\r\n        if (tmp_data.match(regex_date)) {\r\n          stat = true;\r\n        } else {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[\r\n            fieldData.dataField + \"Reason\"\r\n          ] = `Date format must be 'dd-mm-yyyy'`;\r\n          return;\r\n        }\r\n      } else {\r\n        stat = true;\r\n      }\r\n\r\n      //grade can null\r\n      let canNull = [\r\n        \"grade\",\r\n        \"outboundReason\",\r\n        \"ripenessLevel\",\r\n        \"newRipeness\",\r\n        \"newGrade\",\r\n      ];\r\n      if (canNull.includes(fieldData.dataField) && tmp_data == \"\") {\r\n        stat = true;\r\n      }\r\n\r\n      //check newGrade, jika angka maka cek ke distinct sku\r\n      if (fieldData.dataField == \"newGrade\") {\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n        if (!arr_grade.includes(tmp_data.toUpperCase())) {\r\n          //if not waste or semi waste\r\n          if (parseInt(tmp_data)) {\r\n            //if number\r\n            stat = true;\r\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\r\n              distinctSKUNumber.push(tmp_data);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      data[fieldData.dataField + \"Status\"] = stat;\r\n      if (!stat) {\r\n        data[\r\n          fieldData.dataField + \"Reason\"\r\n        ] = `Invalid ${fieldData.text} \\nShould be a ${fieldData.type}`;\r\n      } else {\r\n        data[fieldData.dataField + \"Reason\"] = \"\";\r\n      }\r\n\r\n      let percentage =\r\n        ((index + 1 + parseInt(jsonArray.length)) * 50) /\r\n        (parseInt(jsonArray.length) * 2);\r\n      setIsProgressPercent(Math.ceil(percentage));\r\n    });\r\n    data[\"emptyRow\"] = emptyRow; \r\n\r\n    // set payload PO\r\n    if(!emptyRow){\r\n      payloadPO.push({ \r\n          \"id\": data?.id || \"\",\r\n          \"poSkuCode\": data?.wmsPoSkuCode || \"\",\r\n          \"skuNumber\": data?.skuNumber || \"\",\r\n          \"skuUuid\": \"\",\r\n          \"warehouseSource\": data?.warehouseUuid || \"\" ,\r\n          \"areaSource\": data?.areaSource || \"\",\r\n          \"weight\": data?.qty  || \"\"\r\n      });   \r\n    } \r\n  });\r\n\r\n  setTimeout(() => {\r\n    console.log(\"payload PO\",payloadPO)\r\n  }, 4000);\r\n  \r\n  //checking area\r\n  if (distinctAreaSource.length > 1 || distinctAreaDestination.length > 1) {\r\n    console.log(\"area Destination :\" + distinctAreaDestination);\r\n    console.log(\"area Source :\" + distinctAreaSource);\r\n    setIsCheckingArea(false);\r\n    return;\r\n  }\r\n\r\n  //end checking type\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: jsonArray });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: fileName });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, payloadPO: payloadPO });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctPOSKUInfoId: distinctPOSKUInfoId,\r\n  });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctSKUNumber: distinctSKUNumber,\r\n  });\r\n};\r\n\r\nexport const validatePOCode = ({\r\n  poSkuNumberValidated,\r\n  poNewPayload,\r\n  validatePoSkuStockTransfer,\r\n  dispatch\r\n}) => {\r\n  if(!poSkuNumberValidated || !poNewPayload){\r\n      return;\r\n  }\r\n \r\n  //split sku number and skuUUid sku number\r\n  let skuNumberArray = [];\r\n  let skuUuidArray = [];\r\n  let skuPhotosArray = [];\r\n  let skuUomArray = [];\r\n  poSkuNumberValidated.map((data) => {\r\n    skuNumberArray.push(data.skuNumber);\r\n    skuUuidArray.push(data.id);\r\n    skuPhotosArray.push(data.imageMd);\r\n    skuUomArray.push(data.uom);\r\n  });\r\n\r\n  //renew payload\r\n  let newPO = poNewPayload.map((data) => {\r\n\r\n    //get sku UUID\r\n    let indexId = skuNumberArray.indexOf(data.skuNumber);\r\n    let skuUuid = null;\r\n    if(skuUuidArray[indexId]){\r\n      skuUuid = skuUuidArray[indexId];\r\n    }\r\n\r\n    return {\r\n      \"id\": data.id,\r\n      \"poSkuCode\": data.poSkuCode,\r\n      \"skuNumber\": data.skuNumber,\r\n      \"skuUuid\": skuUuid,\r\n      \"warehouseSource\": data.warehouseSource,\r\n      \"areaSource\": data.areaSource,\r\n      \"weight\": data.weight\r\n    } \r\n  });\r\n\r\n   validatePoSkuStockTransfer({\r\n    dispatch,\r\n    skuData: newPO,  \r\n  })\r\n\r\n}\r\n\r\nexport const cleaningData = async ({\r\n  poSkuInfoValidated,\r\n  poSkuNumberValidated,\r\n  csvData,\r\n  setIsProgressPercent,\r\n  dispatch,\r\n  status,\r\n  transaction,\r\n  setIsProgressStatus,\r\n  nextPage,\r\n}) => {\r\n  //checking\r\n  if (status === false || status === null) {\r\n    return 0;\r\n  }\r\n  if (\r\n    csvData === undefined ||\r\n    csvData === null ||\r\n    poSkuInfoValidated === null ||\r\n    poSkuInfoValidated === undefined ||\r\n    poSkuNumberValidated === null ||\r\n    poSkuNumberValidated === undefined\r\n  ) {\r\n    console.clear();\r\n    return 0;\r\n  }\r\n\r\n  //split data and id po sku code\r\n  const POSKUCodeID = []; \r\n  poSkuInfoValidated.map((d) => {\r\n    POSKUCodeID.push(d.id); \r\n  }); \r\n\r\n  //split sku number and skuUUid sku number\r\n  let skuNumberArray = [];\r\n  let skuUuidArray = [];\r\n  let skuPhotosArray = [];\r\n  let skuUomArray = [];\r\n  poSkuNumberValidated.map((data) => {\r\n    skuNumberArray.push(data.skuNumber);\r\n    skuUuidArray.push(data.id);\r\n    skuPhotosArray.push(data.imageMd);\r\n    skuUomArray.push(data.uom);\r\n  });\r\n\r\n  //cleaning data\r\n  let cleanData = [];\r\n  csvData.map((data, index) => {\r\n    //if empty row then skip\r\n    if (data.emptyRow === true) {\r\n      return 0;\r\n    }\r\n\r\n    //format fixing\r\n    data.areaSource = parseInt(data.areaSource);\r\n    data.areaDestination = parseInt(data.areaDestination);\r\n\r\n    //if transaction stocktake then source and destination is same\r\n    if (\r\n      transaction == \"stock_take\" ||\r\n      transaction == \"repacking\" ||\r\n      transaction == \"outbound\"\r\n    ) {\r\n      data.areaDestination = parseInt(data.areaSource);\r\n      data.warehouseDestination = parseInt(data.warehouseSource);\r\n    }\r\n\r\n    \r\n    //get index dari poskucode\r\n    // let indexId = wmsPoSkuCode.indexOf(data.wmsPoSkuCode);\r\n\r\n    // //get validated data\r\n    // let skuValidatedData = poSkuInfoValidated[indexId];   \r\n    // if(transaction == \"stockTransfer\"){\r\n    //   data.inboundDate = skuValidatedData?.inboundDate || \"\";\r\n    //   data.uom = wmsPoSkuUom[indexId] || \"\";\r\n    // }else if (\r\n    //   !skuValidatedData ||\r\n    //   skuValidatedData.isExist === undefined ||\r\n    //   skuValidatedData.isExist === false ||\r\n    //   skuValidatedData.isExist === null\r\n    // ) {\r\n    //   data.wmsPoSkuCodeStatus = false;\r\n    //   data.wmsPoSkuCodeReason = \"PO SKU Code Not Found\";\r\n    // } else {\r\n    //   // skuValidatedData.expiryDate = skuValidatedData.expiryDate\r\n    //   data.inboundDate = skuValidatedData.inboundDate;\r\n    //   data.uom = wmsPoSkuUom[indexId];\r\n    // }  \r\n\r\n    //get validated data PO dimas \r\n    let indexId = POSKUCodeID.indexOf(data.id);\r\n    let skuValidatedData = poSkuInfoValidated[indexId];   \r\n    if(skuValidatedData){\r\n      data.inboundDate = skuValidatedData?.inboundDate || \"\";\r\n      data.uom = skuValidatedData?.uom || \"\";\r\n      data.wmsPoSkuCodeStatus = skuValidatedData?.isExist || false;\r\n      data.wmsPoSkuCodeReason = skuValidatedData?.errorMessage || \"\";\r\n    }else{\r\n      data.wmsPoSkuCodeStatus = false;\r\n      data.wmsPoSkuCodeReason = \"PO SKU Code Not Found\"; \r\n    } \r\n\r\n    //check grade\r\n    let tmp_grade = data.newGrade;\r\n    let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n    if (\r\n      tmp_grade !== undefined &&\r\n      !arr_grade.includes(tmp_grade.toUpperCase())\r\n    ) {\r\n      //if not waste or semi waste\r\n      if (skuNumberArray.includes(tmp_grade)) {\r\n        let idx = skuNumberArray.indexOf(tmp_grade);\r\n        data.newGradeStatus = true;\r\n        data.newGradeUuid = skuUuidArray[idx];\r\n      } else if (tmp_grade == \"\") {\r\n        data.newGradeUuid = \"\";\r\n        data.newGradeStatus = true;\r\n      } else {\r\n        //if not number => undefined\r\n        data.newGradeReason = \"Grade Undefined\";\r\n        data.newGradeStatus = false;\r\n      }\r\n    }\r\n\r\n    //check Sku Number\r\n    let tmp_sku_number = data.skuNumber;\r\n    if (!skuNumberArray.includes(tmp_sku_number)) {\r\n      data.skuNumberStatus = false;\r\n      data.skuNumberReason = \"SKU Number Not Found\";\r\n      data.skuUuid = \"\";\r\n    } else {\r\n      let idx = skuNumberArray.indexOf(tmp_sku_number);\r\n      data.skuUuid = skuUuidArray[idx];\r\n      data.photo = skuPhotosArray[idx];\r\n      if(transaction==\"additional_inbound\"){\r\n        data.uom = skuUomArray[idx];\r\n      }\r\n    }\r\n\r\n    //check New Grade\r\n    let tmp_new_grade = data.newGrade;\r\n    console.log(\"tmp_new_grade\", tmp_new_grade);\r\n    if( transaction !== \"additional_inbound\"){\r\n      if (\r\n        (tmp_new_grade && arr_grade.includes(tmp_new_grade.toUpperCase())) ||\r\n        tmp_new_grade == \"\"\r\n      ) {\r\n        data.newGradeReason = \"\";\r\n        data.newGradeStatus = true;\r\n        data.newGradeUuid = null;\r\n        data.newGradeUom = null;\r\n      } else {\r\n        if (skuNumberArray.includes(tmp_new_grade)) {\r\n          let idx = skuNumberArray.indexOf(tmp_new_grade);\r\n          data.newGradeReason = \"\";\r\n          data.newGradeStatus = true;\r\n          data.newGradeUuid = skuUuidArray[idx];\r\n          data.newGradeUom = skuUomArray[idx];\r\n        } else {\r\n          data.newGradeReason = \"SKU Number Not Found\";\r\n          data.newGradeStatus = false;\r\n          data.newGradeUuid = null;\r\n          data.newGradeUom = null;\r\n        }\r\n      }\r\n    }\r\n    \r\n\r\n    //merging_array\r\n    cleanData.push({ ...data, ...skuValidatedData });\r\n  });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: cleanData });\r\n  setIsProgressPercent(Math.ceil(100));\r\n  setTimeout(() => {\r\n    nextPage();\r\n  }, 200);\r\n};\r\n\r\nexport const resetCsvResist = async ({\r\n  dispatch,\r\n  resetStatus,\r\n  setIsResetCsvPersist,\r\n}) => {\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: null });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: null });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctPOSKUInfoId: null,\r\n  });\r\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\r\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\r\n  dispatch({ type: STATUS, status: null });\r\n  setIsResetCsvPersist(true);\r\n};\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./FileUploader.scss\";\r\nimport {\r\n  templateDownload,\r\n  csvReader,\r\n  putCsvFieldJson,\r\n  validateColumn,\r\n  xlsReader,\r\n  cleaningData,\r\n  resetCsvResist,\r\n  validatePOCode\r\n} from \"./services.js\";\r\nimport FileUploadProgress from \"Component/FileUploadProgress\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport { validatePoSkuStockTransfer, validateSkuNumber } from \"apiServices\";\r\nimport { getWarehouseArea, getOutboundType } from \"apiServices/dropdown\";\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  paddingTop: \"20px\",\r\n  paddingBottom: \"20px\",\r\n  paddingLeft: \"20px\",\r\n  paddingRight: \"20px\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n  height: \"400px\",\r\n};\r\n\r\nconst parentStyle = {\r\n  paddingTop: \"20px\",\r\n  paddingBottom: \"10px\",\r\n  paddingLeft: \"20px\",\r\n  paddingRight: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fff\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n  height: \"600px\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nconst FileUploader = ({ field, transaction, nextPage = null, type = null }) => {\r\n  const [isProgressDisplay, setIsProgressDisplay] = React.useState(false);\r\n  const [isProgressStatus, setIsProgressStatus] = React.useState();\r\n  const [isProgressPercent, setIsProgressPercent] = React.useState(0);\r\n  const [isProgressFileName, setIsProgressFileName] = React.useState(null);\r\n  const [isWarehouseArea, setIsWarehouseArea] = React.useState(null);\r\n  const [isAdditionalOutbound, setIsAdditionalOutbound] = React.useState(null);\r\n  const [isUploadStatus, setIsUploadStatus] = React.useState(null);\r\n  const [isCheckingSchema, setIsCheckingSchema] = React.useState(null);\r\n  const [isCheckingArea, setIsCheckingArea] = React.useState(null);\r\n  const [isResetCsvPersist, setIsResetCsvPersist] = React.useState(false);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [modalShow2, setModalShow2] = React.useState(false);\r\n  const [modalShow3, setModalShow3] = React.useState(false);\r\n\r\n  //declare redux\r\n  const dispatch = useDispatch();\r\n  const selectorWarehouseArea = useSelector((state) => state.warehouseAreaCsv);\r\n  const selectorOutboundType = useSelector((state) => state.outboundTypeCsv);\r\n  const selectorStatus = useSelector((state) => state.status);\r\n  const selectorDistinctPOSKUInfoId = useSelector(\r\n    (state) => state.csvDistinctPOSKUInfoId\r\n  );\r\n  const selectorDistinctSKUNumber = useSelector(\r\n    (state) => state.csvDistinctSKUNumber\r\n  );\r\n  const selectorSkuCodeValidated = useSelector(\r\n    (state) => state.skuCodeValidated\r\n  );\r\n  const selectorSkuNumberValidated = useSelector(\r\n    (state) => state.skuNumberValidated\r\n  );\r\n  const selectorCsvData = useSelector((state) => state.csvData);\r\n  const warehousesData = useSelector((state) => state.warehouseData);\r\n  const selectorPayloadPO = useSelector((state) => state.payloadPO);\r\n\r\n  //reset csv persist\r\n  if (isResetCsvPersist !== true) {\r\n    resetCsvResist({\r\n      dispatch,\r\n      resetStatus: isResetCsvPersist,\r\n      setIsResetCsvPersist,\r\n    });\r\n  }\r\n\r\n  //get warehouse & warehouse area data\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  if (isWarehouseArea === null) {\r\n    getWarehouseArea({\r\n      warehouseUuid: warehouseUuid,\r\n      dispatch,\r\n      type: \"csvValidator\",\r\n    });\r\n    setIsWarehouseArea(1);\r\n  }\r\n\r\n  //get additional outbound type\r\n  if (isAdditionalOutbound === null && type == \"additionalOutbound\") {\r\n    getOutboundType({\r\n      dispatch,\r\n      type: \"csvValidator\",\r\n    });\r\n    setIsAdditionalOutbound(1);\r\n  }\r\n\r\n  //when file droped or selected\r\n  const onDropAccepted = async (e) => {\r\n    //reset percent\r\n    setIsProgressPercent(0);\r\n    setIsUploadStatus(true);\r\n\r\n    //get file type\r\n    const file = e[0].name;\r\n    const fileArr = file.split(\".\");\r\n    const fileType = fileArr[1];\r\n\r\n    //read file\r\n    let fieldArray = field.map((obj) => obj.dataField);\r\n    putCsvFieldJson({ dispatch, jsonArray: field });\r\n\r\n    let jsonArray = null;\r\n    await setIsProgressStatus(\"Reading...\");\r\n    await setIsProgressFileName(file);\r\n    await setIsProgressDisplay(true);\r\n    if (fileType == \"csv\") {\r\n      jsonArray = await csvReader(\r\n        e,\r\n        fieldArray,\r\n        setIsProgressPercent,\r\n        setIsProgressStatus\r\n      );\r\n    } else {\r\n      jsonArray = await xlsReader(\r\n        e,\r\n        fieldArray,\r\n        setIsProgressPercent,\r\n        setIsProgressStatus,\r\n        dispatch\r\n      );\r\n    } \r\n    if (jsonArray === false) {\r\n      setModalShow(true);\r\n      return 0;\r\n    }\r\n\r\n    await setIsProgressStatus(\"Validating Column Type...\");\r\n    await validateColumn({\r\n      field,\r\n      jsonArray,\r\n      setIsProgressPercent,\r\n      fileName: file,\r\n      dispatch,\r\n      warehouseArea: selectorWarehouseArea,\r\n      warehouseUuid,\r\n      outboundType: selectorOutboundType,\r\n      setIsCheckingSchema,\r\n      warehousesData,\r\n      setIsCheckingArea,\r\n    });\r\n  };\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    open,\r\n  } = useDropzone({\r\n    noClick: true,\r\n    onDropAccepted,\r\n    accept:\r\n      //accept csv, xls, and xlsx\r\n      \"text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n  });\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept]\r\n  );\r\n\r\n  const cancelCsv = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    //setelah validasi column\r\n    //validasi SKU Number \r\n    setIsProgressStatus(\"Validating SKU Numbers\");\r\n    validateSkuNumber({\r\n      dispatch,\r\n      skuNumberData: selectorDistinctSKUNumber,\r\n      bulk: true,\r\n      status: isUploadStatus,\r\n    });\r\n  }, [selectorDistinctSKUNumber]);\r\n\r\n  useEffect(() => {\r\n    //setelah validasi  SKU Number\r\n    // validasi PO SKU Code \r\n    setIsProgressStatus(\"Validating PO SKU Code. . .\");\r\n    setIsProgressPercent(70); \r\n    validatePOCode({\r\n      poSkuNumberValidated: selectorSkuNumberValidated ,\r\n      poNewPayload: selectorPayloadPO ,\r\n      validatePoSkuStockTransfer,\r\n      dispatch \r\n    })\r\n  }, [selectorSkuNumberValidated]);\r\n\r\n  // Use Effect\r\n  useEffect(() => {\r\n    //setelah validasi po Code\r\n    //re arrange data yang akan digunakan di table\r\n    // console.clear();\r\n    setIsProgressPercent(90);\r\n    setIsProgressStatus(\"rearrange data. . .\");\r\n    cleaningData({\r\n      poSkuInfoValidated: selectorSkuCodeValidated,\r\n      poSkuNumberValidated: selectorSkuNumberValidated,\r\n      csvData: selectorCsvData,\r\n      transaction: transaction,\r\n      setIsProgressPercent,\r\n      dispatch,\r\n      status: isUploadStatus,\r\n      setIsProgressStatus,\r\n      nextPage,\r\n    });\r\n  }, [selectorSkuCodeValidated]); \r\n\r\n  useEffect(() => {\r\n    if (isCheckingSchema === false) {\r\n      console.log(isCheckingSchema);\r\n      setModalShow2(true);\r\n      setIsCheckingSchema(null);\r\n    }\r\n  }, [isCheckingSchema]);\r\n\r\n  useEffect(() => {\r\n    if (isCheckingArea === false) {\r\n      console.log(isCheckingArea);\r\n      setModalShow3(true);\r\n      setIsCheckingArea(null);\r\n    }\r\n  }, [isCheckingArea]);\r\n\r\n  return (\r\n    <div>\r\n      <PopUp\r\n        status={selectorStatus}\r\n        onCloseFunction={() => {\r\n          setModalShow(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        statusDisplay={modalShow}\r\n        title=\"Upload File Failed\"\r\n        cancelButtonTitle=\"Try Another File\"\r\n        actionButtonTitle={null}\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div>\r\n              Upload failed because your file has more than 2000 lines.{\" \"}\r\n            </div>\r\n            <div> Please make it less than 2000 lines. </div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to try another file?\"\r\n        cancelButtonClass=\"bg-red background\"\r\n        actionButtonClass=\" \"\r\n      />\r\n\r\n      <PopUp\r\n        status={200}\r\n        onCloseFunction={() => {\r\n          setModalShow2(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        actionButtonEvent={() => templateDownload()}\r\n        statusDisplay={modalShow2}\r\n        title=\"Different File Template\"\r\n        cancelButtonTitle=\"Cancel\"\r\n        actionButtonTitle=\"Download latest template\"\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div> Your uploaded file has a different template.</div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to download the latest file template ?\"\r\n        actionButtonClass=\"bg-green background\"\r\n        cancelButtonClass=\"\"\r\n      />\r\n\r\n      <PopUp\r\n        status={200}\r\n        onCloseFunction={() => {\r\n          setModalShow3(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        actionButtonEvent={() => {\r\n          setModalShow3(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        statusDisplay={modalShow3}\r\n        title=\"Upload File Failed!\"\r\n        actionButtonTitle=\"Try Another File\"\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div>\r\n              {\" \"}\r\n              We detect that you've uploaded two or more areas at once.\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              Please try again to upload the file with one specific area.\r\n            </div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to try another file ?\"\r\n        actionButtonClass=\"bg-red margin-left-0 background\"\r\n        cancelButtonClass=\"d-none \"\r\n      />\r\n\r\n      <div className=\"w-100 d-flex flex-column p-3 mb-3 bg-white\">\r\n        <div\r\n          className=\"d-flex flex-column justify-content-between\"\r\n          style={parentStyle}\r\n        >\r\n          <div className=\"FileUploader\">\r\n            <div\r\n              className=\"d-flex flex-column justify-content-end\"\r\n              {...getRootProps({ style })}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <i\r\n                style={{ fontSize: \"90px\" }}\r\n                className=\"lineGrey iconU-upload\"\r\n              ></i>\r\n              <b className=\"mt-2\">Drag and Drop files here</b>\r\n              <p className=\"mt-2 mb-2 emptyTextField\"> Or </p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={open}\r\n                className=\"btn px-5 py-2 text-white bg-green LatoBold no-shadow\"\r\n              >\r\n                Browse File\r\n              </button>\r\n\r\n              <div className=\"emptyTextField LatoBold mt-3 \">\r\n                Support only CSV, XLS, XLSX file\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"downloadTemplate w-100 align-right\">\r\n            <span onClick={() => templateDownload()} className=\"float-right\">\r\n              Download the File Template\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <FileUploadProgress\r\n        status={isProgressStatus}\r\n        progressPercent={isProgressPercent}\r\n        fileName={isProgressFileName}\r\n        display={isProgressDisplay}\r\n        cancelHandler={cancelCsv}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport FileUploader from \"Component/FileUploaderStockTransfer\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport { getWarehouses } from \"apiServices\";\r\nimport \"./index.scss\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\nconst Upload = (props) => {\r\n  const dispatch = useDispatch();\r\n  const warehousesData = useSelector((state) => state.warehouseData);\r\n  const Field = [\r\n    {\r\n      dataField: \"id\", //field ini wajib ada untuk editable column\r\n      text: \"ID\",\r\n      editable: false,\r\n      sort: true,\r\n      hidden: true,\r\n      type: \"number\",\r\n    },\r\n    {\r\n      dataField: \"wmsPoSkuCode\",\r\n      text: \"PO SKU Code\",\r\n      type: \"string\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"skuNumber\",\r\n      text: \"SKU Number\",\r\n      type: \"number\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"expiryDateCol\",\r\n      text: \"Expiry Date\",\r\n      type: \"date_indo\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"warehouse\",\r\n      text: \"Warehouse Source\",\r\n      type: \"string\",\r\n      sort: true,\r\n    },\r\n    { \r\n      dataField: \"areaName\", \r\n      text: \"Area Source\", \r\n      type: \"string\", \r\n      sort: true \r\n    },\r\n    {\r\n      dataField: \"warehouseDestination\",\r\n      text: \"Warehouse Destination\",\r\n      type: \"string\",\r\n      sort: true,\r\n    }, \r\n    { \r\n      dataField: \"qty\", \r\n      text: \"Input Weight\", \r\n      type: \"number\", \r\n      sort: true \r\n    },\r\n  ];\r\n\r\n  const dataSet1 = [\r\n    {\r\n      areaSource: \"\",\r\n      warehouseSource: \"\",\r\n      warehouseDestination: \"\",\r\n      expiryDate: \"\",\r\n      po: \"\",\r\n      skuNumber: \"\",\r\n      inputWeight: \"\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (!warehousesData) {\r\n      getWarehouses({ dispatch });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mb-5\">\r\n      {/* export this table to excel */}\r\n      <ExcelFile\r\n        element={\r\n          //dont change id and style please\r\n          <button id=\"download-template-xls\" style={{ display: \"none\" }}>\r\n            Download Data\r\n          </button>\r\n        }\r\n        //file name without types\r\n        filename=\"StockTransferUpload_Template\"\r\n      >\r\n        <ExcelSheet data={dataSet1} name=\"template\">\r\n          <ExcelColumn label=\"PO SKU Code\" value=\"po\" />\r\n          <ExcelColumn label=\"SKU Number\" value=\"skuNumber\" />\r\n          <ExcelColumn label=\"Expiry Date\" value=\"expiryDate\" />\r\n          <ExcelColumn label=\"Warehouse Source\" value=\"warehouseSource\" />\r\n          <ExcelColumn label=\"Area Source\" value=\"areaSource\" />\r\n          <ExcelColumn label=\"Warehouse Destination\" value=\"warehouseDestination\" />\r\n          <ExcelColumn label=\"Input Weight\" value=\"inputWeight\" />\r\n        </ExcelSheet>\r\n      </ExcelFile>\r\n      {/* end export this table to excel */}\r\n\r\n      <FileUploader\r\n        nextPage={() =>\r\n          props.history.push(\r\n            \"/inventory-entry/stock-transfer/CSV-upload/review\"\r\n          )\r\n        }\r\n        transaction={\"stockTransfer\"}\r\n        field={Field}\r\n        type=\"stockTransfer\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Upload);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { onClose, refreshPage } from \"./services.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { STATUS } from \"apiServices/action\";\r\n\r\nconst PopUp = ({\r\n  refresh,\r\n  status,\r\n  icon,\r\n  statusDisplay = false,\r\n  title = \"\",\r\n  cancelButtonTitle = \"Cancel\",\r\n  actionButtonTitle = \"Submit\",\r\n  cancelButtonClass = \"bg-background\",\r\n  actionButtonClass = \"bg-background\",\r\n  actionButtonEvent = null,\r\n  colorText = \"red\",\r\n  msg1 = null,\r\n  msg2 = null,\r\n  onCloseFunction = null,\r\n  refreshOnCancel = true,\r\n  setIsSuccess\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  if (status?.code === 500 ) {\r\n    icon = \"em-pensive\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 408 ) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Request Timeout\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 400 ) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n  if (status?.code === 404) {\r\n    title = \"Something wrong with the application\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n\r\n  const [show, setShow] = useState(statusDisplay);\r\n\r\n  useEffect(() => {\r\n    //from outside change\r\n    setShow(statusDisplay);\r\n  }, [statusDisplay]);\r\n\r\n  useEffect(() => {\r\n  }, [show]);\r\n\r\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\r\n  return (\r\n    <CRow className={`${show ? null : \"d-none\"}`}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          closeOnBackdrop={false}\r\n          onClose={() => {\r\n            setShow(false)\r\n            if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n            dispatch({ type: STATUS, status: null });\r\n            if (onCloseFunction) {\r\n              onCloseFunction()\r\n            }\r\n          }}\r\n          size=\"lg\"\r\n          style={{ minHeight: \"280px\" }}\r\n          bodyOpenClassName=\"p-3\"\r\n        >\r\n          {/* <div className='d-flex flex-row-reverse'>\r\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-3 border-none\">\r\n              <CModalTitle className={`text LatoBold ${colorText}`}>\r\n                {title}\r\n              </CModalTitle> */}\r\n\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <i\r\n              className=\"pr-3 pt-3 iconU-modalClose\"\r\n              onClick={() => {\r\n                setShow(false)\r\n                if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n                dispatch({ type: STATUS, status: null });\r\n                if (onCloseFunction) {\r\n                  onCloseFunction()\r\n                }\r\n              }}\r\n            ></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className={`text LatoBold ${colorText}`}>\r\n              {title} <span><i className={`em ${icon}`}></i></span>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">{msg1}</p>\r\n            <p className=\"text\">{msg2}</p>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            {cancelButtonTitle ? (\r\n              <CButton\r\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\r\n                onClick={() => {\r\n                  if (refreshOnCancel) {\r\n                    if (typeof (refresh) === 'function') refresh()\r\n                    else refreshPage({ refresh: true });\r\n                  } else {\r\n                    onClose({\r\n                      setShow,\r\n                      parentOncCloseFunction: onCloseFunction,\r\n                    });\r\n                  }\r\n                  dispatch({ type: STATUS, status: null });\r\n                }}\r\n              >\r\n                {cancelButtonTitle}\r\n              </CButton>\r\n            ) : null}\r\n            {actionButtonTitle ? (\r\n              <CButton\r\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\r\n                onClick={() => {\r\n                  if (actionButtonEvent) {\r\n                    actionButtonEvent();\r\n                    setShow(false);\r\n                  } else {\r\n                    setShow(false)\r\n                  }\r\n                }\r\n                }\r\n              >\r\n                {actionButtonTitle}\r\n              </CButton>\r\n            ) : null}{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\r\n  setShow(false);\r\n  if (parentOncCloseFunction) {\r\n    parentOncCloseFunction();\r\n  }\r\n\r\n};\r\n\r\nexport const refreshPage = ({ refresh = true }) => {\r\n  if (refresh === true) {\r\n    window.location.reload(false);\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./index.scss\";\r\n\r\nconst FileUploadProgress = ({\r\n  status,\r\n  progressPercent,\r\n  fileName,\r\n  display = false,\r\n  cancelButton = null,\r\n  cancelHandler,\r\n}) => {\r\n  useEffect(() => {\r\n}, [progressPercent, status]);\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-100 d-flex flex-column progressBar \" +\r\n        (!display ? \"hiddenProgress\" : null)\r\n      }\r\n    >\r\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white border-all radius-all mb-3 mt-0\">\r\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n          <div className=\"uploadStatus w-100\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-7\">\r\n                <i className=\"iconU-sideBarInventoryEntry green\"></i> File\r\n                {fileName}\r\n              </div>\r\n              <div className=\"col-md-5\">\r\n                <p className=\"float-right\" style={{ lineHeight: \"30px\", cursor: \"pointer\" }} onClick={() => { cancelHandler() }}>\r\n                  Cancel\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"progress\">\r\n              <div\r\n                class=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                style={{ width: progressPercent + \"%\" }}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n              ></div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <div className=\"emptyTextField inline\">{status}</div>\r\n              <div className=\"text inline font-weight-bold\">\r\n                {\"  \"}\r\n                {progressPercent}%\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadProgress;\r\n"],"sourceRoot":""}