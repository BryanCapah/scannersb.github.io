{"version":3,"sources":["Page/StockEntry/StockTransfer/index.jsx","Component/Modal/PopUpDiscard/index.jsx","Page/StockEntry/StockTransfer/services.js"],"names":["withRouter","props","dispatch","useDispatch","story","useHistory","thereAreRequest","useSelector","state","moduleFirstLoad","stockTransferFirstLoad","warehouseUuid","user","status","isLoading","stockTransferEntryData","useState","summary","setSummary","localEntryData","setLocalEntryData","isCheckedTotal","selectedSkuCheck","moduleEntry","moduleName","isCheckedBefore","setIsCheckedBefore","added","search","setSearch","warehouse","setWarehouse","area","setArea","discard","setDiscard","warehouseId","setWarehouseId","warehouseIdDestination","setWarehouseIdDestination","areaId","setAreaId","areaIdDesposition","setAreaIdDesposition","areaMatched","setAreaMatched","useEffect","a","getWarehouse","warehouseList","getRipenessLevel","ripeness","getWarehouseArea","areaList","getUnfinishedEntries","isExist","warehouseSource","filter","wh","value","getData","_","category","setCategory","sortBy","setSortBy","dimention","document","documentElement","clientHeight","height","emptyItem","className","module","close","discardEntry","id","removeEntryModule","redirect","history","push","previousPage","goBack","show","isDisabled","title","placeholder","options","onChangeDropdown","selected","selectedValue","showTitle","data","label","searchHandler","desc","getStockTakeSummary","setModule","length","style","minHeight","maxHeight","sort","b","filterBySkuName","map","idx","key","img","photo","skuDescription","skuName","skuNumber","uomLabel","uomValue","totalQty","uom","unitOfMeassures","isCheckedHandler","checked","selectSku","moduleSummary","check","responseCheck","src","loading","alt","onClick","type","jobPost","list","CREATE_JOB_SHEET","PopUpDiscard","size","closeOnBackdrop","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","skuUuid","jsD","sI","includes","getGrade","skuId","grade","getPoBySkuId","addPoItem","poList","itemList","expiryMs","expiryDate","moment","valueOf","inBoundyMs","inboundDate","initialWeight","isFloat","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseDestination","warehouseDestinationName","areaSource","parseInt","areaName","areaDestination","areaDestinationName","preAddSku","preAddHandler","isNewItem","submitValidation","setActiveSKU","setConfirmation","setIsRequired","isClear","js","jsR","po","qtyCount","totalListItemWeightCount","moduleList","item","qty","note","isNaN","qtyIsEmpty","gradeIsEmpty","ripenessIsEmpty","noteIsEmpty","Number","valid","name","checkIsSkuRequired"],"mappings":"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","file":"static/js/69.08a8bcba.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport Dropdown from \"Component/Dropdown\";\r\nimport Search from \"Component/Search\";\r\nimport { getStockTakeSummary, getUnfinishedEntries,removeEntryModule } from \"apiServices\";\r\nimport { getWarehouseArea, getRipenessLevel,getWarehouse } from \"apiServices/dropdown\";\r\nimport SKUItem from \"Component/SKUItem\";\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport \"./index.scss\";\r\nimport {selectSku} from './services'\r\nimport { filterBySkuName, responseCheck, selectedSkuCheck } from \"Page/StockEntry/GeneralServices/moduleServices\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport PopUpUnfinished from 'Component/Modal/PopUpUnfinished'\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\n\r\nconst StockTransfer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const story = useHistory()\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTransferFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const moduleName = 'stockTransfer'\r\n  const stockTransferEntryData = useSelector((state) => state.stockTransferEntryData);\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  const [search, setSearch] = useState()\r\n  const [warehouse, setWarehouse] = useState()\r\n  const [area,setArea] = useState()\r\n  const [discard, setDiscard] = useState()\r\n \r\n\r\n  const [warehouseId, setWarehouseId] = useState()\r\n  const [warehouseIdDestination, setWarehouseIdDestination] = useState()\r\n  const [areaId,setAreaId] = useState()\r\n  const [areaIdDesposition, setAreaIdDesposition] = useState()\r\n  const [areaMatched,setAreaMatched] = useState()\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const warehouseList = await getWarehouse({})\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockTransferEntryData ? true : false, ripeness })\r\n\r\n      const warehouseSource = warehouseList.filter(wh => wh.value === warehouseUuid)\r\n      setWarehouseId(warehouseSource[0])\r\n      // setWarehouseId({label:'Sentul', value:warehouseUuid})\r\n\r\n      setArea(areaList)\r\n      setWarehouse(warehouseList)\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect( _ => {\r\n    // if(areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value && warehouseId && warehouseIdDestination && warehouseId !== warehouseIdDestination) setAreaMatched(true)\r\n    if(areaId && warehouseId && warehouseIdDestination && warehouseId !== warehouseIdDestination) setAreaMatched(true)\r\n\r\n    else setAreaMatched(false)\r\n  },[areaId,areaIdDesposition,added, warehouseId,warehouseIdDestination])\r\n\r\n  useEffect(()=> {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  },[areaId,areaIdDesposition,warehouseId,warehouseIdDestination])\r\n\r\n  //search\r\n  const [category, setCategory] = useState()\r\n  const [sortBy, setSortBy] = useState()\r\n\r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 400\r\n  const emptyItem = dimention - 400\r\n  return (\r\n    <div className=\"w-100  stock-take-summary\">\r\n      <Discard\r\n          discard={discard}\r\n          module={'Inventory Entry - Stock Transfer'}\r\n          moduleEntry={stockTransferEntryData}\r\n          close={() => setDiscard(false)}\r\n          discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch,setDiscard })}\r\n      />\r\n      <PopUpUnfinished\r\n        discard={discard}\r\n        moduleFirstLoad={moduleFirstLoad}\r\n        moduleEntry={stockTransferEntryData}\r\n        redirect={() => props.history.push(\"/inventory-entry/stock-transfer/weight-entry\")}\r\n        previousPage={() => story.goBack()}\r\n        setDiscard={() => setDiscard(true)}\r\n      />\r\n      <PopUp status={status} />\r\n      <div className=\"px-3 pt-3 bg-white border-all radius-all d-md-flex dd-group\">\r\n      <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n          <Dropdown\r\n            show={true}\r\n            isDisabled={true}\r\n            title=\"Warehouse Source\"\r\n            placeholder='Select Warehouse Source'\r\n            options={warehouse}\r\n            onChangeDropdown={(selected) => setWarehouseId(selected)}\r\n            selectedValue={warehouseId}\r\n            showTitle={true}\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n          <Dropdown\r\n            show={true}\r\n            title=\"Area Source\"\r\n            placeholder='Select Area Source'\r\n            options={area?.filter(data => data.label !== 'Waste')}\r\n            onChangeDropdown={(selected) => setAreaId(selected) }\r\n            selectedValue={areaId}\r\n            showTitle={true}\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n          <Dropdown\r\n            show={true}\r\n            title=\"Warehouse Destination\"\r\n            placeholder='Select Warehouse Destination'\r\n            options={warehouse?.filter( data => data?.label !== warehouseId?.label)}\r\n            onChangeDropdown={(selected) => setWarehouseIdDestination(selected)}\r\n            selectedValue={warehouseIdDestination}\r\n            showTitle={true}\r\n          />\r\n        </div>\r\n        {/* <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n          <Dropdown\r\n            show={true}\r\n            title=\"Area Destination\"\r\n            placeholder='Select Area Destination'\r\n            options={area}\r\n            onChangeDropdown={(selected) => setAreaIdDesposition(selected)}\r\n            selectedValue={areaIdDesposition}\r\n            showTitle={true}\r\n          />\r\n        </div> */}\r\n      </div>\r\n\r\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white mt-3 border-all radius-all mb-3\">\r\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n          <div className=\"text LatoBold d-flex justify-content-between align-items-center sku-des\">\r\n            <div>\r\n              Enter SKU or Description{\" \"}\r\n              <span className=\"green\">{`(${isCheckedTotal} Selected SKU${isCheckedTotal > 1 ? \"s\" : \"\"\r\n                })`}</span>\r\n            </div>\r\n            {/* <div className=\"icon-unfinishEn\">\r\n              <i className=\"iconU-sideBarInventoryEntry emptyTextField\"></i>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <Search\r\n          setSortBy={setSortBy}\r\n          category={category}\r\n          setCategory={setCategory}\r\n          placeholder={\"Enter SKU\"}\r\n          filter={false}\r\n          searchHandler={(desc) =>\r\n            areaId?.value && warehouseId?.value && warehouseIdDestination?.value && warehouseId?.value !== warehouseIdDestination?.value ?\r\n              getStockTakeSummary({category, dispatch, desc, warehouseUuid, areaId, areaIdDesposition ,setModule: setSummary, module:localEntryData },setSearch(desc)) : (!areaId?.value ? setAreaId('empty' ) : (areaId?.value === areaIdDesposition?.value ? setAreaIdDesposition('empty') : (!warehouseId?.value ? setWarehouseId('empty') : (!warehouseIdDestination?.value ? setWarehouseIdDestination('empty') : (warehouseIdDestination?.value === warehouseId?.value ? setWarehouseIdDestination('empty') : null)))))\r\n          }\r\n        />\r\n        <div\r\n          className={`mb-3 mt-3 d-flex align-items-center scroll-sku ${summary?.length ? \"flex-column\" : \"flex-row\"\r\n            } w-100 text-center`}\r\n            style={{ minHeight: height , maxHeight:height}}\r\n        >\r\n          {summary?.length ? (\r\n            summary?.sort( function(a,b){ return filterBySkuName(a,b,sortBy?.value)})?.map((data, idx) => {\r\n              return (\r\n                <SKUItem\r\n                  key={idx}\r\n                  img={data?.photo}\r\n                  skuDescription={data?.skuName}\r\n                  skuNumber={data?.skuNumber}\r\n                  uomLabel=\"weight\"\r\n                  uomValue={data?.totalQty}\r\n                  uom={data?.unitOfMeassures}\r\n                  isCheckedHandler={(checked) =>\r\n                    selectSku({\r\n                      idx,\r\n                      checked,\r\n                      dispatch,\r\n                      setLocalEntryData,\r\n                      moduleSummary: summary,\r\n                      moduleEntry: localEntryData,\r\n                      moduleName,\r\n                      warehouseUuid,\r\n                      warehouseIdDestination,\r\n                      areaId,\r\n                      areaIdDesposition,\r\n                    })\r\n                  }\r\n                  check={data?.checked}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n              <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem,maxHeight: emptyItem}}>\r\n                {!responseCheck({ isLoading, summary }) ? (\r\n                  <img className=\"loading\" src={loading} alt=\"loading\" />\r\n                ) : areaId && areaIdDesposition && summary?.length === 0 ? (\r\n                  <div>\r\n                    Sorry, we couldn't find any matches\r\n                    for '<span className='LatoBold'>{search}</span>' in {areaId && areaIdDesposition?.label} area.\r\n                    <br/>\r\n                    Please Try search with another term.\r\n                  </div>\r\n                ) : 'Enter SKU'}\r\n              </div>\r\n            )}\r\n        </div>\r\n      </div>\r\n      <div className=\"h-screen-summary-footer d-flex flex-column justify-content-start\">\r\n        <div className=\"w-100 d-flex align-items-center justify-content-between mb-1\">\r\n         <div>\r\n            <button\r\n            onClick={() => props.history.push(\"/inventory-entry/stock-transfer/CSV-upload\")}\r\n            type=\"button\"\r\n            className=\"btn px-4 no-shadow border-all bg-white fontSizeButton\"\r\n          >\r\n            Upload File\r\n          </button>\r\n         </div>\r\n          <button\r\n            onClick={() => {\r\n              if (thereAreRequest === 0 && (localEntryData && localEntryData?.jobPost?.list?.length > 0) && areaMatched === true) {\r\n                dispatch({ type: CREATE_JOB_SHEET, stockTransferEntryData: localEntryData })\r\n                props.history.push(\"/inventory-entry/stock-transfer/weight-entry\")\r\n              }\r\n            }\r\n            }\r\n            type=\"button\"\r\n            className={`btn px-5 fontSizeButton no-shadow text-white ${thereAreRequest === 0 && (localEntryData && localEntryData?.jobPost?.list?.length > 0) && areaMatched === true ? \"bg-green\" : \"bg-lineGrey\"\r\n              }`}\r\n          >\r\n            {(!localEntryData || localEntryData?.jobPost?.list?.length === 0) && thereAreRequest === 0 ? 'Next' :thereAreRequest === 0 && (localEntryData && localEntryData?.jobPost?.list?.length > 0) ? 'Next' : 'Processing...'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(StockTransfer);\r\n","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    return (\r\n        <CRow className={discard ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                             from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-5 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { getPoBySkuId, removeEntryModule } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { checkIsSkuRequired, filterBySkuName, totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    warehouseIdDestination,\r\n    areaId,\r\n    areaIdDesposition }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseIdDestination?.value,\r\n            warehouseDestinationName: warehouseIdDestination?.label,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaIdDesposition?.value),\r\n            areaDestinationName: areaIdDesposition?.label,\r\n            list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    setLocalEntryData(jobSheet)\r\n    // dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                list.isNewItem = true\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const setAreaIdDesposition = ({ dispatch, selected }) => {\r\n    if (selected) dispatch({ type: SET_AREA, areaIdDesposition: selected })\r\n}\r\n\r\n\r\n\r\n\r\n//remove sku\r\nexport const removeSku = async ({ dispatch, moduleEntry, moduleName }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n    const list = moduleEntry.jobPost.list.filter(data => { if (data.checked) return data })\r\n    jobSheet.jobPost.list = list\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n    if (list.length === 0) removeEntryModule({ id: jobSheet.jobPost.id, moduleName, dispatch })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            po.itemList.map(item => {\r\n                const { qty, grade, ripeness, note } = item\r\n                if (po.uom === 'kg') {\r\n\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                    }\r\n                }\r\n                else {\r\n                    isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                }\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                // if(!item.qtyIsEmpty) po.initialWeightOver > po.initialWeight ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}"],"sourceRoot":""}