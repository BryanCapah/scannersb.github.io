{"version":3,"sources":["Page/StockEntry/StockTake/WeightEntry/SelectedSKUList/SelectedSKU/index.jsx","Page/StockEntry/StockTake/WeightEntry/SelectedSKUList/index.jsx","Page/StockEntry/StockTake/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry/index.jsx","Page/StockEntry/StockTake/WeightEntry/services.js","Page/StockEntry/StockTake/WeightEntry/WeightEntryList/WeightEntryCard/index.jsx","Page/StockEntry/StockTake/WeightEntry/WeightEntryList/index.jsx","Page/StockEntry/StockTake/WeightEntry/index.jsx","Component/Dropdown/index.jsx","Component/Modal/ModalConfirmation/services.js","Component/Modal/ModalConfirmation/index.jsx","Component/Modal/PopUpDiscard/index.jsx","Component/Input/decimal.jsx","assets/icons/trash.png","Component/Input/index.jsx","Component/Modal/PopUpSaved/services.js","Component/Modal/PopUpSaved/index.jsx","Component/Input/Note.jsx","Component/Modal/PopUpRequired/services.js","Component/Modal/PopUpRequired/index.jsx","Component/DatePickerNew/index.jsx","Component/DatePickerNew/services.js","Component/Sort/index.jsx","assets/icons/asc.svg","assets/icons/desc.svg","Page/StockEntry/StockTake/services.js","Component/Input/InputDatePicker.jsx"],"names":["SelectedSKU","isNewItem","img","skuDescription","skuNumber","activeSku","uomValue","idx","uom","onClick","data","edited","getEditedData","isEmpty","checkisEmpty","className","onKeyDown","e","onEnter","src","alt","toUpperCase","SelectedSKUList","hideSKUList","setActiveSKU","moduleEntry","moduleName","selectedSku","jobPost","list","length","dimention","document","documentElement","clientWidth","height","clientHeight","useState","hideContent","setHideContent","dispatch","useDispatch","useIsNewItem","sorted","style","padding","tabIndex","to","type","ADD_SKU","maxHeight","map","skuName","uomLabel","unitOfMeassures","totalQty","photo","WeightEntry","entryListIdx","wmsPoSkuInfoId","gradeList","ripeness","inputWidth","showTitle","item","onChange","onChangeDropdown","poListIdx","category","ripenessLevel","useSelector","state","unitOfMeasuress","grade","toLowerCase","filteredGradeList","filter","label","Input","qtyIsEmpty","values","qty","title","Dropdown","gradeIsEmpty","selectedValue","show","selected","name","placeholder","options","width","ripenessIsEmpty","Note","noteIsEmpty","note","InputDatePicker","disabled","date","text","expiryDateText","expiryDate","addRow","js","value","skuUuid","itemList","poList","lastSelected","gradeSelected","push","dateDMY","CREATE_JOB_SHEET","WeightEntryCard","poItem","inboundDate","initialWeight","inboundQty","initialWeightUpdate","initialWeightScreenUpdate","supplierName","poUuid","supplierId","wmsPoSkuCode","codeGrade","isHidden","initialWeightTotal","isNaN","uomType","area","areaName","keyCode","id","dateFull","opacity","noTime","target","console","clear","test","newValue","arr","split","number","parseInt","commaNumber","undefined","sliceNumber","slice","qtyToCompare","qtyToCompareIsEmpty","minus","over","totalListItemWeightCount","moduleList","initialWeightOver","updateJSWeightLine","moment","valueOf","updateJSWeightLineDropdown","Trash","deleteRow","countQty","isFloat","WeightEntryList","setHideSKUList","useEntryDimention","heightAdj","useStockTakeEntry","status","setIsSuccess","confirmation","setConfirmation","discard","setDiscard","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","isLoading","totalWeight","postInfo","isMobile","isPlural","isEdited","paddingLeft","module","close","discardEntry","removeEntryModule","PopUpSaved","submit","totalSku","PopUpRequired","isSuccess","save","saveJobSheet","Sort","minHeight","submitValidation","stockTakeEntryData","isDisabled","noMarginBottom","resetName","isMulti","hideResetOpt","isOpen","setIsOpen","useEffect","isEmptyStyle","styles","border","elem","getElementById","position","getBoundingClientRect","defaultvalue","val","menuPlacement","bottom","isSearchable","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","color","cursor","fontWeight","theme","borderRadius","next","isCaptcha","setIsValidated","setIsType","isType","key","includes","focus","stat","index","ModalsConfirmation","moveAll","noSkuChecking","singleViewData","buttonName","window","onkeydown","areaDestinationName","warehouseDestinationName","skuListUpdate","newModule","po","_qty","isInteger","parseFloat","_sku","wasteType","_toWaste","_uom","newSku","sku","wqty","swqty","isExist","findIndex","i","s","skuListUpdateCheck","closeOnBackdrop","overflow","borderBottom","textAlign","maxWidth","ModalsCaptcha","setIsShowModal","submitText","characters","charactersLength","text_split","r","charAt","Math","floor","random","selectorCsvFileName","csvFileName","React","isCaptchaText","isValidated","onClose","size","autocomplete","onKeyUp","textTransform","maxLength","PopUpDiscard","toCompare","autoComplete","exports","submitAction","setLocalEntryData","complete","saved","success","header","headerIcon","textColor","button","buttonText","failed","showErrorMessage","setShowErrorMessage","arrowIcon","errorText","alert","bodyOpenClassName","message","wordWrap","toString","handleFailed","isReadOnly","readOnly","defaults","threshold","invalidThreshold","setInvalidThreshold","isLessThanInitWeight","SKUDatePicker","showDate","selectDate","setShowDate","startDate","Date","endDate","dateRange","setDateRange","setDate","mode","setMode","singleDate","multipleDate","wrapperRef","useRef","handleClickOutside","event","current","contains","addEventListener","removeEventListener","useOutside","ref","ranges","newdate","dt","selection","setDates","dateShow","sortBy","setSortBy","resetFilter","setResetFilter","datePicker","sortByInboundDate","_","filterByDate","minWidth","d","desc","asc","selectSku","a","checked","moduleSummary","warehouseUuid","areaId","zeroQuantity","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","jsD","sI","getGrade","skuId","getPoBySkuId","grades","addPoItem","expiryMs","inBoundyMs","Number","Promise","all","IS_LOADING","finish","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","areaSource","areaDestination","preAddSku","preAddHandler","isClear","jsR","valid","setShow","top","right","classNames"],"mappings":"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","file":"static/js/23.11c93a75.chunk.js","sourcesContent":["import React from 'react'\r\nimport { getEditedData, checkisEmpty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { onEnter } from 'services'\r\nconst SelectedSKU = ({\r\n    isNewItem,\r\n    img,\r\n    skuDescription,\r\n    skuNumber,\r\n    activeSku,\r\n    uomValue,\r\n    idx,\r\n    uom,\r\n    onClick,\r\n    data\r\n}) => {\r\n    const edited = getEditedData({ data })\r\n    const isEmpty = checkisEmpty(data)\r\n    return (\r\n        <div className={`w-100 sku-item softGreen pl-2 pr-2 pt-2 mb-3 cursor-pointer rounded ${edited ? 'soft-green' : null} ${activeSku === idx ? 'border-green' : (isEmpty ? 'border-red' : 'border')}`}>\r\n            <div className=\" w-100 d-flex justify-content-end\">\r\n                <div className={isNewItem ? 'green-dot' : 'dot'} />\r\n            </div>\r\n            <div onKeyDown={e => onEnter({ e, idx, onClick })} onClick={() => onClick()} className={`w-100 softGreen d-flex justify-content-between pl-2 pr-2 mb-3 cursor-pointer ${edited ? 'soft-green' : null}`}>\r\n                <div className='d-flex align-items-center w-100'>\r\n                    <div className='d-flex align-items-center'>\r\n                        <img src={img} alt='sku image' className='w-5 mr-3 border softGreen rounded' />\r\n                    </div>\r\n                    <div className=\"w-100\">\r\n                        <div className='mr-3 w-100 d-flex'>\r\n                            <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-between'>\r\n                            <div className='text'>{skuNumber}</div>{activeSku}\r\n                            <div className='green LatoBold'>{uomValue} <span>{`${uom ? uom.toUpperCase() : ''}${uomValue > 1 ? 's' : ''}`}</span></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SelectedSKU","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { ADD_SKU } from 'apiServices/action'\r\nimport './index.scss'\r\nimport SelectedSKU from 'Page/StockEntry/StockTake/WeightEntry/SelectedSKUList/SelectedSKU'\r\nimport { useIsNewItem } from 'Page/StockEntry/GeneralServices'\r\nconst SelectedSKUList = ({\r\n    hideSKUList,\r\n    setActiveSKU,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName\r\n}) => {\r\n    const selectedSku = moduleEntry.jobPost.list.length\r\n    const dimention = document.documentElement.clientWidth\r\n    let height = document.documentElement.clientHeight\r\n    height = height - 212\r\n    const [hideContent, setHideContent] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const { sorted } = useIsNewItem({ setActiveSKU, moduleEntry, selectedSku, dispatch, moduleName })\r\n\r\n\r\n    return (\r\n        <div className={`${hideSKUList ? 'w-0' : 'w-30'}  mt-md-0 rounded-bottom rounded-top`}>\r\n            <div style={{ padding: 17 }} className='w-100 bg-white border-top border-left border-right rounded-top border-soft-green text d-flex align-items-center justify-content-between' onClick={() => dimention <= 500 ? setHideContent(!hideContent) : null}>\r\n                <div className=\"LatoBold\"> Selected SKU <span className='font-green'>{`(${selectedSku} SKU${selectedSku > 1 ? 's' : ''})`}</span></div>\r\n                <div className='d-flex align-items-center justify-content-between'>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/stock-take/weight-entry/remove-sku'>\r\n                        <div className=\"fontSizeTitle px-3 emptyTextField iconU-remove\" />\r\n                    </Link>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/stock-take/weight-entry/add-sku'>\r\n                        <div onClick={() => dispatch({ type: ADD_SKU, [`${moduleName}AddSku`]: true })} className='fontSizeTitle emptyTextField text-bold iconU-entryAdd' ></div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div style={{ height: dimention <= 500 ? false : height, maxHeight: height }} className={` overflow-y w-100 bg-white mr-0 border rounded-bottom border-soft-green pl-3 pr-0 pt-3 ${hideContent ? 'd-none' : null}`}>\r\n                {\r\n                    moduleEntry?.jobPost?.list?.map((data, idx) =>\r\n                        <SelectedSKU\r\n                            isNewItem={data?.isNewItem}\r\n                            data={data}\r\n                            idx={idx}\r\n                            activeSku={activeSku}\r\n                            skuDescription={data?.skuName}\r\n                            skuNumber={data?.skuNumber}\r\n                            uomLabel={data?.unitOfMeassures}\r\n                            uomValue={data?.totalQty}\r\n                            uom={data?.unitOfMeassures}\r\n                            img={data?.photo}\r\n                            onClick={() => setActiveSKU(idx)}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKUList","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport Decimal from 'Component/Input/decimal'\r\nimport Input from 'Component/Input'\r\nimport Note from 'Component/Input/Note'\r\nimport InputDatePicker from 'Component/Input/InputDatePicker'\r\n\r\nconst WeightEntry = ({\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    gradeList,\r\n    ripeness,\r\n    inputWidth,\r\n    showTitle,\r\n    item,\r\n    onChange,\r\n    onChangeDropdown,\r\n    uom,\r\n    poListIdx,\r\n    category\r\n}) => {\r\n    const ripenessLevel = useSelector(state => state.ripenessLevel)\r\n    let ripenessDisplay = true\r\n    const unitOfMeasuress = item?.grade?.uom?.toLowerCase() === 'gram' ? 'kg' : item?.grade?.uom ? item?.grade?.uom : uom    \r\n\r\n    const filteredGradeList = gradeList?.filter(grade => {\r\n        if(grade?.label === 'Semi Waste' || grade.label === 'Waste') return\r\n        return grade\r\n    })\r\n    return (\r\n        <div className='d-flex w-100 we-m '>\r\n            <Input\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={unitOfMeasuress}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                showTitle={showTitle}\r\n                title={'Input Quantity'}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            <Decimal\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={unitOfMeasuress}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n            <Dropdown\r\n                // isDisabled={entryListIdx === 0 ? true : false}\r\n                isEmpty={item.gradeIsEmpty}\r\n                selectedValue={item?.grade}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={true}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'grade' })}\r\n                title='Grade'\r\n                placeholder='Select Grade'\r\n                options={filteredGradeList}\r\n                width='w-30'\r\n                showTitle={showTitle} />\r\n            <Dropdown\r\n                // isDisabled={entryListIdx === 0 ? true : false}\r\n                isEmpty={item.ripenessIsEmpty}\r\n                selectedValue={item?.ripeness}\r\n                grade={item.grade?.label}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={ripenessDisplay}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'ripeness' })}\r\n                title='Select Ripeness'\r\n                placeholder='Select Ripeness'\r\n                options={ripenessLevel}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : (category === 'Fruits' ? null : 'd-none')} />\r\n\r\n            <Note\r\n                isEmpty={item.noteIsEmpty}\r\n                grade={item.grade?.label}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                ripeness={ripeness}\r\n                inputWidth={'w-30'}\r\n                values={item?.note}\r\n                showTitle={showTitle}\r\n                title={'Note'}\r\n                onChange={(e) => onChange(e)} />\r\n            <InputDatePicker\r\n                disabled={true}\r\n                onClick={(date) => onChangeDropdown({ selected:date, name: 'date'})}\r\n                poListIdx={0}\r\n                entryListIdx={entryListIdx}\r\n                inputWidth={` w-30 ${category === 'Fruits' || category === 'Vegetables' ? 'd-none' : null}`}\r\n                text={item?.expiryDateText}\r\n                values={item?.expiryDate}\r\n                showTitle={true}\r\n                title={'Expiry Date'}\r\n                disabled={true}/>\r\n        </div>\r\n    )\r\n}\r\nexport default WeightEntry","import { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { dateDMY } from 'services'\r\nimport moment from 'moment'\r\n\r\nexport const addRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    const grade = js.jobPost.list[activeSku].gradeList.filter(grade => { return grade?.value === js.jobPost.list[activeSku].skuUuid })\r\n    const itemList = js.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    const lastSelected = itemList[itemList?.length - 1]\r\n    const gradeSelected = lastSelected ? lastSelected.grade : grade[0]\r\n    const { expiryDate } = js.jobPost.list[activeSku].poList[poListIdx]\r\n    let ripeness = null\r\n    if (itemList?.length) ripeness = itemList[itemList.length - 1]?.ripeness\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.push({\r\n        qty: '',\r\n        grade: gradeSelected,\r\n        ripeness: ripeness,\r\n        expiryDate: expiryDate,\r\n        expiryDateText: dateDMY({ date: expiryDate })\r\n    })\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLine = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e\r\n}) => {\r\n    const name = e?.target?.name\r\n    let value = e?.target?.value\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n\r\n    if (name === 'weight' || name === 'weightToCompare') {\r\n        // js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = parseInt(value)\r\n        let regex = /^[0-9\\.\\x0]+$/\r\n        console.clear()\r\n        if ((regex.test(value) === true && value !== \"\")) {\r\n            let newValue = 0;\r\n            let arr = value?.split('.')\r\n            let number = arr[0];\r\n            if (number >= 0) number = parseInt(number)\r\n            let commaNumber = arr[1];\r\n\r\n            if ((commaNumber !== null && commaNumber !== undefined)) {\r\n                if (commaNumber.length > 2) {\r\n                    //jika dibelakang koma ada lebih dari 2 angka\r\n                    var sliceNumber = commaNumber.slice(0, 2);\r\n                    newValue = `${number}.${sliceNumber}`\r\n                } else {\r\n                    newValue = `${number}.${commaNumber}`\r\n                }\r\n            } else {\r\n                newValue = parseInt(number)\r\n            }\r\n\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompareIsEmpty = false\r\n            }\r\n\r\n        }\r\n        else {\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    else if (name === 'qty') {\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = value ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n    }\r\n    if (name === 'note') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n\r\n    //initial weight from inboundQty\r\n    const initialWeight = js.jobPost.list[activeSku].poList[poListIdx].inboundQty\r\n    let initialWeightUpdate = initialWeight\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        if (data.qty || data.qty === 0) js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        initialWeightUpdate = initialWeightUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = initialWeightUpdate\r\n        if (initialWeightUpdate < 0) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n            js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = 0\r\n        }\r\n        else {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList.filter(item => { return item.qtyIsEmpty = false })\r\n        }\r\n    })\r\n    //end of initial weight from inboundQty\r\n\r\n    //initial weight from it self\r\n    const initialWeightScreen = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n    let initialWeightScreenUpdate = initialWeightScreen\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        initialWeightScreenUpdate = initialWeightScreenUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = initialWeightScreenUpdate\r\n    })\r\n    //end of initial weight from it self\r\n\r\n\r\n    const over = totalListItemWeightCount({ moduleList: js.jobPost.list[activeSku].poList[poListIdx].itemList })\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightOver = over > initialWeight ? over : 0\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLineDropdown = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    selected,\r\n    name\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n    if (name === 'grade') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].uom = selected?.uom === 'gram' ? 'kg' : selected?.uom\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].gradeIsEmpty = false\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = { label: null, value: null }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = null\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    if (name === 'ripeness') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = null\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    if (name === 'date') {\r\n        // let date = moment(selected).add(7, 'hours').valueOf()\r\n        let date = moment(selected).valueOf()\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].expiryDate = date\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].expiryDateText = dateDMY({ date })\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { dateFull, isFloat } from 'services';\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport WeightEntry from \"Page/StockEntry/StockTake/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry\";\r\nimport \"./index.scss\";\r\nimport {\r\n  addRow,\r\n  updateJSWeightLine,\r\n  updateJSWeightLineDropdown\r\n} from \"Page/StockEntry/StockTake/WeightEntry/services\";\r\nimport {deleteRow,countQty} from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst WeightEntryCard = ({\r\n  inputWidth,\r\n  activeSku,\r\n  poListIdx,\r\n  poItem,\r\n  moduleEntry,\r\n  moduleName,\r\n  gradeList\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    expiryDate,\r\n    inboundDate,\r\n    initialWeight,\r\n    inboundQty,\r\n    initialWeightUpdate,\r\n    initialWeightScreenUpdate,\r\n    poUuid,\r\n    skuUuid,\r\n    supplierId,\r\n    supplierName,\r\n    uom,\r\n    ripeness,\r\n    ripenessLevel,\r\n    edited,\r\n    wmsPoSkuCode,\r\n    category,\r\n    codeGrade,\r\n    isHidden\r\n  } = poItem;\r\n  const total = !isNaN(initialWeightUpdate) ? initialWeightUpdate : inboundQty;\r\n  const initialWeightTotal = !isNaN(initialWeightScreenUpdate) ? initialWeightScreenUpdate : initialWeight\r\n  const uomType = uom === \"kg\" || uom === \"gram\" ? \"Weight\" : \"Quantity\";\r\n  const grade = moduleEntry.jobPost.list[activeSku].gradeList.filter(grade => { return grade?.value === codeGrade })\r\n  const area = moduleEntry.jobPost.areaName\r\n  return (\r\n    <div\r\n    // onKeyDown={e => e.keyCode === 13 ? addRow({dispatch, moduleEntry,moduleName, activeSku, poListIdx}) : false}\r\n        onKeyDown={e => e.keyCode === 13 ? false : false}\r\n    id={`sku_item_${activeSku}_${poListIdx}`}\r\n    tabIndex='0' \r\n    className={`${isHidden ? 'd-none' : null} z-0 d-flex flex-column sku-item justify-content-between w-100 mb-3 align-items-center border rounded border-soft-green ${edited ? \"soft-green\" : null\r\n      }`}\r\n    >\r\n\r\n      {/* Line 1 */}\r\n      <div className=\"w-100 border-soft-green mt-3 d-flex align-items-start px-3\">\r\n        <div className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex justify-content-between align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Inbound Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {inboundDate ? dateFull({ date: inboundDate }) : '-'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex align-items-center mb-3\">\r\n            {`Initial ${uomType}`}\r\n            <span className=\"ml-2 font-green\">\r\n              {` ${initialWeight} ${uom?.toUpperCase()}${initialWeight > 1 ? \"s\" : \"\"}`}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 2 */}\r\n\r\n      <div className=\"w-100 border-soft-green d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`PO Code`}\r\n              <span className=\"ml-2 font-green\">{` ${wmsPoSkuCode ? wmsPoSkuCode : '-'}`}</span>\r\n            </div>\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Supplier Name`}\r\n              <span className=\"ml-2 font-green\">{` ${supplierName}`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 3 */}\r\n      <div className=\"w-100 border-bottom border-soft-green mb-3 d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Expiry Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {expiryDate ? dateFull({ date: expiryDate, noTime: true }) : '-'}\r\n              </span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`Inbound Quantity`}\r\n              <span className=\"ml-2 font-green\">{` ${inboundQty ? inboundQty : '-'}`}</span>\r\n            </div>\r\n            {/* <div className={`d-flex align-items-center mb-3 mr-5 ${area === 'Waste' || area === 'Semi Waste' ? 'd-none' : (category === 'Fruits' || category === 'Vegetables' ? null : 'd-none')}`}>\r\n              {`Ripeness Level`}\r\n              <span className=\"ml-2 font-green\">{` ${ripenessLevel}`}</span>\r\n            </div> */}\r\n            <div className={`d-flex align-items-center mb-3 mr-5 ${area === 'Waste' || area === 'Semi Waste' ? null : 'd-none'}`}>\r\n              {`Grade`}\r\n              <span className=\"ml-2 font-green\">{` ${grade.length ? grade[0].label : '-'}`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex flex-column justify-content-between w-100 align-items-center px-3 z-0\">\r\n        {poItem.itemList?.map((item, entryListIdx) => {\r\n          return (\r\n            <div className=\"d-flex w-100 align-items-center justify-content-between\">\r\n              <div className=\"w-100 d-flex\">\r\n                <div style={{width:'10px'}} className=\"input-height d-flex align-items-center mb-3 mr-3 pt-4 mt-2\">{`${entryListIdx + 1}.`}</div>\r\n                <div className=\"w-100\">\r\n                  <WeightEntry\r\n                    category={category}\r\n                    entryListIdx={entryListIdx}\r\n                    wmsPoSkuInfoId={item.wmsPoSkuInfoId}\r\n                    showTitle={true}\r\n                    gradeList={gradeList}\r\n                    onChange={(e) =>\r\n                      updateJSWeightLine({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        e,\r\n                      })\r\n                    }\r\n                    onChangeDropdown={({ selected, name }) =>\r\n                      updateJSWeightLineDropdown({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        selected,\r\n                        name,\r\n                      })\r\n                    }\r\n                    uom={uom}\r\n                    ripeness={ripeness}\r\n                    inputWidth={inputWidth}\r\n                    item={item}\r\n                    className={!ripeness ? \"d-none\" : null}\r\n                    poListIdx={poListIdx}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex w-25 align-items-center justify-content-end input-height mb-0 p-0\">\r\n                <img\r\n                  src={Trash}\r\n                  alt=\"delete icon\"\r\n                  className={`w-1 cursor-pointer `}\r\n                  onClick={(e) =>\r\n                    deleteRow({\r\n                      dispatch,\r\n                      moduleEntry,\r\n                      moduleName,\r\n                      activeSku,\r\n                      poListIdx,\r\n                      entryListIdx,\r\n                      e,\r\n                      countQty\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        onKeyDown={e => e.keyCode === 13 ? addRow({dispatch, moduleEntry,moduleName, activeSku, poListIdx}) : false}\r\n        // className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer ${total === 0 ? 'd-none' : null}`}\r\n        className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer `}\r\n        // tabIndex='0'\r\n        onClick={() => addRow({\r\n          dispatch, moduleEntry,\r\n          moduleName, activeSku, poListIdx\r\n        })}\r\n      >\r\n        <i className=\"green iconU-entryAdd pr-2\"></i>\r\n        {`Add ${uomType} (${isFloat(initialWeightTotal) ? isFloat(initialWeightTotal) : initialWeightTotal} ${uom ? uom.toUpperCase() : ''}${initialWeightTotal > 1 ? \"s\" : \"\"} left)`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WeightEntryCard;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport WeightEntryCard from 'Page/StockEntry/StockTake/WeightEntry/WeightEntryList/WeightEntryCard'\r\nimport { removeEntryModule, saveJobSheet } from 'apiServices'\r\nimport { submitValidation } from 'Page/StockEntry/StockTake/services'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\";\r\nimport PopUpRequired from \"Component/Modal/PopUpRequired\";\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport Sort from 'Component/Sort'\r\nimport { useEntryDimention, useStockTakeEntry } from 'Page/StockEntry/GeneralServices'\r\n\r\nconst WeightEntryList = ({\r\n    hideSKUList,\r\n    setHideSKUList,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName\r\n}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { height, heightAdj, dimention } = useEntryDimention()\r\n\r\n    const {\r\n        status,\r\n        setIsSuccess,\r\n        confirmation,\r\n        setConfirmation,\r\n        discard,\r\n        setDiscard,\r\n        isSaved,\r\n        setIsSaved,\r\n        action,\r\n        setAction,\r\n        isRequired,\r\n        setIsRequired,\r\n        hideContent,\r\n        setHideContent,\r\n        isLoading,\r\n        skuName,\r\n        skuNumber,\r\n        poList,\r\n        gradeList,\r\n        unitOfMeassures,\r\n        totalWeight,\r\n        edited,\r\n        postInfo\r\n    } = useStockTakeEntry({ moduleEntry, activeSku })\r\n    //Condition\r\n    const isMobile = dimention <= 500\r\n    const isHidden = hideContent ? 'd-none' : null\r\n    const isPlural = totalWeight > 1 ? \"s\" : ''\r\n    const isEdited = edited ? 'bg-green' : 'bg-lineGrey'\r\n    return (\r\n        <div style={{ paddingLeft: isMobile ? 0 : 10 }} className='w-100 h-100 mt-3 mt-md-0'>\r\n            <Discard\r\n                discard={discard}\r\n                module={'Inventory Entry - Stock Take'}\r\n                moduleEntry={moduleEntry}\r\n                close={() => setDiscard(false)}\r\n                discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch })}\r\n            />\r\n            <PopUpSaved\r\n                status={status}\r\n                moduleEntry={moduleEntry}\r\n                submit={() => dispatch({ type: 'CREATE_JOB_SHEET', [`${moduleName}EntryData`]: null, [`${moduleName}SummaryData`]: null })}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSaved={isSaved}\r\n                action={action}\r\n                setIsSaved={setIsSaved}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n            />\r\n            <PopUpRequired\r\n                isRequired={isRequired}\r\n                module={moduleEntry}\r\n                setIsRequired={setIsRequired}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n            />\r\n            <Confirmation\r\n                isLoading={isLoading}\r\n                moduleEntry={moduleEntry}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSuccess={postInfo}\r\n                setAction={setAction}\r\n                action={action}\r\n                save={() => saveJobSheet({ name: 'save', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n                submit={() => saveJobSheet({ name: 'submit', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n            />\r\n            <div className='mb-3 bg-white rounded-bottom rounded-top'>\r\n                <div style={{ height }} style={{ padding: 10 }} className='w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green'>\r\n                    <div className='d-flex w-100 m-0 p-0' onClick={() => isMobile ? setHideContent(!hideContent) : null}>\r\n                        <div className={`${hideSKUList ? 'iconU-sideBarHideRight' : 'iconU-sideBarHideLeft'} emptyTextField fontSizeTitle mr-3 m-0 p-0`} onClick={() => setHideSKUList(!hideSKUList)} />\r\n                        <div className='mr-3 pr-1 d-flex align-items-center m-0 p-0 LatoBold'>Weight Entry</div>\r\n                        <div className='mr-3 iconU-sideBarDot d-flex align-items-center m-0 p-0' />\r\n                        <div className='mr-3 d-flex align-items-center font-green LatoBold m-0 p-0'>{`${skuName} (${skuNumber})`}</div>\r\n                    </div>\r\n                    <Sort moduleEntry={moduleEntry} moduleName={moduleName} activeSku={activeSku} dispatch={dispatch} />\r\n                </div>\r\n                <div style={{ height: isMobile ? height : heightAdj, minHeight: isMobile ? height : heightAdj }} className={`w-100 overflow-y mr-0 border-left border-right border-soft-green pl-3 pr-2 pt-3 ${isHidden}`}>\r\n                    {\r\n                        poList?.map((poItem, idx) => {\r\n                            return <WeightEntryCard\r\n                                gradeList={gradeList}\r\n                                inputWidth='input-w-100'\r\n                                activeSku={activeSku}\r\n                                poListIdx={idx}\r\n                                poItem={poItem}\r\n                                moduleEntry={moduleEntry}\r\n                                moduleName={moduleName}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <div className={`w-100 d-flex align-items-center p-3 border-left border-right border-bottom rounded-bottom LatoBold ${isHidden}`}>\r\n                    <button\r\n                        tabIndex='0'\r\n                        type=\"button\"\r\n                        className={`btn ${isEdited}  text-white sku-item px-5 mr-3 LatoBold`}\r\n                        onClick={() => edited ? setConfirmation({ show: true, name: 'save' }) : null}>\r\n                        Save\r\n                    </button>\r\n                    <div>Total Weight <span className='font-green'>{`${totalWeight} ${unitOfMeassures?.toUpperCase()}${isPlural}`}</span></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end\">\r\n                <div tabIndex='0' onClick={() => setDiscard(true)} className='red pr-3 sku-item fontSizeButton cursor-pointer'><i className='iconU-entryTrash'></i> Discard</div>\r\n                <button tabIndex='0' onClick={() => edited ? submitValidation({ moduleEntry, moduleName, dispatch, setConfirmation, setIsRequired }) : null} className={`btn sku-item px-5 py-2 text-white ${isEdited} LatoBold no-shadow`} style={{ height: \"fit-content !important\" }} >Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntryList","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport SelectedSKUList from 'Page/StockEntry/StockTake/WeightEntry/SelectedSKUList'\r\nimport WeightEntryList from 'Page/StockEntry/StockTake/WeightEntry/WeightEntryList'\r\n\r\nconst WeightEntry = () => {\r\n    const stockTakeEntryData = useSelector(state => state.stockTakeEntryData)\r\n    const [hideSKUList, setHideSKUList] = useState(false)\r\n    const [activeSku, setActiveSKU] = useState(0)\r\n    let height = document.documentElement.clientHeight\r\n    let clientWidth = document.documentElement.clientWidth\r\n    let heightAdj = height - 150\r\n    const moduleName = 'stockTake'\r\n    if (!stockTakeEntryData || stockTakeEntryData?.jobPost.list.length === 0) {\r\n        return (\r\n            <div className='d-flex align-items-center justify-content-center text-center w-100 h-screen'><Redirect to='/inventory-entry/stock-take'>Please Select At Least 1 SKU</Redirect></div >)\r\n    }\r\n    return (\r\n            <div style={{height: clientWidth <= 500 ? height : heightAdj }} className='w-100 d-md-flex justify-content-between scroll-y z-0'>\r\n                <SelectedSKUList\r\n                    hideSKUList={hideSKUList}\r\n                    activeSku={activeSku}\r\n                    setActiveSKU={setActiveSKU}\r\n                    moduleName={moduleName}\r\n                    moduleEntry={stockTakeEntryData}\r\n                />\r\n                <WeightEntryList\r\n                    setHideSKUList={setHideSKUList}\r\n                    hideSKUList={hideSKUList}\r\n                    moduleName={moduleName}\r\n                    moduleEntry={stockTakeEntryData}\r\n                    activeSku={activeSku}\r\n                />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntry","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom,\r\n    resetName,\r\n    isMulti,\r\n    hideResetOpt\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? (styles, { isOpen }) => {\r\n        return {\r\n            ...styles,\r\n            border: isOpen ? 'solid #eb5c5c 1px' : 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{label:`-${resetName ? resetName : title}-`, value:null}]\r\n    if(options) defaultvalue=[...defaultvalue, ...options]\r\n    if(hideResetOpt) defaultvalue = defaultvalue.filter(val => val?.value)\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if(dimention <= 500) menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                isMulti={isMulti}\r\n                isSearchable= {dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : (selectedValue?.length ? selectedValue : false)}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={resetName ? resetName : placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={200}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected, isOpen }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#a8b1be',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import { isInteger } from \"formik\";\r\n\r\nexport const next = ({\r\n  e,\r\n  state,\r\n  isCaptcha,\r\n  setIsValidated,\r\n  setIsType,\r\n  isType,\r\n}) => {\r\n  const key = e.key; // const {key} = event; ES6+\r\n  // console.log(key, state, isType[state]);\r\n  let arr_tmp = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown', 'Tab']\r\n  if (arr_tmp.includes(key)) {\r\n    return 0;\r\n  } else if (key === \"Backspace\") {\r\n    if (state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n    }\r\n  } else {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n    }\r\n  }\r\n\r\n  let type = [...isType];\r\n  if (key === \"Backspace\") {\r\n    type[state] = '';\r\n  } else {\r\n    type[state] = key.toUpperCase();\r\n  }\r\n  let char = \"QWERTYUIOPLKJHGFDSAZXCVBNM1234567890\"\r\n  let allowedChar = char.split('')\r\n  if (allowedChar.includes(key.toUpperCase()) || type[state] == '') {\r\n    document.getElementById(\"t\" + (parseInt(state))).value = type[state];\r\n    setIsType(type);\r\n  } else {\r\n    return 0;\r\n  }\r\n\r\n  let stat = true;\r\n  isCaptcha.map((data, index) => {\r\n    if (index == 0) {\r\n      return;\r\n    }\r\n    if (!(type[index + 1] == isCaptcha[index])) {\r\n      stat = false;\r\n    }\r\n  });\r\n  setIsValidated(stat);\r\n};\r\n\r\nexport const skuListUpdateCheck = (module, noSkuChecking, moduleName) => {\r\n  if (module?.length) {\r\n    let newModule = []\r\n    module.map(list => {\r\n      list.poList.map(po => {\r\n        po.itemList.map(item => {\r\n          const { qty, grade } = item\r\n          const _qty = isInteger(qty) ? parseInt(qty) : (!qty ? 0 : parseFloat(qty))\r\n          const _sku = noSkuChecking ? list.skuName : moduleName === 'waste' ? (item.wasteType?.label ? item.wasteType?.label : list.skuName) : grade?.label\r\n          const _toWaste = moduleName === 'waste' ? (item.wasteType?.label === 'Semi Waste' || item.wasteType?.label === 'Waste' ? true : false) : grade?.label === 'Waste' || grade?.label === 'Semi Waste' ? true : false\r\n          const _uom = noSkuChecking ? list.unitOfMeassures : grade?.uom === 'gram' ? 'kg' : grade?.uom\r\n          let newSku = {\r\n            sku: _sku,\r\n            qty: _qty,\r\n            uom: _uom,\r\n            wqty: 0,\r\n            swqty: 0\r\n          }\r\n          if (_toWaste) {\r\n            newSku.qty = 0\r\n            newSku.sku = list.skuName\r\n          }\r\n          if (moduleName === 'waste' ? item.wasteType?.label === 'Waste' : grade?.label === 'Waste') newSku.wqty = _qty\r\n          if (moduleName === 'waste' ? item.wasteType?.label === 'Semi Waste' : grade?.label === 'Semi Waste') newSku.swqty = _qty\r\n          const isExist = newModule.findIndex(sku => sku?.sku === (_toWaste ? list.skuName : _sku))\r\n\r\n          if (moduleName !== 'waste') {\r\n            if (isExist === -1) newModule.push(newSku)\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty\r\n              if (grade?.label === 'Semi Waste') newModule[isExist].swqty += _qty\r\n              if (grade?.label === 'Waste') newModule[isExist].wqty += _qty\r\n            }\r\n          }\r\n\r\n          if (moduleName === 'waste') {\r\n            if (isExist === -1) newModule.push(newSku)\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty\r\n              if (item.wasteType?.label === 'Semi Waste') newModule[isExist].swqty += _qty\r\n              if (item.wasteType?.label === 'Waste') newModule[isExist].wqty += _qty\r\n            }\r\n          }\r\n\r\n        })\r\n      })\r\n    })\r\n    const skuName = module.length ? module[0].skuName : 'No SKU'\r\n    const i = newModule.findIndex(s => s.sku === skuName)\r\n    newModule.map(sku => {\r\n      if (i !== -1) {\r\n        if (sku.sku === 'Waste') newModule[i].wqty = sku.qty\r\n        if (sku.sku === 'Semi Waste') newModule[i].swqty = sku.qty\r\n      }\r\n    })\r\n    return newModule\r\n  }\r\n}","import React, { useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { next, skuListUpdateCheck } from \"./services.js\";\r\nimport { totalQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst ModalsConfirmation = ({ moduleEntry, confirmation, setConfirmation, save, submit, isSuccess, isLoading, moveAll, setAction, moduleName, noSkuChecking, singleViewData }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 300\r\n\r\n  let buttonName = 'Submit'\r\n\r\n  if (confirmation.name === 'save') buttonName = 'Save'\r\n  useEffect(() => {\r\n    if (isSuccess) setConfirmation({ show: false, name: null })\r\n  }, [isSuccess])\r\n  window.onkeydown = e => e.keyCode === 27 ? setConfirmation({ show: false, name: null }) : null\r\n\r\n  useEffect(() => {\r\n    setAction(confirmation.name)\r\n  }, [confirmation])\r\n\r\n  let module = singleViewData && !moveAll ? singleViewData : moduleEntry\r\n\r\n  const areaDestinationName = module?.jobPost?.areaDestinationName\r\n  const warehouseDestinationName = module?.jobPost?.warehouseDestinationName\r\n  const areaName = module?.jobPost?.areaName\r\n\r\n  const skuListUpdate = skuListUpdateCheck(module?.jobPost.list, noSkuChecking, moduleName)\r\n  return (\r\n    <CRow className={confirmation.show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={confirmation.show}\r\n          closeOnBackdrop={false}\r\n        >\r\n          <CModalHeader className=\"px-4 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation <span><i className=\"em em-pray\"></i></span></CModalTitle>\r\n            <label tabIndex='0' onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false} onClick={() => setConfirmation({ show: false, name: null })} className='sku-item iconU-modalClose' />\r\n\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-4 py-0\" style={{ minHeight: height }}>\r\n            <p className=\"text mb-2\">\r\n              <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n              <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n              <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n              <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n              <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${moduleName === 'stockTransfer' ? warehouseDestinationName : (areaDestinationName ? areaDestinationName : areaName)} `}</span>\r\n            </p>\r\n            <p className=\"text\">\r\n              Please double check this list, this record will store to database.\r\n            </p>\r\n            <div\r\n              style={{\r\n                minHeight: height,\r\n                maxHeight: height,\r\n                overflow: \"auto\",\r\n                border: \"1px solid var(--lineGrey)\",\r\n              }}\r\n            >\r\n              <table>\r\n                <thead>\r\n                  <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                    <th style={{ color: \"var(--emptyTextField)\" }}>SKU List</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Weight</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Semi Waste</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Waste</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {skuListUpdate?.map((data) => (\r\n                    <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                      <td style={{ maxWidth: '160px' }}>{data.sku}</td>\r\n                      <td className=\"text-right py-3\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.qty)}`}\r\n                      </td>\r\n                      <td className=\"text-right text-nowrap\" style={{ textAlign: \"right\" }}>\r\n                        <span className='text-nowrap'>{`${totalQty(data?.swqty)} `}</span>\r\n                      </td>\r\n                      <td className=\"text-right\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.wqty)}`}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"px-0 pb-5 pt-0 justify-content-start border-none\">\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false}\r\n                className=\"bg-background sku-item text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n                onClick={() => setConfirmation({ show: false, name: null })}\r\n              >\r\n                Cancel\r\n            </CButton>\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? (isLoading ? null : (confirmation.name === 'save' ? save() : submit())) : false}\r\n                className={`${isLoading ? 'bg-softGreen text' : 'bg-green text-white'} no-shadow px-5 mt-4 sku-item mb-0 ml-3 mr-0`}\r\n                onClick={() => isLoading ? null : (confirmation.name === 'save' ? save() : submit())}\r\n              >\r\n                {isLoading ? 'Processing...' : buttonName}\r\n              </CButton>{\" \"}\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst ModalsCaptcha = ({\r\n  show = false,\r\n  setIsShowModal,\r\n  submit,\r\n  submitText = \"Submit\",\r\n}) => {\r\n  //random text\r\n  var text = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  var text_split = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    let r = characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    text += r;\r\n    text_split.push(r);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const [isCaptcha, setIsCaptcha] = React.useState(text_split);\r\n  const [isCaptchaText, setIsCaptchaText] = React.useState(text);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n  const [isButtonSubmit, setIsButtonSubmit] = React.useState(\"Submit\");\r\n  const [isType, setIsType] = React.useState([]);\r\n\r\n  //reset if visible = false \r\n  useEffect(() => {\r\n    if (show === true) {\r\n      document.getElementById('t1').value = '';\r\n      document.getElementById('t2').value = '';\r\n      document.getElementById('t3').value = '';\r\n    }\r\n  }, [show]);\r\n\r\n  return (\r\n    <CRow className={show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          onClose={() => {\r\n            setIsShowModal(false);\r\n          }}\r\n          size=\"lg\"\r\n          style={{ height: \"400px\" }}\r\n        >\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">\r\n              Are you sure want to upload <span className=\"green\">Edited</span>{\" \"}\r\n              {selectorCsvFileName}?\r\n            </p>\r\n            <p className=\"text\">\r\n              Once uploaded this record will store to databases.\r\n            </p>\r\n            <p className=\"text mb-2\">\r\n              Please type ‘{isCaptchaText}’ on the Box to confirm upload file.\r\n            </p>\r\n\r\n            <div className=\"captcha-box\">\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 1,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t1\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[0]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 2,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t2\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input ml-0 mr-0\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[1]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 3,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t3\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[2]}\r\n              />\r\n            </div>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            <CButton\r\n              className=\"bg-background text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n              onClick={() => {\r\n                setIsShowModal(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </CButton>\r\n            <CButton\r\n              className={\r\n                (isValidated ? \"bg-green\" : \"bg-emptyTextField disabled\") +\r\n                \" no-shadow px-5 mt-4 mb-0 ml-3 mr-0\"\r\n              }\r\n              onClick={() => {\r\n                submit();\r\n                setIsValidated(false);\r\n              }}\r\n            >\r\n              {submitText}\r\n            </CButton>{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport { ModalsConfirmation, ModalsCaptcha };\r\n","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    return (\r\n        <CRow className={discard ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                             from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-5 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    ripeness,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title,\r\n    toCompare\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' || uom === 'KG' ? true : false\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`wgt_${poListIdx}_${entryListIdx}`} maxLength='12' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={toCompare ? 'weightToCompare' : 'weight'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","module.exports = __webpack_public_path__ + \"static/media/trash.121a7b10.png\";","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    name\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","export const submitAction = ({ confirmation, setIsSaved, submit, setLocalEntryData,moveAll}) => {\r\n    if (confirmation.name === 'submit') {\r\n        if(moveAll)  setLocalEntryData()\r\n        submit()\r\n        setIsSaved()\r\n        \r\n    }\r\n    else {\r\n        setIsSaved()\r\n    }\r\n}\r\n\r\nexport const message = ({moduleEntry, complete}) => {\r\n    if(moduleEntry?.jobPost){\r\n        let message = null\r\n        const {areaDestinationName, areaName} = moduleEntry?.jobPost\r\n        if(areaDestinationName) message = ` ${areaName} reefer ${areaDestinationName} - `\r\n        else message = ` ${areaName} - `\r\n        return message\r\n    }\r\n}\r\n\r\nexport const handleFailed = ({setIsSaved,setConfirmation,action, setLocalEntryData}) => {\r\n    setIsSaved()\r\n    setConfirmation({ show: true, name: action })\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { dateFull } from 'services'\r\nimport { submitAction, message, handleFailed } from './services'\r\n\r\nconst PopUpSaved = ({ isSaved, moduleName, totalSku, setIsSaved, confirmation, setConfirmation, submit, action, moduleEntry, complete, setLocalEntryData, moveAll, status }) => {\r\n    const saved = {\r\n        success: {\r\n            header: confirmation.name === 'submit' ? 'Success ! ' : 'Saved !',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: `${confirmation.name === 'submit' ? 'Submitted' : 'Saved'} successfully`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        failed: {\r\n            header: `${confirmation.name === 'submit' ? 'Submit' : 'Save'} Failed`,\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            date: dateFull({}),\r\n            sku: '',\r\n            module: `Sorry `,\r\n            status: 'item not recorded.',\r\n            button: 'bg-red',\r\n            buttonText: 'Try Again'\r\n        }\r\n    }\r\n    const data = isSaved ? saved.success : saved.failed\r\n    const [showErrorMessage, setShowErrorMessage] = useState(false)\r\n\r\n    const show = isSaved === true || isSaved === false ? true : false\r\n\r\n    const focus = document.getElementById('btn_is_saved')\r\n    if (focus) focus.focus()\r\n\r\n    const arrowIcon = showErrorMessage ? 'iconU-arrowTop' : 'iconU-arrowBottom'\r\n    const opacity = isSaved ? 1 : (showErrorMessage ? 1 : 0)\r\n    const errorText = showErrorMessage ? 'Hide Message' : 'Show Message'\r\n\r\n    return (\r\n        <CRow onKeyDown={e => e.keyCode === 27 ? alert() : false} className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    className={`${isSaved ? null : 'popup-saved'}`}\r\n                    show={show}\r\n\r\n                    onClose={() => {\r\n                        if (isSaved) submitAction({ confirmation, setIsSaved, submit })\r\n                        if (!isSaved) setIsSaved()\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit }) : setIsSaved()} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${data.textColor} LatoBold mr-2 h5 mb-3`}>{data.header}</label> <span><i className={`${data.headerIcon}`}></i></span>\r\n                        <div className='mr-1 h5 mb-3'>{`Entries ${data.status}`}</div>\r\n                        <div onClick={() => setShowErrorMessage(!showErrorMessage)} className={`d-flex align-items-center mr-1 mb-3 error-message pointer ${isSaved ? 'd-none' : null}`}>\r\n                            <div className={`mr-2 ${arrowIcon}`} />\r\n                            <div className='green'>{errorText}</div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA', opacity: opacity }} className='w-100 border rounded px-3 pt-3 pb-3 mb-3'>\r\n                            <div className={`h5 mb-3 ${isSaved ? null : 'd-none'}`}>{data.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className={`mr-1 ${isSaved ? null : 'd-none'}`}>{`${message({ moduleEntry, complete })} ${data.sku}`}</label>\r\n                                <div className={`mr-1 ${isSaved ? 'd-none' : null}`}>\r\n                                    <div style={{ wordWrap: 'break-word', opacity: opacity, height: showErrorMessage ? false : 0 }} className={`mr-1 `}>\r\n                                        {`${status?.message?.toString()}`}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`mb-2 h5 ${confirmation.name === 'submit' ? 'd-none' : null}`}>Please continue your work</div>\r\n                        <div className='w-100 d-flex '>\r\n                            <CButton onClick={() => setIsSaved()} className={`text no-shadow px-5 mr-4 mb-3 ${`bg-softGreen ${isSaved ? 'd-none' : null}`}`}>\r\n                                Cancel\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) : handleFailed({ setIsSaved, setConfirmation, action })} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","import React from 'react'\r\nconst Note = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    isReadOnly\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${grade === 'Waste' ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} border rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input readOnly={isReadOnly} autoComplete='off' className='w-100 plain-input' value={values} name='note' onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","export let defaults = {\r\n    header: 'Complete All !',\r\n    headerIcon: 'em em-anger',\r\n    textColor: 'red',\r\n    date: 'You are  required to update all entries on the list.',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Check several entries left.',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const threshold = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'The threshold calculation ratio should be between -20% until 50%',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const initialWeight = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'Add Weight should not exceed Initial Weight',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}","import React from \"react\";\r\nimport {isLessThanInitWeight} from 'services'\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n    CModalFooter\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport {threshold, initialWeight, defaults} from './services'\r\n\r\nconst PopUpSaved = ({ isRequired, setIsRequired, moduleName, module,totalSku, invalidThreshold, setInvalidThreshold }) => {\r\n    let saved = defaults;\r\n    let isTrue\r\n    if ((!isRequired && invalidThreshold) || (isRequired && invalidThreshold)) {\r\n        saved = threshold\r\n    }\r\n\r\n    if(moduleName !== 'stockTake'){\r\n        isTrue = isLessThanInitWeight(module)\r\n        if(isTrue) saved = initialWeight\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_required')\r\n    if(focus) focus.focus()\r\n    return (\r\n        <CRow className={isRequired || invalidThreshold ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={isRequired || invalidThreshold}\r\n                    onClose={() => {\r\n                        setIsRequired(false)\r\n                        if (invalidThreshold) setInvalidThreshold(false)\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${saved?.textColor} LatoBold mr-2 mb-5 h5`}>{saved?.header}</label> <span><i className={`${saved?.headerIcon}`}></i></span>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100 border rounded px-3 pt-4 pb-3 mb-4'>\r\n                            <div className={`h5 mb-3 ${isRequired || invalidThreshold ? null : 'd-none'}`}>{saved?.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className='mr-1 h5'>{`${saved?.status}`}</label>\r\n                            </div>\r\n                        </div>\r\n                    </CModalBody>\r\n                    <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none d-flex mt-2\">\r\n                        <CButton onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} className={`text no-shadow ${`bg-softGreen ${isRequired ? 'd-none' : null}`}`}>\r\n                            Cancel\r\n                        </CButton>\r\n                        <CButton \r\n                            id={'btn_is_required'}\r\n                            tabIndex='0'\r\n                            onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} className={`text-white no-shadow ${saved?.button}`}>\r\n                            {saved?.buttonText}\r\n                        </CButton>\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","import React, {useEffect,useState,useRef } from 'react'\r\nimport {Calendar,DateRangePicker } from 'react-date-range'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport './index.scss'\r\nimport {setDates} from './services'\r\n\r\nfunction useOutside({wrapperRef,showDate,setShowDate,selectDate}) {\r\n  useEffect(() => {\r\n      /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n      function handleClickOutside(event) {\r\n          if (showDate && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n              setShowDate(!showDate)\r\n              selectDate()\r\n          }\r\n      }\r\n\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n          // Unbind the event listener on clean up\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n  }, [wrapperRef,showDate]);\r\n}\r\n\r\nconst SKUDatePicker = ({ showDate, selectDate, setShowDate }) => {\r\n  let dimention = document.documentElement.clientWidth\r\n  dimention = dimention - 1555\r\n  const [dateRange, setDateRange] = useState({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n  const [date,setDate] = useState(new Date())\r\n  const [mode, setMode] = useState()\r\n\r\n  const singleDate = mode ? 'text' : 'bg-green text-white'\r\n  const multipleDate = mode ? 'bg-green text-white' : 'text'\r\n\r\n  const wrapperRef = useRef(null);\r\n  useOutside({wrapperRef,showDate,setShowDate,selectDate});\r\n\r\n  useEffect(() => {\r\n    setDateRange({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n    setDate(new Date())\r\n  },[mode])\r\n\r\n  const setDateValue = () => {\r\n    if(showDate){\r\n      mode ? selectDate(dateRange) : selectDate(date)\r\n      setShowDate()\r\n    } \r\n  }\r\n\r\n  return (\r\n    <div ref={wrapperRef} style={{ width: '350px' }} className={` mt-5 position-fixed bg-white border border-soft-green rounded z-100 d-flex flex-column justify-content-center ${showDate ? null : 'd-none'}`}>\r\n      <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <div className=' border border-soft-green d-flex rounded justify-content-between w-100 cursor-pointer'>\r\n        <span onClick={() => setMode(!mode)} className={` ${singleDate} w-50  ${mode ? 'rounded-left' : 'rounded'} text-center p-2`}>Single Date</span>\r\n        <span onClick={() => setMode(!mode)} className={` ${multipleDate} w-50 ${!mode ? 'rounded-right' : 'rounded'} text-center p-2`}>Ranged Date</span>\r\n        </div>\r\n      </div>\r\n    <DateRangePicker\r\n      className={mode ? null : 'd-none'}\r\n      ranges={[dateRange]}\r\n      onChange={newdate => setDates({newdate,dateRange,setDateRange})}\r\n      />\r\n    <Calendar\r\n    className={mode ? 'd-none' : null}\r\n      date={date}\r\n      onChange = {dt => setDate(dt)}\r\n    />\r\n    <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <span onClick={() => setDateValue()} className={` bg-green text-white w-100 border border-soft-green rounded text-center p-2`}>Confirm</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SKUDatePicker","export const setDates = ({newdate, dateRange,setDateRange}) => {\r\n    let dt = {...dateRange}\r\n    dt.startDate = newdate.selection.startDate\r\n    dt.endDate = newdate.selection.endDate\r\n    setDateRange(dt)\r\n  }","import React, { useState, useEffect } from 'react'\r\nimport { sortByInboundDate, filterByDate, dateDMY } from 'services'\r\nimport DatePicker from 'Component/DatePickerNew'\r\nimport asc from 'assets/icons/asc.svg'\r\nimport desc from 'assets/icons/desc.svg'\r\n\r\nconst Sort = ({ moduleEntry, moduleName, activeSku, dispatch }) => {\r\n    const [sortBy, setSortBy] = useState()\r\n    const [date, setDate] = useState()\r\n    const [showDate, setShowDate] = useState()\r\n    const [resetFilter, setResetFilter] = useState()\r\n    let dateShow;\r\n    const dimention = document.documentElement.clientWidth\r\n    dateShow = dateDMY({ date, datePicker: true })\r\n    if (dateShow?.startDate) dateShow = `${dateShow.startDate} - ${dateShow.endDate}`\r\n    else dateShow = dateShow\r\n\r\n    useEffect(() => {\r\n        sortByInboundDate({ moduleEntry, moduleName, activeSku, dispatch, sortBy })\r\n    }, [sortBy, activeSku])\r\n\r\n    useEffect(_ => {\r\n        if (!showDate) filterByDate({ moduleEntry, moduleName, activeSku, dispatch, date })\r\n    }, [date, showDate, activeSku])\r\n\r\n    useEffect(_ => {\r\n        setSortBy()\r\n        setDate()\r\n    }, [resetFilter, activeSku])\r\n    return (\r\n        <div className='w-25 d-flex justify-content-end'>\r\n            {/* <div className='iconU-modalClose red border-soft-green border emptyTextField rounded px-2 pt-2 mr-3 cursor-pointer' onClick={() => setResetFilter(d => !d)} /> */}\r\n            <div style={{ height: 40 }} className={`${moduleName === 'repack' ? 'd-none' : null} border-soft-green border-top border-bottom border-left m-0 rounded-left green h6 d-flex align-items-center justify-content-center px-2 text-nowrap ${dimention > 500 ? (date ? null : 'd-none') : 'd-none'}`}>{dateShow}</div>\r\n            <div style={{ height: 40, minWidth: 40 }}\r\n                className={`${date ? 'iconU-modalClose red' : 'iconU-filterDate emptyTextField'} border-soft-green border ${date ? 'rounded-right' : 'rounded'} ${moduleName === 'repack' ? 'd-none' : null} d-flex align-items-center justify-content-center mr-3 cursor-pointer`}\r\n                onClick={() => date ? setResetFilter(d => !d) : setShowDate(d => !d)} />\r\n            <DatePicker showDate={showDate} selectDate={(date) => setDate(date)} setShowDate={(d) => setShowDate(d)} />\r\n            <img style={{ height: 40, minWidth: 40 }} src={sortBy ? desc : asc} onClick={() => setSortBy(!sortBy)} className='p-2 border rounded border-soft-green cursor-pointer' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sort","module.exports = __webpack_public_path__ + \"static/media/asc.9b60817e.svg\";","module.exports = __webpack_public_path__ + \"static/media/desc.bec03077.svg\";","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET, SET_AREA, IS_LOADING } from 'apiServices/action'\r\nimport { getPoBySkuId, removeEntryModule } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { isFloat, dateDMY } from 'services'\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    zeroQuantity }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew, finish: false })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName, zeroQuantity })\r\n            if (data) {\r\n                const grades = list.gradeList.filter(grade => { return grade?.value === list.skuUuid })\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = [\r\n                        {\r\n                            qty: poList.initialWeight,\r\n                            grade: grades[0],\r\n                            // ripeness: { value: String(poList.ripenessLevel), label: poList.ripenessLevel },\r\n                            expiryDate: poList?.expiryDate,\r\n                            expiryDateText: dateDMY({ date: poList?.expiryDate })\r\n                        }\r\n                    ]\r\n                    poList.initialWeightUpdate = poList.inboundQty - poList.initialWeight\r\n                    poList.initialWeightScreenUpdate = parseInt(0)\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    dispatch({ type: IS_LOADING, finish: true })\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaId?.value),\r\n            list: newJs\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    setLocalEntryData(jobSheet)\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    zeroQuantity,\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName, zeroQuantity })\r\n            if (data) {\r\n                const grades = list.gradeList.filter(grade => { return grade?.value === list.skuUuid })\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = [\r\n                        {\r\n                            qty: poList.initialWeight,\r\n                            grade: grades[0],\r\n                            // ripeness: { value: String(poList.ripenessLevel), label: poList.ripenessLevel },\r\n                            expiryDate: poList?.expiryDate,\r\n                            expiryDateText: dateDMY({ date: poList?.expiryDate })\r\n                        }\r\n                    ]\r\n                    poList.initialWeightScreenUpdate = parseInt(0)\r\n                    poList.initialWeightUpdate = poList.inboundQty - poList.initialWeight\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                list.isNewItem = true\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\nexport const submitValidation = ({ moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const { qty, grade, ripeness, note } = item\r\n\r\n                if (po.category === 'Fruits') {\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                            isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                        else {\r\n                            isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            !ripeness?.value ? item.ripenessIsEmpty = true : item.ripenessIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                    }\r\n                }\r\n\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty || item?.qtyToCompareIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item?.qty >= 0) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        setConfirmation({ show: false, name: null })\r\n        setIsRequired(true)\r\n    }\r\n}","import React,{useState,useEffect,useRef} from 'react'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport 'Component/DatePickerNew/index.scss'\r\nimport { Calendar } from 'react-date-range'\r\n\r\nconst InputDatePicker = ({ placeholder, inputWidth, values, text, showTitle, title, isEmpty, onChange,onClick, disabled,entryListIdx,poListIdx }) => {\r\n    const [show, setShow] = useState()\r\n\r\n    const elem = document?.getElementById(`date${entryListIdx}${poListIdx}`);\r\n    let width = document.documentElement.clientWidth\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [show])\r\n    let top = position?.top + 50\r\n    let right = false\r\n\r\n    if(width > 500){\r\n        if(position?.bottom > 550) {\r\n            top = position?.top -300\r\n        } \r\n    }\r\n    else{\r\n        if(position?.bottom > 300) {\r\n            right = 30\r\n            top = position?.top -200\r\n        } \r\n\r\n        if(position?.bottom < 300) {\r\n            right = 30\r\n            top = position?.top  +120\r\n        } \r\n    }\r\n\r\n    function useOutside({wrapperRef,show,setShow}) {\r\n        useEffect(() => {\r\n            /**\r\n             * Alert if clicked on outside of element\r\n             */\r\n            function handleClickOutside(event) {\r\n                if (show && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n                    setShow(!show)\r\n                }\r\n            }\r\n      \r\n            // Bind the event listener\r\n            document.addEventListener(\"mousedown\", handleClickOutside);\r\n            return () => {\r\n                // Unbind the event listener on clean up\r\n                document.removeEventListener(\"mousedown\", handleClickOutside);\r\n            };\r\n        }, [wrapperRef,show]);\r\n      }\r\n\r\n    const wrapperRef = useRef(null);\r\n    useOutside({wrapperRef,show,setShow});\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 `} >\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div tabIndex='0' id={`date${entryListIdx}${poListIdx}`}  onClick={() => setShow(s => !s)} className={`${isEmpty ? 'border-red' : 'border'} rounded mb-2 sku-item border-soft-green w-100 w-lg-50 bg-white d-flex align-items-center input-height px-2 mr-3 ${typeof(onClick) === 'function' ? 'cursor-pointer':null}`}>\r\n                <input disabled={disabled} autoComplete='off' type='text' className={`w-100 plain-input ${typeof(onClick) === 'function' ? 'cursor-pointer':null}`} value={text}/>\r\n                <span className='iconU-filterDate emptyTextField'/>\r\n            </div>\r\n            <div style={{top, right}} className={`position-fixed border border-soft-green rounded z-infinity shadow ${show ? null : 'd-none'} `} ref={wrapperRef}>\r\n            <Calendar \r\n\r\n                classNames='p-1'\r\n                date={values}\r\n                onChange = {dt => {\r\n                    onClick(dt)\r\n                    setShow(false)\r\n                }}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputDatePicker"],"sourceRoot":""}