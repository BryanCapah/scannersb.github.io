{"version":3,"sources":["Page/StockEntry/Movement/index.jsx","Page/StockEntry/GeneralServices/index.js","Component/Dropdown/index.jsx","Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/SKUItem/index.jsx","Component/Calculator/index.jsx","Component/Modal/ModalConfirmation/services.js","Component/Modal/ModalConfirmation/index.jsx","assets/icons/loading/LOADING-MLS-GRAY.gif","Component/Filter/index.jsx","Component/Search/index.jsx","Component/Search/services.js","Component/Modal/PopUpDiscard/index.jsx","assets/icons/barcodeActive.svg","assets/icons/barcodeInactive.svg","assets/icons/ascOn.svg","assets/icons/ascOff.svg","assets/icons/categoryOn.svg","assets/icons/categoryOff.svg","assets/icons/deleteCategoryOn.svg","assets/icons/deleteCategoryOff.svg","assets/icons/checkHover.svg","assets/icons/checkNotHover.svg","Component/Calculator/Display.jsx","Component/Calculator/Keypad.jsx","Component/Calculator/Button.jsx","Component/Input/Decimal.jsx","assets/icons/trash.png","Component/Input/index.jsx","Component/Modal/PopUpSaved/services.js","Component/Modal/PopUpSaved/index.jsx","Component/Input/Note.jsx","Page/StockEntry/Repacking/services.js","Component/Modal/PopUpUnfinished/index.jsx","Component/Input/Pack.jsx","Component/Input/InputImage.jsx","Component/SingleViewModal/SkuItem.jsx","Component/Input/InputDatePicker.jsx","Component/Input/Excess.jsx","Component/SKUPagination/index.jsx","Page/StockEntry/Movement/services.js","Component/SingleViewModal/services.js","Component/SingleViewModal/moduleValidation.js","Component/SingleViewModal/inputController.js","Component/SingleViewModal/index.jsx","Component/ItemListModal/SkuItem.jsx","Component/ItemListModal/index.jsx","Component/Scanner/index.jsx"],"names":["submitCondition","setConfirmation","moveAllStockMovement","localEntryData","setLocalEntryData","setMoveAll","show","name","withRouter","props","story","useHistory","dispatch","useDispatch","useDimension","height","emptyItem","width","useStockMovement","moduleName","thereAreRequest","moduleFirstLoad","warehouseUuid","areaId","areaIdDesposition","areaMovement","status","isLoading","stockMovementEntryData","summary","setSummary","search","setSearch","area","areaMatched","discard","setDiscard","isCheckedTotal","entryIsReady","stockMovementTargetRepack","useSingleView","getStockTakeSummary","category","updateList","action","setAction","confirmation","setIsSuccess","isSaved","setIsSaved","createPo","setCreatePo","singleViewData","setSingleViewData","postInfo","moveAll","fromBarcode","setFromBarcode","useState","setCategory","sortBy","setSortBy","useScanner","showScanner","setShowScanner","showSkuList","setShowSkuList","selectAll","setSelectAll","isReady","isCheckedTrue","map","data","checked","noLength","length","isPlural","dropdownMatched","value","searchSku","desc","setModule","module","type","CREATE_JOB_SHEET","searchCheck","className","noSkuChecking","moduleEntry","isSuccess","submit","deleteSentSKU","resetSummary","saveJobSheet","totalSku","jobPost","list","close","discardEntry","id","removeEntryModule","redirect","history","push","previousPage","goBack","areaDestination","areaName","title","placeholder","options","onChangeDropdown","selected","selectedValue","showTitle","shape","color","size","defaultChecked","onChange","setSwitch","isMovement","setAreaId","setAreaDestination","barcodeScanner","filter","searchHandler","style","minHeight","maxHeight","sort","a","b","filterBySkuName","target","filterByRemainingTarget","idx","skuUuId","skuUuid","targetMovementProgress","key","img","photo","skuDescription","skuName","skuNumber","uomLabel","uomValue","totalQty","uom","unitOfMeassures","setSingleViewSku","isCheckedHandler","updateSummary","selectSku","moduleSummary","check","singleView","responseCheck","label","src","loading","alt","tabIndex","onClick","onKeyDown","e","keyCode","cursor","filterCheckedSku","hValue","wValue","dimention","document","documentElement","clientHeight","clientWidth","isMobile","useEntryDimention","showTargetRepack","heightAdj","useStockTake","zeroQuantity","useSelector","state","user","stockTakeFirstLoad","warehouseTypeName","isCentral","stockTakeEntryData","setArea","useEffect","getRipenessLevel","ripeness","getWarehouseArea","areaList","storageList","typeId","getUnfinishedEntries","isExist","getData","console","log","useStockTakeEntry","activeSku","success","isRequired","setIsRequired","hideContent","setHideContent","allowPage","setAllowPage","poList","gradeList","totalWeight","totalWeightCount","edited","jobSheetChecker","inputType","stockMovementFirstLoad","stockMovementDropdown","wasteReasonList","isCheckedBefore","setIsCheckedBefore","setAreaMatched","selectedSkuCheck","added","getWasteReason","_","useStockMovementEntry","useStockTransferEntry","useWaste","wasteFirstLoad","wasteEntryData","getWasteWarehouseArea","useWasteEntry","useAdditionalOutbound","outboundFirstLoad","outboundEntryData","warehouseArea","outboundAddSku","next","setNext","useAdditionalOutboundEntry","outboundTypeList","useRepacking","repackFirstLoad","repackEntryData","targetRepack","areaDestinationId","setAreaDestinationId","aId","adId","setTargetRepack","IS_LOADING","useRepackingEntry","invalidThreshold","setInvalidThreshold","activeTab","setActiveTab","totalPack","totalPackCount","props2","setTimeout","useTargetRepack","slotList","targetRepacks","slot","setSlot","tgtRpck","table","filterTargetRepack","setShowTargetRepack","totalEmptyThreshold","countThresholdIsEmpty","useTargetMovement","targetMovements","useOutside","wrapperRef","setShow","handleClickOutside","event","current","contains","addEventListener","removeEventListener","Dropdown","isEmpty","entryListIdx","poListIdx","isDisabled","noMarginBottom","resetName","isMulti","hideResetOpt","zInfinity","isOpen","setIsOpen","isEmptyStyle","styles","border","elem","getElementById","position","getBoundingClientRect","defaultvalue","val","menuPlacement","bottom","inputId","isSearchable","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","fontWeight","theme","borderRadius","PopUp","refresh","icon","statusDisplay","cancelButtonTitle","actionButtonTitle","cancelButtonClass","actionButtonClass","actionButtonEvent","colorText","msg1","msg2","onCloseFunction","refreshOnCancel","code","message","window","onkeydown","closeOnBackdrop","onClose","STATUS","bodyOpenClassName","location","reload","refreshPage","parentOncCloseFunction","SKUItem","Img","targetRepackProgress","mobile","React","isChecked","setIsChecked","createPoSingleView","showProgress","totalMove","total","forEach","Number","totalUom","totalUos","tabindex","minWidth","marginLeft","isFloat","max","toUpperCase","paddingLeft","paddingRight","paddingTop","paddingBottom","Calculator","setData","useRef","calculate","result","eval","toString","setShowCalculator","showCalculator","menuOnTop","top","handleClick","getAttribute","useCalculator","ref","left","right","rowSpan","colSpan","twoSpace","isCaptcha","setIsValidated","setIsType","isType","isValidated","includes","type_","parseInt","focus","setSelectionRange","split","stat","index","ModalsConfirmation","save","buttonName","areaDestinationName","warehouseDestinationName","skuListUpdate","newModule","po","itemList","item","qty","grade","_qty","isInteger","parseFloat","_sku","wasteType","_toWaste","_uom","newSku","sku","wqty","swqty","findIndex","i","s","skuListUpdateCheck","overflow","borderBottom","textAlign","maxWidth","ModalsCaptcha","setIsShowModal","submitText","text","characters","charactersLength","text_split","r","charAt","Math","floor","random","selectorCsvFileName","csvFileName","isCaptchaText","autocomplete","onKeyUp","textTransform","maxLength","exports","Filter","rectPosition","topValue","opacity","setSelected","active","setActive","handleSelected","reset","newOptions","thereIsTargetRepack","sortOptions","filterCategoryGreen","filterCategoryGrey","filterAscGreen","filterAscGrey","transition","transitionProperty","transitionDuration","currentItem","itemTextStyle","onMouseEnter","onMouseLeave","handleSingleSelected","fontSize","deleteOn","deleteOff","toLowerCase","filterBySelected","itemOpacity","tableLayout","align","checkHover","checkNotHover","Search","textSearch","filterDropdown","hideFilter","filterShow","setFilterShow","filterText","filterIcon","setDesc","userCategories","categories","categoryList","onKeyPress","scannerChecker","barcodeActive","barcodeInActive","filterToggle","PopUpDiscard","Display","Keypad","children","Button","data-size","data-value","data-twoSpace","Decimal","inputWidth","values","toCompare","readOnly","autoComplete","Input","submitAction","PopUpSaved","complete","updateEntry","setUpdateEntry","saved","header","headerIcon","textColor","date","dateFull","button","buttonText","failed","updateSuccess","updatedAlready","showErrorMessage","setShowErrorMessage","arrowIcon","errorText","wordWrap","handleFailed","Note","wmsPoSkuInfoId","isReadOnly","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","jsD","sI","getGradeRepacking","skuId","getPORepacking","warehouseId","addPoItem","expiryMs","inBoundyMs","expiryDate","inboundDate","packSize","initialWeight","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","areaSource","preAddSku","preAddHandler","isNewItem","submitValidation","setActiveSKU","isClear","js","jsR","description","originalUom","qtyCount","totalListItemWeightCount","moduleList","pack","note","isNaN","qtyIsEmpty","gradeIsEmpty","noteIsEmpty","ratio","grd","multiplier","standardWeight","inputWeight","packThresholdIsEmpty","packThreshold","packIsEmpty","qtyToCompareIsEmpty","slotIsEmpty","valid","checkIsSkuRequired","number","ls","listIndex","excess","PopUpUnfinished","moment","createdAt","format","showHandler","setShowTooltips","tooltipsCheck","Pack","withTooltips","showTooltips","remaining","row","repackTargetRemaining","join","onMouseOver","onBlur","InputImage","hover","setHover","backgroundImage","backgroundSize","margin","nv-file-select","uploader","accept","InputDatePicker","disabled","classNames","dt","Excess","hidePercent","SKUPagination","getGrade","getPoBySkuId","poItems","valueOf","reason","reasonIsEmpty","ripenessIsEmpty","Object","assign","JSON","parse","stringify","updateData","setValue","setItemList","changedList","setTotalQty","addLine","expiryDateSelected","newList","lastList","expiryDateText","dateDMY","changeValues","ddName","regexQty","outbound","outboundIsEmpty","saveImage","image","uploadPhoto","uploadPhotoIsEmpty","test","newValue","arr","commaNumber","undefined","sliceNumber","slice","qtyToCompare","checkItemList","supplierNameSelected","inboundDateSelected","supplierName","moduleIsEmpty","moduleCheckItemList","moduleTotalQty","stockMovementValidation","p","condition","updateInitialWeight","initialWeightFormatted","filterByDropdown","parameterList","setSupplierNameSelected","setInboundDateSelected","setExpiryDateSelected","setInboundDateOption","setExpiryDateOption","updatedInbound","noTime","poNumber","d","updatedExpiryDate","inputController","isWaste","componentConditionMovement","componentConditionStockTake","componentConditionRepack","SingleView","setIsMobile","closeModal","ripenessLevel","movement","stockTake","default","skuList","indexOf","wmsPoSkuCode","getSVSource","inboundDateList","expiryDateList","inboundDateOption","expiryDateOption","sameSKUNumber","sameSupplierName","sameInboundDate","sameExpiryDate","getPoDataByHeader","totalWeightUpdate","isFruits","filteredGradeList","rip","updateFilter","w","sw","setOptionValue","addLines","submits","SkuItem","newItem","deleteRow","Trash","totalList","setEntry","selectedSku","ItemListModal","setSkuList","getPoByPoCode","thereIsData","Scanner","previewStyle","setPoNumber","facingMode","delay","onError","onScan"],"mappings":"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","file":"static/js/16.7991fe88.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport Dropdown from \"Component/Dropdown\";\r\nimport Search from \"Component/Search\";\r\nimport { CSwitch } from \"@coreui/react\";\r\nimport { getStockTakeSummary, removeEntryModule, saveJobSheet } from \"apiServices\";\r\nimport SKUItem from \"Component/SKUItem\";\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport \"./index.scss\";\r\nimport { moveAllStockMovement, selectSku } from \"./services\";\r\nimport { filterByRemainingTarget, filterBySkuName, filterCheckedSku, responseCheck, setSingleViewSku, setSwitch, updateSummary } from \"Page/StockEntry/GeneralServices/moduleServices\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport PopUpUnfinished from 'Component/Modal/PopUpUnfinished'\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\"\r\nimport SingleView from 'Component/SingleViewModal'\r\nimport SKUPagination from 'Component/SKUPagination'\r\nimport ItemListModal from 'Component/ItemListModal'\r\nimport Scanner from 'Component/Scanner'\r\nimport { deleteSentSKU } from 'services'\r\nimport { useDimension, useStockMovement, useSingleView, useScanner } from 'Page/StockEntry/GeneralServices'\r\nconst submitCondition = ({ setConfirmation, moveAllStockMovement, localEntryData, setLocalEntryData, setMoveAll }) => {\r\n  setMoveAll(true)\r\n  moveAllStockMovement({ localEntryData, setLocalEntryData })\r\n  setConfirmation({ show: true, name: 'submit' })\r\n}\r\n\r\nconst StockMovement = (props) => {\r\n  const story = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const { height, emptyItem, width } = useDimension(470)\r\n\r\n  const {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    areaId,\r\n    areaIdDesposition,\r\n    areaMovement,\r\n    status,\r\n    isLoading,\r\n    stockMovementEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    areaMatched,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    entryIsReady,\r\n    stockMovementTargetRepack\r\n  } = useStockMovement({ dispatch })\r\n\r\n  const {\r\n    updateList,\r\n    action,\r\n    setAction,\r\n    confirmation,\r\n    setConfirmation,\r\n    setIsSuccess,\r\n    isSaved,\r\n    setIsSaved,\r\n    createPo,\r\n    setCreatePo,\r\n    singleViewData,\r\n    setSingleViewData,\r\n    postInfo,\r\n    moveAll,\r\n    setMoveAll,\r\n    fromBarcode,\r\n    setFromBarcode,\r\n  } = useSingleView({ dispatch, setLocalEntryData, setSummary, setSearch, getStockTakeSummary, search, warehouseUuid, areaId, localEntryData, category })\r\n\r\n  //search\r\n  const [category, setCategory] = useState()\r\n  const [sortBy, setSortBy] = useState()\r\n\r\n  const { showScanner, setShowScanner, showSkuList, setShowSkuList } = useScanner()\r\n\r\n  const [selectAll, setSelectAll] = useState(false)\r\n\r\n  //condition\r\n  let isReady = false\r\n  let isCheckedTrue = summary?.map(data => {\r\n    if (data?.checked) return true\r\n  })\r\n  if (entryIsReady && areaMatched === true && thereAreRequest === 0 && !selectAll) isReady = true\r\n  if (areaMatched === true && thereAreRequest === 0 && selectAll && isCheckedTrue) isReady = true\r\n\r\n  const noLength = summary?.length ? \"flex-column\" : \"flex-row\"\r\n  const isPlural = isCheckedTotal > 1 ? \"s\" : \"\"\r\n  const dropdownMatched = areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value\r\n  const searchSku = (desc, category) => {\r\n    dropdownMatched ?\r\n      getStockTakeSummary({\r\n        category,\r\n        moduleName,\r\n        stockMovementTargetRepack,\r\n        dispatch,\r\n        desc,\r\n        warehouseUuid,\r\n        areaId,\r\n        areaIdDesposition,\r\n        setModule: setSummary,\r\n        module: localEntryData\r\n      },\r\n        setSearch(desc)) : dispatch({ type: CREATE_JOB_SHEET, areaMovement: 'empty' })\r\n  }\r\n\r\n  const searchCheck = ({ areaId, areaIdDesposition, dispatch, searchSku, desc, category }) => {\r\n    if (!areaId?.value) {\r\n      dispatch({ type: CREATE_JOB_SHEET, areaId: 'empty' })\r\n      return\r\n    }\r\n    if (!areaIdDesposition?.value) {\r\n      dispatch({ type: CREATE_JOB_SHEET, areaIdDesposition: 'empty' })\r\n      return\r\n    }\r\n    if (areaId?.value && areaIdDesposition?.value && areaId?.value === areaIdDesposition?.value) {\r\n      dispatch({ type: CREATE_JOB_SHEET, areaIdDesposition: 'empty' })\r\n      return\r\n    }\r\n    else searchSku(desc, category)\r\n  }\r\n  return (\r\n    <div className=\"w-100  stock-take-summary\">\r\n      <Confirmation\r\n        moveAll={moveAll}\r\n        singleViewData={singleViewData}\r\n        noSkuChecking={true}\r\n        isLoading={isLoading}\r\n        moduleEntry={localEntryData}\r\n        confirmation={confirmation}\r\n        setConfirmation={setConfirmation}\r\n        isSuccess={postInfo}\r\n        setAction={setAction}\r\n        action={action}\r\n        submit={() => deleteSentSKU({\r\n          summary: summary,\r\n          resetSummary: setSummary,\r\n          name: 'submit',\r\n          moduleEntry: localEntryData,\r\n          singleViewData: singleViewData,\r\n          moduleName,\r\n          dispatch,\r\n          setIsSuccess,\r\n          saveJobSheet,\r\n          setLocalEntryData,\r\n          setCreatePo,\r\n          moveAll\r\n        })} />\r\n\r\n      <PopUpSaved\r\n        moduleEntry={moveAll ? localEntryData : singleViewData}\r\n        submit={() => updateList(null, stockMovementTargetRepack, moduleName)}\r\n        confirmation={confirmation}\r\n        setConfirmation={setConfirmation}\r\n        isSaved={isSaved}\r\n        action={action}\r\n        setIsSaved={setIsSaved}\r\n        moduleName={moduleName}\r\n        totalSku={localEntryData?.jobPost?.list.length}\r\n        setLocalEntryData={setLocalEntryData}\r\n        moveAll={moveAll} />\r\n\r\n      <SingleView\r\n        fromBarcode={fromBarcode}\r\n        moduleName={moduleName}\r\n        moduleEntry={localEntryData}\r\n        areaMovement={areaMovement}\r\n        createPo={createPo}\r\n        setCreatePo={setCreatePo}\r\n        setSingleViewData={setSingleViewData}\r\n        setConfirmation={setConfirmation}\r\n        confirmation={confirmation}\r\n        setMoveAll={setMoveAll} />\r\n\r\n      <Discard\r\n        discard={discard}\r\n        module={'Inventory Entry - Stock Movement'}\r\n        moduleEntry={stockMovementEntryData}\r\n        close={() => setDiscard(false)}\r\n        discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch, setDiscard })} />\r\n\r\n      <PopUpUnfinished\r\n        discard={discard}\r\n        moduleFirstLoad={moduleFirstLoad}\r\n        moduleEntry={stockMovementEntryData}\r\n        redirect={() => props.history.push(\"/inventory-entry/movement/weight-entry\")}\r\n        previousPage={() => story.goBack()}\r\n        setDiscard={() => setDiscard(true)} />\r\n\r\n      <PopUp status={status} />\r\n\r\n      <ItemListModal\r\n        areaDestination={areaIdDesposition}\r\n        moduleName={moduleName}\r\n        areaId={areaId}\r\n        areaName={area}\r\n        warehouseUuid={warehouseUuid}\r\n        showSkuList={showSkuList}\r\n        setShowSkuList={setShowSkuList}\r\n        dispatch={dispatch}\r\n        setLocalEntryData={setLocalEntryData}\r\n        localEntryData={localEntryData}\r\n        setCreatePo={setCreatePo}\r\n        thereAreRequest={thereAreRequest}\r\n        setShowScanner={(value) => setShowScanner(value)} />\r\n\r\n      {showScanner ? <Scanner\r\n        setLocalEntryData={setLocalEntryData}\r\n        setShowSkuList={(value) => setShowSkuList(value)}\r\n        showScanner={showScanner}\r\n        setShowScanner={(value) => setShowScanner(value)}\r\n        setSearch={(value) => setSearch(value)}\r\n        search={search}\r\n      /> : false}\r\n\r\n      <div className=\"px-3 pt-3 bg-white border-all radius-all d-md-flex dd-group\">\r\n        {/* <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n        <Dropdown\r\n            show={true}\r\n            title=\"Select Area\"\r\n            placeholder='Select Movement'\r\n            options={stockMovementDropdown}\r\n            onChangeDropdown={(selected) => selectArea({selected,area,dispatch})}\r\n            selectedValue={areaMovement}\r\n            showTitle={true}\r\n          />\r\n        </div> */}\r\n\r\n        <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n          <Dropdown\r\n            show={true}\r\n            title=\"Area Source\"\r\n            placeholder='Select Area Source'\r\n            options={area}\r\n            onChangeDropdown={(selected) => dispatch({ type: CREATE_JOB_SHEET, areaId: selected })}\r\n            selectedValue={areaId}\r\n            showTitle={true}\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n          <Dropdown\r\n            show={true}\r\n            title=\"Area Destination\"\r\n            placeholder='Select Area Destination'\r\n            options={area}\r\n            onChangeDropdown={(selected) => dispatch({ type: CREATE_JOB_SHEET, areaIdDesposition: selected })}\r\n            selectedValue={areaIdDesposition}\r\n            showTitle={true}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white mt-3 border-all radius-all\">\r\n        <div className=\"d-md-flex d-lg-flex justify-content-between mb-3\">\r\n          <div className=\"text LatoBold d-md-flex justify-content-between w-100 align-items-center sku-des\">\r\n            <div>\r\n              Enter SKU or Description{\" \"}\r\n              <span className=\"green\">{`(${isCheckedTotal} Selected SKU${isPlural})`}</span>\r\n            </div>\r\n            <div className='d-flex align-items-center mt-2 mt-md-0 justify-content-between'>\r\n              <span className='emptyTextField LatoBold mr-3'>Only show SKU by Target Movement</span>\r\n              <CSwitch\r\n                className=\"float-right\"\r\n                shape=\"pill\"\r\n                color=\"success\" size={width <= 500 ? \"sm\" : \"md\"}\r\n                checked={stockMovementTargetRepack}\r\n                defaultChecked={stockMovementTargetRepack}\r\n                onChange={() => dropdownMatched && !isLoading ?\r\n                  setSwitch({ moduleName, search, updateList, dispatch, stockMovementTargetRepack, isMovement: true }) :\r\n                  searchCheck({ areaId, areaIdDesposition, dispatch, searchSku, category })} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Search\r\n          useScanner={true}\r\n          setSortBy={setSortBy}\r\n          category={category}\r\n          setCategory={setCategory}\r\n          areaId={areaId}\r\n          areaDestination={areaIdDesposition}\r\n          moduleName={moduleName}\r\n          // setAreaId={(selected) => selectArea({selected,area,dispatch})}\r\n          setAreaId={(selected) => dispatch({ type: CREATE_JOB_SHEET, areaId: selected })}\r\n          setAreaDestination={(selected) => dispatch({ type: CREATE_JOB_SHEET, areaIdDesposition: selected })}\r\n          showScanner={showScanner}\r\n          barcodeScanner={(value) => {\r\n            setShowScanner(value)\r\n            setFromBarcode(true)\r\n          }}\r\n          placeholder={\"Enter SKU\"}\r\n          filter={false}\r\n          // searchHandler={(desc) =>searchSku(desc)}\r\n          searchHandler={(desc) => searchCheck({ areaId, areaIdDesposition, dispatch, searchSku, desc, category })}\r\n          setSearch={(value) => setSearch(value)}\r\n        />\r\n        <div\r\n          className={`mb-3 mt-3 d-flex align-items-center scroll-sku ${noLength} w-100 text-center`} style={{ minHeight: height, maxHeight: height }}>\r\n          {summary?.length ? (\r\n            summary?.sort(function (a, b) { return filterBySkuName(a, b, sortBy?.value) })?.sort(function (a, b) {\r\n              if (!sortBy?.target) return 0\r\n              return filterByRemainingTarget(a, b, sortBy?.value, 'stockMovement')\r\n            })?.map((data, idx) => {\r\n              return (\r\n                <SKUItem\r\n                  skuUuId={data?.skuUuid}\r\n                  selectAll={selectAll}\r\n                  targetMovementProgress={data?.targetMovementProgress}\r\n                  target={stockMovementTargetRepack}\r\n                  key={idx}\r\n                  img={data?.photo}\r\n                  skuDescription={data?.skuName}\r\n                  skuNumber={data?.skuNumber}\r\n                  uomLabel=\"weight\"\r\n                  uomValue={data?.totalQty}\r\n                  uom={data?.unitOfMeassures}\r\n                  setSingleViewSku={(skuUuId) => setSingleViewSku({\r\n                    summary,\r\n                    setLocalEntryData,\r\n                    warehouseUuid,\r\n                    areaId,\r\n                    areaIdDesposition,\r\n                    skuUuId,\r\n                    dispatch,\r\n                    moduleName\r\n                  })}\r\n                  isCheckedHandler={(checked) =>\r\n                    selectAll ?\r\n                      updateSummary({ summary, setSummary, idx, checked }) :\r\n                      selectSku({\r\n                        idx,\r\n                        checked,\r\n                        dispatch,\r\n                        setLocalEntryData,\r\n                        moduleSummary: summary,\r\n                        moduleEntry: localEntryData,\r\n                        moduleName,\r\n                        warehouseUuid,\r\n                        areaId,\r\n                        areaIdDesposition,\r\n                      })\r\n                  }\r\n                  check={data?.checked}\r\n                  singleView={true}\r\n                  createPo={createPo}\r\n                  setCreatePo={setCreatePo}\r\n                  setFromBarcode={setFromBarcode}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem, maxHeight: emptyItem }}>\r\n              {!responseCheck({ isLoading, summary }) ? (\r\n                <img className=\"loading\" src={loading} alt=\"loading\" />\r\n              ) : areaId && areaIdDesposition && summary?.length === 0 ? (\r\n                <div>\r\n                  Sorry, we couldn't find any matches\r\n                  for '<span className='LatoBold'>{search}</span>' in {areaId?.label} area.\r\n                  <br />\r\n                  Please Try search with another term.\r\n                </div>\r\n              ) : 'Enter SKU'}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <SKUPagination setSelectAll={() => setSelectAll(!selectAll)} selectAll={selectAll} />\r\n      <div className=\"h-screen-summary-footer d-flex flex-column justify-content-start\">\r\n        <div className=\"w-100 d-flex align-items-center justify-content-between mb-1\">\r\n          <button\r\n            tabIndex='0'\r\n            onClick={() => props.history.push(\"/inventory-entry/movement/CSV-upload\")}\r\n            type=\"button\"\r\n            className=\"btn px-4 sku-item no-shadow border-all bg-white fontSizeButton\"\r\n          >\r\n            Upload File\r\n          </button>\r\n          <div className='d-flex align-items-center'>\r\n            <div onKeyDown={e => e.keyCode === 13 && isReady ? submitCondition({ setConfirmation, moveAllStockMovement, localEntryData, setLocalEntryData, setMoveAll }) : false} tabIndex='0' className={`${!entryIsReady ? 'tooltips' : 'tooltip-custom1'} w-100 sku-item d-flex align-items-center input-height px-2 mr-3`}>\r\n              <span style={{ cursor: isReady ? 'pointer' : 'context-menu' }} onClick={() => isReady ? submitCondition({ setConfirmation, moveAllStockMovement, localEntryData, setLocalEntryData, setMoveAll }) : false} className='emptyTextField mr-4'>Move All</span>\r\n              <span className={`${!entryIsReady ? 'tooltiptext' : 'd-none'}`}>\r\n                <span className='pl-1'>Please select the sku</span>\r\n              </span>\r\n            </div>\r\n            <button\r\n              tabIndex='0'\r\n              onClick={() => {\r\n                if (isReady) {\r\n                  filterCheckedSku({\r\n                    localEntryData,\r\n                    moduleName,\r\n                    summary,\r\n                    dispatch,\r\n                    warehouseUuid,\r\n                    areaId,\r\n                    areaIdDesposition,\r\n                    setLocalEntryData\r\n                  })\r\n                  props.history.push(\"/inventory-entry/movement/weight-entry\")\r\n                }\r\n              }\r\n              }\r\n              type=\"button\"\r\n              className={`btn px-5 sku-item fontSizeButton no-shadow text-white ${isReady ? \"bg-green\" : \"bg-lineGrey\"\r\n                }`}\r\n            >\r\n              {(!localEntryData || localEntryData?.jobPost?.list?.length === 0) && thereAreRequest === 0 ? 'Next' : thereAreRequest === 0 && (localEntryData && localEntryData?.jobPost?.list?.length > 0) ? 'Next' : 'Processing...'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(StockMovement);\r\n","import { useState, useEffect } from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUnfinishedEntries, getWasteWarehouseArea, getStockTakeSummary } from \"apiServices\";\r\nimport { getWarehouseArea, getRipenessLevel, getWasteReason } from \"apiServices/dropdown\";\r\nimport { IS_LOADING } from 'apiServices/action'\r\nimport { jobSheetChecker, totalWeightCount, selectedSkuCheck, totalPackCount, filterTargetRepack, setTargetRepack } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport { countThresholdIsEmpty } from '../Repacking/services';\r\n//dimension\r\nexport const useDimension = (hValue, wValue) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const width = document.documentElement.clientWidth\r\n  const height = dimention - (hValue ? hValue : 0)\r\n  const emptyItem = dimention - (hValue ? hValue : 0)\r\n  const isMobile = width <= 500 ? true : false\r\n  return { dimention, height, emptyItem, width, isMobile }\r\n}\r\n\r\nexport const useEntryDimention = (showTargetRepack) => {\r\n  const dimention = document.documentElement.clientWidth\r\n  let height = document.documentElement.clientHeight\r\n  let heightAdj = height - (showTargetRepack ? 535 : 290)\r\n  height = dimention <= 500 ? (showTargetRepack ? (heightAdj + 100) : heightAdj) : height\r\n\r\n  return { height, heightAdj, dimention, loading }\r\n}\r\n\r\n// Stock Take\r\nexport const useStockTake = ({ dispatch }) => {\r\n  const user = useSelector((state) => state.user)\r\n  const moduleName = 'stockTake'\r\n  const zeroQuantity = useSelector(state => state.zeroQuantity)\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTakeFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const warehouseTypeName = useSelector((state) => state.user.warehouseTypeName);\r\n  const isCentral = warehouseTypeName === 'Warehouse'\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockTakeEntryData = useSelector((state) => state.stockTakeEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState({})\r\n  const [discard, setDiscard] = useState()\r\n\r\n  // use Effect\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      const storageList = areaList?.filter(data => data.typeId === 1)\r\n      if (warehouseTypeName === 'Warehouse') setAreaId(storageList?.filter(data => data.label === 'Storage Ambient')[0])\r\n      else setAreaId(storageList?.filter(data => data.label === 'Storage')[0])\r\n      setArea(areaList)\r\n      getUnfinishedEntries({ dispatch, moduleName, isExist: stockTakeEntryData ? true : false, ripeness })\r\n    }\r\n\r\n    try {\r\n      getData()\r\n    }\r\n    catch (e) {\r\n      console.log(e)\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  return {\r\n    isCentral,\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    stockTakeEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    discard,\r\n    setDiscard,\r\n    zeroQuantity\r\n  }\r\n}\r\n\r\n// Stock Take Entry\r\nexport const useStockTakeEntry = ({ moduleEntry, activeSku }) => {\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/stock-take/weight-entry',\r\n    '/inventory-entry/stock-take/weight-entry/remove-sku',\r\n    '/inventory-entry/stock-take/weight-entry/add-sku',\r\n  ])\r\n\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const inputType = moduleEntry.jobPost.inputType\r\n\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    status,\r\n    inputType\r\n  }\r\n}\r\n\r\n// Stock Movement\r\nexport const useStockMovement = ({ dispatch }) => {\r\n  const moduleName = 'stockMovement'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockMovementFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const stockMovementDropdown = useSelector(state => state.stockMovementDropdown)\r\n  const areaId = useSelector(state => state.areaId)\r\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockMovementEntryData = useSelector((state) => state.stockMovementEntryData);\r\n  const wasteReasonList = useSelector(state => state.wasteReasonList)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState('')\r\n  const [area, setArea] = useState()\r\n  const [areaMatched, setAreaMatched] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  // const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n\r\n\r\n  const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockMovementEntryData ? true : false, ripeness })\r\n      if (!wasteReasonList?.length) {\r\n        getWasteReason({ dispatch })\r\n      }\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(_ => {\r\n    if (areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value) setAreaMatched(true)\r\n    else setAreaMatched(false)\r\n  }, [areaId, areaIdDesposition, added])\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId, areaIdDesposition])\r\n\r\n  useEffect(_ => {\r\n    if (stockMovementTargetRepack) {\r\n      const isMatchedDropdown = areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value\r\n      if (isMatchedDropdown) {\r\n        setSummary()\r\n        getStockTakeSummary({\r\n          moduleName,\r\n          stockMovementTargetRepack,\r\n          dispatch,\r\n          desc: search,\r\n          warehouseUuid,\r\n          areaId,\r\n          areaIdDesposition,\r\n          setModule: setSummary,\r\n          module: localEntryData\r\n        })\r\n        setSearch(search)\r\n      }\r\n    }\r\n    if (!stockMovementTargetRepack) setSummary()\r\n  }, [stockMovementTargetRepack])\r\n\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    stockMovementDropdown,\r\n    areaId,\r\n    areaIdDesposition,\r\n    areaMovement,\r\n    status,\r\n    isLoading,\r\n    stockMovementEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area, setArea,\r\n    areaMatched, setAreaMatched,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    entryIsReady,\r\n    stockMovementTargetRepack\r\n  }\r\n}\r\n\r\n// Stock Movement Entry\r\nexport const useStockMovementEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/movement/weight-entry',\r\n    '/inventory-entry/movement/weight-entry/remove-sku',\r\n    '/inventory-entry/movement/weight-entry/add-sku',\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    areaMovement,\r\n    status\r\n  }\r\n}\r\n\r\n// Stock Transfer\r\nexport const useStockTransfer = ({ dispatch }) => {\r\n  const moduleName = 'stockTransfer'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTransferFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const stockTransferDropdown = useSelector(state => state.stockTransferDropdown)\r\n  const areaId = useSelector(state => state.areaId)\r\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockTransferEntryData = useSelector((state) => state.stockTransferEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaMatched, setAreaMatched] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockTransferEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(_ => {\r\n    if (areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value) setAreaMatched(true)\r\n    else setAreaMatched(false)\r\n  }, [areaId, areaIdDesposition, added])\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId, areaIdDesposition])\r\n\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    stockTransferDropdown,\r\n    areaId,\r\n    areaIdDesposition,\r\n    areaMovement,\r\n    status,\r\n    isLoading,\r\n    stockTransferEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area, setArea,\r\n    areaMatched, setAreaMatched,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    entryIsReady\r\n  }\r\n}\r\n\r\n// Stock Transfer Entry\r\nexport const useStockTransferEntry = ({ moduleEntry, activeSku }) => {\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/stock-transfer/weight-entry',\r\n    '/inventory-entry/stock-transfer/weight-entry/remove-sku',\r\n    '/inventory-entry/stock-transfer/weight-entry/add-sku',\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    areaMovement,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n// Waste\r\nexport const useWaste = ({ dispatch }) => {\r\n  const moduleName = 'waste'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.wasteFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const wasteEntryData = useSelector((state) => state.wasteEntryData);\r\n\r\n  const [areaId, setAreaId] = useState()\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const b = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      const areaId = await getWasteWarehouseArea({ warehouseUuid, setAreaId })\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: wasteEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    wasteEntryData,\r\n    areaId,\r\n    setAreaId,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal\r\n  }\r\n}\r\n\r\n// Waste Entry\r\nexport const useWasteEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/waste/weight-entry',\r\n    '/inventory-entry/waste/weight-entry/remove-sku',\r\n    '/inventory-entry/waste/weight-entry/add-sku',\r\n  ])\r\n\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    status\r\n  }\r\n}\r\n\r\n// Additional Outbound\r\nexport const useAdditionalOutbound = ({ dispatch }) => {\r\n  const moduleName = 'outbound'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.outboundFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const outboundEntryData = useSelector((state) => state.outboundEntryData);\r\n  const warehouseArea = useSelector(state => state.warehouseArea);\r\n  const outboundAddSku = useSelector(state => state.outboundAddSku)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [next, setNext] = useState(false)\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState()\r\n  const [search, setSearch] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: outboundEntryData ? true : false })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    outboundEntryData,\r\n    warehouseArea,\r\n    outboundAddSku,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    next,\r\n    setNext,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added\r\n  }\r\n}\r\n\r\n// Additional Outbound Entry\r\nexport const useAdditionalOutboundEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const { skuName, skuNumber, poList, outboundTypeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/additional-outbound/weight-entry',\r\n    '/inventory-entry/additional-outbound/remove-sku',\r\n    '/inventory-entry/additional-outbound/add-sku',\r\n  ])\r\n\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    outboundTypeList,\r\n    status\r\n  }\r\n}\r\n\r\n// Repacking\r\nexport const useRepacking = ({ dispatch }) => {\r\n  const moduleName = 'repack'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.repackFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const repackEntryData = useSelector((state) => state.repackEntryData);\r\n  const warehouseArea = useSelector(state => state.warehouseArea);\r\n  const targetRepack = useSelector(state => state.targetRepack)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState('')\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState()\r\n  const [areaDestinationId, setAreaDestinationId] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n\r\n  const setTargetRepack = (value) => {\r\n    dispatch({ type: IS_LOADING, targetRepack: value })\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const aId = areaList?.filter(area => area.label === 'Production')\r\n      const adId = areaList?.filter(area => area.label === 'Staging')\r\n      if (aId?.length) setAreaId(aId[0])\r\n      if (adId?.length) setAreaDestinationId(adId[0])\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: repackEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  useEffect(_ => {\r\n    if (targetRepack) {\r\n      setSummary()\r\n      if (areaId) getStockTakeSummary({\r\n        moduleName,\r\n        targetRepack,\r\n        dispatch,\r\n        desc: '',\r\n        warehouseUuid,\r\n        areaId,\r\n        areaIdDesposition: areaDestinationId,\r\n        setModule: setSummary,\r\n        module: localEntryData\r\n      })\r\n    }\r\n    if (!targetRepack) setSummary()\r\n  }, [targetRepack, areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    repackEntryData,\r\n    warehouseArea,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    areaDestinationId,\r\n    setAreaDestinationId,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    targetRepack,\r\n    setTargetRepack\r\n  }\r\n}\r\n\r\n// Repacking Entry\r\nexport const useRepackingEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const [invalidThreshold, setInvalidThreshold] = useState()\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/repacking/weight-entry',\r\n    '/inventory-entry/repacking/weight-entry/remove-sku',\r\n    '/inventory-entry/repacking/weight-entry/add-sku',\r\n  ])\r\n\r\n  //filter item by active slot\r\n  const [activeTab, setActiveTab] = useState(0)\r\n\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const totalPack = totalPackCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isLoading,\r\n    invalidThreshold,\r\n    setInvalidThreshold,\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    totalPack,\r\n    status,\r\n    activeTab,\r\n    setActiveTab\r\n  }\r\n}\r\n\r\n// Single view\r\nexport const useSingleView = ({ category, dispatch, setLocalEntryData, setSummary, setSearch, getStockTakeSummary, search, warehouseUuid, areaId, localEntryData, moduleName, stockMovementTargetRepack }) => {\r\n\r\n  //submit\r\n  const [action, setAction] = useState()\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: 'submit' })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [isSaved, setIsSaved] = useState()\r\n\r\n  // create po single view\r\n  const [createPo, setCreatePo] = useState()\r\n  const [singleViewData, setSingleViewData] = useState()\r\n  const [fromBarcode, setFromBarcode] = useState()\r\n\r\n\r\n  //condition move all\r\n  const [moveAll, setMoveAll] = useState()\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  // end of submit\r\n\r\n  //singleview\r\n  const updateList = (props, props2, moduleName) => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n    if (search === 'barcode') return\r\n\r\n    dispatch({ type: IS_LOADING, isLoading: true })\r\n    setTimeout(() => {\r\n      getStockTakeSummary({\r\n        category,\r\n        moduleName,\r\n        stockMovementTargetRepack: props2,\r\n        zeroQuantity: props,\r\n        singleView: true,\r\n        dispatch,\r\n        desc: search,\r\n        warehouseUuid,\r\n        areaId,\r\n        setModule: setSummary,\r\n        module: localEntryData\r\n      },\r\n        setSearch(search))\r\n    }, 10);\r\n  }\r\n\r\n  return { fromBarcode, setFromBarcode, updateList, action, setAction, confirmation, setConfirmation, isSuccess, setIsSuccess, isSaved, setIsSaved, createPo, setCreatePo, singleViewData, setSingleViewData, postInfo, moveAll, setMoveAll }\r\n}\r\n\r\n// Scanner\r\nexport const useScanner = () => {\r\n  const [showScanner, setShowScanner] = useState()\r\n  const [showSkuList, setShowSkuList] = useState()\r\n  return { showScanner, setShowScanner, showSkuList, setShowSkuList }\r\n}\r\n\r\nexport const useTargetRepack = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\r\n  const targetRepacks = useSelector(state => state.targetRepacks)\r\n  const slotList = useSelector(state => state.slotList)\r\n\r\n  const [slot, setSlot] = useState()\r\n\r\n  const { gradeList } = moduleEntry?.jobPost?.list[activeSku]\r\n  const tgtRpck = moduleEntry?.jobPost?.list[activeSku]?.poList[0]?.targetRepacks || []\r\n  const table = filterTargetRepack(tgtRpck, gradeList, activeSku, moduleEntry, slot)\r\n\r\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\r\n\r\n  const totalEmptyThreshold = countThresholdIsEmpty(moduleEntry)\r\n\r\n\r\n  //set Target Repack\r\n\r\n  useEffect(_ => {\r\n    setTargetRepack({ moduleEntry, dispatch })\r\n  }, [])\r\n\r\n  useEffect(_ => {\r\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\r\n    if (table?.data?.length) setShowTargetRepack(true)\r\n  }, [table])\r\n\r\n  return { showTargetRepack, table, slot, setSlot, slotList, totalEmptyThreshold }\r\n}\r\n\r\n//use target movement\r\nexport const useTargetMovement = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\r\n  const targetRepacks = moduleEntry.jobPost.list[activeSku].poList[0]?.targetMovements\r\n  const slotList = useSelector(state => state.slotList)\r\n  const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\r\n\r\n  const [slot, setSlot] = useState()\r\n\r\n  const { gradeList } = moduleEntry.jobPost.list[activeSku]\r\n  const table = filterTargetRepack(targetRepacks, gradeList, activeSku, moduleEntry, slot, true)\r\n\r\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\r\n\r\n  useEffect(_ => {\r\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\r\n    if (table?.data?.length) setShowTargetRepack(true)\r\n  }, [table])\r\n\r\n  return { showTargetRepack, table, slot, setSlot, slotList, stockMovementTargetRepack }\r\n}\r\n\r\n//use filter new item to active\r\nexport const useIsNewItem = ({ setActiveSKU, moduleEntry, selectedSku, dispatch, moduleName }) => {\r\n  const sorted = null\r\n  useEffect(() => {\r\n    let skuName = null\r\n    const newSkuList = moduleEntry?.jobPost?.list?.filter(data => data.isNewItem)\r\n    const length = newSkuList?.length\r\n    if (length) skuName = newSkuList[length - 1]?.skuName\r\n    const idx = moduleEntry?.jobPost?.list?.findIndex(data => data.skuName === skuName)\r\n    if (idx >= 0) setActiveSKU(idx)\r\n\r\n  }, [selectedSku]);\r\n  return { sorted }\r\n}\r\n\r\nexport function useOutside({ wrapperRef, setShow, show }) {\r\n  useEffect(() => {\r\n\r\n    function handleClickOutside(event) {\r\n      if (show && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n        setShow(!show)\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [wrapperRef, show]);\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom,\r\n    resetName,\r\n    isMulti,\r\n    hideResetOpt,\r\n    zInfinity\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? (styles) => {\r\n        return {\r\n            ...styles,\r\n            border: 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{ label: `-${resetName ? resetName : title}-`, value: null }]\r\n    if (options) defaultvalue = [...defaultvalue, ...options]\r\n    if (hideResetOpt) defaultvalue = defaultvalue.filter(val => val?.value)\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if (dimention <= 500) {\r\n        menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n        if (title === 'Categories') menuPlacement = 'top'\r\n    }\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                inputId={`${title}_${poListIdx}_${entryListIdx}`}\r\n                isMulti={isMulti}\r\n                isSearchable={dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : (selectedValue?.length ? selectedValue : false)}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={resetName ? resetName : placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={150}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: zInfinity ? 9999999999999999 : 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#969696',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { onClose, refreshPage } from \"./services.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { STATUS } from \"apiServices/action\";\r\n\r\nconst PopUp = ({\r\n  refresh,\r\n  status,\r\n  icon,\r\n  statusDisplay = false,\r\n  title = \"\",\r\n  cancelButtonTitle = \"Cancel\",\r\n  actionButtonTitle = \"Submit\",\r\n  cancelButtonClass = \"bg-background\",\r\n  actionButtonClass = \"bg-background\",\r\n  actionButtonEvent = null,\r\n  colorText = \"red\",\r\n  msg1 = null,\r\n  msg2 = null,\r\n  onCloseFunction = null,\r\n  refreshOnCancel = true,\r\n  setIsSuccess\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  if (status?.code === 500 ) {\r\n    icon = \"em-pensive\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 408 ) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Request Timeout\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 400 ) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n  if (status?.code === 404) {\r\n    title = \"Something wrong with the application\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n\r\n  const [show, setShow] = useState(statusDisplay);\r\n\r\n  useEffect(() => {\r\n    //from outside change\r\n    setShow(statusDisplay);\r\n  }, [statusDisplay]);\r\n\r\n  useEffect(() => {\r\n  }, [show]);\r\n\r\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\r\n  return (\r\n    <CRow className={`${show ? null : \"d-none\"}`}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          closeOnBackdrop={false}\r\n          onClose={() => {\r\n            setShow(false)\r\n            if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n            dispatch({ type: STATUS, status: null });\r\n            if (onCloseFunction) {\r\n              onCloseFunction()\r\n            }\r\n          }}\r\n          size=\"lg\"\r\n          style={{ minHeight: \"280px\" }}\r\n          bodyOpenClassName=\"p-3\"\r\n        >\r\n          {/* <div className='d-flex flex-row-reverse'>\r\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-3 border-none\">\r\n              <CModalTitle className={`text LatoBold ${colorText}`}>\r\n                {title}\r\n              </CModalTitle> */}\r\n\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <i\r\n              className=\"pr-3 pt-3 iconU-modalClose\"\r\n              onClick={() => {\r\n                setShow(false)\r\n                if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n                dispatch({ type: STATUS, status: null });\r\n                if (onCloseFunction) {\r\n                  onCloseFunction()\r\n                }\r\n              }}\r\n            ></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className={`text LatoBold ${colorText}`}>\r\n              {title} <span><i className={`em ${icon}`}></i></span>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">{msg1}</p>\r\n            <p className=\"text\">{msg2}</p>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            {cancelButtonTitle ? (\r\n              <CButton\r\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\r\n                onClick={() => {\r\n                  if (refreshOnCancel) {\r\n                    if (typeof (refresh) === 'function') refresh()\r\n                    else refreshPage({ refresh: true });\r\n                  } else {\r\n                    onClose({\r\n                      setShow,\r\n                      parentOncCloseFunction: onCloseFunction,\r\n                    });\r\n                  }\r\n                  dispatch({ type: STATUS, status: null });\r\n                }}\r\n              >\r\n                {cancelButtonTitle}\r\n              </CButton>\r\n            ) : null}\r\n            {actionButtonTitle ? (\r\n              <CButton\r\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\r\n                onClick={() => {\r\n                  if (actionButtonEvent) {\r\n                    actionButtonEvent();\r\n                    setShow(false);\r\n                  } else {\r\n                    setShow(false)\r\n                  }\r\n                }\r\n                }\r\n              >\r\n                {actionButtonTitle}\r\n              </CButton>\r\n            ) : null}{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\r\n  setShow(false);\r\n  if (parentOncCloseFunction) {\r\n    parentOncCloseFunction();\r\n  }\r\n\r\n};\r\n\r\nexport const refreshPage = ({ refresh = true }) => {\r\n  if (refresh === true) {\r\n    window.location.reload(false);\r\n  }\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport Img from 'assets/icons/sayur-box-logo.svg'\r\nimport { isFloat } from 'services'\r\nimport { CProgress } from '@coreui/react'\r\n\r\nconst SKUItem = ({\r\n    skuUuId = 123,\r\n    selectAll,\r\n    img = Img,\r\n    skuDescription = 'SKU Description',\r\n    skuNumber = '1001',\r\n    uomLabel = 'weight',\r\n    uomValue = 100.3,\r\n    uom = 'KG',\r\n    isCheckedHandler = null,\r\n    check = false,\r\n    idx = 0,\r\n    singleView,\r\n    setCreatePo,\r\n    target,\r\n    targetMovementProgress,\r\n    targetRepackProgress,\r\n    moduleName,\r\n    setFromBarcode,\r\n    setSingleViewSku\r\n}) => {\r\n    const dimention = document.documentElement.clientWidth\r\n    const mobile = dimention <= 500 ? true : false\r\n    const [isChecked, setIsChecked] = React.useState(check)\r\n    const checkHandler = () => {\r\n        setIsChecked(!isChecked)\r\n        if (isCheckedHandler) isCheckedHandler(!isChecked)\r\n    }\r\n\r\n    const createPoSingleView = () => {\r\n        setIsChecked(true)\r\n        if (typeof (setSingleViewSku) === 'function') setSingleViewSku(skuUuId)\r\n        if (typeof (setSingleViewSku) !== 'function') isCheckedHandler(true)\r\n        if (typeof (setCreatePo) === 'function') setCreatePo({ show: true, skuNumber })\r\n        if (typeof (setFromBarcode) === 'function') setFromBarcode(false)\r\n    }\r\n\r\n    const showProgress = target ? true : 'd-none'\r\n    let totalMove = 0\r\n    let total = 0\r\n\r\n    if (targetRepackProgress?.length && moduleName === 'repack') {\r\n        targetRepackProgress.forEach(data => {\r\n            totalMove += Number(data.totalPack)\r\n            total += Number(data.totalUom)\r\n        })\r\n    }\r\n\r\n\r\n    if (targetMovementProgress?.length && moduleName !== 'repack') {\r\n        totalMove = targetMovementProgress[0]?.totalMove\r\n        total = targetMovementProgress[0]?.totalUos\r\n    }\r\n\r\n    useEffect(_ => {\r\n        if (selectAll) {\r\n            setIsChecked(true)\r\n            isCheckedHandler(true)\r\n        }\r\n        if (selectAll === false) setIsChecked(false)\r\n    }, [selectAll])\r\n\r\n    return (\r\n        <div onKeyDown={(e) => e.keyCode === 13 ? createPoSingleView() : false} tabindex=\"0\" key={idx} className={`w-100 border d-md-flex sku-item justify-content-between ${mobile ? 'pl-0 pr-0' : 'pl-2 pr-3'} py-2 mb-3 rounded ${check ? 'bg-softGreen' : 'bg-white'}`}>\r\n            <div className={`d-flex align-items-center w-100 cursor-pointer ${mobile ? 'pl-2 pr-3' : 'pl-0 pr-0'}`} onClick={(checkHandler)}>\r\n                <div\r\n                    style={{ cursor: 'pointer', height: '23px', width: '23px', minWidth: '23px' }}\r\n                    className={`mr-3 text-white d-flex align-items-center rounded px-1 ${check ? 'iconU-pickCheck bg-green pl-1-5' : 'bg-borderHeader'}`} />\r\n                <img\r\n                    src={img} alt='sku image'\r\n                    className='w-5 mr-3 border softGreen rounded' />\r\n                <div className='text-left'>\r\n                    <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                    <div className='text fontSizeTitle'>{skuNumber}</div>\r\n                </div>\r\n            </div>\r\n            <hr className={`${mobile ? null : 'd-none'}`} />\r\n            <div className={`d-flex w-100 ${mobile ? 'pr-3' : 'pr-0'} pl-5 pl-md-0 align-items-center`}>\r\n                <div className={`d-flex justify-content-md-end align-items-center w-100 ${mobile ? 'justify-content-end' : null}`}>\r\n                    <div className={`w-25 mr-4 ${showProgress} tooltips`}>\r\n                        <span style={{ marginLeft: -260 }} className={`${'tooltiptext'}`}>\r\n                            <span className='pl-1 pr-1'>{moduleName === 'repack' ? 'Repack Percentage' : 'Movement Percentage'}</span>\r\n                        </span>\r\n                        <div className='latoBold'>{`${totalMove}/${total}`}<span className='font-green'>{` (${isFloat(totalMove / total * 100)}%)`}</span></div>\r\n                        <CProgress value={totalMove} max={total} className=\"mb-3\" />\r\n                    </div>\r\n                    <div className={`mr-3 iconU-sideBarDot d-flex align-items-center ${showProgress}`} />\r\n                    <div className={`my-0 mr-3 text fontSizeWeightNumber ${mobile ? 'd-none' : null}`}>{`Total ${uom.toUpperCase() === 'KG' ? uomLabel.toUpperCase() : uom.toUpperCase()}`}</div>\r\n                    <div className='mr-1 font-weight-bold green fontSizeWeightNumber'>{isFloat(uomValue)}</div>\r\n                    <div className='mr-3 font-weight-bold green fontSizeWeightNumber'>{uom}</div>\r\n                </div>\r\n                <div onClick={(createPoSingleView)} style={{ paddingLeft: '10px', paddingRight: '10px', paddingTop: '10px', paddingBottom: '8px' }} className={`${singleView ? null : 'd-none'} cursor-pointer iconU-sideBarHideRight font-weight-bold green d-flex align-items-center border rounded border-green`}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SKUItem","import React, { useState, useRef, useEffect } from 'react'\r\nimport './index.scss'\r\nimport Display from './Display'\r\nimport Keypad from './Keypad'\r\nimport Button from './Button'\r\nimport { useDimension, useOutside } from 'Page/StockEntry/GeneralServices'\r\n// import {} from './services'\r\n\r\nconst Calculator = (props) => {\r\n    const [data, setData] = useState('')\r\n    const wrapperRef = useRef(null);\r\n\r\n    const calculate = (onChange) => {\r\n        try {\r\n            const result = eval(data);\r\n            const value = {\r\n                value: result?.toString(),\r\n                name: props.name\r\n            }\r\n\r\n            onChange(value)\r\n            // setData(result);\r\n        } catch (e) {\r\n            console.log(e);\r\n            setData('')\r\n        }\r\n    }\r\n\r\n    useOutside({ wrapperRef, setShow: props.setShowCalculator, show: props.showCalculator });\r\n\r\n    const { isMobile } = useDimension()\r\n    // track element position\r\n    let elem = null\r\n    if (!props.singleView) elem = document?.getElementById(`dropdown${props.entryListIdx}${props.poListIdx}`);\r\n    else elem = null\r\n    let position = elem?.getBoundingClientRect()\r\n    let menuOnTop = position?.bottom > 600 ? true : false\r\n    if (isMobile) menuOnTop = position?.bottom > 400 ? true : false\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [props.showCalculator])\r\n\r\n    const top = position?.top - (menuOnTop ? (isMobile ? 400 : 320) : (isMobile ? 50 : -30))\r\n    const handleClick = e => {\r\n        const value = e.target.getAttribute('data-value');\r\n        switch (value) {\r\n            case 'clear':\r\n                props.onChange({\r\n                    value: '',\r\n                    name: props.name\r\n                })\r\n                break;\r\n            case 'clearall':\r\n                props.onChange({\r\n                    value: '',\r\n                    name: props.name\r\n                })\r\n                setData('');\r\n                break;\r\n            case 'equal':\r\n                calculate(props.onChange);\r\n                props.setShowCalculator()\r\n                break;\r\n            default:\r\n                setData(data + value);\r\n        }\r\n    }\r\n    return (\r\n        <div className={`${props.useCalculator ? null : 'd-none'} calculator ${props.className} ${isMobile ? 'px-5' : false}`} ref={wrapperRef} style={{ top, left: isMobile ? 0 : false, width: isMobile ? '100%' : false, right: props.singleView ? '1rem' : false }}>\r\n            <Display data={data} setData={setData} />\r\n            <Keypad>\r\n                <table >\r\n                    <tr>\r\n                        <td style={{ backgroundColor: 'rgba(168, 177, 190, 1)', color: 'white' }}><Button onClick={handleClick} label=\"x\" value=\"*\" /></td>\r\n                        <td style={{ backgroundColor: 'rgba(168, 177, 190, 1)', color: 'white' }}><Button onClick={handleClick} label=\"/\" value=\"/\" /></td>\r\n                        <td style={{ backgroundColor: 'rgba(168, 177, 190, 1)', color: 'white' }}><Button onClick={handleClick} label=\"+\" value=\"+\" /></td>\r\n                        <td style={{ backgroundColor: 'rgba(168, 177, 190, 1)', color: 'white' }}><Button onClick={handleClick} label=\"-\" value=\"-\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Button onClick={handleClick} label=\"7\" value=\"7\" /></td>\r\n                        <td><Button onClick={handleClick} label=\"8\" value=\"8\" /></td>\r\n                        <td><Button onClick={handleClick} label=\"9\" value=\"9\" /></td>\r\n                        <td style={{ backgroundColor: 'rgba(74, 190, 132, 1)', color: 'white' }} ><Button onClick={handleClick} label=\"CE\" value=\"clear\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Button onClick={handleClick} label=\"4\" value=\"4\" /></td>\r\n                        <td><Button onClick={handleClick} label=\"5\" value=\"5\" /></td>\r\n                        <td><Button onClick={handleClick} label=\"6\" value=\"6\" /></td>\r\n                        <td style={{ backgroundColor: 'rgba(74, 190, 132, 1)', color: 'white' }} ><Button onClick={handleClick} label=\"C\" value=\"clearall\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Button onClick={handleClick} label=\"1\" value=\"1\" /></td>\r\n                        <td><Button onClick={handleClick} label=\"2\" value=\"2\" /></td>\r\n                        <td><Button onClick={handleClick} label=\"3\" value=\"3\" /></td>\r\n                        <td style={{ backgroundColor: 'rgba(74, 190, 132, 1)', color: 'white' }} rowSpan={2}><Button onClick={handleClick} label=\"=\" value=\"equal\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan={2}><Button onClick={handleClick} label=\"0\" value=\"0\" twoSpace={true} /></td>\r\n                        <td><Button onClick={handleClick} label=\".\" value=\".\" /></td>\r\n                    </tr>\r\n                </table>\r\n            </Keypad>\r\n        </div >\r\n    )\r\n}\r\nexport default Calculator","import { isInteger } from \"formik\";\r\n\r\nexport const next = ({\r\n  e,\r\n  state,\r\n  isCaptcha,\r\n  setIsValidated,\r\n  setIsType,\r\n  isType,\r\n  isValidated,\r\n  submit\r\n}) => {\r\n  const key = e.key; // const {key} = event; ES6+\r\n  let type = [...isType];\r\n\r\n  //if press enter\r\n  if (key === \"Enter\"){\r\n    if(isValidated){\r\n      submit();\r\n    }else{\r\n      return;\r\n    }\r\n  }\r\n\r\n  let arr_tmp = [\"ArrowUp\", \"ArrowDown\", \"Tab\",\"Delete\"];\r\n  if (arr_tmp.includes(key)) {\r\n    return 0;\r\n  } else if (key === \"Backspace\") {\r\n    let type_ = [...isType];\r\n    let state_ = type_[state];\r\n    if (state_ == \"\" && state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).value = \"\";\r\n      type_[state - 1] = \"\";\r\n      type[state - 1] = \"\";\r\n    }\r\n    console.log(type_);\r\n  } else if (key === \"ArrowLeft\") {\r\n    if (state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) - 1))\r\n        .setSelectionRange(-1, -1);\r\n\r\n      return 0;\r\n    }\r\n  } else if (key === \"ArrowRight\") {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) + 1))\r\n        .setSelectionRange(-1, -1);\r\n      return 0;\r\n    }\r\n  } else {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n    }\r\n  }\r\n\r\n  if (key === \"Backspace\") {\r\n    type[state] = \"\";\r\n  } else {\r\n    type[state] = key.toUpperCase();\r\n  }\r\n  let char = \"QWERTYUIOPLKJHGFDSAZXCVBNM1234567890\";\r\n  let allowedChar = char.split(\"\");\r\n  if (allowedChar.includes(key.toUpperCase()) || type[state] == \"\") {\r\n    document.getElementById(\"t\" + parseInt(state)).value = type[state];\r\n    setIsType(type);\r\n  } else {\r\n    return 0;\r\n  }\r\n\r\n  let stat = true;\r\n  isCaptcha.map((data, index) => {\r\n    // if (index == 0) {\r\n    //   return;\r\n    // }\r\n    if (!(type[index + 1] == isCaptcha[index])) {\r\n      stat = false;\r\n    }\r\n    console.log(type[index + 1], isCaptcha[index], stat)\r\n  });\r\n  setIsValidated(stat);\r\n};\r\n\r\nexport const skuListUpdateCheck = (module, noSkuChecking, moduleName) => {\r\n  if (module?.length) {\r\n    let newModule = [];\r\n    module.map((list) => {\r\n      list.poList.map((po) => {\r\n        po.itemList.map((item) => {\r\n          const { qty, grade } = item;\r\n          const _qty = isInteger(qty)\r\n            ? parseInt(qty)\r\n            : !qty\r\n              ? 0\r\n              : parseFloat(qty);\r\n          const _sku = noSkuChecking\r\n            ? list.skuName\r\n            : moduleName === \"waste\"\r\n              ? item.wasteType?.label\r\n                ? item.wasteType?.label\r\n                : list.skuName\r\n              : grade?.label;\r\n          const _toWaste =\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\" ||\r\n                item.wasteType?.label === \"Waste\"\r\n                ? true\r\n                : false\r\n              : grade?.label === \"Waste\" || grade?.label === \"Semi Waste\"\r\n                ? true\r\n                : false;\r\n          const _uom = noSkuChecking\r\n            ? list.unitOfMeassures\r\n            : grade?.uom === \"gram\"\r\n              ? \"kg\"\r\n              : grade?.uom;\r\n          let newSku = {\r\n            sku: _sku,\r\n            qty: _qty,\r\n            uom: _uom,\r\n            wqty: 0,\r\n            swqty: 0,\r\n          };\r\n          if (_toWaste) {\r\n            newSku.qty = 0;\r\n            newSku.sku = list.skuName;\r\n          }\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Waste\"\r\n              : grade?.label === \"Waste\"\r\n          )\r\n            newSku.wqty = _qty;\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\"\r\n              : grade?.label === \"Semi Waste\"\r\n          )\r\n            newSku.swqty = _qty;\r\n          const isExist = newModule.findIndex(\r\n            (sku) => sku?.sku === (_toWaste ? list.skuName : _sku)\r\n          );\r\n\r\n          if (moduleName !== \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (grade?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (grade?.label === \"Waste\") newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n\r\n          if (moduleName === \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (item.wasteType?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (item.wasteType?.label === \"Waste\")\r\n                newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n    const skuName = module.length ? module[0].skuName : \"No SKU\";\r\n    const i = newModule.findIndex((s) => s.sku === skuName);\r\n    newModule.forEach((sku) => {\r\n      if (i !== -1) {\r\n        if (sku.sku === \"Waste\") newModule[i].wqty = sku.qty;\r\n        if (sku.sku === \"Semi Waste\") newModule[i].swqty = sku.qty;\r\n      }\r\n    });\r\n    return newModule;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { next, skuListUpdateCheck } from \"./services.js\";\r\nimport { totalQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst ModalsConfirmation = ({ moduleEntry, confirmation, setConfirmation, save, submit, isSuccess, isLoading, moveAll, setAction, moduleName, noSkuChecking, singleViewData }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 300\r\n\r\n  let buttonName = 'Submit'\r\n\r\n  if (confirmation.name === 'save') buttonName = 'Save'\r\n  useEffect(() => {\r\n    if (isSuccess) setConfirmation({ show: false, name: null })\r\n  }, [isSuccess])\r\n  window.onkeydown = e => e.keyCode === 27 ? setConfirmation({ show: false, name: null }) : null\r\n\r\n  useEffect(() => {\r\n    setAction(confirmation.name)\r\n  }, [confirmation])\r\n\r\n  let module = singleViewData && !moveAll ? singleViewData : moduleEntry\r\n\r\n  const areaDestinationName = module?.jobPost?.areaDestinationName\r\n  const warehouseDestinationName = module?.jobPost?.warehouseDestinationName\r\n  const areaName = module?.jobPost?.areaName\r\n\r\n  const skuListUpdate = skuListUpdateCheck(module?.jobPost.list, noSkuChecking, moduleName)\r\n  return (\r\n    <CRow className={\"modalConfirmation \"+(confirmation.show ? null : 'd-none')}>\r\n      <CCol>\r\n        <CModal\r\n          show={confirmation.show}\r\n          closeOnBackdrop={false}\r\n        >\r\n          <CModalHeader className=\"px-4 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation <span><i className=\"em em-pray\"></i></span></CModalTitle>\r\n            <label tabIndex='0' onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false} onClick={() => setConfirmation({ show: false, name: null })} className='sku-item iconU-modalClose' />\r\n\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-4 py-0\" style={{ minHeight: height }}>\r\n            <p className=\"text mb-2\">\r\n              <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n              <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n              <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n              <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n              <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${moduleName === 'stockTransfer' ? warehouseDestinationName : (areaDestinationName ? areaDestinationName : areaName)} `}</span>\r\n            </p>\r\n            <p className=\"text\">\r\n              Please double check this list, this record will store to database.\r\n            </p>\r\n            <div\r\n              style={{\r\n                minHeight: height,\r\n                maxHeight: height,\r\n                overflow: \"auto\",\r\n                border: \"1px solid var(--lineGrey)\",\r\n              }}\r\n            >\r\n              <table>\r\n                <thead>\r\n                  <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                    <th style={{ color: \"var(--emptyTextField)\" }}>SKU List</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Weight</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Semi Waste</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Waste</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {skuListUpdate?.map((data) => (\r\n                    <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                      <td style={{ maxWidth: '160px' }}>{data.sku}</td>\r\n                      <td className=\"text-right py-3\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.qty)}`}\r\n                      </td>\r\n                      <td className=\"text-right text-nowrap\" style={{ textAlign: \"right\" }}>\r\n                        <span className='text-nowrap'>{`${totalQty(data?.swqty)} `}</span>\r\n                      </td>\r\n                      <td className=\"text-right\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.wqty)}`}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"px-0 pb-5 pt-0 justify-content-start border-none\">\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false}\r\n                className=\"bg-background sku-item text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n                onClick={() => setConfirmation({ show: false, name: null })}\r\n              >\r\n                Cancel\r\n            </CButton>\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? (isLoading ? null : (confirmation.name === 'save' ? save() : submit())) : false}\r\n                className={`${isLoading ? 'bg-softGreen text' : 'bg-green text-white'} no-shadow px-5 mt-4 sku-item mb-0 ml-3 mr-0`}\r\n                onClick={() => isLoading ? null : (confirmation.name === 'save' ? save() : submit())}\r\n              >\r\n                {isLoading ? 'Processing...' : buttonName}\r\n              </CButton>{\" \"}\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst ModalsCaptcha = ({\r\n  show = false,\r\n  setIsShowModal,\r\n  submit,\r\n  submitText = \"Submit\",\r\n}) => {\r\n  //random text\r\n  var text = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  var text_split = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    let r = characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    text += r;\r\n    text_split.push(r);\r\n  }\r\n\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const [isCaptcha, setIsCaptcha] = React.useState(text_split);\r\n  const [isCaptchaText, setIsCaptchaText] = React.useState(text);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n  const [isType, setIsType] = React.useState([]);\r\n\r\n  //reset if visible = false \r\n  useEffect(() => {\r\n    if (show === true) {\r\n      document.getElementById('t1').value = '';\r\n      document.getElementById('t2').value = '';\r\n      document.getElementById('t3').value = '';\r\n    }\r\n  }, [show]);\r\n\r\n  return (\r\n    <CRow className={show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          onClose={() => {\r\n            setIsShowModal(false);\r\n          }}\r\n          size=\"lg\"\r\n          style={{ height: \"400px\" }}\r\n        >\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">\r\n              Are you sure want to upload <span className=\"green\">Edited</span>{\" \"}\r\n              {selectorCsvFileName}?\r\n            </p>\r\n            <p className=\"text\">\r\n              Once uploaded this record will store to databases.\r\n            </p>\r\n            <p className=\"text mb-2\">\r\n              Please type ‘{isCaptchaText}’ on the Box to confirm upload file.\r\n            </p>\r\n\r\n            <div className=\"captcha-box\">\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 1,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                    isValidated,\r\n                    submit\r\n                  });\r\n                }}\r\n                id=\"t1\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[0]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 2,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                    isValidated,\r\n                    submit\r\n                  });\r\n                }}\r\n                id=\"t2\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input ml-0 mr-0\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[1]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 3,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                    isValidated,\r\n                    submit\r\n                  });\r\n                }}\r\n                id=\"t3\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[2]}\r\n              />\r\n            </div>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            <CButton\r\n              className=\"bg-background text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n              onClick={() => {\r\n                setIsShowModal(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </CButton>\r\n            <CButton\r\n              className={\r\n                (isValidated ? \"bg-green\" : \"bg-emptyTextField disabled\") +\r\n                \" no-shadow px-5 mt-4 mb-0 ml-3 mr-0\"\r\n              }\r\n              onClick={() => {\r\n                submit();\r\n                setIsValidated(false);\r\n              }}\r\n            >\r\n              {submitText}\r\n            </CButton>{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport { ModalsConfirmation, ModalsCaptcha };\r\n","module.exports = __webpack_public_path__ + \"static/media/LOADING-MLS-GRAY.903088aa.gif\";","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport filterAscGreen from 'assets/icons/ascOn.svg'\r\nimport filterAscGrey from 'assets/icons/ascOff.svg'\r\nimport filterCategoryGreen from 'assets/icons/categoryOn.svg'\r\nimport filterCategoryGrey from 'assets/icons/categoryOff.svg'\r\nimport deleteOn from 'assets/icons/deleteCategoryOn.svg'\r\nimport deleteOff from 'assets/icons/deleteCategoryOff.svg'\r\nimport checkHover from 'assets/icons/checkHover.svg'\r\nimport checkNotHover from 'assets/icons/checkNotHover.svg'\r\nimport { useEntryDimention } from 'Page/StockEntry/GeneralServices'\r\nimport './index.scss'\r\n\r\nconst Filter = ({\r\n    isMulti,\r\n    options,\r\n    onChange,\r\n    moduleName\r\n}) => {\r\n    const [show, setShow] = useState(false)\r\n    const { dimention } = useEntryDimention()\r\n    const isMobile = dimention <= 500 ? true : false\r\n    const wrapperRef = useRef(null);\r\n    const leftValue = () => {\r\n\r\n        if (dimention >= 1024 && dimention < 1280) return -180\r\n        if (dimention >= 1280 && dimention < 1366) return -80\r\n        if (dimention >= 1366 && dimention < 1396) return -50\r\n        if (dimention >= 1396 && dimention < 1440) return -90\r\n        if (dimention >= 1440 && dimention < 1536) return -70\r\n        if (dimention >= 1536 && dimention < 1600) return -50\r\n        if (dimention >= 1600 && dimention < 1920) return -70\r\n        if (dimention >= 1920 && dimention < 1930) return -50\r\n\r\n        // switch (dimention) {\r\n        //     case 1920:\r\n        //         return -50\r\n        //     case 1600:\r\n        //         return -70\r\n        //     case 1536:\r\n        //         return -30\r\n        //     case 1440:\r\n        //         return -70\r\n        //     case 1396:\r\n        //         return -90\r\n        //     case 1366:\r\n        //         return -50\r\n        //     case 1280:\r\n        //         return -80\r\n        //     case 1024:\r\n        //         return -180\r\n        // }\r\n    }\r\n\r\n    const topValue = (moduleName, options, isMulti) => {\r\n        switch (dimention) {\r\n            case 1024:\r\n                return -250\r\n            default:\r\n                if (moduleName === 'waste' || moduleName === 'ADD_SKU') return -100\r\n                return -220\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //handle auto adjust position\r\n\r\n    const elem = document?.getElementById(`c-filter`);\r\n    let rectPosition = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        rectPosition = elem?.getBoundingClientRect()\r\n    }, [show])\r\n\r\n    const top = rectPosition?.top + (isMobile ? -70 : topValue(moduleName, options, isMulti))\r\n\r\n    //handle klick outside\r\n\r\n    function useOutside() {\r\n        useEffect(() => {\r\n            function handleClickOutside(event) {\r\n                if (show && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n                    setShow(!show)\r\n                }\r\n            }\r\n\r\n            // Bind the event listener\r\n            document.addEventListener(\"mousedown\", handleClickOutside);\r\n            return () => {\r\n                // Unbind the event listener on clean up\r\n                document.removeEventListener(\"mousedown\", handleClickOutside);\r\n            };\r\n        }, [wrapperRef, show]);\r\n    }\r\n\r\n    useOutside();\r\n\r\n    const maxHeight = show ? 280 : 0\r\n    const opacity = show ? 1 : 0\r\n\r\n    const left = isMobile ? '1rem' : leftValue()\r\n    const right = isMobile ? '1rem' : false\r\n    const position = isMobile ? 'fixed' : 'absolute'\r\n    const minWidth = isMobile ? '100% !important' : 250\r\n\r\n    // data variable\r\n    const [search, setSearch] = useState('')\r\n    const [selected, setSelected] = useState(isMulti ? [] : {})\r\n    const [active, setActive] = useState(false)\r\n    const handleSelected = ({ options, item, setSelected, reset }) => {\r\n        let newOptions = options?.map(data => data)\r\n        newOptions = newOptions.map(data => {\r\n            if (item === data.value) data.selected = !data.selected\r\n            if (reset) data.selected = false\r\n            return data\r\n        })\r\n        newOptions = newOptions.filter(data => data.selected)\r\n        setSelected(newOptions)\r\n        if (typeof (onChange) === 'function') onChange(newOptions)\r\n    }\r\n\r\n    const handleSingleSelected = (selected) => {\r\n        setSelected(selected)\r\n        if (typeof (onChange) === 'function') onChange(selected)\r\n        setShow(false)\r\n    }\r\n    const filterBySelected = ((a, b) => {\r\n        if (a.selected && !b.selected) return -1\r\n        else if (!a.selected && b.selected) return 1\r\n        else return 0\r\n    })\r\n\r\n    const targetRepack = useSelector(state => state.targetRepack)\r\n    const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\r\n    const thereIsTargetRepack = (targetRepack && moduleName === 'repack') || (stockMovementTargetRepack && moduleName === 'stockMovement') ? true : false\r\n\r\n\r\n    let sortOptions = [\r\n        { value: 'asc', label: 'Ascending' },\r\n        { value: 'desc', label: 'Descending' },\r\n        { target: true, value: 'tasc', label: 'Most Completion Target' },\r\n        { target: true, value: 'tdesc', label: 'Least Completion Target' },\r\n    ]\r\n\r\n    return (\r\n        <div className='position-sticky'>\r\n            <div>\r\n\r\n                <img className='cursor-pointer' id='c-filter' src={isMulti ? (selected?.length ? filterCategoryGreen : filterCategoryGrey) : (selected?.label ? filterAscGreen : filterAscGrey)} onClick={() => setShow(true)} />\r\n\r\n            </div>\r\n            <div ref={wrapperRef} className='text mt-3 rounded shadow py-2'\r\n                style={{\r\n                    zIndex: 1040,\r\n                    transition: 'max-height ease-in',\r\n                    transitionProperty: 'all',\r\n                    transitionDuration: '0.15s',\r\n                    maxHeight,\r\n                    opacity,\r\n                    minWidth,\r\n                    backgroundColor: 'white',\r\n                    top,\r\n                    position,\r\n                    left,\r\n                    right,\r\n                    overflow: 'hidden',\r\n                    // display: show ? false : 'none'\r\n                }}>\r\n\r\n                <div style={{ zIndex: 1040, maxHeight: 230, overflow: 'scroll' }} className={`hide-scrollbar ${isMulti ? 'd-none' : null}`}>\r\n                    {\r\n                        !isMulti && sortOptions?.map(data => {\r\n                            const currentItem = data.label === active ? true : false\r\n                            const itemOpacity = currentItem ? 1 : 0\r\n                            const itemTextStyle = currentItem ? (active === data.label ? 'green' : 'text') : 'emptyTextField'\r\n\r\n                            return (\r\n                                <div\r\n                                    onMouseEnter={() => setActive(data.label)}\r\n                                    onMouseLeave={() => setActive(null)}\r\n                                    onClick={() => handleSingleSelected(data)}\r\n                                    style={{ minHeight: 40, backgroundColor: 'white' }}\r\n                                    className={`${data.target ? (thereIsTargetRepack ? null : 'd-none') : null} filter-items rounded cursor-pointer w-100 d-flex justify-content-between align-items-center px-3 ${data?.label === selected?.label ? 'LatoBold text' : false} ${itemTextStyle}`}>\r\n                                    {data.label}\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                <div className={`px-2 ${isMulti ? null : 'd-none'}`}>\r\n                    <div className='border rounded w-100 d-flex justify-content-between align-items-center pl-3 pr-2' style={{ height: 40, }}>\r\n                        <input id='filter-input' value={search} placeholder='Search Category' onChange={e => setSearch(e.target.value)} type='text' className='plain-input m-0 p-0' style={{\r\n                            color: '#969696'\r\n                            , fontSize: '1rem'\r\n                        }} />\r\n                        <div className='green'>\r\n                            <img\r\n                                src={selected?.length ? deleteOn : deleteOff}\r\n                                alt=\"delete icon\"\r\n                                className=\"cursor-pointer\"\r\n                                onClick={(e) => handleSelected({ options, setSelected, reset: true })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ zIndex: 1040, maxHeight: 230, overflow: 'scroll' }} className='hide-scrollbar'>\r\n                    {\r\n                        isMulti && options?.filter(name => {\r\n                            if (search?.length) {\r\n                                if (name.label.toLowerCase().includes(search.toLowerCase())) return name\r\n                            }\r\n                            else return name\r\n                        }).sort(function (a, b) { return filterBySelected(a, b) }).map((data, idx) => {\r\n                            const currentItem = selected.filter(item => item?.value === data?.value)?.length ? true : false\r\n                            const itemOpacity = currentItem ? 1 : 0\r\n                            const itemTextStyle = isMulti ? (currentItem ? (active === idx ? 'green' : 'text') : 'emptyTextField') : (selected ? 'text' : 'emptyTextField')\r\n\r\n                            return (\r\n                                <div\r\n                                    onMouseEnter={() => setActive(idx)}\r\n                                    onMouseLeave={() => setActive(null)}\r\n                                    onClick={() => handleSelected({ options, item: data.value, setSelected })}\r\n                                    style={{ minHeight: 40, backgroundColor: 'white' }}\r\n                                    className={`filter-items rounded cursor-pointer w-100 d-flex justify-content-between align-items-center ${itemTextStyle}`}>\r\n                                    <table style={{ tableLayout: 'fixed', width: '100%' }}>\r\n                                        <tr>\r\n                                            <td align={'center'} style={{ width: '20%' }} ><img style={{ opacity: itemOpacity }} src={active === idx && currentItem ? checkHover : checkNotHover} /></td>\r\n                                            <td style={{ width: '80%' }} >{data.label}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Filter","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { filterToggle } from './services'\r\nimport barcodeActive from 'assets/icons/barcodeActive.svg'\r\nimport barcodeInActive from 'assets/icons/barcodeInactive.svg'\r\nimport Filter from 'Component/Filter'\r\n\r\nconst Search = ({\r\n    placeholder = '',\r\n    textSearch = '', //text search\r\n    searchHandler = null, //fungsi ketika tombol search di klik\r\n    barcodeScanner,\r\n    filter = '', //isi dari filter\r\n    width = 'w-100',\r\n    className = null,\r\n    filterDropdown = null,\r\n    value,\r\n    showScanner,\r\n    areaId,\r\n    setAreaId,\r\n    areaDestination,\r\n    setAreaDestination,\r\n    moduleName,\r\n    setSearch,\r\n    category,\r\n    setCategory,\r\n    setSortBy,\r\n    hideFilter,\r\n    useScanner\r\n}) => {\r\n    const [filterShow = false, setFilterShow] = useState()\r\n    let filterText = ''\r\n    let filterIcon = ''\r\n    if (filterShow) {\r\n        filterText = \"Show Filter\"\r\n        filterIcon = ''\r\n\r\n    } else {\r\n        filterText = `Hide Filter`\r\n        filterIcon = <i className=\"p-2 rounded-circle bg-background iconU-entryTrash\"></i>\r\n    }\r\n    //params\r\n    const [desc, setDesc] = useState('')\r\n    const userCategories = useSelector(state => state?.user?.categories)\r\n    const categoryList = useSelector(state => state.categoryList?.filter(category => userCategories?.includes(category?.value)))\r\n\r\n    const search = (e) => {\r\n        if (e.key === 'Enter') searchHandler(desc)\r\n    }\r\n\r\n    const scannerChecker = ({ areaId, areaDestination, setAreaId, setAreaDestination, barcodeScanner, moduleName }) => {\r\n        if (moduleName !== 'stockMovement') {\r\n            if (areaId?.value) {\r\n                barcodeScanner(true)\r\n                return\r\n            }\r\n            if (typeof (setAreaId) === 'function') setAreaId('empty')\r\n            return\r\n        }\r\n        if (moduleName === 'stockMovement') {\r\n            if (!areaId?.value) {\r\n                setAreaId('empty')\r\n                return\r\n            }\r\n            if (!areaDestination?.value) {\r\n                setAreaDestination('empty')\r\n                return\r\n            }\r\n            if (areaId?.value === areaDestination?.value) {\r\n                setAreaDestination('empty')\r\n                return\r\n            }\r\n            if (typeof (barcodeScanner) === 'function') barcodeScanner(true)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"search-bar w-100\">\r\n            <div className=\"bg-white d-flex justify-content-between border-all radius-all pl-3 pr-1 py-1 search-m w-100\">\r\n                <div className=\"d-flex align-items-center sub-search-m w-100\">\r\n                    <i className=\"iconU-searchBarSearch fontSizeTitle emptyTextField border-right pr-3\"></i>\r\n                    <div className=\"px-lg-3 px-0 input-search d-flex align-items-center\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"borber-none plain-input\"\r\n                            placeholder={placeholder}\r\n                            onChange={(e) => {\r\n                                setDesc(e.target.value)\r\n                                if (typeof (setSearch) === 'function') setSearch(e.target.value)\r\n                                // value(e.target.value)\r\n                            }}\r\n                            onKeyPress={(e) => search(e)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={`w-100 d-flex align-items-center mb-md-0 mb-3 ${hideFilter ? 'd-none' : null}`}>\r\n                    <div className='mr-2 w-100 d-flex justify-content-end'>\r\n                        {/* <Dropdown\r\n                            isMulti={true}\r\n                            noMarginBottom={true}\r\n                            onChangeDropdown={(selected) => {\r\n                                if (typeof (setCategory) === 'function') setCategory(selected)\r\n                            }}\r\n                            selectedValue={category}\r\n                            options={categoryList}\r\n                            className='w-30'\r\n                            placeholder='Select Category'\r\n                            title='Categories'\r\n                            show /> */}\r\n\r\n                    </div>\r\n                    <div className='mr-md-2'>\r\n                        <Filter\r\n                            moduleName={moduleName}\r\n                            selectedValue={category}\r\n                            options={categoryList}\r\n                            onChange={(selected) => setSortBy(selected)}\r\n                        />\r\n                    </div>\r\n                    <div className=''>\r\n                        <Filter\r\n                            moduleName={moduleName}\r\n                            isMulti={true}\r\n                            selectedValue={category}\r\n                            options={categoryList}\r\n                            onChange={(selected) => setCategory(selected)}\r\n                        />\r\n                    </div>\r\n                    <div className='mr-0 mr-md-2'>\r\n                        <img onClick={() => scannerChecker({ areaId, areaDestination, setAreaId, setAreaDestination, barcodeScanner, moduleName })} className={`ml-2 pointer ${useScanner ? null : 'd-none'}`} src={showScanner ? barcodeActive : barcodeInActive} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"text d-flex align-items-center btn-c-m\" style={{ width: 'fit-content' }}>\r\n                    {filter ?\r\n                        <div className=\"text pointer d-flex sub-btn-m\" onClick={() => filterToggle({ filterShow, setFilterShow })}><div className=\"filter-text\">{filterText}</div> <span className=\"px-3\"><i className=\"fontSizeTitle iconU-searchFilter pr-3\"></i>{filterIcon}</span></div> : null}\r\n                    <button className=\"btn px-5 py-2 text-white bg-green LatoBold no-shadow\" style={{ height: \"fit-content !important\" }} onClick={() => searchHandler(desc)} >Search</button>\r\n                </div>\r\n            </div>\r\n            <div>{(!filterShow ? <div className='w-100'> {filterDropdown} </div> : null)}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","\r\nexport const filterToggle = ({ filterShow, setFilterShow }) => {\r\n    setFilterShow(!filterShow)\r\n}","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    return (\r\n        <CRow onKeyDown={e => e.keyCode === 27 ? close() : false} className={discard ? null : 'd-none'}>\r\n            <CCol onKeyDown={e => e.keyCode === 27 ? close() : false}>\r\n                <CModal\r\n                    onClose={() => close()}\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                            from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-4 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","module.exports = __webpack_public_path__ + \"static/media/barcodeActive.f2ec13af.svg\";","module.exports = __webpack_public_path__ + \"static/media/barcodeInactive.dc8d7118.svg\";","module.exports = __webpack_public_path__ + \"static/media/ascOn.cccbb7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/ascOff.d8a8c79c.svg\";","module.exports = __webpack_public_path__ + \"static/media/categoryOn.5bc834d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/categoryOff.ffb704a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteCategoryOn.fc3f380e.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteCategoryOff.fc0332a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkHover.4cfe8e6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkNotHover.a429f43c.svg\";","import React from 'react'\r\n\r\nconst Display = (props) => {\r\n    return (\r\n        <div className='display'>\r\n            {props.data}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display","import React from 'react'\r\nconst Keypad = (props) => {\r\n    return (\r\n        <div className='keypad'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Keypad","import React from 'react'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <div\r\n            className=\"button w-100\"\r\n            onClick={props.onClick}\r\n            data-size={props.size}\r\n            data-value={props.value}\r\n            data-twoSpace={props.twoSpace}\r\n        >\r\n            {props.label}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useState } from 'react'\r\nimport Calculator from 'Component/Calculator'\r\nimport { useDimension } from 'Page/StockEntry/GeneralServices'\r\nconst Decimal = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title,\r\n    toCompare,\r\n    useCalculator,\r\n    singleView\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' || uom === 'KG' ? true : false\r\n    const [showCalculator, setShowCalculator] = useState()\r\n    const { isMobile } = useDimension()\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input readOnly={useCalculator && isMobile ? true : false} onClick={() => setShowCalculator(!showCalculator)} id={`wgt_${poListIdx}_${entryListIdx}`} maxLength='12' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={toCompare ? 'weightToCompare' : 'weight'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n            <Calculator\r\n                singleView={singleView}\r\n                useCalculator={useCalculator}\r\n                className={showCalculator ? null : 'd-none'}\r\n                setShowCalculator={setShowCalculator}\r\n                showCalculator={showCalculator}\r\n                onChange={(val) => onChange(null, val)}\r\n                name={toCompare ? 'weightToCompare' : 'weight'}\r\n                entryListIdx={entryListIdx}\r\n                poListIdx={poListIdx} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Decimal","module.exports = __webpack_public_path__ + \"static/media/trash.121a7b10.png\";","import React from 'react'\r\nimport Calculator from 'Component/Calculator'\r\nimport { useState } from 'react'\r\nimport { useDimension } from 'Page/StockEntry/GeneralServices'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title,\r\n    name,\r\n    useCalculator,\r\n    singleView\r\n}) => {\r\n    let show = uom === 'gram' || uom === 'kg' ? false : true\r\n    const [showCalculator, setShowCalculator] = useState()\r\n    const { isMobile } = useDimension()\r\n\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input readOnly={useCalculator && isMobile ? true : false} onClick={() => setShowCalculator(!showCalculator)} id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n            <Calculator\r\n                singleView={singleView}\r\n                useCalculator={useCalculator}\r\n                className={showCalculator ? null : 'd-none'}\r\n                setShowCalculator={setShowCalculator}\r\n                showCalculator={showCalculator}\r\n                onChange={(val) => onChange(null, val)}\r\n                name={'qty'}\r\n                entryListIdx={entryListIdx}\r\n                poListIdx={poListIdx} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","export const submitAction = ({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) => {\r\n    if (confirmation.name === 'submit') {\r\n        if (moveAll) setLocalEntryData()\r\n        submit()\r\n        setIsSaved()\r\n\r\n    }\r\n    else {\r\n        setIsSaved()\r\n    }\r\n}\r\n\r\nexport const message = ({ moduleEntry, complete }) => {\r\n    if (moduleEntry?.jobPost) {\r\n        let messageReturn = null\r\n        const { areaDestinationName, areaName } = moduleEntry?.jobPost\r\n        if (areaDestinationName) messageReturn = ` ${areaName} reefer ${areaDestinationName} - `\r\n        else messageReturn = ` ${areaName} - `\r\n        return messageReturn\r\n    }\r\n}\r\n\r\nexport const handleFailed = ({ setIsSaved, setConfirmation, action, setLocalEntryData }) => {\r\n    setIsSaved()\r\n    setConfirmation({ show: false, name: action })\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { dateFull } from 'services'\r\nimport { submitAction, message, handleFailed } from './services'\r\n\r\nconst PopUpSaved = ({\r\n    isSaved,\r\n    moduleName,\r\n    totalSku,\r\n    setIsSaved,\r\n    confirmation,\r\n    setConfirmation,\r\n    submit,\r\n    action,\r\n    moduleEntry,\r\n    complete,\r\n    setLocalEntryData,\r\n    moveAll,\r\n    status,\r\n    updateEntry,\r\n    setUpdateEntry\r\n}) => {\r\n    const saved = {\r\n        success: {\r\n            header: confirmation.name === 'submit' ? 'Success ! ' : 'Saved !',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: `${confirmation.name === 'submit' ? 'Submitted' : 'Saved'} successfully`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        failed: {\r\n            header: `${confirmation.name === 'submit' ? 'Submit' : 'Save'} Failed`,\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            date: dateFull({}),\r\n            sku: '',\r\n            module: `Sorry `,\r\n            status: 'item not recorded.',\r\n            button: 'bg-red',\r\n            buttonText: 'Try Again'\r\n        },\r\n        updateSuccess: {\r\n            header: 'Updated',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: ` updated successfully.`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        updatedAlready: {\r\n            header: 'Already Updated',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: ` already updated`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        }\r\n    }\r\n    let data = isSaved ? saved.success : saved.failed\r\n    const [showErrorMessage, setShowErrorMessage] = useState(false)\r\n\r\n    let show = isSaved === true || isSaved === false ? true : false\r\n\r\n    if (updateEntry === true || updateEntry === false) {\r\n        data = updateEntry === true ? saved.updateSuccess : (updateEntry === false ? saved.updatedAlready : saved.success)\r\n        if (updateEntry) show = true\r\n        else if (updateEntry === false) show = true\r\n        else {\r\n            if (typeof (setUpdateEntry) === 'function') {\r\n                setUpdateEntry()\r\n                show = false\r\n            }\r\n        }\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_saved')\r\n    if (focus) focus.focus()\r\n\r\n    const arrowIcon = showErrorMessage ? 'iconU-arrowTop' : 'iconU-arrowBottom'\r\n    const opacity = isSaved ? 1 : (showErrorMessage ? 1 : 0)\r\n    const errorText = showErrorMessage ? 'Hide Message' : 'Show Message'\r\n\r\n    const reset = () => {\r\n        setIsSaved()\r\n        if (typeof (setUpdateEntry) === 'function') setUpdateEntry()\r\n    }\r\n    return (\r\n        <CRow onKeyDown={e => e.keyCode === 27 ? setIsSaved() : false} className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    className={`${isSaved ? null : 'popup-saved'}`}\r\n                    show={show}\r\n\r\n                    onClose={() => {\r\n                        if (isSaved) submitAction({ confirmation, setIsSaved, submit })\r\n                        if (!isSaved) setIsSaved()\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit }) : reset()} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${data.textColor} LatoBold mr-2 h5 mb-3`}>{data.header}</label> <span><i className={`${data.headerIcon}`}></i></span>\r\n                        <div className='mr-1 h5 mb-3'>{`Entries ${data.status}`}</div>\r\n                        <div className={updateEntry ? 'mb-3 h5' : 'd-none'}>Please continue your work.</div>\r\n                        <div onClick={() => setShowErrorMessage(!showErrorMessage)} className={`d-flex align-items-center mr-1 mb-3 error-message pointer ${isSaved || updateEntry === true || updateEntry === false ? 'd-none' : null}`}>\r\n                            <div className={`mr-2 ${arrowIcon}`} />\r\n                            <div className='green'>{errorText}</div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA', opacity: opacity }} className='w-100 border rounded px-3 pt-3 pb-3 mb-3'>\r\n                            <div className={`h5 mb-3 ${isSaved ? null : 'd-none'}`}>{data.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className={`mr-1 ${isSaved ? null : 'd-none'}`}>{`${message({ moduleEntry, complete })} ${data.sku}`}</label>\r\n                                <div className={`mr-1 ${isSaved || updateEntry ? 'd-none' : null}`}>\r\n                                    <div style={{ wordWrap: 'break-word !important', opacity: opacity, height: showErrorMessage ? false : 0 }} className={`mr-1 `}>\r\n                                        {`${status?.message?.toString() ? status?.message?.toString() : 'The transaction cannot be processed. Please update current entries'}`}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`mb-2 h5 ${confirmation.name === 'submit' || updateEntry ? 'd-none' : null}`}>Please continue your work</div>\r\n                        <div className='w-100 d-flex '>\r\n                            <CButton onClick={() => reset()} className={`text no-shadow px-5 mr-4 mb-3 ${`bg-softGreen ${isSaved ? 'd-none' : null}`}`}>\r\n                                Cancel\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => setUpdateEntry()} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button} ${updateEntry === true || updateEntry === false ? null : 'd-none'}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) : handleFailed({ setIsSaved, setConfirmation, action })} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button} ${updateEntry === true || updateEntry === false ? 'd-none' : null}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","import React from 'react'\r\nconst Note = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    isReadOnly,\r\n    poListIdx\r\n}) => {\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${grade === 'Waste' ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} border rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`note_${poListIdx}_${entryListIdx}`} readOnly={isReadOnly} autoComplete='off' className='w-100 plain-input' value={values} name='note' onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","import { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { getPORepacking } from 'apiServices'\r\nimport { getGradeRepacking } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { checkIsSkuRequired, filterBySkuName, totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    areaDestinationId }) => {\r\n    try {\r\n        let moduleSummaryNew = [...moduleSummary]\r\n        moduleSummaryNew[idx].checked = checked\r\n        dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n        const selectedData = moduleSummaryNew?.filter(ldata => {\r\n            if (ldata.checked) return ldata\r\n        })\r\n        let jsSelector = []\r\n        if (moduleEntry) {\r\n            moduleEntry.jobPost.list.map(data => {\r\n                const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n                if (jsList.skuUuid) {\r\n                    jsSelector.push(jsList.skuUuid)\r\n                }\r\n            })\r\n        }\r\n        let jsD = []\r\n        const a = selectedData.map(async (list, sI) => {\r\n            const isInclude = jsSelector.includes(list.skuUuid)\r\n            if (!isInclude) {\r\n                const grade = await getGradeRepacking({ skuId: list.skuUuid })\r\n                list['gradeList'] = grade\r\n                const data = await getPORepacking({ skuId: list.skuUuid, warehouseId: warehouseUuid, uom: list.unitOfMeassures })\r\n                if (data) {\r\n                    const addPoItem = [\r\n                        {\r\n                            itemList: [],\r\n                            expiryMs: null,\r\n                            inBoundyMs: null,\r\n                            expiryDate: null,\r\n                            inboundDate: null,\r\n                            skuUuid: list.skuUuid,\r\n                            uom: list.unitOfMeassures,\r\n                            packSize: list.packSize,\r\n                            category: list.category,\r\n                            initialWeight: Number.isInteger(data?.data.totalWeight) ? parseInt(data?.data.totalWeight) : parseFloat(data?.data.totalWeight),\r\n                            targetRepacks: data?.data.targetRepacks\r\n                        }\r\n                    ]\r\n                    list['poList'] = addPoItem\r\n                    jsD.push(list)\r\n                }\r\n\r\n            }\r\n        })\r\n        const aF = await Promise.all(a)\r\n        let newJs = []\r\n        if (moduleEntry) {\r\n            newJs = moduleEntry.jobPost.list.concat(jsD)\r\n        }\r\n        if (!moduleEntry) newJs = jsD\r\n\r\n        const uncheckedSku = moduleSummaryNew[idx]\r\n        if (!uncheckedSku.checked) {\r\n            newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n        }\r\n\r\n        const id = moduleEntry?.jobPost?.id\r\n        const jobSheet = {\r\n            jobPost: {\r\n                id: id ? id : 0,\r\n                warehouseSource: warehouseUuid,\r\n                warehouseDestination: warehouseUuid,\r\n                areaSource: parseInt(areaId?.value),\r\n                areaName: areaId?.label,\r\n                areaDestination: parseInt(areaDestinationId?.value),\r\n                areaDestinationName: areaDestinationId?.label,\r\n                list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\r\n            }\r\n        }\r\n        if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n        setLocalEntryData(jobSheet)\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    try {\r\n        let moduleSummaryNew = [...moduleSummary]\r\n        moduleSummaryNew[idx].checked = checked\r\n\r\n        const selectedData = moduleSummaryNew?.filter(ldata => {\r\n            if (ldata.checked) return ldata\r\n        })\r\n        let jsSelector = []\r\n        if (moduleEntry) {\r\n            moduleEntry.map(data => {\r\n                const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n                if (jsList.skuUuid) {\r\n                    jsSelector.push(jsList.skuUuid)\r\n                }\r\n            })\r\n        }\r\n        let jsD = []\r\n        const a = selectedData.map(async (list, sI) => {\r\n            const isInclude = jsSelector.includes(list.skuUuid)\r\n            if (!isInclude) {\r\n                const grade = await getGradeRepacking({ skuId: list.skuUuid })\r\n                list['gradeList'] = grade\r\n                const data = await getPORepacking({ skuId: list.skuUuid, warehouseId: warehouseUuid, uom: list.unitOfMeassures })\r\n                if (data) {\r\n                    const addPoItem = [\r\n                        {\r\n                            itemList: [],\r\n                            expiryMs: null,\r\n                            inBoundyMs: null,\r\n                            expiryDate: null,\r\n                            inboundDate: null,\r\n                            skuUuid: list.skuUuid,\r\n                            uom: list.unitOfMeassures,\r\n                            packSize: list.packSize,\r\n                            category: list.category,\r\n                            initialWeight: isFloat(data?.data.totalWeight) ? isFloat(data?.data.totalWeight) : data?.data.totalWeight,\r\n                            targetRepacks: data?.data.targetRepacks\r\n                        }\r\n                    ]\r\n                    list['poList'] = addPoItem\r\n                    list.isNewItem = true\r\n                    jsD.push(list)\r\n                }\r\n\r\n            }\r\n        })\r\n        const aF = await Promise.all(a)\r\n        let newJs = []\r\n        if (moduleEntry) {\r\n            newJs = moduleEntry.concat(jsD)\r\n        }\r\n        if (!moduleEntry) newJs = jsD\r\n\r\n        const uncheckedSku = moduleSummaryNew[idx]\r\n        if (!uncheckedSku.checked) {\r\n            newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n        }\r\n        preAddHandler(newJs);\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired, setInvalidThreshold }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    let invalidThreshold = []\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        let description = data.originalUom\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            const { packSize, targetRepacks } = po\r\n            const isTargetRepacks = targetRepacks?.length ? true : false\r\n            po.itemList.map(item => {\r\n                const { qty, grade, pack, note } = item\r\n\r\n                if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                    item.qtyIsEmpty = false\r\n                    item.gradeIsEmpty = false\r\n                    item.noteIsEmpty = false\r\n                    item.packIsEmpty = false\r\n                    item.packThresholdIsEmpty = false\r\n                }\r\n                else {\r\n                    if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        let grd = data.gradeList.filter(grd => grd.value === grade.value)\r\n                        let ratio = grd[0].multiplier\r\n                        let standardWeight = description?.toLowerCase() == 'gram' ? packSize / 1000 : packSize\r\n                        let inputWeight = qty / pack\r\n                        inputWeight = inputWeight - (standardWeight / ratio)\r\n                        inputWeight = inputWeight / (standardWeight / ratio)\r\n                        inputWeight = inputWeight * 100\r\n                        if (inputWeight >= 51 || inputWeight <= -20) {\r\n                            item.packThresholdIsEmpty = true\r\n                            invalidThreshold.push(true)\r\n                        }\r\n                        else {\r\n                            item.packThresholdIsEmpty = false\r\n                            invalidThreshold.push(false)\r\n                        }\r\n                        item.packThreshold = isFloat(inputWeight)\r\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        isNaN(pack) || pack == 0 || pack === \"\" || pack === null ? item.packIsEmpty = true : item.packIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        if (isTargetRepacks) {\r\n                            // !slot?.value && slot?.value?.toString() !== '0' ? item.slotIsEmpty = true : item.slotIsEmpty = false\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item.packIsEmpty || item?.noteIsEmpty || item?.qtyToCompareIsEmpty || item?.slotIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(false)\r\n    }\r\n    else {\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    if (!invalidThreshold.includes(true)) {\r\n        if (typeof (setInvalidThreshold) === 'function') setInvalidThreshold(false)\r\n    }\r\n    else {\r\n        if (typeof (setInvalidThreshold) === 'function') setInvalidThreshold(true)\r\n    }\r\n\r\n    // if (!isClear.includes(false) && valid && !invalidThreshold.includes(true)) {\r\n    if (!isClear.includes(false) && valid) {\r\n        if (invalidThreshold.includes(true)) return\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}\r\n\r\nexport const countThresholdIsEmpty = (js) => {\r\n\r\n    let number = []\r\n    if (js.jobPost.list.length) {\r\n        js.jobPost.list.map((ls, listIndex) => {\r\n            if (ls.poList.length) {\r\n                ls.poList.map((po, poListIdx) => {\r\n                    if (po.itemList.length) {\r\n                        po.itemList.map((item, entryListIdx) => {\r\n                            if (item.packThresholdIsEmpty) {\r\n                                number.push({ skuName: ls.skuName, id: `pack_${poListIdx}_${entryListIdx}`, excess: item.packThreshold, slot: item.slot, activeSku: listIndex })\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    return number\r\n}","import React from \"react\";\r\nimport moment from 'moment'\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpUnfinished = ({ moduleEntry, redirect, previousPage, discard, setDiscard, moduleFirstLoad }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    const show = discard || !moduleEntry ? false : true\r\n\r\n    if (!moduleFirstLoad) return (\r\n        <CModal\r\n            show={true}\r\n            size=\"lg\"\r\n            closeOnBackdrop={false}\r\n        >\r\n            <div className=\"green h4 w-100 text-center p-4\">\r\n                Checking Unfinished Entry\r\n            </div>\r\n        </CModal>\r\n    )\r\n    return (\r\n        <CRow onKeyDown={e => e.keyCode === 27 ? previousPage() : false} className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={show}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => previousPage()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pt-3 border-none\">\r\n                        <CModalTitle className=\"green LatoBold respon-txt\">Unfinished Entry Left! <span><i className=\"em em-speak_no_evil\"></i></span></CModalTitle>\r\n                    </CModalHeader>\r\n                    <CModalBody className=\"px-5 py-0\" style={{ minHeight: height }}>\r\n                        <p className=\"text mb-3 fontSizeWeightNumber\">\r\n                            You must complete the Entry that you worked on :\r\n                        </p>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100  rounded p-3 d-flex justify-content-between align-items-center'>\r\n                            <div>\r\n                                <div className=\"respon-txt\">{moment(moduleEntry?.jobPost?.createdAt).format(\"dddd, MMMM DD YYYY, h:mm:ss a\")}</div>\r\n                                <div className=\"green respon-txt\">\r\n                                    {`${moduleEntry?.jobPost?.areaName} - ${moduleEntry?.jobPost?.list.length} SKU${moduleEntry?.jobPost?.list.length > 1 ? '(s)' : ''}`}\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={() => setDiscard()} className='iconU-entryTrash emptyTextField' style={{ opacity: 0.5, fontSize: '1.2rem' }} />\r\n                        </div>\r\n                        <p className=\"text mt-3 fontSizeWeightNumber\">\r\n                            Do you want to continue this Entries ?\r\n                        </p>\r\n                        <br />\r\n                    </CModalBody>\r\n\r\n                    <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n                        <CButton onClick={() => previousPage()} className=\"bg-background text no-shadow px-5 mb-0 mx-0\">\r\n                            Later\r\n                        </CButton>\r\n                        <CButton onClick={() => redirect()} className=\"bg-green no-shadow px-5 mb-0 ml-3 mr-0\">\r\n                            Continue\r\n                        </CButton>{\" \"}\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpUnfinished\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Calculator from 'Component/Calculator'\r\nimport { useEffect } from 'react'\r\n\r\nconst showHandler = (setShowTooltips, tooltipsCheck, show) => {\r\n    if (typeof (setShowTooltips) && tooltipsCheck && show) setShowTooltips(1)\r\n    else setShowTooltips(0)\r\n}\r\nconst Pack = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    placeholder,\r\n    title,\r\n    className,\r\n    useCalculator,\r\n    singleView,\r\n    grade,\r\n    table,\r\n    activeTab,\r\n    activeSku,\r\n    withTooltips\r\n}) => {\r\n\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    const [showCalculator, setShowCalculator] = useState()\r\n    const [showTooltips, setShowTooltips] = useState(0)\r\n    let item = useSelector(state => state.repackEntryData?.jobPost?.list[activeSku]?.poList[poListIdx]?.itemList?.filter(item => item?.pack))\r\n    if (item?.length) item = item[item?.length - 1]\r\n\r\n    // if (item.pack === values)\r\n    let remaining = table?.data?.filter(row => row.grade === grade?.label && Number(row.slot) === Number(activeTab))[0]?.repackTargetRemaining\r\n    if (remaining?.length && remaining?.includes('+')) {\r\n        remaining = remaining?.split('+')?.join('')\r\n    }\r\n\r\n    useEffect(_ => {\r\n        if (Number(remaining) > 0 && item?.pack === values && item?.grade?.label === grade?.label && Number(item?.slot?.value) === Number(activeTab)) setShowTooltips(1)\r\n        else setShowTooltips(0)\r\n\r\n        // setTimeout(_ => setShowTooltips(0), 1000)\r\n    }, [Number(remaining) > 0, values, item?.pack, grade?.label, Number(activeTab)])\r\n    const tooltipsCheck = Number(remaining) > 0 && item?.pack === values && item?.grade?.label === grade?.label && Number(item?.slot?.value) === Number(activeTab)\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded relative border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input onMouseOver={() => showHandler(setShowTooltips, tooltipsCheck, true)} onMouseLeave={() => showHandler(setShowTooltips, tooltipsCheck)} onBlur={() => showHandler(setShowTooltips, tooltipsCheck)} onClick={() => setShowCalculator(!showCalculator)} id={`pack_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name='pack' placeholder={placeholder} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom}</div>\r\n                <div className={`popover-style ${withTooltips ? null : 'd-none'}`} style={{ opacity: showTooltips, transition: 'ease-in-out opacity 0.2s', transitionDuration: 0.2 }}>\r\n                    <div className='popover-content'>Because Slot {activeTab} is full, the remaining <span className='green'>{remaining}</span> pack will go to next slot automatically</div>\r\n                </div>\r\n            </div>\r\n\r\n            <Calculator\r\n                singleView={singleView}\r\n                useCalculator={useCalculator}\r\n                className={showCalculator ? null : 'd-none'}\r\n                setShowCalculator={setShowCalculator}\r\n                showCalculator={showCalculator}\r\n                onChange={(val) => onChange(null, val)}\r\n                name={'pack'}\r\n                entryListIdx={entryListIdx}\r\n                poListIdx={poListIdx} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Pack","import React, { useState } from 'react'\r\n\r\nconst InputImage = ({\r\n    isEmpty,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title\r\n}) => {\r\n    const [hover, setHover] = useState()\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n\r\n    return (\r\n        <div name='upload' className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`} onClick={() => hover && values ? onChange() : null}>\r\n            <div className={` pb-1 LatoBold text-nowrap ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div\r\n                onMouseLeave={() => setHover()}\r\n                onMouseEnter={() => setHover(true)}\r\n                style={{\r\n                    backgroundImage: `url(${values})`,\r\n                    backgroundSize: 'cover',\r\n                    opacity: 0.7,\r\n                    width: values ? 42 : false\r\n                }}\r\n                id='input-img'\r\n                className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green bg-white d-flex w-fit-content px-2 justify-content-center align-items-center input-height d-flex mr-3`}\r\n            >\r\n                {\r\n                    values && hover ?\r\n                        <div className=\"hand-cursor\" style={{ margin: 0 }}>\r\n                            <span style={{ fontSize: values ? 25 : false }} className={`photo_text hidden-xs ${values ? (hover ? 'iconU-entryTrash css-2613qy-menu' : null) : \" iconU-entryPhotos\"}`} />\r\n                        </div>\r\n                        :\r\n                        <label className=\"hand-cursor\" style={{ margin: 0 }}>\r\n                            <input name='upload' type=\"file\" nv-file-select uploader=\"$ctrl.uploader\" accept=\"image/x-png,image/gif,image/jpeg\" onChange={(e) => onChange(e)} />\r\n                            <span className=\"fa fa-camera\" />\r\n                            <span style={{ fontSize: values ? 25 : false }} className={`photo_text hidden-xs ${values ? (hover ? 'iconU-entryTrash css-2613qy-menu' : null) : \" iconU-entryPhotos\"}`} />\r\n                        </label>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputImage","import React from 'react'\r\nimport Img from 'assets/icons/sayur-box-logo.svg'\r\nimport { isFloat } from 'services'\r\n\r\nconst SKUItem = ({\r\n    img = Img,\r\n    skuDescription = 'SKU Description',\r\n    skuNumber = '1001',\r\n    uomLabel = 'weight',\r\n    uomValue = 100.3,\r\n    uom = 'KG',\r\n    isCheckedHandler = null,\r\n    check = false,\r\n    idx = 0,\r\n    singleView\r\n}) => {\r\n    const [isChecked, setIsChecked] = React.useState(check)\r\n    return (\r\n        <div key={idx} className={`w-100 d-md-flex justify-content-between pl-3 pr-2 py-3 mb-0 ${isChecked ? 'bg-softGreen' : null}`}>\r\n            <div className='d-flex align-items-center w-100 cursor-pointer'>\r\n                <img\r\n                    style={{ width: '50px', height: '50px' }}\r\n                    src={img} alt='sku image'\r\n                    className='w-5 mr-2 border softGreen rounded' />\r\n                <div className='text-left w-100'>\r\n                    <div className='mr-2 text LatoBold'>{skuDescription}</div>\r\n                    <div className='w-100 d-flex justify-content-between align-items-center mt-1 m-md-0'>\r\n                        <div className='text'>{skuNumber}</div>\r\n                        <div className='d-flex justify-content-md-end align-items-center '>\r\n                            <div className='mr-1 font-weight-bold green'>{isFloat(uomValue)}</div>\r\n                            <div className='mr-2 font-weight-bold green'>{uom}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SKUItem","import React, { useState, useEffect, useRef } from 'react'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport 'Component/DatePickerNew/index.scss'\r\nimport { Calendar } from 'react-date-range'\r\n\r\nconst InputDatePicker = ({ placeholder, inputWidth, values, text, showTitle, title, isEmpty, onChange, onClick, disabled, entryListIdx, poListIdx }) => {\r\n    const [show, setShow] = useState()\r\n\r\n    const elem = document?.getElementById(`date${entryListIdx}${poListIdx}`);\r\n    let width = document.documentElement.clientWidth\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [show])\r\n    let top = position?.top + 50\r\n    let right = false\r\n    if (width > 500) {\r\n        if (position?.bottom > 450) {\r\n            top = position?.top - 320\r\n        }\r\n    }\r\n    else {\r\n        if (position?.bottom > 400) {\r\n            right = 30\r\n            top = position?.top - 200\r\n        }\r\n\r\n        if (position?.bottom < 400) {\r\n            right = 30\r\n            top = position?.top + 120\r\n        }\r\n    }\r\n\r\n    function useOutside({ wrapperRef, show, setShow }) {\r\n        useEffect(() => {\r\n            /**\r\n             * Alert if clicked on outside of element\r\n             */\r\n            function handleClickOutside(event) {\r\n                if (show && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n                    setShow(!show)\r\n                }\r\n            }\r\n\r\n            // Bind the event listener\r\n            document.addEventListener(\"mousedown\", handleClickOutside);\r\n            return () => {\r\n                // Unbind the event listener on clean up\r\n                document.removeEventListener(\"mousedown\", handleClickOutside);\r\n            };\r\n        }, [wrapperRef, show]);\r\n    }\r\n\r\n    const wrapperRef = useRef(null);\r\n    useOutside({ wrapperRef, show, setShow });\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 `} >\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div tabIndex='0' id={`date${entryListIdx}${poListIdx}`} onClick={() => setShow(s => !s)} className={`${isEmpty ? 'border-red' : 'border'} rounded mb-2 sku-item border-soft-green w-100 w-lg-50 bg-white d-flex align-items-center input-height px-2 mr-3 ${typeof (onClick) === 'function' ? 'cursor-pointer' : null}`}>\r\n                <input disabled={disabled} autoComplete='off' type='text' className={`w-100 plain-input ${typeof (onClick) === 'function' ? 'cursor-pointer' : null}`} value={text} />\r\n                <span className='iconU-filterDate emptyTextField' />\r\n            </div>\r\n            <div style={{ top, right, zIndex: 9 }} className={`position-fixed border border-soft-green rounded shadow ${show ? null : 'd-none'} `} ref={wrapperRef}>\r\n                <Calendar\r\n\r\n                    classNames='p-1'\r\n                    date={values}\r\n                    onChange={dt => {\r\n                        onClick(dt)\r\n                        setShow(false)\r\n                    }} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputDatePicker","import React from 'react'\r\nimport { isFloat } from 'services'\r\nconst Excess = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    placeholder,\r\n    grade,\r\n    title,\r\n    className,\r\n    packThreshold,\r\n    hidePercent\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={`${inputWidth} mb-3 mr-3 ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold text-nowrap ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={` ${isEmpty ? 'tooltip-custom' : 'tooltip-custom1'} w-100 d-flex align-items-center input-height px-2 mr-3`}>\r\n                <div className={`LatoBold ${inputWidth} ${isEmpty ? 'red' : 'green'}`}>{`${packThreshold && !isNaN(parseInt(packThreshold)) ? `${isFloat(packThreshold)}${hidePercent ? '' : '%'}` : (hidePercent ? '0' : '0%')}`}</div>\r\n                <span className={`${isEmpty ? 'tooltiptext' : 'd-none'}`}>\r\n                    <span style={{ fontWeight: 600 }}>Threshold Error</span>\r\n                    <br />\r\n                    <span>{`Cannot be larger than 50%. Your current threshold is ${packThreshold}%`}</span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Excess","import React from 'react'\r\nimport { } from 'services'\r\nimport './index.scss'\r\nconst SKUPagination = ({ setSelectAll, selectAll }) => {\r\n\r\n\r\n    // useEffect(async () => {\r\n    //     setTotalEntries(9)\r\n    // }, [])\r\n\r\n    return (\r\n        <div className='d-flex flex-column flex-lg-row w-100 border border-soft-green rounded flex-row align-items-center justify-content-start mb-3 p-3 pl-4 bg-white'>\r\n            <div className='w-100 d-flex align-items-center'>\r\n                <div\r\n                    onClick={() => setSelectAll(true)}\r\n                    style={{\r\n                        cursor: 'pointer',\r\n                        minHeight: '23px',\r\n                        minWidth: '23px',\r\n                        maxHeight: '23px',\r\n                        maxWidth: '23px'\r\n                    }}\r\n                    className={`mr-3 text-white d-flex align-items-center rounded px-1 ${selectAll ? 'iconU-pickCheck bg-green pl-1-5' : 'bg-borderHeader'}`}\r\n                />\r\n            Select All\r\n            </div>\r\n            {/* <div className='d-flex w-100 justify-content-center'>\r\n                <div onClick={() => setActivePage(1)} className={` ${'emptyTextField'} ${''} h6 fontSizeSmallTitle d-flex align-items-center p-pgn-btn rounded mr-3 iconU-paginationPrevMost`} />\r\n                <div onClick={() => setActivePage(a => a > 0 ? a - 1 : 1)} className={` ${'emptyTextField'} ${''} h6 fontSizeSmallTitle d-flex align-items-center p-pgn-btn rounded mr-3 iconU-paginationPrev`} />\r\n                {\r\n                    totalE?.map((ap, i) => {\r\n                        const idx = i + 1\r\n\r\n                        let c1 = activeP\r\n                        let c2 = activeP + 1\r\n                        let c3 = activeP + 2\r\n                        const paginateLogic = 1 + idx <= 2 && c3 < 4 && c1 <= 2 || c1 === idx || (c1 > 1 && c1 - 1 === idx && idx >= c3) || c2 === idx || c3 === idx || totalEntries - idx <= 2 && (totalEntries === c1 || totalEntries - 1 === c1)\r\n                        if (paginateLogic) return <div onClick={() => setActivePage(idx)} className={` ${activeP === (idx) ? 'bg-green text-white' : 'emptyTextField'} h6 d-flex align-items-center p-pgn-btn rounded mr-3`}>{idx}</div>\r\n                    })\r\n                }\r\n                <div onClick={() => setActivePage(a => a < totalEntries ? a + 1 : totalEntries)} className={` ${'emptyTextField'} ${''} h6 fontSizeSmallTitle d-flex align-items-center d-flex align-items-center p-pgn-btn rounded mr-3 iconU-paginationNext`} />\r\n                <div onClick={() => setActivePage(totalEntries)} className={` ${'emptyTextField'} ${''} h6 fontSizeSmallTitle d-flex align-items-center d-flex align-items-center p-pgn-btn rounded mr-3 iconU-paginationNextMost`} />\r\n            </div>\r\n            <div className='d-flex w-100 justify-content-center justify-content-lg-end'>\r\n                <div>{`Showing `}</div>\r\n                <div className='LatoBold'>{` 1 to 20 of ${totalEntries} `}</div>\r\n                <div>{` entries`}</div>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SKUPagination","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { getPoBySkuId, removeEntryModule } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { filterBySkuName, totalListItemWeightCount, checkIsSkuRequired } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    areaIdDesposition }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    let targetMovements = []\r\n\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                targetMovements = data?.targetMovements\r\n                const addPoItem = data?.poItems?.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.targetMovements = data?.targetMovements\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaIdDesposition?.value),\r\n            areaDestinationName: areaIdDesposition?.label,\r\n            list: newJs.sort(function (a, b) { return filterBySkuName(a, b) }).sort(function (a, b) { return filterBySkuName(a, b) })\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    if (newJs.length > 0) dispatch({ type: CREATE_JOB_SHEET, targetMovements })\r\n    setLocalEntryData(jobSheet)\r\n    // dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    let targetMovements = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                targetMovements = data?.targetMovements\r\n                const addPoItem = data?.poItems.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.targetMovements = data?.targetMovements\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                list.isNewItem = true\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const setAreaIdDesposition = ({ dispatch, selected }) => {\r\n    if (selected) dispatch({ type: SET_AREA, areaIdDesposition: selected })\r\n}\r\n\r\nexport const selectArea = ({ selected, area, setAreaId, setAreaIdDesposition, setAreaMovement, dispatch }) => {\r\n    const value = selected?.value\r\n    let source;\r\n    let destination;\r\n\r\n    switch (value) {\r\n        case 1:\r\n            source = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Production')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 2:\r\n            source = area.filter(ar => ar?.label == 'Production')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 3:\r\n            source = area.filter(ar => ar?.label == 'Staging')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 4:\r\n            source = area.filter(ar => ar?.label == 'Staging')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Quarantine')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 5:\r\n            source = area.filter(ar => ar?.label == 'Quarantine')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Staging')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 6:\r\n            source = area.filter(ar => ar?.label == 'Staging')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Waste')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 7:\r\n            source = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Staging')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 8:\r\n            source = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Waste')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 0:\r\n            source = null\r\n            destination = null\r\n            break\r\n    }\r\n    // setAreaId(source)\r\n    // setAreaIdDesposition(destination)\r\n    // setAreaMovement(selected)\r\n    dispatch({ type: CREATE_JOB_SHEET, areaId: source, areaIdDesposition: destination, areaMovement: selected })\r\n}\r\n\r\n\r\n\r\n\r\n//remove sku\r\nexport const removeSku = async ({ dispatch, moduleEntry, moduleName }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n    const list = moduleEntry.jobPost.list.filter(data => { if (data.checked) return data })\r\n    jobSheet.jobPost.list = list\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n    if (list.length === 0) removeEntryModule({ id: jobSheet.jobPost.id, moduleName, dispatch })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired, areaMovement }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            po.itemList.map(item => {\r\n                const { qty, grade, note, reason } = item\r\n                // if (po.uom === 'kg') {\r\n                if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                    item.qtyIsEmpty = false\r\n                    item.gradeIsEmpty = false\r\n                    item.ripenessIsEmpty = false\r\n                    item.noteIsEmpty = false\r\n                    item.reasonIsEmpty = false\r\n                }\r\n                else {\r\n                    if (item?.grade?.label === 'Waste' && areaMovement?.value !== 8) {\r\n                        !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        !reason?.value ? item.reasonIsEmpty = true : item.reasonIsEmpty = false\r\n                    }\r\n                    if (areaMovement?.value === 8) {\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        if (item?.grade?.label === 'Waste') {\r\n                            !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                            !reason?.value ? item.reasonIsEmpty = true : item.reasonIsEmpty = false\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                    }\r\n                }\r\n                isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                // if(!item.qtyIsEmpty) po.initialWeightOver > po.initialWeight ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty || item?.reasonIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}\r\n\r\nexport const moveAllStockMovement = ({ localEntryData, setLocalEntryData }) => {\r\n    if (localEntryData) {\r\n        let data = Object.assign({}, JSON.parse(JSON.stringify(localEntryData)))\r\n        const updateData = data?.jobPost?.list?.map(ls => {\r\n            ls.poList.map(po => {\r\n                po.itemList = [{ qty: po.initialWeight, expiryDate: po.expiryDate }]\r\n                return po\r\n            })\r\n            return ls\r\n        })\r\n        data.jobPost.list = updateData\r\n        setLocalEntryData(data)\r\n    }\r\n}","import { saveImage } from 'apiServices'\r\nimport moment from 'moment'\r\nimport { checkIsSkuRequired } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { dateDMY, dateFull, isFloat } from 'services'\r\nimport { stockMovementValidation } from './moduleValidation'\r\n\r\nconst setValue = ({ setItemList, changedList, setTotalQty, totalQty }) => {\r\n    setItemList(changedList)\r\n\r\n    changedList.map(item => {\r\n        if (item.qty) totalQty = Number(totalQty) + Number(item?.qty)\r\n    })\r\n\r\n    if (typeof (setTotalQty) === 'function') setTotalQty(totalQty)\r\n}\r\n\r\nexport const addLine = ({ itemList, setItemList, expiryDateSelected, moduleName, module }) => {\r\n    let newList = [...itemList]\r\n    const lastList = newList[newList.length - 1]\r\n    switch (moduleName) {\r\n        case 'stockTake':\r\n            newList.push({\r\n                grade: lastList?.grade,\r\n                expiryDate: expiryDateSelected?.value,\r\n                expiryDateText: dateDMY({ date: expiryDateSelected?.value })\r\n            })\r\n            setItemList(newList)\r\n            break;\r\n        case 'stockMovement':\r\n            newList.push({\r\n                qty: '',\r\n                expiryDate: expiryDateSelected?.value,\r\n                expiryDateText: dateDMY({ date: expiryDateSelected?.value }),\r\n                grade: lastList?.grade,\r\n            })\r\n            setItemList(newList)\r\n            break;\r\n        case 'repack':\r\n            let gradeList = module?.jobPost?.list[0]?.gradeList?.filter(grd => grd?.label === module?.jobPost?.list[0]?.skuName)\r\n            newList.push({\r\n                qty: '',\r\n                grade: gradeList[0],\r\n                ripeness: lastList?.ripeness,\r\n            })\r\n            setItemList(newList)\r\n            break;\r\n    }\r\n}\r\n\r\n\r\nexport const changeValues = async ({ e, val, idx, itemList, setItemList, setTotalQty, ddName, selected, moduleName, module }) => {\r\n    let changedList = [...itemList]\r\n    let js = { ...module }\r\n    let regexQty = /^[0-9]+$/\r\n    let totalQty = 0\r\n    if (ddName) {\r\n        switch (ddName) {\r\n            case 'ripeness':\r\n                changedList[idx].ripeness = selected\r\n                if (moduleName === 'stockMovement') changedList[idx].grade = selected\r\n                changedList[idx].ripenessIsEmpty = false\r\n                changedList[idx].noteIsEmpty = false\r\n                changedList[idx].qtyIsEmpty = false\r\n                setItemList(changedList)\r\n                break\r\n            case 'grade':\r\n                if ((selected?.label === 'Waste' || selected?.label === 'Semi Waste') && moduleName === 'stockTake') {\r\n                    changedList[idx].ripenessIsEmpty = false\r\n                    changedList[idx].ripeness = ''\r\n                }\r\n                if ((selected?.label === 'Waste' || selected?.label === 'Semi Waste') && moduleName === 'stockMovement') {\r\n                    changedList[idx].ripenessIsEmpty = false\r\n                    changedList[idx].ripeness = ''\r\n                }\r\n                changedList[idx].qty = ''\r\n                changedList[idx].note = ''\r\n                changedList[idx].grade = selected\r\n                changedList[idx].gradeIsEmpty = false\r\n                setValue({ setItemList, changedList, setTotalQty, totalQty })\r\n                break\r\n            case 'outbound':\r\n                changedList[idx].outbound = selected\r\n                changedList[idx].outboundIsEmpty = false\r\n                setItemList(changedList)\r\n                break\r\n            case 'date':\r\n                let date = moment(selected).valueOf()\r\n                changedList[idx].expiryDate = date\r\n                changedList[idx].expiryDateText = dateDMY({ date })\r\n                setItemList(changedList)\r\n                break\r\n            case 'reason':\r\n                changedList[idx].reasonIsEmpty = false\r\n                changedList[idx].reason = selected\r\n                setItemList(changedList)\r\n                break\r\n        }\r\n        return\r\n    }\r\n\r\n\r\n    let value = e?.target?.value\r\n    let name = e?.target?.name\r\n    if (!e?.target) {\r\n        value = val?.value\r\n        name = val?.name\r\n    }\r\n    switch (name) {\r\n        case 'upload':\r\n            const image = await saveImage({ e })\r\n            changedList[idx].uploadPhoto = image\r\n            changedList[idx].uploadPhotoIsEmpty = false\r\n            setItemList(changedList)\r\n            break\r\n        case 'note':\r\n            changedList[idx].note = e.target.value\r\n            changedList[idx].noteIsEmpty = false\r\n            setItemList(changedList)\r\n            break\r\n\r\n        case 'qty':\r\n            if ((regexQty.test(value) === false && value !== \"\")) {\r\n                return;\r\n            }\r\n            changedList[idx].qty = value\r\n            changedList[idx].qtyIsEmpty = false\r\n            setItemList(changedList)\r\n            setValue({ setItemList, changedList, setTotalQty, totalQty })\r\n            break\r\n\r\n        case 'pack':\r\n            if ((regexQty.test(value) === false && value !== \"\")) {\r\n                return;\r\n            }\r\n            changedList[idx].pack = value > 0 ? parseInt(value) : value\r\n            changedList[idx].packIsEmpty = false\r\n            changedList[idx].packThresholdIsEmpty = false\r\n            setItemList(changedList)\r\n            setValue({ setItemList, changedList, setTotalQty, totalQty })\r\n            break\r\n\r\n        case 'weight':\r\n            if (name === 'weight' || name === 'weightToCompare') {\r\n                let regex = /^[0-9\\.\\x0]+$/\r\n                if ((regex.test(value) === true && value !== \"\")) {\r\n                    let newValue = 0;\r\n                    let arr = value?.split('.')\r\n                    let number = arr[0];\r\n                    if (number >= 0) number = parseInt(number)\r\n                    let commaNumber = arr[1];\r\n\r\n                    if ((commaNumber !== null && commaNumber !== undefined)) {\r\n                        if (commaNumber.length > 2) {\r\n                            //jika dibelakang koma ada lebih dari 2 angka\r\n                            var sliceNumber = commaNumber.slice(0, 2);\r\n                            newValue = `${number}.${sliceNumber}`\r\n                        } else {\r\n                            newValue = `${number}.${commaNumber}`\r\n                        }\r\n                    } else {\r\n                        newValue = parseInt(number)\r\n                    }\r\n\r\n                    //fill weight qty\r\n                    if (name === 'weight') {\r\n                        changedList[idx].qty = newValue\r\n                        changedList[idx].qtyIsEmpty = false\r\n                    }\r\n                    if (name === 'weightToCompare') {\r\n                        changedList[idx].qtyToCompare = newValue\r\n                        changedList[idx].qtyToCompareIsEmpty = false\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    //fill weight qty\r\n                    if (name === 'weight') {\r\n                        changedList[idx].qty = ''\r\n                    }\r\n                    if (name === 'weightToCompare') {\r\n                        changedList[idx].qtyToCompare = ''\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (moduleName === 'repack') {\r\n                let description = js.jobPost.list[0]?.originalUom\r\n                const { totalPack, uom } = js.jobPost.list[0]?.poList[0]\r\n                const { qty, grade, pack } = changedList[idx]\r\n                if (grade, totalPack, uom) {\r\n                    let ratio = grade?.multiplier\r\n                    let standardWeight = description?.toLowerCase() == 'gram' ? 1 / 1000 : 1\r\n                    let inputWeight = qty / pack\r\n                    inputWeight = inputWeight - (standardWeight / ratio)\r\n                    inputWeight = inputWeight / (standardWeight / ratio)\r\n                    inputWeight = inputWeight * 100\r\n                    if (inputWeight >= 51 || inputWeight <= -20) {\r\n                        changedList[idx].packThresholdIsEmpty = true\r\n                    }\r\n                    else {\r\n                        changedList[idx].packThresholdIsEmpty = false\r\n                    }\r\n                    changedList[idx].packThreshold = isFloat(inputWeight)\r\n                }\r\n            }\r\n\r\n            setValue({ setItemList, changedList, setTotalQty, totalQty })\r\n            break\r\n\r\n    }\r\n}\r\n\r\nexport const submitValidation = ({ module, moduleName, setConfirmation, itemList, setItemList, setSingleViewData, supplierNameSelected, inboundDateSelected, expiryDateSelected, areaMovement }) => {\r\n    let isEmpty = []\r\n    let checkItemList = []\r\n    let jobPost = Object.assign({}, JSON.parse(JSON.stringify(module)))\r\n    let totalQty = 0\r\n    let po = []\r\n    const supplierName = supplierNameSelected?.value\r\n    const inboundDate = inboundDateSelected?.value\r\n    const expiryDate = expiryDateSelected?.value\r\n    const { moduleIsEmpty, moduleCheckItemList, moduleTotalQty } = stockMovementValidation({ itemList, jobPost, moduleName, areaMovement })\r\n    isEmpty = moduleIsEmpty\r\n    checkItemList = moduleCheckItemList\r\n    totalQty = moduleTotalQty\r\n\r\n    po = jobPost.jobPost.list[0].poList.filter(p => {\r\n        let condition = null\r\n        if (!expiryDate) condition = p.supplierName === supplierName && p.inboundDate === inboundDate\r\n        if (expiryDate) condition = p.supplierName === supplierName && p.inboundDate === inboundDate && expiryDate === p.expiryDate\r\n\r\n        if (condition) return p\r\n    })\r\n\r\n    setItemList(checkItemList)\r\n\r\n    let updateInitialWeight = po[0].initialWeight - totalQty\r\n    jobPost.jobPost.list[0].poList = [po[0]]\r\n    jobPost.jobPost.list[0].poList[0].initialWeight = updateInitialWeight\r\n    jobPost.jobPost.list[0].poList[0].totalQty = updateInitialWeight.toString()\r\n    jobPost.jobPost.list[0].poList[0].initialWeightFormatted = updateInitialWeight.toString()\r\n    jobPost.jobPost.list[0].poList[0].itemList = itemList\r\n    jobPost.jobPost.list[0].poList[0].supplierName = supplierNameSelected?.value\r\n    jobPost.jobPost.list[0].poList[0].inboundDate = inboundDateSelected?.value ? inboundDateSelected?.value : jobPost.jobPost.list[0].poList[0].inboundDate\r\n    jobPost.jobPost.list[0].poList[0].expiryDate = expiryDateSelected?.value ? expiryDateSelected?.value : jobPost.jobPost.list[0].poList[0].expiryDate\r\n    if (!isEmpty.includes(true)) {\r\n        setSingleViewData(jobPost)\r\n        setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        checkIsSkuRequired({ moduleEntry: jobPost })\r\n        setConfirmation({ show: false, name: null })\r\n    }\r\n}\r\n\r\nexport const updateSummaryAndModuleEntry = ({ singleViewData, moduleName, moduleEntry, setLocalEntryData, summary, resetSummary }) => {\r\n    let updatedLocalEntryData = { ...moduleEntry }\r\n    let updatedSummary = [...summary]\r\n    if (singleViewData?.jobPost?.list?.length) {\r\n        //sku\r\n        const skuUuid = singleViewData.jobPost.list[0].skuUuid\r\n        //po\r\n        const updatedPo = singleViewData.jobPost.list[0].poList[0]\r\n        const supplierName = singleViewData.jobPost.list[0].poList[0].supplierName\r\n        const inboundDate = singleViewData.jobPost.list[0].poList[0].inboundDate\r\n        const expiryDate = singleViewData.jobPost.list[0].poList[0].expiryDate\r\n        const skuName = singleViewData.jobPost.list[0].skuName\r\n        let qty = 0\r\n        updatedPo.itemList.map(item => {\r\n            if (item?.grade?.label === skuName && moduleName === 'stockTake') qty += isFloat(item.qty)\r\n            if (moduleName === 'stockMovement') qty += isFloat(item.qty)\r\n        })\r\n        if (moduleName === 'stockTake') updatedPo.initialWeight = qty\r\n        // update summaries\r\n        updatedSummary = updatedSummary.map(data => {\r\n            if (data.skuUuid === skuUuid) {\r\n                if (moduleName === 'stockMovement') data.totalQty -= qty\r\n                if (moduleName === 'stockTake') data.totalQty = qty\r\n                return data\r\n            }\r\n            return data\r\n        })\r\n        //update local entry\r\n        if (supplierName && inboundDate && expiryDate) {\r\n            let list = updatedLocalEntryData?.jobPost?.list?.map(sku => {\r\n                let po = sku.poList.map(po => {\r\n                    if (sku.skuUuid === skuUuid && po.supplierName === supplierName && po.inboundDate === inboundDate && po.expiryDate === expiryDate) {\r\n                        po = updatedPo\r\n                        if (moduleName !== 'stockTake') po.itemList = []\r\n                        return po\r\n                    }\r\n                    return po\r\n                })\r\n                sku.poList = po\r\n                return sku\r\n            })\r\n            updatedLocalEntryData.jobPost.list = list\r\n        }\r\n\r\n        if (supplierName && inboundDate) {\r\n            let list = updatedLocalEntryData?.jobPost?.list?.map(sku => {\r\n                let po = sku.poList.map(po => {\r\n                    if (sku.skuUuid === skuUuid && po.supplierName === supplierName && po.inboundDate === inboundDate) {\r\n                        po = updatedPo\r\n                        if (moduleName !== 'stockTake') po.itemList = []\r\n                        return po\r\n                    }\r\n                    return po\r\n                })\r\n                sku.poList = po\r\n                return sku\r\n            })\r\n            updatedLocalEntryData.jobPost.list = list\r\n        }\r\n        setLocalEntryData(updatedLocalEntryData)\r\n        return updatedSummary\r\n    }\r\n}\r\n\r\nexport const getPoDataByHeader = ({ moduleName, supplierNameSelected, inboundDateSelected, expiryDateSelected, moduleEntry, skuNumber, setItemList }) => {\r\n    const supplierName = supplierNameSelected?.value\r\n    const inboundDate = inboundDateSelected?.value\r\n    const expiryDate = expiryDateSelected?.value\r\n    let initialWeight = 0\r\n    let list = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(sku => {\r\n            sku.poList.map(po => {\r\n                const sameSKUNumber = sku.skuNumber === skuNumber\r\n                const sameSupplierName = po.supplierName === supplierName\r\n                const sameInboundDate = po.inboundDate === inboundDate\r\n                const sameExpiryDate = po.expiryDate === expiryDate\r\n\r\n                let condition = null\r\n                if (!expiryDate) condition = sameSKUNumber && sameSupplierName && sameInboundDate\r\n                if (expiryDate) condition = sameSKUNumber && sameSupplierName && sameInboundDate && sameExpiryDate\r\n\r\n                if (condition) {\r\n                    initialWeight = po.initialWeight\r\n                    list = po.itemList\r\n                }\r\n            })\r\n        })\r\n    }\r\n    return { initialWeight }\r\n}\r\n\r\nexport const getSVSource = ({ moduleEntry, skuNumber }) => {\r\n    let supplierName = []\r\n    let module = null\r\n    let category = null\r\n    let gradeList = []\r\n    let uom = null\r\n    let totalWeight = 0\r\n    let parameterList = []\r\n\r\n    if (moduleEntry?.jobPost?.list?.length && skuNumber) {\r\n        //sku filter by sku name\r\n        module = Object.assign({}, JSON.parse(JSON.stringify(moduleEntry)))\r\n        const skuList = module?.jobPost?.list?.filter(data => data.skuNumber === skuNumber)\r\n\r\n        module.jobPost.list = skuList\r\n        if (skuList.length) {\r\n            const item = module?.jobPost?.list[0]\r\n            category = item.category\r\n            totalWeight = item.totalQty\r\n            uom = item.unitOfMeassures\r\n            gradeList = item.gradeList\r\n\r\n\r\n            //filter dropdown, supplier name & expiry date\r\n            const poList = item.poList\r\n\r\n            supplierName = poList.map(data => data?.supplierName)\r\n            supplierName = supplierName.filter((item, idx, arr) => {\r\n                if (arr.indexOf(item) === idx) return { label: item, value: item }\r\n            })\r\n\r\n            supplierName = supplierName.map(data => ({ value: data, label: data }))\r\n\r\n            parameterList = poList.map(po => {\r\n                return {\r\n                    supplierName: po.supplierName,\r\n                    inboundDate: po.inboundDate,\r\n                    expiryDate: po.expiryDate,\r\n                    poNumber: po.wmsPoSkuCode\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n    return { supplierName, module, category, uom, gradeList, totalWeight, parameterList }\r\n}\r\n\r\nexport const setOptionValue = ({\r\n    module,\r\n    moduleName,\r\n    setTotalQty,\r\n    setItemList,\r\n    setSupplierNameSelected,\r\n    setInboundDateSelected,\r\n    setExpiryDateSelected,\r\n    setMoveAll,\r\n    setInboundDateOption,\r\n    setExpiryDateOption,\r\n    supplierName,\r\n    parameterList\r\n}) => {\r\n    setSupplierNameSelected(supplierName[0])\r\n    let updatedInbound = []\r\n    parameterList.map(date => {\r\n        const isExist = updatedInbound.filter(i => i.label === `${dateFull({ noTime: true, date: date.inboundDate })} - ${date.poNumber}`)\r\n        if (date.supplierName === supplierName[0].value && isExist?.length === 0) updatedInbound.push({ label: date.inboundDate ? `${dateFull({ noTime: true, date: date.inboundDate })} - ${date.poNumber}` : `${date.inboundDate} - ${date.poNumber}`, value: date.inboundDate })\r\n    })\r\n    updatedInbound = updatedInbound.filter(dt => dt !== undefined)\r\n    setInboundDateOption(updatedInbound)\r\n    setInboundDateSelected(updatedInbound[0])\r\n\r\n    let updatedExpiryDate = parameterList.map(date => {\r\n        if (date.supplierName === supplierName[0].value && date.inboundDate === updatedInbound[0].value) return { label: (date.expiryDate ? `${dateFull({ noTime: true, date: date.expiryDate })} - ${date.poNumber}` : `${date.expiryDate} - ${date.poNumber}`), value: date.expiryDate }\r\n    })\r\n    updatedExpiryDate = updatedExpiryDate.filter(dt => dt !== undefined)\r\n    setExpiryDateOption(updatedExpiryDate)\r\n    setExpiryDateSelected(updatedExpiryDate[0])\r\n\r\n    if (moduleName === 'stockTake') {\r\n        if (module) {\r\n            const list = module.jobPost.list[0].poList[0]?.itemList\r\n            if (list?.length) {\r\n                setTotalQty(list[0].qty)\r\n                setItemList(list)\r\n            }\r\n        }\r\n    }\r\n\r\n    if (typeof (setMoveAll) === 'function') setMoveAll()\r\n\r\n}\r\n\r\nexport const filterByDropdown = ({\r\n    module,\r\n    setItemList,\r\n    parameterList,\r\n    ddName,\r\n    selected,\r\n    setSupplierNameSelected,\r\n    setInboundDateSelected,\r\n    setExpiryDateSelected,\r\n\r\n    setInboundDateOption,\r\n    setExpiryDateOption,\r\n    supplierNameSelected,\r\n\r\n    inboundDateSelected,\r\n    expiryDateSelected,\r\n    moduleEntry,\r\n    skuNumber\r\n}) => {\r\n    let list = []\r\n    list = moduleEntry?.jobPost?.list.filter(sku => sku.skuNumber === skuNumber)\r\n    list = list[0].poList.map(po => {\r\n        let item = po.itemList.map(item => {\r\n            item.qty = po.initialWeight\r\n            return item\r\n        })\r\n        po.itemList = item\r\n        return po\r\n    })\r\n    if (ddName === 'supplierName') {\r\n        setSupplierNameSelected(selected)\r\n\r\n        let updatedInbound = []\r\n        parameterList.map(date => {\r\n            const isExist = updatedInbound.filter(i => i.label === `${dateFull({ noTime: true, date: date.inboundDate })} - ${date.poNumber}`)\r\n            if (date.supplierName === selected.value && date.inboundDate && isExist?.length === 0) updatedInbound.push({ label: date.inboundDate ? `${dateFull({ noTime: true, date: date.inboundDate })} - ${date.poNumber}` : `${date.inboundDate} - ${date.poNumber}`, value: date.inboundDate })\r\n        })\r\n\r\n        updatedInbound = updatedInbound.filter(d => d !== undefined)\r\n        setInboundDateOption(updatedInbound)\r\n        setInboundDateSelected(updatedInbound[0])\r\n\r\n        let updatedExpiryDate = parameterList.map(date => {\r\n            if (date.supplierName === selected.value && date.inboundDate === updatedInbound[0].value) return { label: date.expiryDate ? `${dateFull({ noTime: true, date: date.expiryDate })} - ${date.poNumber}` : `${date.expiryDate} - ${date.poNumber}`, value: date.expiryDate }\r\n        })\r\n        updatedExpiryDate = updatedExpiryDate.filter(d => d !== undefined)\r\n        setExpiryDateOption(updatedExpiryDate)\r\n        setExpiryDateSelected(updatedExpiryDate[0])\r\n\r\n    }\r\n    if (ddName === 'inboundDate') {\r\n        setInboundDateSelected(selected)\r\n        let updatedExpiryDate = parameterList.map(date => {\r\n            if (date.supplierName === supplierNameSelected.value && date.inboundDate === selected.value) return { label: date.expiryDate ? `${dateFull({ noTime: true, date: date.expiryDate })} - ${date.poNumber}` : `${date.expiryDate} - ${date.poNumber}`, value: date.expiryDate }\r\n        })\r\n        updatedExpiryDate = updatedExpiryDate.filter(d => d !== undefined)\r\n        setExpiryDateOption(updatedExpiryDate)\r\n        setExpiryDateSelected(updatedExpiryDate[0])\r\n    }\r\n\r\n    if (ddName === 'expiryDate') {\r\n        setExpiryDateSelected(selected)\r\n    }\r\n}\r\n\r\nexport const deleteRow = ({ idx, itemList, setItemList, setTotalQty }) => {\r\n    const newItem = itemList.filter((item, i) => i !== idx)\r\n    let qty = 0\r\n    newItem.map(item => qty += item.qty)\r\n    setTotalQty(qty)\r\n    setItemList(newItem)\r\n}\r\n\r\nexport const updateInitialWeight = ({ moduleEntry, supplierNameSelected, inboundDateSelected, expiryDateSelected, skuNumber, setItemList, setTotalQty }) => {\r\n    let list = []\r\n    list = moduleEntry?.jobPost?.list.filter(sku => sku.skuNumber === skuNumber)\r\n    list = list[0].poList.map(po => {\r\n        let item = po.itemList.map(item => {\r\n            item.qty = po.initialWeight\r\n            return item\r\n        })\r\n        po.itemList = item\r\n        return po\r\n    })\r\n\r\n    list = list.filter(po => po.supplierName === supplierNameSelected.value && po.inboundDate === inboundDateSelected.value && po.expiryDate === expiryDateSelected.value)\r\n    if (list.length) {\r\n        setItemList(list[0].itemList)\r\n        setTotalQty(list[0].itemList.qty)\r\n    }\r\n\r\n}","import { isFloat } from \"services\"\r\n\r\nexport const stockMovementValidation = ({ itemList, jobPost, moduleName, areaMovement }) => {\r\n    if (jobPost) {\r\n        let moduleIsEmpty = []\r\n        let moduleCheckItemList = []\r\n        let moduleTotalQty = 0\r\n        let areaDestinationName = jobPost?.jobPost?.areaDestinationName\r\n        let totalWeight = jobPost.jobPost.list[0].totalQty\r\n        let category = jobPost.jobPost.list[0].poList[0].category\r\n        totalWeight = isFloat(totalWeight)\r\n        moduleCheckItemList = itemList?.map(item => {\r\n            switch (moduleName) {\r\n                case 'stockMovement':\r\n                    if (!item.grade?.value && areaDestinationName === 'Waste') {\r\n                        item.gradeIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    if (item.ripeness?.value === 'waste' && !item.note) {\r\n                        item.noteIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    if (item.grade?.value === 'waste' && !item.reason?.value) {\r\n                        item.reasonIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    if (item.grade?.value === 'waste' && !item.note) {\r\n                        item.noteIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    if (!item.qty) {\r\n                        item.qtyIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    else {\r\n                        item.qtyIsEmpty = false\r\n                        moduleIsEmpty.push(false)\r\n                        moduleTotalQty = moduleTotalQty + isFloat(item.qty)\r\n                    }\r\n                    if (areaMovement?.value === 8 && !item?.grade?.value) {\r\n                        item.gradeIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    if (areaMovement?.value === 8 && item?.grade?.value === 'waste' && !item?.note) {\r\n                        item.noteIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    if (totalWeight < moduleTotalQty) moduleCheckItemList = moduleCheckItemList.map(item => {\r\n                        item.qtyIsEmpty = true\r\n                        return item\r\n                    })\r\n                    break\r\n                case 'stockTake':\r\n                    if (category === 'Fruits') {\r\n                        if ((item.qty == 0 || isNaN(item.qty)) && item.grade?.value === null) {\r\n                            item.qtyIsEmpty = false\r\n                            item.gradeIsEmpty = false\r\n                            item.ripenessIsEmpty = false\r\n                            item.noteIsEmpty = false\r\n                        }\r\n                        else {\r\n                            if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                                isNaN(item.qty) || item.qty === \"\" || item.qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                                !item.grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                                item.grade?.label === 'Waste' && !item.note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                            }\r\n                            else {\r\n                                isNaN(item.qty) || item.qty === \"\" || item.qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                                !item.grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                                !item.ripeness?.value ? item.ripenessIsEmpty = true : item.ripenessIsEmpty = false\r\n                                item.grade?.label === 'Waste' && !item.note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n\r\n                        if ((item.qty == 0 || isNaN(item.qty)) && item.grade?.value === null) {\r\n                            item.qtyIsEmpty = false\r\n                            item.gradeIsEmpty = false\r\n                            item.ripenessIsEmpty = false\r\n                            item.noteIsEmpty = false\r\n                        }\r\n                        else {\r\n                            isNaN(item.qty) || item.qty === \"\" || item.qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !item.grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            item.grade?.label === 'Waste' && !item.note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                    }\r\n                    if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty || item?.qtyToCompareIsEmpty) moduleIsEmpty.push(true)\r\n                    else moduleIsEmpty.push(false)\r\n                    break\r\n                //\r\n                default:\r\n            }\r\n            return item\r\n        })\r\n        return { moduleIsEmpty, moduleCheckItemList, moduleTotalQty }\r\n    }\r\n}","const width = document.documentElement.clientWidth\r\n\r\nconst componentConditionMovement = ({ inputType, item, category, areaMovement, areaDestinationName }) => {\r\n    const isWaste = item.grade?.label === 'Semi Waste' || item.grade?.label === 'Waste' ? null : 'd-none'\r\n    switch (inputType) {\r\n        case 'image':\r\n            return isWaste\r\n        case 'ripeness':\r\n            return areaMovement?.value === 3 ? null : 'd-none'\r\n        case 'grade':\r\n            return areaDestinationName === 'Waste' ? null : 'd-none'\r\n        case 'reason':\r\n            return isWaste\r\n        case 'note':\r\n            return isWaste\r\n        default:\r\n            return 'd-none'\r\n    }\r\n}\r\n\r\nconst componentConditionStockTake = ({ inputType, item, category }) => {\r\n    switch (inputType) {\r\n        case 'grade':\r\n            return true\r\n        case 'note':\r\n            return item?.grade?.label === 'Waste' ? null : 'd-none'\r\n        case 'expiryDate':\r\n            return category === 'Fruits' || category === 'Vegetables' ? 'd-none' : null\r\n        case 'ripeness':\r\n            return item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : (category === 'Fruits' ? null : 'd-none')\r\n        default:\r\n            return 'd-none'\r\n    }\r\n}\r\n\r\nconst componentConditionRepack = ({ inputType, item }) => {\r\n    switch (inputType) {\r\n        case 'grade':\r\n            return true\r\n        case 'expiryDate':\r\n            return 'd-none'\r\n        case 'note':\r\n            return item?.grade?.label === 'Waste' ? null : 'd-none'\r\n        case 'excess':\r\n            return item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : null\r\n        case 'pack':\r\n            return item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : null\r\n        default:\r\n            return 'd-none'\r\n    }\r\n}\r\n\r\nexport const inputController = ({ moduleName, inputType, areaMovement, item, category, areaDestinationName }) => {\r\n    switch (moduleName) {\r\n        case 'stockMovement':\r\n            return componentConditionMovement({ inputType, areaMovement, item, category, areaDestinationName })\r\n        case 'stockTake':\r\n            return componentConditionStockTake({ inputType, item, category })\r\n        case 'repack':\r\n            return componentConditionRepack({ inputType })\r\n        default:\r\n            return 'd-none'\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport './index.scss'\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport { addLine, getSVSource, changeValues, submitValidation, getPoDataByHeader, setOptionValue, filterByDropdown, deleteRow, updateInitialWeight } from './services'\r\nimport { inputController } from './inputController'\r\nimport { CButton, CCol, CModal, CModalBody, CModalHeader, CRow, } from \"@coreui/react\";\r\nimport SkuItem from './SkuItem'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport InputQty from 'Component/Input'\r\nimport InputWeight from 'Component/Input/Decimal'\r\nimport Note from 'Component/Input/Note'\r\nimport { useSelector } from \"react-redux\";\r\nimport { isFloat } from \"services\";\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport InputDatePicker from 'Component/Input/InputDatePicker'\r\nimport Excess from 'Component/Input/Excess'\r\nimport Pack from 'Component/Input/Pack'\r\nimport InputImage from 'Component/Input/InputImage'\r\n\r\nconst SingleView = ({ moduleName, areaMovement, createPo, setCreatePo, moduleEntry, setConfirmation, setSingleViewData, confirmation, setMoveAll, status, fromBarcode }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const [isMobile, setIsMobile] = useState(0)\r\n  useEffect(_ => {\r\n    const width = document.documentElement.clientWidth\r\n    let height = dimention - 400\r\n    height = width <= 500 ? height + 250 : height\r\n    setIsMobile(height)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (status?.code === 500) closeModal()\r\n  }, [status?.code]);\r\n\r\n  const ripenessLevel = useSelector(state => state.ripenessLevel)\r\n  const wasteReasonList = useSelector(state => state.wasteReasonList)\r\n  const areaName = moduleEntry?.jobPost?.areaName\r\n  const areaDestinationName = moduleEntry?.jobPost?.areaDestinationName\r\n  const [supplierNameSelected, setSupplierNameSelected] = useState()\r\n  const [inboundDateSelected, setInboundDateSelected] = useState()\r\n  const [expiryDateSelected, setExpiryDateSelected] = useState()\r\n\r\n  const [itemList, setItemList] = useState([])\r\n\r\n  const title = {\r\n    movement: (\r\n      <span className=\"text mb-2 LatoBold\">\r\n        {areaMovement?.label}\r\n      </span>\r\n    ),\r\n    stockTake: (\r\n      <span className=\"text m-0 LatoBold\">\r\n        {`Weight entry - ${areaName}`}\r\n      </span>\r\n    ),\r\n    default: (\r\n      <p className=\"text mb-2\">\r\n        <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n        <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n        <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n        <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n        <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${areaDestinationName ? areaDestinationName : areaName}?`}</span>\r\n      </p>\r\n    )\r\n  }\r\n\r\n  const { supplierName, inboundDateList, expiryDateList, module, category, uom, gradeList, parameterList } = getSVSource({ moduleEntry, skuNumber: createPo?.skuNumber, supplierNameSelected, inboundDateSelected, expiryDateSelected })\r\n  const [inboundDateOption, setInboundDateOption] = useState([])\r\n  const [expiryDateOption, setExpiryDateOption] = useState([])\r\n\r\n\r\n  const { initialWeight } = getPoDataByHeader({ moduleName, supplierNameSelected, inboundDateSelected, expiryDateSelected, moduleEntry, skuNumber: createPo?.skuNumber, setItemList })\r\n  const [totalQty, setTotalQty] = useState(0)\r\n  const totalWeightUpdate = initialWeight - totalQty\r\n  const isReady = module?.jobPost?.list?.length ? null : 'd-none'\r\n  const isFruits = category === 'Fruits' || category === 'Vegetables' ? 'd-none' : true\r\n  let filteredGradeList = gradeList\r\n  const show = createPo?.show && !confirmation?.show ? true : false\r\n  //ripeness back from staging only movement\r\n  let rip = []\r\n  useEffect(() => {\r\n    if (moduleName === 'stockMovement' && ripenessLevel?.length) {\r\n      const w = ripenessLevel.findIndex(r => r.value === 'waste')\r\n      const sw = ripenessLevel.findIndex(r => r.value === 'semi_waste')\r\n      if (w === -1 && areaMovement?.value === 3) ripenessLevel.push({ label: \"Waste\", value: \"waste\" })\r\n      if (sw === -1 && areaMovement?.value === 3) ripenessLevel.push({ label: \"Semi Waste\", value: \"semi_waste\" })\r\n    }\r\n  }, [areaMovement])\r\n\r\n  if (moduleName === 'stockMovement' && ripenessLevel?.length) {\r\n    if (category !== 'Fruits') rip = ripenessLevel?.filter(r => r?.value === 'waste' || r?.value === 'semi_waste')\r\n    if (category === 'Fruits') rip = ripenessLevel\r\n  }\r\n\r\n  if (moduleName === 'stockMovement' && areaMovement?.value === 8) {\r\n    filteredGradeList = gradeList.filter(grade => grade?.label === 'Waste' || grade.label === 'Semi Waste')\r\n  }\r\n\r\n  // end\r\n\r\n  useEffect(() => {\r\n    setItemList([])\r\n    setTotalQty(0)\r\n    if (module?.jobPost?.list.length) {\r\n      setOptionValue({\r\n        module,\r\n        moduleName,\r\n        setTotalQty,\r\n        setSupplierNameSelected,\r\n        setInboundDateSelected,\r\n        setExpiryDateSelected,\r\n        setInboundDateOption,\r\n        setExpiryDateOption,\r\n        setItemList,\r\n        setMoveAll,\r\n        supplierName,\r\n        inboundDateList,\r\n        expiryDateList,\r\n        parameterList\r\n      })\r\n    }\r\n  }, [createPo?.skuNumber, moduleEntry, createPo?.show])\r\n\r\n  function closeModal() {\r\n    if (typeof (setCreatePo) === 'function') setCreatePo({ show: false, skuNumber: null })\r\n  }\r\n\r\n  function updateFilter(ddName, selected) {\r\n    if (ddName === 'supplierName') filterByDropdown({ module, setItemList, ddName, setSupplierNameSelected, setInboundDateOption, setInboundDateSelected, setExpiryDateOption, setExpiryDateSelected, selected, parameterList, supplierNameSelected, inboundDateSelected, expiryDateSelected, moduleEntry, skuNumber: createPo?.skuNumber })\r\n    if (ddName === 'inboundDate') filterByDropdown({ module, setItemList, ddName, setInboundDateSelected, setExpiryDateOption, setExpiryDateSelected, selected, parameterList, supplierNameSelected, inboundDateSelected, expiryDateSelected, moduleEntry, skuNumber: createPo?.skuNumber })\r\n    if (ddName === 'expiryDate') filterByDropdown({ module, setItemList, ddName, setInboundDateSelected, setExpiryDateOption, setExpiryDateSelected, selected, parameterList, supplierNameSelected, inboundDateSelected, expiryDateSelected, moduleEntry, skuNumber: createPo?.skuNumber })\r\n  }\r\n\r\n  //action condition\r\n  const addLines = moduleName === 'stockTake' ? true : (totalWeightUpdate >= 0 ? true : false)\r\n  const submits = moduleName === 'stockTake' ? true : (itemList.length && totalWeightUpdate >= 0 ? true : false)\r\n\r\n\r\n  useEffect(() => {\r\n    if (moduleEntry?.jobPost?.list?.length && moduleName === 'stockTake') {\r\n      updateInitialWeight({ moduleEntry, supplierNameSelected, inboundDateSelected, expiryDateSelected, skuNumber: createPo.skuNumber, setItemList, setTotalQty })\r\n    }\r\n\r\n  }, [supplierNameSelected, inboundDateSelected, expiryDateSelected]);\r\n  return (\r\n    <CRow onKeyDown={e => e.keyCode === 27 ? closeModal() : false} className={`${show ? null : 'd-none'} single-view`}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          closeOnBackdrop={false}\r\n          className='w-100'\r\n        >\r\n          <CModalHeader className=\"px-3 pt-3  border-none m-0 d-flex align-items-center\">\r\n            {title.stockTake}\r\n            <label onClick={() => typeof (setCreatePo) === 'function' ? setCreatePo({ show: false, skuNumber: null }) : false} className='iconU-modalClose m-0' />\r\n          </CModalHeader>\r\n          <CModalBody className=\"pl-3 pr-1 py-0 w-100 overflow-y border-top pt-4\" style={{ isMobile, maxHeight: isMobile, minHeight: isMobile }}>\r\n            {\r\n              module?.jobPost?.list?.length ? module?.jobPost?.list.map((data, idx) =>\r\n                <SkuItem key={idx}\r\n                  img={data?.photo}\r\n                  skuDescription={data?.skuName}\r\n                  skuNumber={data?.skuNumber}\r\n                  uomLabel=\"weight\"\r\n                  uomValue={data?.totalQty}\r\n                  uom={data?.unitOfMeassures}\r\n                  check={data?.checked} />\r\n              )\r\n\r\n                : <div style={{ isMobile, maxHeight: isMobile, minHeight: isMobile }} className='w-100 d-flex align-items-center justify-content-center'><img className=\"loading\" src={loading} alt=\"loading\" /></div>\r\n            }\r\n\r\n            <div style={{ backgroundColor: '#F9FAFC' }} className={`w-100 p-3 mb-3 ${isReady}`}>\r\n              <Dropdown onChangeDropdown={(selected) => updateFilter('supplierName', selected)} selectedValue={supplierNameSelected} options={supplierName} style={{}} title={'Supplier Name'} showTitle show className />\r\n\r\n              {\r\n                fromBarcode ? <Note isReadOnly={true} grade={true} entryListIdx={0} poListIdx={0} isEmpty={false} grade={'Waste'} inputWidth={`w-100`} values={inboundDateSelected?.label} showTitle={true} title={'Inbound Date'} onChange={(e) => false} /> :\r\n                  <Dropdown onChangeDropdown={(selected) => updateFilter('inboundDate', selected)} selectedValue={inboundDateSelected} options={inboundDateOption} style={{}} title={'Inbound Date'} showTitle show className />\r\n              }\r\n\r\n\r\n              <Dropdown onChangeDropdown={(selected) => updateFilter('expiryDate', selected)} selectedValue={expiryDateSelected} options={expiryDateOption} style={{}} title={'Expiry Date'} showTitle show className={isFruits} />\r\n            </div>\r\n\r\n            <div style={{ backgroundColor: '#F9FAFC' }} className={`w-100 p-3 ${isReady}`}>\r\n              {\r\n                itemList?.map((item, idx) =>\r\n                  <div className='w-100 mb-1 d-flex'>\r\n                    <span className='mr-1 LatoBold'>{`${idx + 1}.`}</span>\r\n                    <span className='w-100'>\r\n                      <div className='w-100 grid-container'>\r\n                        <Dropdown\r\n                          entryListIdx={idx}\r\n                          poListIdx={0}\r\n                          isEmpty={item?.gradeIsEmpty}\r\n                          selectedValue={item?.grade}\r\n                          grade={item.grade?.label}\r\n                          uom={uom}\r\n                          show={true}\r\n                          onChangeDropdown={(selected) => changeValues({ itemList, setItemList, setTotalQty, idx, selected, ddName: 'grade' })}\r\n                          title='Grade'\r\n                          placeholder='Select Grade'\r\n                          options={filteredGradeList}\r\n                          width='w-100'\r\n                          showTitle={true}\r\n                          className={inputController({ moduleName, areaMovement, inputType: 'grade', category, item, areaDestinationName })} />\r\n                        <Pack\r\n                          packThreshold={item.packThreshold}\r\n                          isEmpty={item.packIsEmpty || item.packThresholdIsEmpty}\r\n                          entryListIdx={idx}\r\n                          poListIdx={0}\r\n                          uom={'PACK'}\r\n                          inputWidth={`w-100 ${inputController({ moduleName, inputType: 'pack', category, item })}`}\r\n                          values={item?.pack}\r\n                          showTitle={true}\r\n                          title={'Input Pack'}\r\n                          onChange={(e) => changeValues({ e, idx, itemList, setItemList, setTotalQty, module, moduleName })} />\r\n                        <InputQty\r\n                          singleView={true}\r\n                          useCalculator={moduleName === 'stockTake' ? true : false}\r\n                          entryListIdx={idx}\r\n                          poListIdx={0}\r\n                          isEmpty={item?.qtyIsEmpty}\r\n                          uom={item?.grade?.uom ? item.grade.uom : uom}\r\n                          inputWidth={'w-100'}\r\n                          values={item.qty}\r\n                          onChange={(e, val) => changeValues({ e, val, idx, itemList, setItemList, setTotalQty, module, moduleName })}\r\n                          showTitle={true}\r\n                          title={'Input Quantity'} />\r\n                        <InputWeight\r\n                          singleView={true}\r\n                          useCalculator={moduleName === 'stockTake' ? true : false}\r\n                          poListIdx={0}\r\n                          entryListIdx={idx}\r\n                          isEmpty={item?.qtyIsEmpty}\r\n                          uom={item?.grade?.uom ? item.grade.uom : uom}\r\n                          inputWidth={'w-100'}\r\n                          values={item.qty}\r\n                          onChange={(e, val) => changeValues({ e, val, idx, itemList, setItemList, setTotalQty, module, moduleName })}\r\n                          showTitle={true}\r\n                          title={'Input Weight'} />\r\n                        <Dropdown\r\n                          isEmpty={item?.ripenessIsEmpty}\r\n                          entryListIdx={idx}\r\n                          poListIdx={0}\r\n                          onChangeDropdown={(selected) => changeValues({ moduleName, selected, ddName: 'ripeness', idx, itemList, setItemList })}\r\n                          selectedValue={item?.ripeness}\r\n                          options={rip.length ? rip : ripenessLevel}\r\n                          style={{}}\r\n                          title={'Ripeness'}\r\n                          showTitle={true}\r\n                          show\r\n                          className={`${inputController({ moduleName, item, areaMovement, category, inputType: 'ripeness' })} w-100`} />\r\n                        <Dropdown\r\n                          // isDisabled={entryListIdx === 0 ? true : false}\r\n                          isEmpty={item.reasonIsEmpty}\r\n                          selectedValue={item?.reason}\r\n                          grade={item.grade?.label}\r\n                          poListIdx={0}\r\n                          entryListIdx={idx}\r\n                          uom={uom}\r\n                          show={true}\r\n                          onChangeDropdown={(selected) => changeValues({ itemList, setItemList, idx, selected, ddName: 'reason' })}\r\n                          title='Reason'\r\n                          placeholder='Select Reason'\r\n                          options={wasteReasonList}\r\n                          width='w-100'\r\n                          showTitle={true}\r\n                          className={inputController({ moduleName, areaMovement, inputType: 'reason', category, item })} />\r\n                        <Note\r\n                          grade={true}\r\n                          entryListIdx={idx}\r\n                          poListIdx={0}\r\n                          isEmpty={item.noteIsEmpty}\r\n                          grade={'Waste'}\r\n                          inputWidth={`w-100 ${inputController({ moduleName, inputType: 'note', item, areaMovement })}`}\r\n                          values={item?.note}\r\n                          showTitle={true}\r\n                          title={'Note'}\r\n                          onChange={(e) => changeValues({ e, idx, itemList, setItemList, setTotalQty })} />\r\n                        <InputDatePicker\r\n                          onClick={(date) => changeValues({ itemList, setItemList, idx, selected: date, ddName: 'date' })}\r\n                          poListIdx={0}\r\n                          entryListIdx={idx}\r\n                          inputWidth={`w-100 ${inputController({ moduleName, inputType: 'expiryDate', category, item })}`}\r\n                          text={item?.expiryDateText}\r\n                          values={item?.expiryDate}\r\n                          showTitle={true}\r\n                          title={'Expiry Date'}\r\n                          disabled={true} />\r\n                        <Excess\r\n                          entryListIdx={idx}\r\n                          poListIdx={0}\r\n                          packThreshold={item.packThreshold}\r\n                          isEmpty={item.packThresholdIsEmpty}\r\n                          inputWidth={`w-100 ${inputController({ moduleName, inputType: 'excess', category, item })}`}\r\n                          showTitle={true}\r\n                          title={'Excess'} />\r\n                        <InputImage\r\n                          isEmpty={item.uploadPhotoIsEmpty}\r\n                          uom={'PACK'}\r\n                          inputWidth={`fit-content ${inputController({ moduleName, inputType: 'image', category, item })}`}\r\n                          values={item.uploadPhoto}\r\n                          onChange={(e) => changeValues({ e, idx, itemList, setItemList, setTotalQty })}\r\n                          showTitle={true}\r\n                          title={'Add Photos'} />\r\n                      </div>\r\n                      <div className='d-flex w-100 justify-content-between align-items-center' >\r\n                        <div></div>\r\n                        <div onClick={() => deleteRow({ idx, itemList, setItemList, setTotalQty })}>\r\n                          <img style={{ width: '15px', height: '15px' }} src={Trash} className='cursor-pointer mr-1' />\r\n                          <span className='emptyTextField pointer'>{`Delete row`}</span>\r\n                        </div>\r\n\r\n                      </div>\r\n                    </span>\r\n\r\n                  </div>\r\n                )\r\n              }\r\n              <div onKeyDown={(e) => e.keyCode === 13 ? addLine({ itemList, setItemList, moduleName, module }) : false} tabIndex='0' className={`w-100 sku-item ${addLines ? 'green' : 'red'} LatoBold cursor-pointer`} onClick={() => addLine({ itemList, setItemList, expiryDateSelected, moduleName, module })}>\r\n                <i className={`iconU-entryAdd pr-2`}></i>\r\n                {`Add ${'Weight'} (${isFloat(totalWeightUpdate)} ${true ? 'KG' : ''}${totalWeightUpdate > 1 ? \"s\" : \"\"} left)`}\r\n              </div>\r\n            </div>\r\n          </CModalBody>\r\n          <div className={`px-3 pb-3 ${isReady}`}>\r\n            <CButton onClick={() => submits ? submitValidation({ module, moduleName, setConfirmation, setSingleViewData, itemList, setItemList, supplierNameSelected, inboundDateSelected, expiryDateSelected, areaMovement }) : false} className={`${submits ? 'bg-green text-white' : 'bg-softGreen text'} no-shadow sku-item px-5 mt-3 w-100`}> Submit</CButton>\r\n          </div>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default SingleView","import React, { useEffect } from 'react'\r\nimport SkuItemSingleView from '../SingleViewModal/SkuItem'\r\n\r\nconst SkuItem = ({ showSkuList, totalList, img, skuDescription, skuNumber, uom, uomValue, expiryDate, ripeness, idx, setLocalEntryData, setCreatePo, setShowSkuList, skuList }) => {\r\n\r\n    const setEntry = async ({ skuList, setLocalEntryData, setCreatePo, skuNumber }) => {\r\n        let selectedSku = { ...skuList }\r\n        console.log(selectedSku);\r\n        let list = skuList.jobPost.list.filter(data => data?.skuNumber === skuNumber)\r\n        selectedSku.jobPost.list = list\r\n        await setLocalEntryData(selectedSku)\r\n        await setShowSkuList({ show: false, poNumber: null })\r\n        await setCreatePo({ show: true, skuNumber })\r\n    }\r\n\r\n    useEffect(_ => {\r\n        if (totalList === 1 && showSkuList?.show) setEntry({ skuList, setLocalEntryData, setCreatePo, skuNumber })\r\n    }, [])\r\n\r\n    return (\r\n        <div className='border borderLineGrey rounded mb-3 cursor-pointer' onClick={() => setEntry({ skuList, setLocalEntryData, setCreatePo, skuNumber })}>\r\n            <SkuItemSingleView\r\n                img={img}\r\n                skuDescription={skuDescription}\r\n                skuNumber={skuNumber}\r\n                uomLabel='weight'\r\n                uomValue={uomValue}\r\n                uom={uom}\r\n                idx={idx} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkuItem","import React, { useState, useEffect } from \"react\";\r\nimport { getPoByPoCode } from 'apiServices'\r\nimport '../SingleViewModal/index.scss'\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport SkuItemCard from './SkuItem'\r\nimport { CButton, CCol, CModal, CModalBody, CModalHeader, CRow, } from \"@coreui/react\";\r\nconst ItemListModal = ({ areaId, areaDestination, warehouseUuid, showSkuList, setShowSkuList, setLocalEntryData, setCreatePo, localEntryData, thereAreRequest, setShowScanner, moduleName }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    let height = dimention - 400\r\n    const [isMobile, setIsMobile] = useState(0)\r\n    useEffect(_ => {\r\n        const width = document.documentElement.clientWidth\r\n\r\n        height = width <= 500 ? height + 250 : height\r\n        setIsMobile(height)\r\n    }, [])\r\n\r\n\r\n    // sku list\r\n    const [skuList, setSkuList] = useState([])\r\n    useEffect(_ => {\r\n\r\n        if (showSkuList?.poNumber) getPoByPoCode({ areaId, warehouseUuid, poNumber: showSkuList?.poNumber, setSkuList, setLocalEntryData, moduleName, areaDestination })\r\n    }, [showSkuList?.poNumber])\r\n\r\n    const thereIsData = localEntryData?.jobPost?.list?.length\r\n    return (\r\n        <CRow className={`${showSkuList?.show ? null : 'd-none'} single-view`}>\r\n            <CCol>\r\n                <CModal\r\n                    show={showSkuList?.show}\r\n                    closeOnBackdrop={false}\r\n                    className='w-100 bg-black'\r\n                >\r\n                    <CModalHeader className=\"px-3 pt-3  border-none LatoBold text\">\r\n                        Selected SKU\r\n                        <label onClick={() => setShowSkuList({ show: false, poNumber: null })} className='iconU-modalClose' />\r\n                    </CModalHeader>\r\n                    <CModalBody className=\"pl-3 pr-1 py-0 w-100 overflow-y\" style={{ isMobile, maxHeight: isMobile, minHeight: isMobile }}>\r\n                        {\r\n                            thereAreRequest ?\r\n                                <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: isMobile }}>\r\n                                    <img className=\"loading\" src={loading} alt=\"loading\" />\r\n                                </div> :\r\n                                (\r\n                                    !thereIsData ? <div\r\n                                        className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\"\r\n                                        style={{ minHeight: isMobile }}>\r\n                                        There is no data\r\n                                        <div>\r\n                                            <CButton onClick={() => {\r\n                                                setShowScanner(true)\r\n                                                setShowSkuList({ show: false, poNumber: null })\r\n                                            }} className={`${showSkuList?.show ? 'bg-green text-white' : 'bg-softGreen text'} no-shadow sku-item px-5 mt-3 w-100`}>\r\n                                                Scan another QR Code\r\n                                            </CButton>\r\n                                        </div>\r\n\r\n                                    </div> :\r\n                                        localEntryData?.jobPost?.list?.map((data, idx) => <SkuItemCard showSkuList={showSkuList} totalList={localEntryData?.jobPost?.list?.length} skuList={localEntryData} setShowSkuList={setShowSkuList} setLocalEntryData={setLocalEntryData} setCreatePo={setCreatePo} img={data?.photo} skuDescription={data?.skuName} skuNumber={data?.skuNumber} uom={data?.unitOfMeassures} uomValue={data?.totalQty} expiryDate={data?.inboundDate} idx={idx} />))\r\n                        }\r\n                    </CModalBody>\r\n                    {/* <div className={`px-3 pb-3 ${showSkuList?.show}`}>\r\n                        <CButton className={`${showSkuList?.show ? 'bg-green text-white' : 'bg-softGreen text'} no-shadow sku-item px-5 mt-3 w-100`}> Submit</CButton>\r\n                    </div> */}\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default ItemListModal","import React, { useState } from \"react\";\r\nimport {\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport QrReader from 'react-qr-reader'\r\n\r\nconst submit = ({ setShowSkuList, setShowScanner, poNumber }) => {\r\n  setShowSkuList({ show: true, poNumber: poNumber })\r\n  setShowScanner(false)\r\n}\r\n\r\nconst Scanner = ({ showScanner, setShowScanner, setSearch, setShowSkuList, search, setLocalEntryData }) => {\r\n  const width = document.documentElement.clientWidth\r\n  let previewStyle = {\r\n    height: 'unset',\r\n    width: 500,\r\n  }\r\n\r\n  if (width <= 500) {\r\n    previewStyle.width = 350\r\n  }\r\n  const [poNumber, setPoNumber] = useState(null)\r\n  console.log(poNumber)\r\n  return (\r\n    <CRow tabIndex='0' className={showScanner ? null : 'd-none'} onKeyDown={e => e.keyCode === 13 ? setShowScanner(false) : false}>\r\n      <CCol>\r\n        <CModal\r\n          onClose={() => setShowScanner(false)}\r\n          show={showScanner}\r\n          closeOnBackdrop={true}\r\n        >\r\n          <CModalBody style={{ height: 'fit-content', width: previewStyle.width }} className=\"w-100 p-0 d-flex justify-content-center\">\r\n            <QrReader\r\n              facingMode=\"environment\"\r\n              className={'rounded frame'}\r\n              delay={0}\r\n              style={previewStyle}\r\n              onError={(e) => console.log(e)}\r\n              onScan={async data => {\r\n                if (data && showScanner) {\r\n                  if (typeof (setLocalEntryData) === 'function') await setLocalEntryData();\r\n                  await setSearch('barcode')\r\n                  await setPoNumber(data)\r\n                  await submit({ setShowSkuList, setShowScanner, poNumber: data })\r\n                }\r\n              }}\r\n            />\r\n          </CModalBody>\r\n          {/* <CModalFooter className=\"px-5 border-none bg-green d-flex justify-content-between\">\r\n            <div onClick={() => setShowScanner(false)} className='LatoBold text-white pointer'>Cancel</div>\r\n            <div className='LatoBold text-white'>{search}</div>\r\n            <div onClick={() => submit({ setShowSkuList, setShowScanner, poNumber })} className='LatoBold text-white pointer'>Submit</div>\r\n          </CModalFooter> */}\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default Scanner\r\n"],"sourceRoot":""}