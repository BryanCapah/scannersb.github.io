{"version":3,"sources":["Page/StockEntry/AdditionalOutbound/index.jsx","Component/Dropdown/index.jsx","Component/Modal/PopUpDiscard/index.jsx","Page/StockEntry/AdditionalOutbound/services.js"],"names":["withRouter","props","dispatch","useDispatch","story","useHistory","useDimension","height","emptyItem","useAdditionalOutbound","moduleName","thereAreRequest","moduleFirstLoad","warehouseUuid","status","isLoading","outboundEntryData","outboundAddSku","summary","setSummary","localEntryData","setLocalEntryData","next","setNext","area","areaId","setAreaId","search","setSearch","discard","setDiscard","isCheckedTotal","jobPost","list","length","history","push","useState","category","setCategory","sortBy","setSortBy","isPlural","noLength","isReady","className","module","moduleEntry","close","discardEntry","id","removeEntryModule","addSku","redirect","previousPage","goBack","show","title","placeholder","options","onChangeDropdown","selected","selectedValue","showTitle","filter","searchHandler","desc","getStockTakeSummary","setModule","transaction","style","minHeight","maxHeight","sort","a","b","filterBySkuName","value","map","data","idx","key","img","photo","skuDescription","skuName","skuNumber","uomLabel","uomValue","totalQty","uom","unitOfMeassures","isCheckedHandler","checked","selectSku","moduleSummary","check","responseCheck","label","src","loading","alt","tabIndex","onClick","type","CREATE_JOB_SHEET","Dropdown","isEmpty","width","entryListIdx","poListIdx","isDisabled","noMarginBottom","resetName","isMulti","hideResetOpt","zInfinity","isOpen","setIsOpen","useEffect","isEmptyStyle","styles","border","elem","document","getElementById","position","getBoundingClientRect","dimention","documentElement","clientWidth","defaultvalue","val","menuPlacement","bottom","inputId","isSearchable","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","onChange","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","color","cursor","fontWeight","theme","borderRadius","PopUpDiscard","onKeyDown","e","keyCode","onClose","size","closeOnBackdrop","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","skuUuid","jsD","sI","includes","getOutboundType","outboundType","getPoBySkuId","skuId","addPoItem","poList","itemList","expiryMs","expiryDate","moment","valueOf","inBoundyMs","inboundDate","initialWeight","Number","isInteger","parseInt","parseFloat","toLowerCase","totalPack","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","areaSource","areaName","areaDestination","preAddSku","preAddHandler","isFloat","isNewItem","submitValidation","setActiveSKU","setConfirmation","setIsRequired","isClear","js","jsR","po","qtyCount","totalListItemWeightCount","moduleList","item","qty","pack","isNaN","qtyIsEmpty","codeOutbound","outboundTypeIsEmpty","note","undefined","noteIsEmpty","packIsEmpty","console","log","valid","name","checkIsSkuRequired"],"mappings":"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","file":"static/js/68.644aaff2.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport Dropdown from \"Component/Dropdown\";\r\nimport Search from \"Component/Search\";\r\nimport { getStockTakeSummary,removeEntryModule } from \"apiServices\";\r\nimport SKUItem from \"Component/SKUItem\";\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport \"./index.scss\";\r\nimport {selectSku} from './services'\r\nimport { filterBySkuName, responseCheck } from \"Page/StockEntry/GeneralServices/moduleServices\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport PopUpUnfinished from 'Component/Modal/PopUpUnfinished'\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport { useAdditionalOutbound, useDimension } from \"../GeneralServices\";\r\n\r\nconst AdditionalOutbound = (props) => {\r\n  const dispatch = useDispatch();\r\n  const story = useHistory()\r\n  const {height,emptyItem} = useDimension(400)\r\n\r\n  const {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    outboundEntryData,\r\n    outboundAddSku,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    next,\r\n    setNext,\r\n    area,\r\n    areaId,\r\n    setAreaId,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal\r\n  } = useAdditionalOutbound({dispatch})\r\n  if (outboundAddSku === false && outboundEntryData?.jobPost.list.length > 0 && next) props.history.push(\"/inventory-entry/additional-outbound/weight-entry\")\r\n\r\n   //search\r\n   const [category, setCategory] = useState()\r\n   const [sortBy, setSortBy] = useState()\r\n\r\n  // Condition\r\n  const isPlural = isCheckedTotal > 1 ? \"s\" : \"\"\r\n  const noLength = summary?.length ? \"flex-column\" : \"flex-row\"\r\n  const isReady = thereAreRequest === 0 && (localEntryData && localEntryData?.jobPost?.list?.length > 0)\r\n  \r\n  return (\r\n    <div className=\"w-100  stock-take-summary\">\r\n      <Discard\r\n          discard={discard}\r\n          module={'Inventory Entry - Additional Outbound'}\r\n          moduleEntry={outboundEntryData}\r\n          close={() => setDiscard(false)}\r\n          discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch,setDiscard })}\r\n      />\r\n      <PopUpUnfinished\r\n        discard={discard}\r\n        addSku={outboundAddSku}\r\n        moduleFirstLoad={moduleFirstLoad}\r\n        moduleEntry={outboundEntryData}\r\n        redirect={() => props.history.push(\"/inventory-entry/additional-outbound/weight-entry\")}\r\n        previousPage={() => story.goBack()}\r\n        setDiscard={() => setDiscard(true)}\r\n      />\r\n      <PopUp status={status} />\r\n      <div className=\"px-3 pt-3 bg-white border-all radius-all d-md-flex dd-group\">\r\n        <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n          <Dropdown\r\n            show={true}\r\n            title=\"Select Area\"\r\n            placeholder='Select Area'\r\n            options={area}\r\n            onChangeDropdown={(selected) => setAreaId(selected)}\r\n            selectedValue={areaId}\r\n            showTitle={true}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white mt-3 border-all radius-all mb-3\">\r\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n          <div className=\"text LatoBold d-flex justify-content-between align-items-center sku-des\">\r\n            <div>\r\n              Enter SKU or Description{\" \"}\r\n              <span className=\"green\">{`(${isCheckedTotal} Selected SKU${isPlural})`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Search\r\n          setSortBy={setSortBy}\r\n          category={category} \r\n          setCategory={setCategory}\r\n          placeholder={\"Enter SKU\"}\r\n          filter={false}\r\n          searchHandler={(desc) =>\r\n            areaId ? getStockTakeSummary({category, dispatch, desc, warehouseUuid, areaId, setModule: setSummary, transaction: 'additionalOutbound', module:localEntryData }, setSearch(desc)) : setAreaId('empty' )\r\n          }\r\n        />\r\n        <div\r\n          className={`mb-3 mt-3 d-flex align-items-center scroll-sku ${noLength} w-100 text-center`} style={{ minHeight: height , maxHeight: height}}>\r\n          {summary?.length ? (\r\n            summary?.sort( function(a,b){ return filterBySkuName(a,b,sortBy?.value)})?.map((data, idx) => {\r\n              return (\r\n                <SKUItem\r\n                  key={idx}\r\n                  img={data?.photo}\r\n                  skuDescription={data?.skuName}\r\n                  skuNumber={data?.skuNumber}\r\n                  uomLabel=\"weight\"\r\n                  uomValue={data?.totalQty}\r\n                  uom={data?.unitOfMeassures}\r\n                  isCheckedHandler={(checked) =>\r\n                    selectSku({\r\n                      idx,\r\n                      checked,\r\n                      dispatch,\r\n                      setLocalEntryData,\r\n                      moduleSummary: summary,\r\n                      moduleEntry: localEntryData,\r\n                      moduleName,\r\n                      warehouseUuid,\r\n                      areaId,\r\n                    })\r\n                  }\r\n                  check={data?.checked}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n              <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem,maxHeight: emptyItem}}>\r\n                {!responseCheck({ isLoading, summary }) ? (\r\n                  <img className=\"loading\" src={loading} alt=\"loading\" />\r\n                ) : areaId && area && summary?.length === 0 ? (\r\n                  <div>\r\n                    Sorry, we couldn't find any matches\r\n                    for '<span className='LatoBold'>{search}</span>' in {areaId && areaId?.label} area.\r\n                    <br/>\r\n                    Please Try search with another term.\r\n                  </div>\r\n                ) : 'Enter SKU'}\r\n              </div>\r\n            )}\r\n        </div>\r\n      </div>\r\n      <div className=\"h-screen-summary-footer d-flex flex-column justify-content-start\">\r\n        <div className=\"w-100 d-flex align-items-center justify-content-between mb-1\">\r\n          <button\r\n            tabIndex='0'\r\n            onClick={() => props.history.push(\"/inventory-entry/additional-outbound/CSV-upload\")}\r\n            type=\"button\"\r\n            className=\"btn sku-item px-4 no-shadow border-all bg-white fontSizeButton\"\r\n          >\r\n            Upload File\r\n          </button>\r\n          <button\r\n            tabIndex='0'\r\n            onClick={() => {\r\n              if (isReady) {\r\n                setNext(true)\r\n                dispatch({ type: CREATE_JOB_SHEET, outboundEntryData: localEntryData })\r\n                props.history.push(\"/inventory-entry/additional-outbound/weight-entry\")\r\n              }\r\n            }\r\n            }\r\n            type=\"button\"\r\n            className={`btn sku-item px-5 fontSizeButton no-shadow text-white ${isReady ? \"bg-green\" : \"bg-lineGrey\"\r\n              }`}\r\n          >\r\n            {(!localEntryData || localEntryData?.jobPost?.list?.length === 0) && thereAreRequest === 0 ? 'Next' :isReady ? 'Next' : 'Processing...'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(AdditionalOutbound);\r\n","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom,\r\n    resetName,\r\n    isMulti,\r\n    hideResetOpt,\r\n    zInfinity\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? (styles) => {\r\n        return {\r\n            ...styles,\r\n            border: 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{ label: `-${resetName ? resetName : title}-`, value: null }]\r\n    if (options) defaultvalue = [...defaultvalue, ...options]\r\n    if (hideResetOpt) defaultvalue = defaultvalue.filter(val => val?.value)\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if (dimention <= 500) {\r\n        menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n        if (title === 'Categories') menuPlacement = 'top'\r\n    }\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                inputId={`${title}_${poListIdx}_${entryListIdx}`}\r\n                isMulti={isMulti}\r\n                isSearchable={dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : (selectedValue?.length ? selectedValue : false)}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={resetName ? resetName : placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={150}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: zInfinity ? 9999999999999999 : 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#969696',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    return (\r\n        <CRow onKeyDown={e => e.keyCode === 27 ? close() : false} className={discard ? null : 'd-none'}>\r\n            <CCol onKeyDown={e => e.keyCode === 27 ? close() : false}>\r\n                <CModal\r\n                    onClose={() => close()}\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                            from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-4 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { getPoBySkuId, removeEntryModule } from 'apiServices'\r\nimport { getOutboundType } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { checkIsSkuRequired, filterBySkuName, totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const outboundType = await getOutboundType({})\r\n            list['outboundTypeList'] = outboundType\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    if (areaId?.label?.toLowerCase() !== 'staging') poList.totalPack = null\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaId?.value),\r\n            list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    setLocalEntryData(jobSheet)\r\n    // dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const outboundType = await getOutboundType({})\r\n            list['outboundTypeList'] = outboundType\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    if (areaId?.label?.toLowerCase() !== 'staging') poList.totalPack = null\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                list.isNewItem = true\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//remove sku\r\nexport const removeSku = async ({ dispatch, moduleEntry, moduleName }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n    const list = moduleEntry.jobPost.list.filter(data => { if (data.checked) return data })\r\n    jobSheet.jobPost.list = list\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n    if (list.length === 0) removeEntryModule({ id: jobSheet.jobPost.id, moduleName, dispatch })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            const { totalPack } = po\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            po.itemList.map(item => {\r\n                const { qty, pack } = item\r\n                isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                !item?.codeOutbound?.value ? item.outboundTypeIsEmpty = true : item.outboundTypeIsEmpty = false\r\n\r\n                //outbound type lainnya tidak boleh kosong\r\n                if (item?.codeOutbound?.value == 'lainnya') {\r\n                    item?.note == '' || item?.note === undefined ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                } else {\r\n                    item.noteIsEmpty = false\r\n                }\r\n                if (js.jobPost.areaName?.toLowerCase() === 'staging' && (data?.category === 'Fruits' || data?.category === 'Vegetables' ? true : false)) {\r\n                    if (!pack && totalPack > 0) item.packIsEmpty = true\r\n                }\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n                // if(!item.qtyIsEmpty) po.initialWeightOver > po.initialWeight ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                if (item?.qtyIsEmpty || item?.outboundTypeIsEmpty || item?.noteIsEmpty || item?.packIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n    console.log(isClear);\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}"],"sourceRoot":""}