{"version":3,"sources":["Page/StockEntry/Repacking/WeightEntry/SelectedSKUList/SelectedSKU/index.jsx","Page/StockEntry/Repacking/WeightEntry/SelectedSKUList/index.jsx","Page/StockEntry/Repacking/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry/index.jsx","Page/StockEntry/Repacking/WeightEntry/services.js","Page/StockEntry/Repacking/WeightEntry/WeightEntryList/WeightEntryCard/index.jsx","Page/StockEntry/Repacking/WeightEntry/WeightEntryList/index.jsx","Page/StockEntry/Repacking/WeightEntry/index.jsx","Component/Input/index.jsx","Component/Input/Note.jsx","assets/icons/refreshIcon.svg","Component/CustomTable/index.jsx","Component/Input/Excess.jsx","Component/Input/Pack.jsx"],"names":["SelectedSKU","isNewItem","img","skuDescription","skuNumber","activeSku","uomValue","idx","uom","onClick","data","edited","getEditedData","isEmpty","checkisEmpty","className","onKeyDown","e","onEnter","src","alt","toUpperCase","SelectedSKUList","hideSKUList","setActiveSKU","moduleEntry","moduleName","setUpdateEntry","selectedSku","jobPost","list","length","dimention","document","documentElement","clientWidth","height","clientHeight","useState","hideContent","setHideContent","dispatch","useDispatch","thereAreRequest","useSelector","state","style","padding","content","placement","Reload","updateEntries","tabIndex","to","maxHeight","map","skuName","uomLabel","unitOfMeassures","totalQty","photo","WeightEntry","entryListIdx","wmsPoSkuInfoId","gradeList","ripeness","inputWidth","showTitle","item","onChange","onChangeDropdown","poListIdx","targetRepacks","category","showSlot","slotList","ripenessLevel","wasteSemiWaste","grade","label","targetRepackList","t","Number","parseInt","slot","unitOfMeasuress","filter","s","includes","value","toLowerCase","keyCode","Dropdown","show","gradeIsEmpty","ddType","selectedValue","selected","name","title","placeholder","options","width","packThreshold","packIsEmpty","packThresholdIsEmpty","values","pack","Input","qtyIsEmpty","qty","Note","noteIsEmpty","note","Excess","hidePercent","addRow","activeTab","js","skuUuid","itemList","poList","lastSelected","gradeSelected","push","type","CREATE_JOB_SHEET","console","log","traceEmptyRow","a","setActiveTab","id","setTimeout","el","getElementById","focus","WeightEntryCard","poItem","initialWeight","inboundQty","initialWeightUpdate","initialWeightScreenUpdate","codeGrade","isHidden","initialWeightTotal","isNaN","uomType","areaName","useEffect","variant","isActive","active","target","clear","test","newValue","arr","split","number","commaNumber","undefined","sliceNumber","slice","qtyToCompare","qtyToCompareIsEmpty","description","originalUom","packSize","ratio","grd","multiplier","standardWeight","inputWeight","isFloat","minus","over","totalListItemWeightCount","moduleList","initialWeightOver","updateJSWeightLine","slotIsEmpty","updateJSWeightLineDropdown","Trash","deleteRow","countQty","WeightEntryList","setHideSKUList","updateEntry","useRepackingEntry","isLoading","invalidThreshold","setInvalidThreshold","setIsSuccess","confirmation","setConfirmation","discard","setDiscard","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","totalWeight","postInfo","totalPack","status","useTargetRepack","showTargetRepack","table","setSlot","totalEmptyThreshold","useEntryDimention","heightAdj","loading","isMobile","isPlural","isPluralPack","isEdited","showTarget","targetRepackHeight","slotListFilter","hideResetOpt","paddingLeft","module","close","discardEntry","removeEntryModule","PopUpSaved","submit","totalSku","PopUpRequired","isSuccess","save","saveJobSheet","submitValidation","minHeight","overflow","dateFull","date","Date","noTime","addDay","withDay","classNamePrefix","isMulti","resetName","marginRight","noMarginBottom","CustomTable","editColumn","styles","color","textAlign","display","columns","repackEntryData","_","getPoRepack","maxLength","autoComplete","isReadOnly","readOnly","exports","ReactTableFixedColumns","withFixedColumns","ReactTable","props","getColumnWidth","rows","accessor","headerText","Math","max","row","toString","headerIcon","header","listHeader","h","index","obj","Header","Cell","sortable","resizable","headerClassName","showModal","editColumnTemp","this","tableStatus","Fragment","showPagination","noDataText","minRows","getTdProps","rowInfo","column","instance","handleOriginal","original","cursor","defaultPageSize","React","Component","Pack","fontWeight"],"mappings":"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","file":"static/js/32.2da10112.chunk.js","sourcesContent":["import React from 'react'\r\nimport { getEditedData, checkisEmpty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { onEnter } from 'services'\r\nconst SelectedSKU = ({\r\n    isNewItem,\r\n    img,\r\n    skuDescription,\r\n    skuNumber,\r\n    activeSku,\r\n    uomValue,\r\n    idx,\r\n    uom,\r\n    onClick,\r\n    data\r\n}) => {\r\n    const edited = getEditedData({ data })\r\n    const isEmpty = checkisEmpty(data)\r\n    return (\r\n        <div className={`w-100 sku-item softGreen pl-2 pr-2 pt-2 mb-3 cursor-pointer rounded ${edited ? 'soft-green' : null} ${activeSku === idx ? 'border-green' : (isEmpty ? 'border-red' : 'border')}`}>\r\n            <div className=\" w-100 d-flex justify-content-end\">\r\n                <div className={isNewItem ? 'green-dot' : 'dot'} />\r\n            </div>\r\n            <div onKeyDown={e => onEnter({ e, idx, onClick })} onClick={() => onClick()} className={`w-100 softGreen d-flex justify-content-between pl-2 pr-2 mb-3 cursor-pointer ${edited ? 'soft-green' : null}`}>\r\n                <div className='d-flex align-items-center w-100'>\r\n                    <div className='d-flex align-items-center'>\r\n                        <img src={img} alt='sku image' className='w-5 mr-3 border softGreen rounded' />\r\n                    </div>\r\n                    <div className=\"w-100\">\r\n                        <div className='mr-3 w-100 d-flex'>\r\n                            <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-between'>\r\n                            <div className='text'>{skuNumber}</div>{activeSku}\r\n                            <div className='green LatoBold'>{uomValue} <span>{`${uom ? uom.toUpperCase() : ''}${uomValue > 1 ? 's' : ''}`}</span></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKU","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './index.scss'\r\nimport SelectedSKU from 'Page/StockEntry/Repacking/WeightEntry/SelectedSKUList/SelectedSKU'\r\nimport Reload from 'assets/icons/refreshIcon.svg'\r\nimport { updateEntries } from 'apiServices'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CButton, CTooltip } from '@coreui/react'\r\nconst SelectedSKUList = ({\r\n    hideSKUList,\r\n    setActiveSKU,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    setUpdateEntry,\r\n}) => {\r\n    const selectedSku = moduleEntry.jobPost.list.length\r\n    const dimention = document.documentElement.clientWidth\r\n    let height = document.documentElement.clientHeight\r\n    height = height - 212\r\n    const [hideContent, setHideContent] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const thereAreRequest = useSelector(state => state.thereAreRequest)\r\n    // const { sorted } = useIsNewItem({ setActiveSKU, moduleEntry, selectedSku })\r\n    return (\r\n        <div className={`${hideSKUList ? 'w-0' : 'w-30'}  mt-md-0 rounded-bottom rounded-top`}>\r\n            <div style={{ padding: 10 }} className='w-100 bg-white border-top border-left border-right rounded-top border-soft-green text d-flex align-items-center justify-content-between' onClick={() => dimention <= 500 ? setHideContent(!hideContent) : null}>\r\n                <div className=\"LatoBold\"> Selected SKU <span className='font-green'>{`(${selectedSku} SKU${selectedSku > 1 ? 's' : ''})`}</span></div>\r\n                <div className='d-flex align-items-center justify-content-between'>\r\n                    <CTooltip content={`Click to refresh the stock`} placement={dimention <= 500 ? 'left' : 'right'}>\r\n                        <div>\r\n                            <img className={`${thereAreRequest > 0 ? 'fa-spin-hover' : false} mt-1 pointer`} src={Reload} onClick={() => updateEntries({ moduleEntry, moduleName, dispatch, setUpdateEntry })} />\r\n                        </div>\r\n                    </CTooltip>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/repacking/weight-entry/remove-sku'>\r\n                        <div className=\"fontSizeTitle px-3 emptyTextField iconU-remove\" />\r\n                    </Link>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/repacking/weight-entry/add-sku'>\r\n                        <div className='fontSizeTitle emptyTextField text-bold iconU-entryAdd' ></div>\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n            <div style={{ height: dimention <= 500 ? false : height, maxHeight: height }} className={` overflow-y w-100 bg-white mr-0 border rounded-bottom border-soft-green pl-3 pr-0 pt-3 ${hideContent ? 'd-none' : null}`}>\r\n                {\r\n                    moduleEntry?.jobPost?.list?.map((data, idx) =>\r\n                        <SelectedSKU\r\n                            isNewItem={data?.isNewItem}\r\n                            data={data}\r\n                            idx={idx}\r\n                            activeSku={activeSku}\r\n                            skuDescription={data?.skuName}\r\n                            skuNumber={data?.skuNumber}\r\n                            uomLabel={data?.unitOfMeassures}\r\n                            uomValue={data?.totalQty}\r\n                            uom={data?.unitOfMeassures}\r\n                            img={data?.photo}\r\n                            onClick={() => setActiveSKU(idx)}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKUList","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Dropdown from 'Component/Dropdown/index'\r\nimport Decimal from 'Component/Input/decimal'\r\nimport Inputs from 'Component/Input'\r\nimport Input from 'Component/Input/Pack'\r\nimport Note from 'Component/Input/Note'\r\nimport Excess from 'Component/Input/Excess'\r\n\r\n\r\nconst WeightEntry = ({\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    gradeList,\r\n    ripeness,\r\n    inputWidth,\r\n    showTitle,\r\n    item,\r\n    onChange,\r\n    onChangeDropdown,\r\n    uom,\r\n    poListIdx,\r\n    category,\r\n    showSlot,\r\n    targetRepacks,\r\n    onEnter\r\n}) => {\r\n    const ripenessLevel = useSelector(state => state.ripenessLevel)\r\n    const slotList = useSelector(state => state.slotList)\r\n    const wasteSemiWaste = item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? true : false\r\n\r\n    const targetRepackList = targetRepacks?.map(t => Number.parseInt(t.slot))\r\n    const filteredSlotList = slotList?.filter(s => targetRepackList?.includes(Number.parseInt(s.value)))\r\n\r\n    const unitOfMeasuress = item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? uom : (item?.grade?.uom?.toLowerCase() === 'gram' ? 'kg' : item?.grade?.uom)\r\n    return (\r\n        <div className='d-flex w-100 we-m' onKeyDown={e => e.keyCode === 13 ? onEnter() : false}>\r\n            {/* <Dropdown\r\n                show={showSlot}\r\n                isEmpty={item.slotIsEmpty}\r\n                poListIdx={poListIdx}\r\n                selectedValue={item?.slot}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'slot' })}\r\n                title='Slot'\r\n                placeholder='Select Slot'\r\n                options={filteredSlotList}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : null} /> */}\r\n            <Dropdown\r\n                show={true}\r\n                isEmpty={item.gradeIsEmpty}\r\n                ddType={'grade'}\r\n                poListIdx={poListIdx}\r\n                selectedValue={item?.grade}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'grade' })}\r\n                title='Grade'\r\n                placeholder='Select Grade'\r\n                options={gradeList}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={null} />\r\n            <Input\r\n                packThreshold={item.packThreshold}\r\n                className={wasteSemiWaste ? 'd-none' : null}\r\n                isEmpty={item.packIsEmpty || item.packThresholdIsEmpty}\r\n                entryListIdx={entryListIdx}\r\n                poListIdx={poListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={'PACK'}\r\n                inputWidth={inputWidth}\r\n                values={item?.pack}\r\n                showTitle={showTitle}\r\n                title={'Input Pack'}\r\n                onChange={(e) => onChange(e)} />\r\n            <Inputs\r\n                isEmpty={item.qtyIsEmpty}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={unitOfMeasuress}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                showTitle={showTitle}\r\n                title={'Input Quantity'}\r\n                onChange={(e) => onChange(e)} />\r\n            <Decimal\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={unitOfMeasuress}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            {/* 30-12-2020 */}\r\n            {/* <Decimal\r\n                toCompare={true}\r\n                isEmpty={item.qtyToCompareIsEmpty}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom !== 'kg' ? null : unitOfMeasuress === 'kg' ? null : 'KG'}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qtyToCompare}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} /> */}\r\n            {/* <Dropdown\r\n                // isDisabled={entryListIdx === 0 ? true : false}\r\n                isEmpty={item.ripenessIsEmpty}\r\n                selectedValue={item?.ripeness}\r\n                grade={item.grade?.label}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={true}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'ripeness' })}\r\n                title='Ripeness'\r\n                placeholder='Select Ripeness'\r\n                options={ripenessLevel}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : (category === 'Fruits' ? null : 'd-none')} /> */}\r\n            <Note\r\n                isEmpty={item.noteIsEmpty}\r\n                grade={item.grade?.label}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                ripeness={ripeness}\r\n                inputWidth={'w-50'}\r\n                values={item?.note}\r\n                showTitle={showTitle}\r\n                title={'Note'}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            <Excess\r\n                hidePercent={true}\r\n                className={wasteSemiWaste ? 'd-none' : null}\r\n                packThreshold={item?.qty / item?.pack}\r\n                isEmpty={false}\r\n                inputWidth={inputWidth}\r\n                showTitle={showTitle}\r\n                title={'Average Pack'} />\r\n\r\n            <Excess\r\n                className={wasteSemiWaste ? 'd-none' : null}\r\n                packThreshold={item.packThreshold}\r\n                isEmpty={item.packThresholdIsEmpty}\r\n                inputWidth={inputWidth}\r\n                showTitle={showTitle}\r\n                title={'Excess'} />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default WeightEntry","import { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { isFloat } from 'services'\r\n\r\nexport const addRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    activeTab\r\n}) => {\r\n    try {\r\n        let js = { ...moduleEntry }\r\n        const grade = js.jobPost.list[activeSku].gradeList?.filter(grade => { return grade?.value === js.jobPost.list[activeSku].skuUuid })\r\n        const itemList = js.jobPost.list[activeSku].poList[poListIdx].itemList\r\n        const lastSelected = itemList[itemList?.length - 1]\r\n        const gradeSelected = lastSelected ? lastSelected.grade : (grade?.length ? grade[0] : {})\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList.push({\r\n            qty: '',\r\n            pack: '',\r\n            grade: gradeSelected,\r\n            slot: activeTab || activeTab === 0 ? { label: `Slot ${Number.parseInt(activeTab)}`, value: Number.parseInt(activeTab) } : null\r\n        })\r\n        dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const updateJSWeightLine = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e\r\n}) => {\r\n    const name = e?.target?.name\r\n    let value = e?.target?.value\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n\r\n    if (name === 'weight' || name === 'weightToCompare') {\r\n        // js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = parseInt(value)\r\n        let regex = /^[0-9\\.\\x0]+$/\r\n        console.clear()\r\n        if ((regex.test(value) === true && value !== \"\")) {\r\n            let newValue = 0;\r\n            let arr = value?.split('.')\r\n            let number = arr[0];\r\n            if (number >= 0) number = parseInt(number)\r\n            let commaNumber = arr[1];\r\n\r\n            if ((commaNumber !== null && commaNumber !== undefined)) {\r\n                if (commaNumber.length > 2) {\r\n                    //jika dibelakang koma ada lebih dari 2 angka\r\n                    var sliceNumber = commaNumber.slice(0, 2);\r\n                    newValue = `${number}.${sliceNumber}`\r\n                } else {\r\n                    newValue = `${number}.${commaNumber}`\r\n                }\r\n            } else {\r\n                newValue = parseInt(number)\r\n            }\r\n\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompareIsEmpty = false\r\n            }\r\n\r\n        }\r\n        else {\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = ''\r\n            }\r\n        }\r\n    }\r\n    else if (name === 'qty') {\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = value ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n    }\r\n\r\n    if (name === 'note') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    if (name === 'pack') {\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].pack = value > 0 ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packIsEmpty = false\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThresholdIsEmpty = false\r\n    }\r\n    let description = js.jobPost.list[activeSku].originalUom\r\n    const { packSize, uom } = js.jobPost.list[activeSku].poList[poListIdx]\r\n    const { qty, grade, pack, note } = js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx]\r\n\r\n    if (grade, packSize, uom) {\r\n        let grd = js.jobPost.list[activeSku].gradeList.filter(grd => grd.value === grade?.value)\r\n        let ratio = grd[0]?.multiplier\r\n        // description = description.split(' ')\r\n        // description = description[description.length-1]\r\n        let standardWeight = description?.toLowerCase() == 'gram' ? packSize / 1000 : packSize\r\n        let inputWeight = qty / pack\r\n        inputWeight = inputWeight - (standardWeight / ratio)\r\n        inputWeight = inputWeight / (standardWeight / ratio)\r\n        inputWeight = inputWeight * 100\r\n        if (inputWeight >= 51 || inputWeight <= -20) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThresholdIsEmpty = true\r\n        }\r\n        else {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThresholdIsEmpty = false\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThreshold = isFloat(inputWeight)\r\n    }\r\n\r\n    const initialWeight = js.jobPost.list[activeSku].poList[poListIdx].inboundQty\r\n    let initialWeightUpdate = initialWeight\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        if (data.qty || data.pack) js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        initialWeightUpdate = initialWeightUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = initialWeightUpdate\r\n        if (initialWeightUpdate < 0) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n            js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = 0\r\n        }\r\n        else {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList.filter(item => { return item.qtyIsEmpty = false })\r\n        }\r\n    })\r\n\r\n    //initial weight from it self\r\n    const initialWeightScreen = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n    let initialWeightScreenUpdate = initialWeightScreen\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        initialWeightScreenUpdate = initialWeightScreenUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = initialWeightScreenUpdate\r\n    })\r\n    //end of initial weight from it self\r\n\r\n    const over = totalListItemWeightCount({ moduleList: js.jobPost.list[activeSku].poList[poListIdx].itemList })\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightOver = over > initialWeight ? over : 0\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLineDropdown = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    selected,\r\n    name\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n    if (name === 'grade') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].pack = ''\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packIsEmpty = ''\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThreshold = 0\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThresholdIsEmpty = false\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].uom = selected?.uom === 'gram' ? 'kg' : selected?.uom\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = null\r\n\r\n    }\r\n    if (name === 'ripeness') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    }\r\n\r\n    if (name === 'slot') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].slot = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    }\r\n\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].gradeIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].slotIsEmpty = false\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const traceEmptyRow = async ({ item, setActiveTab, setActiveSKU }) => {\r\n    const {\r\n        activeSku,\r\n        id,\r\n        slot\r\n    } = item\r\n    await setActiveSKU(activeSku)\r\n    await setActiveTab(slot?.value)\r\n    setTimeout(() => {\r\n        const el = document.getElementById(id)\r\n        if (el) el.focus()\r\n    }, 150);\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabs,\r\n} from '@coreui/react'\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport WeightEntry from \"Page/StockEntry/Repacking/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry\";\r\nimport \"./index.scss\";\r\nimport {\r\n  addRow,\r\n  updateJSWeightLine,\r\n  updateJSWeightLineDropdown\r\n} from \"Page/StockEntry/Repacking/WeightEntry/services\";\r\nimport { deleteRow, countQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { isFloat } from 'services';\r\n\r\nconst WeightEntryCard = ({\r\n  inputWidth,\r\n  activeSku,\r\n  poListIdx,\r\n  poItem,\r\n  moduleEntry,\r\n  moduleName,\r\n  gradeList,\r\n  activeTab,\r\n  setActiveTab\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    initialWeight,\r\n    inboundQty,\r\n    initialWeightUpdate,\r\n    initialWeightScreenUpdate,\r\n    uom,\r\n    edited,\r\n    category,\r\n    codeGrade,\r\n    isHidden,\r\n    targetRepacks\r\n  } = poItem;\r\n  const total = !isNaN(initialWeightUpdate) ? initialWeightUpdate : inboundQty;\r\n  const initialWeightTotal = !isNaN(initialWeightScreenUpdate) ? initialWeightScreenUpdate : initialWeight\r\n  const uomType = uom === \"kg\" || uom === \"gram\" ? \"Weight\" : \"Quantity\";\r\n  const grade = moduleEntry.jobPost.list[activeSku].gradeList?.filter(grade => { return grade?.value === codeGrade })\r\n  const area = moduleEntry.jobPost.areaName\r\n  const skuName = moduleEntry.jobPost.list[activeSku].skuName\r\n\r\n  useEffect(() => {\r\n    if (targetRepacks?.length) {\r\n      setActiveTab(targetRepacks[0]?.slot)\r\n    }\r\n  }, [activeSku])\r\n  const filtered = poItem.itemList?.filter(data => Number.parseInt(data?.slot?.value) === Number.parseInt(activeTab) || !data?.slot)\r\n  return (\r\n    <div className='target-repack'>\r\n      <CTabs>\r\n        <CNav variant=\"tabs\">\r\n          <CNavItem className='d-flex'>\r\n            {targetRepacks?.map(data => {\r\n              if (data.skuName === skuName) return <CNavLink isActive={Number(data?.slot) === Number(activeTab)} active={Number(data?.slot) === Number(activeTab)} onClick={() => setActiveTab(data?.slot)}>{`Slot ${data?.slot}`}</CNavLink>\r\n            })}\r\n          </CNavItem>\r\n        </CNav>\r\n      </CTabs>\r\n      <div\r\n        // onKeyDown={e => e.keyCode === 13 ? addRow({dispatch, moduleEntry,moduleName, activeSku, poListIdx}) : false}\r\n        id={`sku_item_${activeSku}_${poListIdx}`}\r\n        // tabIndex='0'\r\n        className={`${isHidden ? 'd-none' : null} d-flex flex-column sku-item justify-content-between w-100 mb-3 align-items-center border rounded-bottom border-soft-green ${edited ? \"soft-green\" : null\r\n          }`}\r\n      >\r\n        {/* new logic */}\r\n        <div className='w-100'>\r\n          <div className=\"w-100 border-soft-green mt-3 d-flex align-items-start px-3 border-bottom border-soft-green mb-3\">\r\n            <div className=\"w-100 d-flex justify-content-between align-items-center LatoBold cardheader-m\">\r\n              <div className=\"d-flex align-items-center cardheader-m\">\r\n                <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n                  {`Combined PO SKU`}\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center mb-3\">\r\n                {`Initial ${uomType}`}\r\n                <span className=\"ml-2 font-green\">\r\n                  {` ${initialWeight} ${uom?.toUpperCase()}${initialWeight > 1 ? \"s\" : \"\"}`}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"d-flex flex-column justify-content-between w-100 align-items-center px-3\">\r\n            {poItem.itemList?.map((item, entryListIdx) => {\r\n              return (\r\n                <div className={`d-flex w-100 align-items-center justify-content-between ${targetRepacks?.length ? (item?.slot?.value != activeTab ? 'd-none' : null) : null}`}>\r\n                  <div className=\"w-100 d-flex\">\r\n                    <div style={{ width: '10px' }} className={`input-height d-flex align-items-center mb-3 mr-3 pt-4 mt-2 ${targetRepacks?.length ? 'd-none' : null}`}>{`${entryListIdx + 1}.`}</div>\r\n                    <div className=\"w-100\">\r\n                      <WeightEntry\r\n                        poListIdx={poListIdx}\r\n                        onEnter={() => {\r\n                          addRow({\r\n                            dispatch, moduleEntry,\r\n                            moduleName, activeSku, poListIdx, activeTab\r\n                          })\r\n                          setTimeout(() => {\r\n                            const focus = document.getElementById(`pack_${poListIdx}_${entryListIdx + 1}`)\r\n                            if (focus) focus.focus()\r\n                          }, 10);\r\n\r\n                        }}\r\n                        showSlot={targetRepacks?.length ? true : false}\r\n                        targetRepacks={targetRepacks}\r\n                        category={category}\r\n                        entryListIdx={entryListIdx}\r\n                        wmsPoSkuInfoId={item.wmsPoSkuInfoId}\r\n                        showTitle={true}\r\n                        gradeList={gradeList}\r\n                        onChange={(e) =>\r\n                          updateJSWeightLine({\r\n                            dispatch,\r\n                            moduleEntry,\r\n                            moduleName,\r\n                            activeSku,\r\n                            poListIdx,\r\n                            entryListIdx,\r\n                            e,\r\n                          })\r\n                        }\r\n                        onChangeDropdown={({ selected, name }) =>\r\n                          updateJSWeightLineDropdown({\r\n                            dispatch,\r\n                            moduleEntry,\r\n                            moduleName,\r\n                            activeSku,\r\n                            poListIdx,\r\n                            entryListIdx,\r\n                            selected,\r\n                            name,\r\n                          })\r\n                        }\r\n                        uom={uom}\r\n                        inputWidth={inputWidth}\r\n                        item={item}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex w-10 align-items-center justify-content-end input-height mb-0 p-0\">\r\n                    <img\r\n                      src={Trash}\r\n                      alt=\"delete icon\"\r\n                      className=\"w-1 cursor-pointer\"\r\n                      onClick={(e) =>\r\n                        deleteRow({\r\n                          dispatch,\r\n                          moduleEntry,\r\n                          moduleName,\r\n                          activeSku,\r\n                          poListIdx,\r\n                          entryListIdx,\r\n                          e,\r\n                          countQty\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            onKeyDown={e => e.keyCode === 13 ? addRow({ dispatch, moduleEntry, moduleName, activeSku, poListIdx }) : false}\r\n            // className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer ${total === 0 ? 'd-none' : null}`}\r\n            className={`w-100 ${targetRepacks?.length ? 'pl-3' : 'ml-5'} font-green mb-3 LatoBold cursor-pointer `}\r\n            // tabIndex='0'\r\n            onClick={() => addRow({\r\n              dispatch, moduleEntry,\r\n              moduleName, activeSku, poListIdx, activeTab\r\n            })}\r\n          >\r\n            <i className=\"green iconU-entryAdd pr-2\"></i>\r\n            {`Add ${uomType} (${isFloat(initialWeightTotal) ? isFloat(initialWeightTotal) : initialWeightTotal} ${uom ? uom.toUpperCase() : ''}${initialWeightTotal > 1 ? \"s\" : \"\"} left)`}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\nexport default WeightEntryCard;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport WeightEntryCard from 'Page/StockEntry/Repacking/WeightEntry/WeightEntryList/WeightEntryCard'\r\nimport { removeEntryModule, saveJobSheet } from 'apiServices'\r\nimport { submitValidation, countThresholdIsEmpty } from 'Page/StockEntry/Repacking/services'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\";\r\nimport PopUpRequired from \"Component/Modal/PopUpRequired\";\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport { useEntryDimention, useRepackingEntry, useTargetRepack } from 'Page/StockEntry/GeneralServices'\r\nimport CustomTable from 'Component/CustomTable'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport { dateFull } from 'services'\r\nimport { traceEmptyRow } from '../services'\r\n\r\nconst WeightEntryList = ({\r\n    setActiveSKU,\r\n    hideSKUList,\r\n    setHideSKUList,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    updateEntry,\r\n    setUpdateEntry\r\n}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const {\r\n        isLoading,\r\n        invalidThreshold,\r\n        setInvalidThreshold,\r\n        setIsSuccess,\r\n        confirmation,\r\n        setConfirmation,\r\n        discard,\r\n        setDiscard,\r\n        isSaved,\r\n        setIsSaved,\r\n        action,\r\n        setAction,\r\n        isRequired,\r\n        setIsRequired,\r\n        hideContent,\r\n        setHideContent,\r\n        unitOfMeassures,\r\n        totalWeight,\r\n        edited,\r\n        postInfo,\r\n        skuName,\r\n        skuNumber,\r\n        poList,\r\n        gradeList,\r\n        totalPack,\r\n        status,\r\n        activeTab,\r\n        setActiveTab } = useRepackingEntry({ moduleEntry, activeSku, dispatch })\r\n\r\n    const { showTargetRepack, table, slot, setSlot, slotList, totalEmptyThreshold } = useTargetRepack({ moduleEntry, activeSku, dispatch, moduleName })\r\n\r\n    const { dimention, height, heightAdj, loading } = useEntryDimention(showTargetRepack)\r\n\r\n    //Condition\r\n    const isMobile = dimention <= 500\r\n    const isHidden = hideContent ? 'd-none' : null\r\n    const isPlural = totalWeight > 1 ? \"s\" : ''\r\n    const isPluralPack = totalPack > 1 ? \"s\" : ''\r\n    const isEdited = edited ? 'bg-green' : 'bg-lineGrey'\r\n    const showTarget = showTargetRepack ? null : 'd-none'\r\n    const targetRepackHeight = isMobile ? 220 : 260\r\n\r\n    let slotListFilter = slotList\r\n    let hideResetOpt = false\r\n    if (slot?.length) {\r\n        if (slot[0]?.value === null) slotListFilter = []\r\n        if (slot[0]?.value) hideResetOpt = true\r\n    }\r\n    if (!poList.length) return (\r\n        <div style={{ paddingLeft: isMobile ? 0 : 10 }} className='bg-white w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green ml-2'>\r\n            <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: heightAdj, maxHeight: heightAdj }}>\r\n                <img className=\"loading\" src={loading} alt=\"loading\" />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div style={{ paddingLeft: dimention <= 500 ? 0 : 10 }} className='w-100 h-100 mt-3 mt-md-0'>\r\n            <Discard\r\n                discard={discard}\r\n                module={'repacking'}\r\n                moduleEntry={moduleEntry}\r\n                close={() => setDiscard(false)}\r\n                discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch })}\r\n            />\r\n            <PopUpSaved\r\n                updateEntry={updateEntry}\r\n                setUpdateEntry={setUpdateEntry}\r\n                status={status}\r\n                moduleEntry={moduleEntry}\r\n                submit={() => dispatch({ type: 'CREATE_JOB_SHEET', [`${moduleName}EntryData`]: null, [`${moduleName}SummaryData`]: null })}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSaved={isSaved}\r\n                action={action}\r\n                setIsSaved={setIsSaved}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <PopUpRequired\r\n                traceEmptyRow={(item) => traceEmptyRow({ item, setActiveTab, setActiveSKU })}\r\n                totalEmptyThreshold={totalEmptyThreshold}\r\n                isRequired={isRequired}\r\n                module={moduleEntry}\r\n                invalidThreshold={invalidThreshold}\r\n                setIsRequired={setIsRequired}\r\n                setInvalidThreshold={setInvalidThreshold}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n                submit={() => setConfirmation({ show: true, name: 'submit' })}\r\n            />\r\n            <Confirmation\r\n                moduleName={moduleName}\r\n                isLoading={isLoading}\r\n                moduleEntry={moduleEntry}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSuccess={postInfo}\r\n                setAction={setAction}\r\n                action={action}\r\n                save={() => saveJobSheet({ name: 'save', moduleEntry, moduleName, dispatch, setIsSuccess, table })}\r\n                submit={() => saveJobSheet({ name: 'submit', moduleEntry, moduleName, dispatch, setIsSuccess, table, submitValidation, setActiveSKU })}\r\n            />\r\n            <div className='rounded-bottom rounded-top'>\r\n                <div className={`target-repack mb-2 p-3 bg-white rounded border-top border-left border-right border-bottom rounded-top border-soft-green ${showTarget}`} style={{ maxHeight: targetRepackHeight, minHeight: targetRepackHeight, overflow: 'hidden' }}>\r\n                    <div className={`d-md-flex justify-content-between mb-3 align-items-center w-100`}>\r\n                        <div className='d-flex mb-md-0 mb-3'>\r\n                            <div className='LatoBold mr-3'>Target Repack Summary</div>\r\n                            <div className='mr-3 iconU-sideBarDot d-flex align-items-center m-0 p-0 text' />\r\n                            <div className='LatoBold font-green'>{dateFull({ date: new Date(), noTime: true, addDay: true, withDay: true })}</div>\r\n                        </div>\r\n                        <Dropdown\r\n                            hideResetOpt={hideResetOpt}\r\n                            className=\"basic-multi-select\"\r\n                            classNamePrefix=\"select\"\r\n                            isMulti={true} resetName='All Slot'\r\n                            options={slotListFilter}\r\n                            selectedValue={slot}\r\n                            onChangeDropdown={(selected) => setSlot(selected)}\r\n                            show={true}\r\n                            width={isMobile ? 'w-100' : 'w-md-25'}\r\n                            placeholder='Slot'\r\n                            title={'Slot'}\r\n                            style={{ marginRight: 0 }}\r\n                            noMarginBottom={true} />\r\n                    </div>\r\n                    <CustomTable\r\n                        editColumn={'false'}\r\n                        className={`${isMobile ? 'target-repack-mobile' : 'target-repack'} `}\r\n                        styles={{ color: 'red', textAlign: 'right', width: '100%', display: showTargetRepack ? false : 'none' }}\r\n                        data={table?.data}\r\n                        columns={table?.columns} />\r\n                </div>\r\n                <div style={{ height }} style={{ padding: 10 }} className={`bg-white w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green`}>\r\n                    <div className='d-flex w-100 m-0 p-0' onClick={() => isMobile ? setHideContent(!hideContent) : null}>\r\n                        <div className={`${hideSKUList ? 'iconU-sideBarHideRight' : 'iconU-sideBarHideLeft'} emptyTextField fontSizeTitle mr-3`} onClick={() => setHideSKUList(!hideSKUList)} />\r\n                        <div className='mr-3 pr-1 d-flex align-items-center m-0 p-0 LatoBold text'>Weight Entry</div>\r\n                        <div className='mr-3 iconU-sideBarDot d-flex align-items-center text' />\r\n                        <div className='mr-3 d-flex align-items-center font-green LatoBold'>{`${skuName} (${skuNumber})`}</div>\r\n                    </div>\r\n                    {/* <Sort moduleEntry = {moduleEntry} moduleName = {moduleName} activeSku = {activeSku} dispatch = {dispatch}/> */}\r\n                </div>\r\n                <div style={{ height: isMobile ? height : (heightAdj + 22), minHeight: isMobile ? height : (heightAdj + 22) }} className={`w-100 bg-white overflow-y mr-0 border-left border-right border-soft-green pl-3 pr-2 pt-3 ${isHidden}`}>\r\n                    {\r\n                        poList?.map((poItem, idx) => {\r\n                            return <WeightEntryCard\r\n                                activeTab={activeTab}\r\n                                setActiveTab={setActiveTab}\r\n                                gradeList={gradeList}\r\n                                inputWidth='input-w-100'\r\n                                activeSku={activeSku}\r\n                                poListIdx={idx}\r\n                                poItem={poItem}\r\n                                moduleEntry={moduleEntry}\r\n                                moduleName={moduleName}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <div className='w-100 d-flex align-items-center p-3 border-left border-right border-bottom rounded-bottom LatoBold bg-white'>\r\n                    {/* <button\r\n                        type=\"button\"\r\n                        className={`btn ${isEdited}  text-white px-5 mr-3 LatoBold`}\r\n                        onClick={() => edited ? setConfirmation({ show: true, name: 'save' }) : null}>\r\n                        Save\r\n                    </button> */}\r\n\r\n                    {/* <button\r\n                        tabIndex='0'\r\n                        type=\"button\"\r\n                        className={`btn bg-lineGrey sku-item text-white px-5 mr-3 LatoBold`}>\r\n                        Save\r\n                    </button> */}\r\n                    <div className='d-flex align-items-center'>\r\n                        <div>Total Pack <span className='font-green mr-3'>{`${totalPack} ${'PACK'}${isPluralPack}`}</span></div>\r\n                        <div className='rounded-circle bg-dark mr-3' style={{ width: 5, height: 5 }}></div>\r\n                        <div>Total Weight <span className='font-green'>{`${totalWeight} ${unitOfMeassures?.toUpperCase()}${isPlural}`}</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center mt-3 justify-content-end\">\r\n                <div tabIndex='0' onClick={() => setDiscard(true)} className='red pr-3 sku-item fontSizeButton cursor-pointer'><i className='iconU-entryTrash'></i> Discard</div>\r\n                <button tabIndex='0' onClick={() => edited ? submitValidation({ setActiveSKU, moduleEntry, moduleName, dispatch, setConfirmation, setIsRequired, setInvalidThreshold }) : null} className={`btn px-5 sku-item py-2 text-white ${isEdited} LatoBold no-shadow`} style={{ height: \"fit-content !important\" }} >Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntryList","import React, { useState, useEffect } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SelectedSKUList from 'Page/StockEntry/Repacking/WeightEntry/SelectedSKUList'\r\nimport WeightEntryList from 'Page/StockEntry/Repacking/WeightEntry/WeightEntryList'\r\nimport { getPoList, getPoRepack } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst WeightEntry = () => {\r\n    const repackEntryData = useSelector(state => state.repackEntryData)\r\n    const dispatch = useDispatch()\r\n    const [hideSKUList, setHideSKUList] = useState(false)\r\n    const [activeSku, setActiveSKU] = useState(0)\r\n    const [updateEntry, setUpdateEntry] = useState()\r\n    let height = document.documentElement.clientHeight\r\n    let clientWidth = document.documentElement.clientWidth\r\n    let heightAdj = height - 150\r\n    const moduleName = 'repack'\r\n\r\n    useEffect(_ => {\r\n        if (repackEntryData?.jobPost.list.length > 0) getPoRepack({ dispatch, moduleName, moduleEntry: repackEntryData, activeSku })\r\n    }, [activeSku])\r\n\r\n\r\n    if (!repackEntryData || repackEntryData?.jobPost.list.length === 0) {\r\n        return (\r\n            <div className='d-flex align-items-center justify-content-center text-center w-100 h-screen'><Redirect to='/inventory-entry/repacking'>Please Select At Least 1 SKU</Redirect></div >)\r\n    }\r\n    return (\r\n        <div style={{ height: clientWidth <= 500 ? height : heightAdj }} className='w-100 d-md-flex justify-content-between scroll-y z-0'>\r\n            <SelectedSKUList\r\n                hideSKUList={hideSKUList}\r\n                activeSku={activeSku}\r\n                setActiveSKU={setActiveSKU}\r\n                moduleName={moduleName}\r\n                moduleEntry={repackEntryData}\r\n                setUpdateEntry={setUpdateEntry}\r\n            />\r\n            <WeightEntryList\r\n                setActiveSKU={setActiveSKU}\r\n                setHideSKUList={setHideSKUList}\r\n                hideSKUList={hideSKUList}\r\n                moduleName={moduleName}\r\n                moduleEntry={repackEntryData}\r\n                activeSku={activeSku}\r\n                setUpdateEntry={setUpdateEntry}\r\n                updateEntry={updateEntry}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntry","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    name\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n\r\n    // const input = document.getElementById(`qty_${poListIdx}_${entryListIdx}`)\r\n    // if (isEmpty && input) input.focus()\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nconst Note = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    isReadOnly,\r\n    poListIdx\r\n}) => {\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${grade === 'Waste' ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} border rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`note_${poListIdx}_${entryListIdx}`} readOnly={isReadOnly} autoComplete='off' className='w-100 plain-input' value={values} name='note' onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","module.exports = __webpack_public_path__ + \"static/media/refreshIcon.20a8ff95.svg\";","import ReactTable from 'react-table-v6'\r\nimport 'react-table-v6/react-table.css'\r\nimport './CustomTable.scss'\r\nimport React from 'react'\r\n\r\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\r\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\r\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\r\n\r\nclass CustomTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            activeTab: '1',\r\n            editColumnTemp: {},\r\n        }\r\n    }\r\n\r\n    getColumnWidth = (rows, accessor, headerText) => {\r\n        const cellLength = Math.max(\r\n            ...rows.map(row => {\r\n                let value = '';\r\n                value = accessor(row);\r\n                if (typeof value === 'number') return value.toString().length;\r\n                return (value || '').length;\r\n            }),\r\n            headerText.length\r\n        );\r\n        return cellLength * 12\r\n    }\r\n\r\n    headerIcon = (data, header, editColumn) => {\r\n        let listHeader = []\r\n        header && header.map((h, index) => {\r\n            if (!editColumn[index]) {\r\n                let withIcon = (<span>\r\n                    {h.Header} <i className=\"iconU-sort\"> </i>\r\n                </span>\r\n                )\r\n                let obj = {\r\n                    Header: withIcon,\r\n                    Cell: h.Cell,\r\n                    accessor: h.accessor,\r\n                    sortable: h.sortable === false ? false : true,\r\n                    resizable: h.resizable || false,\r\n                    className: h.className || null,\r\n                    headerClassName: h.headerClassName || null,\r\n                    style: h.style || null,\r\n                    width: h.width || null,\r\n                }\r\n                return listHeader = [...listHeader, obj]\r\n            } else {\r\n                return listHeader = [...listHeader]\r\n            }\r\n        })\r\n\r\n        if (this.props.editColumn !== 'false') {\r\n            let editBtn = (\r\n                <i className='iconU-tableEdit pencilTable' />\r\n            )\r\n            let obj = {\r\n                Header: editBtn,\r\n                accessor: 'editBtn',\r\n                width: 50,\r\n                style: { textAlign: 'center' },\r\n            };\r\n            listHeader = [...listHeader, obj];\r\n        }\r\n\r\n        return listHeader;\r\n    };\r\n\r\n    render() {\r\n        const { editColumnTemp } = this.state\r\n        let { columns, data, onClick, styles, tableStatus, className } = this.props\r\n        let headerIcon = this.headerIcon(data, columns, editColumnTemp);\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <ReactTableFixedColumns\r\n                    className={className}\r\n                    columns={headerIcon}\r\n                    data={data}\r\n                    showPagination={false}\r\n                    style={styles}\r\n                    noDataText={tableStatus == \"noData\" ? 'Please Wait' : 'No  Data Found'}\r\n                    minRows='0'\r\n                    resizable={false}\r\n                    getTdProps={(state, rowInfo, column, instance) => {\r\n                        return {\r\n                            onClick: (e, handleOriginal) => {\r\n                                !!onClick &&\r\n                                    onClick(rowInfo.original, state, column, e, instance);\r\n                            },\r\n                            style: {\r\n                                height: \"3rem\",\r\n                                cursor: !!onClick && 'pointer',\r\n                                textAlign: isNaN(rowInfo?.original[column.id])\r\n                                    ? 'left'\r\n                                    : 'right',\r\n                            },\r\n                        };\r\n                    }}\r\n                    defaultPageSize={50}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CustomTable","import React from 'react'\r\nimport { isFloat } from 'services'\r\nconst Pack = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    placeholder,\r\n    grade,\r\n    title,\r\n    className,\r\n    packThreshold,\r\n    hidePercent\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={`${inputWidth} mb-3 mr-3 ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold text-nowrap ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={` ${isEmpty ? 'tooltip-custom' : 'tooltip-custom1'} w-100 d-flex align-items-center input-height px-2 mr-3`}>\r\n                <div className={`LatoBold ${inputWidth} ${isEmpty ? 'red' : 'green'}`}>{`${packThreshold && !isNaN(parseInt(packThreshold)) ? `${isFloat(packThreshold)}${hidePercent ? '' : '%'}` : (hidePercent ? '0' : '0%')}`}</div>\r\n                <span className={`${isEmpty ? 'tooltiptext' : 'd-none'}`}>\r\n                    <span style={{ fontWeight: 600 }}>Threshold Error</span>\r\n                    <br />\r\n                    <span>{`Cannot be larger than 50%. Your current threshold is ${packThreshold}%`}</span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pack","import React from 'react'\r\nconst Pack = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    placeholder,\r\n    grade,\r\n    title,\r\n    className,\r\n    packThreshold\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`pack_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name='pack' placeholder={placeholder} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pack"],"sourceRoot":""}