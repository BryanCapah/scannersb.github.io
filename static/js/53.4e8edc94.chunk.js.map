{"version":3,"sources":["Page/StockEntry/AdditionalOutbound/RemoveSKU.jsx","Page/StockEntry/GeneralServices/moduleServices.js","Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/SKUItem/index.jsx"],"names":["withRouter","props","dispatch","useDispatch","status","useSelector","state","outboundEntryData","isCheckedTotal","selectedSkuCheck","moduleEntry","moduleName","useState","initialJs","setInitialJs","useEffect","initial","dimention","document","documentElement","clientHeight","height","emptyItem","className","to","list","jobPost","length","style","minHeight","maxHeight","map","data","idx","key","img","photo","skuDescription","skuName","skuNumber","uomLabel","uomValue","totalQty","uom","unitOfMeassures","isCheckedHandler","checked","preRemoveSku","check","onClick","resetSKU","moduleSummary","type","e","preventDefault","removeSku","count","addSku","a","jobSheet","push","CREATE_JOB_SHEET","getEditedData","edited","poList","item","totalWeightCount","activeSku","total","po","itemList","qqq","Number","isInteger","qty","parseInt","parseFloat","toFixed","totalPackCount","pack","jobSheetChecker","checkisEmpty","isRequired","qtyIsEmpty","noteIsEmpty","outboundTypeIsEmpty","ripenessIsEmpty","gradeIsEmpty","packIsEmpty","responseCheck","isLoading","summaryData","totalListItemWeightCount","moduleList","filter","removeEntryModule","id","setAreaId","selected","SET_AREA","areaId","countQty","poListIdx","entryListIdx","number","deleteRow","js","update","initialWeight","initialWeightScreenUpdate","splice","setSwitch","search","updateList","zeroQuantity","PopUp","refresh","icon","statusDisplay","title","cancelButtonTitle","actionButtonTitle","cancelButtonClass","actionButtonClass","actionButtonEvent","colorText","msg1","msg2","onCloseFunction","refreshOnCancel","setIsSuccess","code","message","show","setShow","window","onkeydown","keyCode","closeOnBackdrop","onClose","isFunction","success","name","STATUS","size","bodyOpenClassName","location","reload","refreshPage","parentOncCloseFunction","console","log","SKUItem","Img","singleView","setCreatePo","mobile","clientWidth","React","isChecked","setIsChecked","createPoSingleView","onKeyDown","tabindex","cursor","width","src","alt","toUpperCase","isFloat","paddingLeft","paddingRight","paddingTop","paddingBottom"],"mappings":"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","file":"static/js/53.4e8edc94.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport SKUItem from \"Component/SKUItem\";\r\nimport \"./index.scss\";\r\nimport { selectedSkuCheck, removeSku, preRemoveSku,resetSKU } from \"Page/StockEntry/GeneralServices/moduleServices\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\n\r\nconst RemoveJobSheet = (props) => {\r\n    const dispatch = useDispatch();\r\n    const status = useSelector(state => state.status)\r\n    const outboundEntryData = useSelector(state => state.outboundEntryData)\r\n    const isCheckedTotal = selectedSkuCheck({ moduleEntry: outboundEntryData, moduleName: 'outbound' });\r\n    const [initialJs, setInitialJs] = useState(isCheckedTotal)\r\n    useEffect(() => {\r\n        const initial = selectedSkuCheck({ moduleEntry: outboundEntryData, moduleName: 'outbound' });\r\n        setInitialJs(initial)\r\n    }, []);\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 210\r\n    const emptyItem = dimention - 210\r\n    if (!outboundEntryData) {\r\n        return (\r\n            <div className='d-flex align-items-center justify-content-center text-center w-100 h-screen'>\r\n                <Redirect to='/inventory-entry/additional-outbound'>Please Select At Least 1 SKU</Redirect>\r\n            </div >)\r\n    }\r\n    const { list } = outboundEntryData?.jobPost\r\n    return (\r\n        <div className=\"w-100 d-flex flex-column stock-take-summary\">\r\n            <PopUp status={status} />\r\n            <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white border-all radius-all mb-3\">\r\n                <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n                    <div className=\"text LatoBold d-flex justify-content-between align-items-center sku-des\">\r\n                        <div>\r\n                            {`Check SKU${list.length > 1 ? 's' : ''} that you want to remove from entries`}\r\n                            <span className=\"green\">{`${initialJs - isCheckedTotal > 0 ? (` (${initialJs - isCheckedTotal} Removed Sku${((initialJs - isCheckedTotal) > 1 ?  's' : '' )})`) : ''}`}</span>\r\n                        </div>\r\n                        <div className=\"icon-unfinishEn\">\r\n                            <i className=\"iconU-sideBarInventoryEntry emptyTextField\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className={`mb-1 mt-3 d-flex align-items-center scroll-sku ${list?.length ? \"flex-column\" : \"flex-row\"\r\n                        } w-100 text-center`}\r\n                    style={{ minHeight: height,maxHeight:height }} >\r\n                    {list?.length ? (\r\n                        list?.map((data, idx) => {\r\n                            return (\r\n                                <SKUItem\r\n                                    key={idx}\r\n                                    img={data?.photo}\r\n                                    skuDescription={data?.skuName}\r\n                                    skuNumber={data?.skuNumber}\r\n                                    uomLabel=\"weight\"\r\n                                    uomValue={data?.totalQty}\r\n                                    uom={data?.unitOfMeassures}\r\n                                    isCheckedHandler={(checked) =>\r\n                                        preRemoveSku({ idx, checked: !checked, dispatch, moduleEntry: outboundEntryData, moduleName: 'outbound' })\r\n                                    }\r\n                                    check={!data?.checked}\r\n                                />\r\n                            );\r\n                        })\r\n                    ) : (\r\n                            <div className=\"w-100 text-center emptyTextField\" style={{ minHeight: emptyItem }}>\r\n                                \"No Data\"\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n            <div className=\"h-screen-summary-footer d-flex flex-column justify-content-start\">\r\n                <div className=\"w-100 d-flex align-items-center justify-content-between mb-1\">\r\n                    <Link to='/inventory-entry/additional-outbound/weight-entry'>\r\n                        <button\r\n                            onClick={() => resetSKU({dispatch, moduleSummary:outboundEntryData,moduleName:'outbound'})}\r\n                            type=\"button\"\r\n                            className=\"btn px-4 no-shadow border-all bg-white fontSizeButton\"\r\n                        >\r\n                            Cancel\r\n                    </button>\r\n                    </Link>\r\n\r\n                    <Link to='/inventory-entry/additional-outbound/weight-entry' onClick={(e) => isCheckedTotal !== initialJs ? true : e.preventDefault()}>\r\n                        <button\r\n                            onClick={() => isCheckedTotal !== initialJs ? removeSku({ dispatch, moduleEntry: outboundEntryData, moduleName: 'outbound' }) : null}\r\n                            type=\"button\"\r\n                            className={`btn px-5 fontSizeButton no-shadow text-white ${isCheckedTotal !== initialJs ? \"bg-green\" : \"bg-lineGrey\"}`}\r\n                        >\r\n                            Update\r\n                    </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(RemoveJobSheet);","import { CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { removeEntryModule } from 'apiServices'\r\n\r\n// check selected sku\r\nexport const selectedSkuCheck = ({ moduleEntry }) => {\r\n    let count = 0\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            if (data.checked) count = count + 1\r\n        })\r\n    }\r\n\r\n    return count\r\n}\r\n\r\n//add new SKU\r\nexport const addSku = async ({ dispatch, moduleEntry, moduleSummary, moduleName }) => {\r\n    let jobSheet = { ...moduleSummary }\r\n    moduleEntry.map((data) => {\r\n        jobSheet.jobPost.list.push(data)\r\n    })\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet.jobPost.list.length > 0 ? jobSheet : null });\r\n}\r\n\r\n// get selected sku\r\nexport const getEditedData = ({ data }) => {\r\n    let edited = false;\r\n    const a = data?.poList?.map(item => {\r\n        if (item.edited) edited = true\r\n    })\r\n    return edited\r\n}\r\n\r\nexport const submitValidation = ({ moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const { qty, grade, ripeness, note } = item\r\n\r\n                if (po.category === 'Fruits') {\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                            isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                        else {\r\n                            isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            !ripeness?.value ? item.ripenessIsEmpty = true : item.ripenessIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                    }\r\n                }\r\n\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty || item?.qtyToCompareIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item?.qty >= 0) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        setConfirmation({ show: false, name: null })\r\n        setIsRequired(true)\r\n    }\r\n}\r\n\r\nexport const totalWeightCount = ({ moduleEntry, activeSku }) => {\r\n    let total = 0\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list[activeSku].poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const qqq = Number.isInteger(item.qty) ? parseInt(item.qty) : Number.parseFloat(item.qty ? item.qty : 0)\r\n                total += qqq\r\n            })\r\n        })\r\n    }\r\n    total = Number.isInteger(total) ? total : Number.parseFloat(total).toFixed(2)\r\n    return total\r\n}\r\n\r\nexport const totalPackCount = ({ moduleEntry, activeSku }) => {\r\n    let total = 0\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list[activeSku].poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const qqq = Number.isInteger(item.pack) ? parseInt(item.pack) : Number.parseFloat(item.pack ? item.pack : 0)\r\n                total += qqq\r\n            })\r\n        })\r\n    }\r\n    total = Number.isInteger(total) ? total : Number.parseFloat(total).toFixed(2)\r\n    return total\r\n}\r\n\r\n\r\n\r\nexport const totalListWeightCount = ({ moduleList }) => {\r\n    let total = 0\r\n    if (moduleList) {\r\n        moduleList.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const qqq = Number.isInteger(item.qty) ? parseInt(item.qty) : Number.parseFloat(item.qty ? item.qty : 0)\r\n                total += qqq\r\n            })\r\n        })\r\n    }\r\n    total = Number.isInteger(total) ? total : Number.parseFloat(total).toFixed(2)\r\n    return total\r\n}\r\n\r\n// edited jobsheet checker\r\nexport const jobSheetChecker = ({ moduleEntry }) => {\r\n    let edited = false;\r\n    const a = moduleEntry?.jobPost?.list?.map(item => {\r\n        const check = getEditedData({ data: item })\r\n        if (check) edited = true\r\n    })\r\n    return edited\r\n}\r\n\r\nexport const totalQty = (qty) => {\r\n    if(qty){\r\n        if(Number.isInteger(qty)) return qty\r\n        else return Number.parseFloat(qty).toFixed(2)\r\n    }\r\n    else return 0\r\n}\r\n\r\nexport const checkisEmpty = (moduleEntry) => {\r\n    let isRequired = false\r\n    moduleEntry.poList.map(po => {\r\n        po.itemList.map(item => {\r\n            if (item.qtyIsEmpty || item.noteIsEmpty || item.outboundTypeIsEmpty || item.ripenessIsEmpty || item.gradeIsEmpty || item.packIsEmpty ) isRequired = true\r\n        })\r\n    })\r\n    return isRequired\r\n}\r\n\r\n// check loading\r\nexport const responseCheck = ({ isLoading, summaryData = null }) => {\r\n    if (!summaryData && !isLoading) {\r\n        return true\r\n    }\r\n    if (isLoading) {\r\n        return false\r\n    }\r\n    else {\r\n        return true\r\n    }\r\n}\r\n\r\n//pre remove sku\r\nexport const preRemoveSku = ({ dispatch, moduleEntry, moduleName, idx, checked }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n    jobSheet.jobPost.list[idx].checked = checked\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\nexport const totalListItemWeightCount = ({ moduleList }) => {\r\n    let total = 0\r\n    if (moduleList) {\r\n        moduleList.map(item => {\r\n            const qqq = Number.isInteger(item.qty) ? parseInt(item.qty) : Number.parseFloat(item.qty ? item.qty : 0)\r\n            total += qqq\r\n        })\r\n    }\r\n    total = Number.isInteger(total) ? total : Number.parseFloat(total).toFixed(2)\r\n    return total\r\n}\r\n\r\n//get initial jobsheet\r\nexport const getInitialJs = ({ moduleEntry }) => {\r\n    return moduleEntry.jobPost.list.length\r\n}\r\n\r\n//remove sku\r\nexport const removeSku = async ({ dispatch, moduleEntry, moduleName }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n\r\n    const list = moduleEntry.jobPost.list.filter(data => { if (data.checked) return data })\r\n    jobSheet.jobPost.list = list\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n    if (list.length === 0) removeEntryModule({ id: jobSheet.jobPost.id, moduleName, dispatch })\r\n}\r\n\r\nexport const resetSKU = ({dispatch, moduleSummary,moduleName}) => {\r\n    let jobSheet = {...moduleSummary}\r\n    jobSheet.jobPost.list.map(list => {\r\n        list.checked = true\r\n    })\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\nexport const setAreaId = ({ dispatch, selected }) => {\r\n    if (selected) dispatch({ type: SET_AREA, areaId: selected })\r\n}\r\n\r\nexport const countQty = ({ activeSku, moduleEntry, poListIdx,entryListIdx }) => {\r\n    let number = parseInt(0)\r\n    const list = moduleEntry.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    list.map((item, idx) => { \r\n        if(idx !== entryListIdx) number += Number.isInteger(item?.qty) ? item?.qty : parseFloat(item?.qty)\r\n    })\r\n    \r\n    return number\r\n}\r\n\r\nexport const deleteRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e,\r\n    countQty\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n        const number = countQty({ moduleEntry,activeSku, poListIdx,entryListIdx })\r\n        const update = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n        \r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = update - number\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList.splice(entryListIdx, 1)\r\n\r\n        if(js.jobPost.list[activeSku].poList[poListIdx].itemList.length === 0 ) js.jobPost.list[activeSku].poList[poListIdx].edited= false\r\n        dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    }\r\n\r\nexport const setZeroQuantity = ({dispatch, zeroQuantity}) => {\r\n    dispatch({type:'SET_ZERO_QUANTITY', data: !zeroQuantity})\r\n}\r\n\r\nexport const setSwitch = ({search, updateList,dispatch,zeroQuantity}) => {\r\n    setZeroQuantity({dispatch, zeroQuantity})\r\n    if(search)updateList(!zeroQuantity)\r\n  }","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { onClose, refreshPage } from \"./services.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { STATUS } from \"apiServices/action\";\r\nimport { isFunction } from \"lodash\";\r\n\r\nconst PopUp = ({\r\n  refresh,\r\n  status,\r\n  icon,\r\n  statusDisplay = false,\r\n  title = \"\",\r\n  cancelButtonTitle = \"Cancel\",\r\n  actionButtonTitle = \"Submit\",\r\n  cancelButtonClass = \"bg-background\",\r\n  actionButtonClass = \"bg-background\",\r\n  actionButtonEvent = null,\r\n  colorText = \"red\",\r\n  msg1 = null,\r\n  msg2 = null,\r\n  onCloseFunction = null,\r\n  refreshOnCancel = true,\r\n  setIsSuccess\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  if (status?.code === 500 && statusDisplay == false) {\r\n    icon = \"em-pensive\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 408 && statusDisplay == false) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Request Timeout\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 400 && statusDisplay == false) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n  if (status?.code === 404) {\r\n    title = \"Something wrong with the application\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n\r\n  const [show, setShow] = useState(statusDisplay);\r\n\r\n  useEffect(() => {\r\n    //from outside change\r\n    setShow(statusDisplay);\r\n  }, [statusDisplay]);\r\n\r\n  useEffect(() => {\r\n  }, [show]);\r\n\r\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\r\n  return (\r\n    <CRow className={`${show ? null : \"d-none\"}`}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          closeOnBackdrop={false}\r\n          onClose={() => {\r\n            setShow(false)\r\n            if (isFunction(setIsSuccess)) setIsSuccess({ success: null, name: null })\r\n            dispatch({ type: STATUS, status: null });\r\n            if (onCloseFunction) {\r\n              onCloseFunction()\r\n            }\r\n          }}\r\n          size=\"lg\"\r\n          style={{ minHeight: \"280px\" }}\r\n          bodyOpenClassName=\"p-3\"\r\n        >\r\n          {/* <div className='d-flex flex-row-reverse'>\r\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-3 border-none\">\r\n              <CModalTitle className={`text LatoBold ${colorText}`}>\r\n                {title}\r\n              </CModalTitle> */}\r\n\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <i\r\n              className=\"pr-3 pt-3 iconU-modalClose\"\r\n              onClick={() => {\r\n                setShow(false)\r\n                if (isFunction(setIsSuccess)) setIsSuccess({ success: null, name: null })\r\n                dispatch({ type: STATUS, status: null });\r\n                if (onCloseFunction) {\r\n                  onCloseFunction()\r\n                }\r\n              }}\r\n            ></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className={`text LatoBold ${colorText}`}>\r\n              {title} <span><i className={`em ${icon}`}></i></span>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">{msg1}</p>\r\n            <p className=\"text\">{msg2}</p>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            {cancelButtonTitle ? (\r\n              <CButton\r\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\r\n                onClick={() => {\r\n                  if (refreshOnCancel) {\r\n                    if(typeof(refresh) === 'function') refresh()\r\n                    else refreshPage({ refresh: true });\r\n                  } else {\r\n                    onClose({\r\n                      setShow,\r\n                      parentOncCloseFunction: onCloseFunction,\r\n                    });\r\n                  }\r\n                  dispatch({ type: STATUS, status: null });\r\n                }}\r\n              >\r\n                {cancelButtonTitle}\r\n              </CButton>\r\n            ) : null}\r\n            {actionButtonTitle ? (\r\n              <CButton\r\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\r\n                onClick={() => {\r\n                  if (actionButtonEvent) {\r\n                    actionButtonEvent();\r\n                    setShow(false);\r\n                  } else {\r\n                    setShow(false)\r\n                  }\r\n                }\r\n                }\r\n              >\r\n                {actionButtonTitle}\r\n              </CButton>\r\n            ) : null}{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\r\n  setShow(false);\r\n  console.log(parentOncCloseFunction)\r\n  if (parentOncCloseFunction) {\r\n    parentOncCloseFunction();\r\n  }\r\n\r\n};\r\n\r\nexport const refreshPage = ({ refresh = true }) => {\r\n  if (refresh === true) {\r\n    window.location.reload(false);\r\n  }\r\n};\r\n","import React from 'react'\r\nimport Img from 'assets/icons/sayur-box-logo.svg'\r\nimport { isFloat } from 'services'\r\nimport { useEffect, useState } from 'react/cjs/react.development'\r\n\r\nconst SKUItem = ({\r\n    img = Img,\r\n    skuDescription = 'SKU Description',\r\n    skuNumber = '1001',\r\n    uomLabel = 'weight',\r\n    uomValue = 100.3,\r\n    uom = 'KG',\r\n    isCheckedHandler = null,\r\n    check = false,\r\n    idx = 0,\r\n    singleView,\r\n    setCreatePo\r\n}) => {\r\n    const dimention = document.documentElement.clientWidth\r\n    const mobile = dimention <= 500 ? true : false\r\n    const [isChecked, setIsChecked] = React.useState(check)\r\n    const checkHandler = () => {\r\n        setIsChecked(!isChecked)\r\n        if (isCheckedHandler) isCheckedHandler(!isChecked)\r\n    }\r\n\r\n    const createPoSingleView = () => {\r\n        setIsChecked(true)\r\n        isCheckedHandler(true)\r\n        if(typeof(setCreatePo) === 'function') setCreatePo({show:true,skuNumber})\r\n    }\r\n\r\n    return (\r\n        <div onKeyDown={(e) =>e.keyCode === 13 ? createPoSingleView() : false} tabindex=\"0\" key={idx} className={`w-100 border d-md-flex sku-item justify-content-between ${mobile ? 'pl-0 pr-0' : 'pl-2 pr-3'} py-2 mb-3 rounded ${isChecked ? 'bg-softGreen' : null}`}>\r\n            <div className={`d-flex align-items-center w-100 cursor-pointer ${mobile ? 'pl-2 pr-3' : 'pl-0 pr-0'}`} onClick={(checkHandler)}>\r\n                <div\r\n                    style={{ cursor: 'pointer', height: '23px', width: '23px' }}\r\n                    className={`mr-3 text-white d-flex align-items-center rounded px-1 ${isChecked ? 'iconU-pickCheck bg-green pl-1-5' : 'bg-borderHeader'}`} />\r\n                <img\r\n                    src={img} alt='sku image'\r\n                    className='w-5 mr-3 border softGreen rounded' />\r\n                <div className='text-left'>\r\n                    <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                    <div className='text fontSizeTitle'>{skuNumber}</div>\r\n                </div>\r\n            </div>\r\n            <hr className={`${mobile ? null : 'd-none'}`}/>\r\n            <div className={`d-flex w-100 ${mobile ? 'pr-3' : 'pr-0'} pl-5 pl-md-0 align-items-center`}>\r\n                <div className={`d-flex justify-content-md-end align-items-center w-100 ${mobile ? 'justify-content-end' : null}`}>\r\n                    <div className={`my-0 mr-3 text fontSizeWeightNumber ${mobile ? 'd-none' : null}`}>{`Total ${uom.toUpperCase() === 'KG' ? uomLabel.toUpperCase() : uom.toUpperCase()}`}</div>\r\n                    <div className='mr-1 font-weight-bold green fontSizeWeightNumber'>{isFloat(uomValue)}</div>\r\n                    <div className='mr-3 font-weight-bold green fontSizeWeightNumber'>{uom}</div>\r\n                </div>\r\n                <div onClick={(createPoSingleView)} style={{paddingLeft:'10px', paddingRight:'10px', paddingTop:'10px', paddingBottom:'8px'}} className={`${singleView ? null : 'd-none'} cursor-pointer iconU-sideBarHideRight font-weight-bold green d-flex align-items-center border rounded border-green`}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SKUItem"],"sourceRoot":""}