{"version":3,"sources":["Page/StockEntry/Repacking/UploadTargetRepack/Result.jsx","Component/BootstrapTable/index.jsx"],"names":["withRouter","props","selectorCsvFileName","useSelector","state","csvFileName","selectorCsvDataResult","csvDataResult","selectorCsvFieldResult","csvFieldResult","useEffect","undefined","history","push","className","columns","tableClass","data","type","style","backgroundColor","onClick","lineHeight","length","TableEditable","changeOutboundReason","row","setTimeout","elem","document","getElementById","classList","add","innerHTML","changeWarehouseUuid","value","column","columnName","warehouseCodeList","warehouseUuidList","warehouseNameList","setCsvDataTmp","tmpdata","globalData","index","findIndex","obj","id","i","indexOf","console","clear","log","a","validatePOSKU","idColumn","setIsValidate","transaction","elemspan","axios","method","url","then","response","isExist","wmsPoSkuCode","wmsPoSkuCodeStatus","wmsPoSkuCodeReason","expiryDate","inboundDate","supplierName","supplierUuid","uom","photos","remove","validatePOSKUStockTransfer","payloadPO","skuNumber","skuUuid","warehouseSource","areaSource","qty","errorMessage","validateOutbountReason","tmp_data","datax","toUpperCase","validateOutbountType","validateSKUNumber","key","skuList","isSuccess","skuDescription","photo","imageMd","newGradeUom","validateStatus","validateResult","rowCount","keyy","this","hiddenRows","warehouseArea","outboundType","setCheckingCsv","editable","warehousesData","map","d","code","name","wh_area_label","label","wh_area_value","wh_outboundtype_label","wh_outboundtype_value","newFormat","validator","newValue","done","dataField","keyStatus","keyReason","stat","reason","arr_grade","includes","checkType","parseInt","isNaN","text","match","valid","message","formatter","cell","txt","sortOption","sortFunc","sortCaret","order","keyField","sort","classes","cellEdit","cellEditFactory","mode","blurToSave","nonEditableRows","dataDoubleRow","bordered","React","Component","TableResult"],"mappings":"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","file":"static/js/63.d76730a1.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nimport {  useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { TableResult } from \"Component/BootstrapTable\";\r\nimport \"../index.scss\";\r\n\r\nconst Result = (props) => {\r\n\r\n  //selector\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const selectorCsvDataResult = useSelector((state) => state.csvDataResult);\r\n  const selectorCsvFieldResult = useSelector((state) => state.csvFieldResult);\r\n\r\n  useEffect(() => { }, [selectorCsvDataResult]);\r\n\r\n\r\n  if (selectorCsvDataResult === undefined || selectorCsvDataResult === null) {\r\n    props.history.push(\"/inventory-entry/repacking/upload-target-repack\");\r\n    return 0;\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-100 d-flex flex-column stock-take-summary\">\r\n\r\n      <TableResult\r\n        columns={selectorCsvFieldResult}\r\n        tableClass=\"reviewTable\"\r\n        data={selectorCsvDataResult}\r\n      />\r\n\r\n      <div className=\"row pt-3\">\r\n        <div className=\"col-4\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn px-3 mr-3 text no-shadow\"\r\n            style={{ backgroundColor: \"#fff\" }}\r\n            onClick={() => props.history.push(\"/inventory-entry/repacking/CSV-upload\")}\r\n          >\r\n            Upload Another File\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"col-4\" style={{ lineHeight: \"40px\" }}>\r\n          Review your imported file: {selectorCsvFileName} (\r\n          {selectorCsvDataResult.length || 0} Lines)\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Result);\r\n","import React from \"react\";\r\nimport { CCard } from \"@coreui/react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"./bootstrapTable-style.scss\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport axios from \"axios\";\r\n\r\n//cell editable\r\n//doc : https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Cell%20Editing&selectedStory=Click%20to%20Edit&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\r\n\r\nclass TableEditable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validateStatus: false,\r\n      validateResult: \"Please Wait...\",\r\n      // globalData: this.props.globalData,\r\n      rowCount: 0,\r\n      keyy: 0,\r\n    };\r\n  }\r\n\r\n  changeOutboundReason = (row) => {\r\n    setTimeout(() => {\r\n      let elem = document.getElementById(`row${row}-outboundReason`);\r\n      elem.classList.add(\"red\", \"tooltip-custom\");\r\n      elem.innerHTML = `Outbound Reason Can't be empty<span class=\"tooltiptext\">Outbound Reason Can't be empty if Outbound type = 'Lainnya'</span>`;\r\n    }, 300);\r\n  }\r\n\r\n  changeWarehouseUuid = (\r\n    value,\r\n    column,\r\n    columnName,\r\n    row,\r\n    warehouseCodeList,\r\n    warehouseUuidList,\r\n    warehouseNameList\r\n  ) => {\r\n    const { setCsvDataTmp, globalData } = this.props;\r\n    let tmpdata = globalData;\r\n    var index = tmpdata.findIndex((obj) => obj.id == row);\r\n    let i = warehouseCodeList.indexOf(value);\r\n    tmpdata[index][column] = warehouseUuidList[i];\r\n    tmpdata[index][columnName] = warehouseNameList[i];\r\n\r\n    console.clear()\r\n    console.log(value,warehouseCodeList)\r\n    console.log(tmpdata)\r\n    setTimeout(async () => {\r\n      setCsvDataTmp(tmpdata);\r\n    }, 400);\r\n  };\r\n\r\n  validatePOSKU = async (id, row, idColumn) => {\r\n    const { setCsvDataTmp, globalData, setIsValidate, transaction } = this.props;\r\n    if(transaction==\"additional_inbound\"){\r\n      return;\r\n    }\r\n\r\n    let tmpdata = globalData;\r\n    try {\r\n      setIsValidate(false);\r\n      const url = \"/stocktake/rowValidationUpload\";\r\n      let elem = null;\r\n      let elemspan = null;\r\n      setTimeout(async () => {\r\n        elem = document.getElementById(`${idColumn}`);\r\n        elemspan = document.getElementById(`${idColumn}span`);\r\n        if (elem === null || elem === undefined) {\r\n          return 0;\r\n        }\r\n        elemspan.innerHTML = \"Validating\";\r\n        await axios({\r\n          method: \"post\",\r\n          url: url,\r\n          data: { data: [id] },\r\n        }).then(function (response) {\r\n          let data = response?.data?.data;\r\n          var index = tmpdata.findIndex((obj) => obj.id == row);\r\n          if (data[0] && data[0].isExist === true) {\r\n            tmpdata[index].wmsPoSkuCode = data[0].wmsPoSkuCode;\r\n            tmpdata[index].wmsPoSkuCodeStatus = true;\r\n            tmpdata[index].wmsPoSkuCodeReason = \"PO SKU Code Not Found\";\r\n            tmpdata[index].expiryDate = data[0].expiryDate;\r\n            tmpdata[index].inboundDate = data[0].inboundDate;\r\n            tmpdata[index].supplierName = data[0].supplierName;\r\n            tmpdata[index].supplierUuid = data[0].supplierUuid;\r\n            tmpdata[index].uom = data[0].uom;\r\n            tmpdata[index].photos = data[0].photos;\r\n            elem.classList.remove(\"red\");\r\n            elem.classList.add(\"hiddenTooltip\");\r\n          } else {\r\n            tmpdata[index].wmsPoSkuCodeStatus = false;\r\n            tmpdata[index].wmsPoSkuCodeReason = \"PO SKU Code Not Found\";\r\n            tmpdata[index].expiryDate = \"\";\r\n            tmpdata[index].inboundDate = \"\";\r\n            tmpdata[index].supplierName = \"\";\r\n            tmpdata[index].supplierUuid = \"\";\r\n            elem.classList.add(\"red\");\r\n            elem.classList.remove(\"hiddenTooltip\");\r\n            elemspan.innerHTML = \"PO SKU Code Not Found\";\r\n          }\r\n          setCsvDataTmp(tmpdata);\r\n        });\r\n      }, 400);\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  validatePOSKUStockTransfer= async (id, row, idColumn) => {\r\n    const { setCsvDataTmp, globalData, setIsValidate, transaction } = this.props;  \r\n    let tmpdata = globalData;\r\n    try {\r\n      setIsValidate(false);\r\n      const url = \"/stocktransfer/rowValidationUpload\";\r\n      let elem = null;\r\n      let elemspan = null;\r\n      let payloadPO = [{\r\n        \"id\": row.id,\r\n        \"poSkuCode\": id,\r\n        \"skuNumber\": row.skuNumber,\r\n        \"skuUuid\": row.skuUuid,\r\n        \"warehouseSource\": row.warehouseSource,\r\n        \"areaSource\": row.areaSource,\r\n        \"weight\": row.qty\r\n      }]; \r\n\r\n      setTimeout(async () => {\r\n        elem = document.getElementById(`${idColumn}`);\r\n        elemspan = document.getElementById(`${idColumn}span`);\r\n        if (elem === null || elem === undefined) {\r\n          return 0;\r\n        }\r\n        elemspan.innerHTML = \"Validating\";\r\n        await axios({\r\n          method: \"post\",\r\n          url: url,\r\n          data: { data: payloadPO },\r\n        }).then(function (response) {\r\n          let data = response?.data?.data;\r\n          var index = tmpdata.findIndex((obj) => obj.id == row.id); \r\n          if (data[0] && data[0].isExist === true) {\r\n            tmpdata[index]['wmsPoSkuCode'] = data[0].wmsPoSkuCode;\r\n            tmpdata[index]['wmsPoSkuCodeStatus'] = data[0].isExist;\r\n            tmpdata[index]['wmsPoSkuCodeReason'] = data[0].errorMessage;\r\n            tmpdata[index]['expiryDate'] = data[0].expiryDate;\r\n            tmpdata[index]['inboundDate'] = data[0].inboundDate;\r\n            tmpdata[index]['supplierName'] = data[0].supplierName;\r\n            tmpdata[index]['supplierUuid'] = data[0].supplierUuid;\r\n            tmpdata[index]['uom'] = data[0].uom;\r\n            tmpdata[index]['photos'] = data[0].photos;\r\n            elem.classList.remove(\"red\");\r\n            elem.classList.add(\"hiddenTooltip\");\r\n          } else {\r\n            tmpdata[index]['wmsPoSkuCodeStatus'] = false;\r\n            tmpdata[index]['wmsPoSkuCodeReason'] = \"PO SKU Code Not Found\";\r\n            tmpdata[index]['expiryDate'] = \"\";\r\n            tmpdata[index]['inboundDate'] = \"\";\r\n            tmpdata[index]['supplierName'] = \"\";\r\n            tmpdata[index]['supplierUuid'] = \"\";\r\n            elem.classList.add(\"red\");\r\n            elem.classList.remove(\"hiddenTooltip\");\r\n            elemspan.innerHTML = \"PO SKU Code Not Found\";\r\n          }\r\n          setCsvDataTmp(tmpdata);\r\n        });\r\n      }, 400);\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  validateOutbountReason = (value, row, idColumn) => {\r\n    const { globalData } = this.props;\r\n    let tmp_data = globalData;\r\n    var index = tmp_data.findIndex((obj) => obj.id == row);\r\n    let datax = tmp_data[index];\r\n    if (value == \"\" && datax[\"outboundType\"].toUpperCase() == \"LAINNYA\") {\r\n      this.changeOutboundReason(row)\r\n    }\r\n  };\r\n\r\n  validateOutbountType = (value, row, idColumn) => {\r\n    const { globalData, setIsValidate } = this.props;\r\n    let tmp_data = globalData;\r\n    setIsValidate(false);\r\n    if (value.toUpperCase() !== \"LAINNYA\") {\r\n      setIsValidate(true);\r\n      return 0;\r\n    }\r\n\r\n    var index = tmp_data.findIndex((obj) => obj.id == row);\r\n    let datax = tmp_data[index];\r\n    if (datax[\"outboundReason\"] == \"\") {\r\n      this.changeOutboundReason(row);\r\n    }\r\n  };\r\n\r\n  validateSKUNumber = async (id, row, idColumn, key) => {\r\n    const { globalData, setCsvDataTmp, setIsValidate,transaction } = this.props;\r\n    let tmp_data = globalData;\r\n    try {\r\n      setIsValidate(false);\r\n      const url = \"/oss/skuByNumbers\";\r\n      let elem = null;\r\n      let elemspan = null;\r\n      setTimeout(async () => {\r\n        elem = document.getElementById(`${idColumn}`);\r\n        elemspan = document.getElementById(`${idColumn}span`);\r\n        if (elem === null || elem === undefined) {\r\n          return 0;\r\n        }\r\n        elemspan.innerHTML = \"Validating\";\r\n        await axios({\r\n          method: \"post\",\r\n          url: url,\r\n          data: { skuList: [id] },\r\n        }).then(function (response) {\r\n          let data = response?.data?.data;\r\n          let isSuccess = response.data.isSuccess;\r\n          var index = tmp_data.findIndex((obj) => obj.id == row);\r\n          if (isSuccess === true && data.length > 0) {\r\n            tmp_data[index][key] = data[0].skuNumber;\r\n            tmp_data[index][key + \"Reason\"] = data[0].skuDescription;\r\n            tmp_data[index][key + \"Status\"] = true;\r\n            tmp_data[index][key + \"Uuid\"] = data[0].id;\r\n            elem.classList.remove(\"red\");\r\n            elem.classList.add(\"hiddenTooltip\");\r\n\r\n            //custom\r\n            if (key == \"skuNumber\") {\r\n              tmp_data[index].skuUuid = data[0].id;\r\n              tmp_data[index].photo = data[0].imageMd;\r\n            }\r\n\r\n            if (key == \"newGrade\") {\r\n              tmp_data[index].newGradeUom = data[0].uom;\r\n            }\r\n            \r\n            if(transaction==\"additional_inbound\"){\r\n              tmp_data[index].uom = data[0].uom;\r\n            }\r\n\r\n          } else {\r\n            tmp_data[index][key] = id;\r\n            tmp_data[index][key + \"Reason\"] = \"SKU Number Not Found\";\r\n            tmp_data[index][key + \"Status\"] = false;\r\n            tmp_data[index][key + \"Uuid\"] = null;\r\n            elem.classList.add(\"red\");\r\n            elem.classList.remove(\"hiddenTooltip\");\r\n            elemspan.innerHTML = \"SKU Number Not Found\";\r\n\r\n            if (key == \"skuNumber\") {\r\n              tmp_data[index].skuUuid = \"\";\r\n              tmp_data[index].photo = \"\";\r\n            }\r\n            if (key == \"newGrade\") {\r\n              tmp_data[index].newGradeUom = null;\r\n            }\r\n            if(transaction==\"additional_inbound\"){\r\n              tmp_data[index].uom = \"\";\r\n            }\r\n          }\r\n          setCsvDataTmp(tmp_data);\r\n        });\r\n      }, 400);\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      columns,\r\n      hiddenRows,\r\n      tableClass,\r\n      warehouseArea,\r\n      outboundType,\r\n      setCheckingCsv,\r\n      globalData,\r\n      editable = true,\r\n      warehousesData = [],\r\n      transaction\r\n    } = this.props;\r\n    let { validateStatus,  keyy } = this.state;\r\n\r\n    //wh\r\n    let warehouseCodeList = [];\r\n    let warehouseUuidList = [];\r\n    let warehouseNameList = [];\r\n    if (warehousesData) {\r\n      let tmp = warehousesData?.data?.map((d) => {\r\n        warehouseCodeList.push(d.code);\r\n        warehouseUuidList.push(d.id);\r\n        warehouseNameList.push(d.name);\r\n      });\r\n    }\r\n\r\n    //wh area\r\n    let wh_area_label =\r\n      warehouseArea.map((data) => data.label.toUpperCase()) || [];\r\n    let wh_area_value = warehouseArea.map((data) => data.value) || [];\r\n    let wh_outboundtype_label = !outboundType\r\n      ? []\r\n      : outboundType.map((data) => data.label.toUpperCase());\r\n    let wh_outboundtype_value = !outboundType\r\n      ? []\r\n      : outboundType.map((data) => data.value);\r\n    const newFormat = columns.map((data, index) => {\r\n      data.validator = (newValue, row, column, done) => {\r\n        let key = data.dataField;\r\n        let keyStatus = key + \"Status\";\r\n        let keyReason = key + \"Reason\";\r\n        let stat = true;\r\n        let reason = null;\r\n        let idColumn = \"row\" + row[\"id\"] + \"-\" + key;\r\n\r\n        if (key == \"wmsPoSkuCode\" && transaction==\"stockTransfer\") {\r\n          this.validatePOSKUStockTransfer(newValue, row, idColumn, key);\r\n          stat = true;\r\n        }else if(key == \"wmsPoSkuCode\" ){\r\n          this.validatePOSKU(newValue, row.id, idColumn, key);\r\n          stat = true; \r\n        }\r\n\r\n        if (key == \"skuNumber\") {\r\n          this.validateSKUNumber(newValue, row.id, idColumn, key);\r\n          stat = true;\r\n        }\r\n\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\"];\r\n        if (key == \"newGrade\" && this.props.transaction == \"waste\") {\r\n          if (!arr_grade.includes(newValue.toUpperCase())) {\r\n            reason = \"Waste Type not found\";\r\n            checkType = false;\r\n            stat = false;\r\n          } else {\r\n            row[\"newGradeUuid\"] = newValue;\r\n            row[\"newGradeUom\"] = null;\r\n          }\r\n        } else if (key == \"newGrade\") {\r\n          if (!arr_grade.includes(newValue.toUpperCase())) {\r\n            //if not waste or semi waste\r\n            if (parseInt(newValue)) {\r\n              //if number\r\n              stat = true;\r\n              this.validateSKUNumber(newValue, row.id, idColumn, key);\r\n            } else if (newValue == \"\") {\r\n              row[\"newGradeUuid\"] = null;\r\n              row[\"newGradeUom\"] = null;\r\n              stat = true;\r\n            } else {\r\n              //if not number => undefined\r\n              reason = \"Grade Undefined\";\r\n              checkType = false;\r\n              stat = false;\r\n            }\r\n          } else {\r\n            row[\"newGradeUuid\"] = newValue;\r\n            row[\"newGradeUom\"] = null;\r\n          }\r\n        }\r\n\r\n        if (key == \"outboundType\" && wh_outboundtype_value.length > 0) {\r\n          if (!wh_outboundtype_label.includes(newValue.toUpperCase())) {\r\n            stat = false;\r\n            reason = `Outbound Type Not Found`;\r\n          } else {\r\n            let i = wh_outboundtype_label.indexOf(newValue.toUpperCase());\r\n            row[\"outboundTypeCode\"] = wh_outboundtype_value[i];\r\n            stat = true;\r\n            this.validateOutbountType(newValue, row.id, idColumn);\r\n          }\r\n        }\r\n\r\n        if (key == \"outboundReason\") {\r\n          this.validateOutbountReason(newValue, row.id, idColumn);\r\n        }\r\n\r\n        if (key == \"warehouse\") {\r\n          if (!warehouseCodeList.includes(newValue)) {\r\n            stat = false;\r\n            reason = `Warehouse Not Found`;\r\n          } else {\r\n            stat = true;\r\n            this.changeWarehouseUuid(\r\n              newValue,\r\n              \"warehouseUuid\",\r\n              \"warehouseName\",\r\n              row.id,\r\n              warehouseCodeList,\r\n              warehouseUuidList,\r\n              warehouseNameList\r\n            );\r\n          }\r\n        }\r\n        if (key == \"warehouseDestination\") {\r\n          if (!warehouseCodeList.includes(newValue)) {\r\n            stat = false;\r\n            reason = `Warehouse Not Found`;\r\n          } else {\r\n            stat = true;\r\n            this.changeWarehouseUuid(\r\n              newValue,\r\n              \"warehouseDestinationUuid\",\r\n              \"warehouseDestinationName\",\r\n              row.id,\r\n              warehouseCodeList,\r\n              warehouseUuidList,\r\n              warehouseNameList\r\n            );\r\n          }\r\n          console.log(stat)\r\n        }\r\n\r\n        if (key == \"areaName\" || key == \"areaNameDestination\") {\r\n          if (!wh_area_label.includes(newValue.toUpperCase())) {\r\n            stat = false;\r\n            reason = `Warehouse Area Not Found`;\r\n          } else {\r\n            let i = wh_area_label.indexOf(newValue.toUpperCase());\r\n            if (key == \"areaNameDestination\") {\r\n              row[\"areaDestination\"] = wh_area_value[i];\r\n            } else {\r\n              row[\"areaSource\"] = wh_area_value[i];\r\n            }\r\n            stat = true;\r\n          }\r\n        }\r\n\r\n        if (key == \"newPack\") {\r\n          let checkTypenewPack = isNaN(newValue) ? false : true;\r\n          if (!checkTypenewPack) {\r\n            stat = false;\r\n            reason = `Pack Should be a number`;\r\n          } else {\r\n            stat = true;\r\n          }\r\n        } \r\n        \r\n\r\n        let checkType = null;\r\n        if (data.type == \"number\") {\r\n          checkType = isNaN(newValue) ? false : true;\r\n        } else {\r\n          checkType = true;\r\n        }\r\n        if (checkType === false) {\r\n          reason = `${data.text} Should be a ${data.type}`;\r\n        } \r\n\r\n        \r\n        if (key == \"wmsPoSkuCode\" && transaction == \"stockTransfer\") {\r\n          if(isNaN(newValue)){\r\n            checkType = false;\r\n            reason = `${data.text} Should be a number`;\r\n          } \r\n        } \r\n        setTimeout(() => {\r\n          console.log(key, transaction, checkType)\r\n        }, 3000);\r\n\r\n        //some field can null\r\n        let canNull = [\r\n          \"grade\",\r\n          \"outboundReason\",\r\n          \"ripenessLevel\",\r\n          \"newRipeness\",\r\n          \"reason\",\r\n          \"expiryDate\"\r\n        ]; \r\n\r\n        if (canNull.includes(key) && newValue === \"\") {\r\n          reason = \"\";\r\n          checkType = true;\r\n          stat = true;\r\n        } else if (key == \"grade\") {\r\n          if (!arr_grade.includes(newValue.toUpperCase())) {\r\n            reason = \"Waste Type Not Found\";\r\n            checkType = false;\r\n            stat = false;\r\n          }\r\n        }\r\n\r\n        //check ripenesslevel\r\n        if (key == \"ripenessLevel\" || key == \"newRipeness\") {\r\n          let allowedRipenessLevel = [0, 1, 2, 3];\r\n          if (\r\n            allowedRipenessLevel.includes(parseInt(newValue)) ||\r\n            newValue == \"\"\r\n          ) {\r\n            checkType = true;\r\n            stat = true;\r\n            reason = \"\";\r\n            if (newValue == \"\") {\r\n              newValue = \"\";\r\n            }\r\n          } else {\r\n            checkType = false;\r\n            stat = false;\r\n            reason = \"Undefined Ripeness Level\";\r\n          }\r\n        }\r\n\r\n        //check date\r\n        if (data.type == \"date_indo\") {\r\n          //checking date\r\n          let regex_date = /(0[1-9]|[12][0-9]|3[01])[-.](0[1-9]|1[012])[-.](19|20)\\d\\d/;\r\n          if (newValue.match(regex_date)) {\r\n            checkType = true;\r\n            stat = true;\r\n          } else if (newValue == \"\") {\r\n            checkType = true;\r\n            stat = true;\r\n          } else {\r\n            reason = `Date format must be 'dd-mm-yyyy'`;\r\n            checkType = false;\r\n            stat = false;\r\n          }\r\n        }\r\n\r\n        //set notif\r\n        row[keyReason] = reason;\r\n        if (stat && checkType) {\r\n          let specialKey = [\"wmsPoSkuCode\", \"skuNumber\"];\r\n          if (!specialKey.includes(key)) {\r\n            //some key have their own checking, so if not in array do checking error\r\n            row[keyStatus] = true;\r\n            setCheckingCsv();\r\n          }\r\n        } \r\n        \r\n        console.clear()\r\n        console.log(stat , checkType)\r\n        console.log('reason' , reason)\r\n        return {\r\n          valid: stat && checkType ? true : false,\r\n          message: reason,\r\n        };\r\n      };\r\n\r\n      data.formatter = (cell, row, index) => {\r\n        let key = data.dataField;\r\n        let keyStatus = key + \"Status\";\r\n        let keyReason = key + \"Reason\";\r\n        let stat = true;\r\n        let idColumn = \"row\" + row[\"id\"] + \"-\" + key;\r\n        let txt = row[keyReason];\r\n\r\n        if (row[keyStatus] === false) {\r\n          validateStatus = false;\r\n          stat = false;\r\n          return (\r\n            <div id={idColumn} className=\"tooltip-custom red\">\r\n              {cell}\r\n              <span id={idColumn + \"span\"} className=\"tooltiptext\">\r\n                {txt}\r\n              </span>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <div id={idColumn} className=\"tooltip-custom hiddenTooltip\">\r\n            {cell}\r\n            <span id={idColumn + \"span\"} className=\"tooltiptext\">\r\n              {txt}\r\n            </span>\r\n          </div>\r\n        );\r\n      };\r\n      return data;\r\n    });\r\n\r\n    const sortOption = {\r\n      // No need to configure sortFunc per column\r\n      sortFunc: this.sortFunc,\r\n      // No need to configure sortCaret per column\r\n      sortCaret: (order, column) => {\r\n        if (!order) return <i className=\"iconU-tableSortingNull ml-2\"></i>;\r\n        else if (order === \"asc\")\r\n          return <i className=\"iconU-tableSortingTop ml-2\"></i>;\r\n        else if (order === \"desc\")\r\n          return <i className=\"iconU-tableSortingBottom ml-2\"></i>;\r\n        return null;\r\n      },\r\n    };\r\n    // console.clear(); \r\n    console.log(globalData);\r\n    return (\r\n      <CCard className=\"table-responsive\">\r\n        <BootstrapTable\r\n          keyField=\"id\"\r\n          data={globalData}\r\n          columns={newFormat}\r\n          sort={sortOption}\r\n          classes={tableClass || null}\r\n          cellEdit={\r\n            editable === true\r\n              ? cellEditFactory({\r\n                  mode: \"click\",\r\n                  blurToSave: true,\r\n                  nonEditableRows: () => this.props.dataDoubleRow || [],\r\n                })\r\n              : null\r\n          }\r\n          bordered={false}\r\n          hiddenRows={hiddenRows}\r\n          key={keyy}\r\n        />\r\n      </CCard>\r\n    );\r\n  }\r\n}\r\n\r\nclass TableResult extends React.Component {\r\n  render() {\r\n    const { columns, tableClass, data } = this.props;\r\n\r\n    const newFormat = columns.map((data, index) => {\r\n      data.formatter = (cell, row, index) => {\r\n        let key = data.dataField;\r\n        if (key == \"uploadStatus\" && row[\"uploadStatus\"] === \"Failed\") {\r\n          return (\r\n            <div className=\"tooltip-custom red\">\r\n              {cell}\r\n              <span className=\"tooltiptext\">{row[\"uploadStatusReason\"]}</span>\r\n            </div>\r\n          );\r\n        } else if (key == \"uploadStatus\" && row[\"uploadStatus\"] === \"Success\") {\r\n          return (\r\n            <div className=\"green\">\r\n              {cell}\r\n              <span></span>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <div>\r\n            {cell}\r\n            <span></span>\r\n          </div>\r\n        );\r\n      };\r\n      return data;\r\n    });\r\n\r\n    const sortOption = {\r\n      // No need to configure sortFunc per column\r\n      sortFunc: this.sortFunc,\r\n      // No need to configure sortCaret per column\r\n      sortCaret: (order, column) => {\r\n        if (!order) return <i className=\"iconU-tableSortingNull ml-2\"></i>;\r\n        else if (order === \"asc\")\r\n          return <i className=\"iconU-tableSortingTop ml-2\"></i>;\r\n        else if (order === \"desc\")\r\n          return <i className=\"iconU-tableSortingBottom ml-2\"></i>;\r\n        return null;\r\n      },\r\n    };\r\n\r\n    return (\r\n      <CCard className=\"table-responsive\">\r\n        <BootstrapTable\r\n          keyField=\"id\"\r\n          data={data}\r\n          columns={newFormat}\r\n          sort={sortOption}\r\n          classes={tableClass || null}\r\n          bordered={false}\r\n        />\r\n      </CCard>\r\n    );\r\n  }\r\n}\r\n\r\nexport { TableResult, TableEditable };\r\n"],"sourceRoot":""}