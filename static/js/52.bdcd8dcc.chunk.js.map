{"version":3,"sources":["Page/ConfigModules/Settings/Saved.jsx","Page/ConfigModules/Settings/ActiveStock.jsx","Component/CustomTable/index.jsx","Page/ConfigModules/Settings/services.js"],"names":["Saved","submit","userName","status","useState","show","setShow","success","setSuccess","saved","headerIcon","textColor","button","date","dateFull","Date","title","message1","message2","message3","buttonText","failed","error","isError","code","data","isSuccess","console","log","window","onkeydown","e","keyCode","useEffect","_","className","onClose","size","style","minHeight","bodyOpenClassName","closeOnBackdrop","backgroundColor","opacity","wordWrap","height","fontSize","onClick","location","reload","useDimension","emptyItem","isMobile","width","tableHeight","customTableClass","ActiveStock","props","dispatch","useDispatch","useSelector","state","syncHistories","user","email","thereAreRequest","warehouseUuid","setSubmit","getSyncHistories","length","maxHeight","isSaved","value","CustomTable","v","history","push","id","editColumn","styles","color","textAlign","columns","activeStockTableHeader","syncAllHistories","type","src","loading","alt","ReactTableFixedColumns","withFixedColumns","ReactTable","getColumnWidth","rows","accessor","headerText","Math","max","map","row","toString","header","listHeader","h","index","obj","Header","Cell","sortable","resizable","headerClassName","showModal","activeTab","editColumnTemp","this","tableStatus","Fragment","showPagination","noDataText","minRows","getTdProps","rowInfo","column","instance","handleOriginal","original","cursor","isNaN","defaultPageSize","React","Component","placeholder","display","justifyContent","activeStockTableHeaderDetail"],"mappings":"ySA6GeA,EAlGD,SAAC,GAAkC,IAAD,EAA/BC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAAa,EACpBC,oBAAS,GADW,mBACrCC,EADqC,KAC/BC,EAD+B,OAEdF,qBAFc,mBAErCG,EAFqC,KAE5BC,EAF4B,KAGtCC,EAAQ,CACVF,QAAS,CACLG,WAAY,aACZC,UAAW,QACXC,OAAQ,sBACRC,KAAMC,YAAS,CAAED,KAAM,IAAIE,OAC3BC,MAAO,UACPC,SAAU,kDACVC,SAAU,GACVC,SAAU,GACVC,WAAY,UACZlB,SAAUA,GAAsB,IAEpCmB,OAAQ,CACJX,WAAY,kBACZC,UAAW,MACXC,OAAQ,oBACRC,KAAM,GACNG,MAAO,SACPC,SAAU,GACVC,SAAU,wDACVC,SAAU,sCACVC,WAAY,gBACZlB,SAAU,IAEdoB,MAAO,CACHZ,WAAY,kBACZC,UAAW,MACXC,OAAQ,oBACRC,KAAM,GACNG,MAAO,SACPC,SAAU,GACVC,SAAU,yCACVC,SAAU,sCACVC,WAAY,gBACZlB,SAAU,KAGZqB,EAA2B,OAAX,OAANpB,QAAM,IAANA,OAAA,EAAAA,EAAQqB,QAAR,OAA+BvB,QAA/B,IAA+BA,GAA/B,UAA+BA,EAAQwB,YAAvC,aAA+B,EAAcC,WAC7DC,QAAQC,IAAIL,GACZM,OAAOC,UAAY,SAAAC,GAAC,OAAkB,KAAdA,EAAEC,QAAiB1B,GAAQ,GAAS,MAC5D2B,qBAAU,SAAAC,IACU,IAAZX,IAAgC,IAAZA,GAAmBjB,GAAQ,GAC/CiB,GAASf,GAAW,GACnBe,GAASf,GAAW,KAE1B,QAACL,QAAD,IAACA,OAAD,EAACA,EAAQqB,KAAMvB,IAClB,IAAMyB,EAA6B,OAAX,OAANvB,QAAM,IAANA,OAAA,EAAAA,EAAQqB,MAAef,EAAMa,MAASf,EAAUE,EAAMF,QAAUE,EAAMY,OACxF,OACI,kBAAC,IAAD,CAAMc,UAAW9B,EAAO,KAAO,UAC3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI8B,UAAS,GACT9B,KAAMA,EAEN+B,QAAS,kBAAM,MACfC,KAAK,KACLC,MAAO,CAAEC,UAAW,SACpBC,kBAAkB,MAClBC,iBAAiB,GAEjB,yBAAKN,UAAU,2BACX,uBAAGA,UAAU,2BAEjB,kBAAC,IAAD,CAAYA,UAAU,wDAClB,6BACI,6BACI,2BAAOA,UAAS,UAAKT,EAAUf,UAAf,2BAAmDe,EAAUV,OADjF,IACgG,8BAAM,uBAAGmB,UAAS,UAAKT,EAAUhB,gBAEjI,yBAAKyB,UAAU,aAAaT,EAAUT,WAE1C,yBAAKqB,MAAO,CAAEI,gBAAiB,UAAWC,QAAS,GAAKR,UAAS,mDAA8C5B,EAAU,KAAO,WAC5H,yBAAK4B,UAAU,QACX,yBAAKA,UAAS,eAAU5B,EAAU,KAAO,WACrC,yBAAK+B,MAAO,CAAEM,SAAU,aAAcD,QAAS,EAAGE,QAAe,GAAaV,UAAS,QACnF,yBAAKA,UAAS,uBAAkB5B,EAAU,KAAO,WAAamB,EAAUb,MACxE,yBAAKyB,MAAO,CAAEQ,SAAU,QAAUX,UAAS,UAAK5B,EAAU,KAAO,SAAtB,gBAA3C,aAA+FmB,EAAUxB,eAKzH,yBAAKoC,MAAO,CAAEQ,SAAU,QAAUX,UAAS,UAAM5B,EAAiB,SAAP,KAAhB,eAA3C,UAA4FmB,EAAUP,WACtG,yBAAKmB,MAAO,CAAEQ,SAAU,QAAUX,UAAS,UAAM5B,EAAiB,SAAP,KAAhB,eAA3C,UAA4FmB,EAAUR,WACtG,yBAAKiB,UAAU,iBACX,kBAAC,IAAD,CAASY,QAAS,kBAAuB,OAAX,OAAN5C,QAAM,IAANA,OAAA,EAAAA,EAAQqB,MAAeK,OAAOmB,SAASC,SAAW3C,GAAQ,IAAQ6B,UAAS,mCAA8BT,EAAUd,SACtIc,EAAUN,kB,EC1FI8B,YAAa,KAApDL,E,EAAAA,OAAQM,E,EAAAA,UAAkBC,G,EAAPC,M,EAAOD,UAC5BE,EAAcT,EAAS,GACvBU,EAAmBH,EAAW,yBAA2B,kBA0ChDI,UAxCK,SAACC,GACjB,IAAMC,EAAWC,cACXxD,EAASyD,aAAY,SAACC,GAAD,OAAWA,EAAM1D,UACtC2D,EAAgBF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,iBAC3C5D,EAAW0D,aAAY,SAAAC,GAAK,OAAIA,EAAME,KAAKC,SAC3CC,EAAkBL,aAAY,SAAAC,GAAK,OAAIA,EAAMI,mBAC7CC,EAAgBN,aAAY,SAACC,GAAD,OAAWA,EAAME,KAAKG,iBAN7B,EASC9D,qBATD,mBASpBH,EAToB,KASZkE,EATY,KAc3B,OAJAlC,qBAAU,SAAAC,GACNkC,YAAiB,CAAEV,WAAUQ,oBAC9B,IAEqB,IAApBD,IAAyB,OAACH,QAAD,IAACA,OAAD,EAACA,EAAeO,QAMzC,yBAAKlC,UAAU,gDAAgDG,MAAO,CAAEC,UAAWM,EAAQA,OAAQA,EAAQyB,UAAWzB,IAClH,kBAAC,EAAD,CAAO0B,SAAS,EAAMtE,OAAQA,EAAQkE,UAAW,SAACK,GAAD,OAAWL,EAAUK,IAAQP,gBAAiBA,EAAiB/D,SAAUA,EAAUC,OAAQA,IAE5I,yBAAKmC,MAAO,CAAEC,UAAWe,IACrB,kBAACmB,EAAA,EAAD,CACI1B,QAAS,SAAC2B,GAAD,OAAOjB,EAAMkB,QAAQC,KAAd,wCAA6CF,QAA7C,IAA6CA,OAA7C,EAA6CA,EAAGG,MAChEC,WAAY,QACZ3C,UAAS,UAAKoB,EAAL,YACTwB,OAAQ,CAAEC,MAAO,MAAOC,UAAW,QAAS5B,MAAO,OAAQiB,UAAWhB,GACtE7B,MAAmB,OAAbqC,QAAa,IAAbA,OAAA,EAAAA,EAAeO,QAASP,EAAgB,GAC9CoB,QAASC,OAGjB,yBAAKhD,UAAU,oCACX,4BAAQY,QAAS,kBAAMqC,YAAiB,CAAElB,gBAAeC,eAAckB,KAAK,SAASlD,UAAS,UAAkB,KAAlB,yDAAkF8B,IAAD,OAAoBH,QAApB,IAAoBA,OAApB,EAAoBA,EAAeO,QAAS,WAAa,gBAAkBJ,EAAkB,gBAAkB,yBAnBtS,yBAAK9B,UAAU,gGAAgGG,MAAO,CAAEC,UAAWY,EAAY,IAAKmB,UAAWnB,EAAY,MACvK,yBAAKhB,UAAU,UAAUmD,IAAKC,IAASC,IAAI,e,mKCtBjDC,G,OAAyBC,IAAiBC,MAE1ClB,E,kDACF,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IAQVmC,eAAiB,SAACC,EAAMC,EAAUC,GAU9B,OAAoB,GATDC,KAAKC,IAAL,MAAAD,KAAI,YAChBH,EAAKK,KAAI,SAAAC,GACR,IAAI3B,EAAQ,GAEZ,MAAqB,kBADrBA,EAAQsB,EAASK,IACqB3B,EAAM4B,WAAW/B,QAC/CG,GAAS,IAAIH,WALN,QAOnB0B,EAAW1B,WAjBA,EAsBnB3D,WAAa,SAACe,EAAM4E,EAAQvB,GACxB,IAAIwB,EAAa,GA0BjB,GAzBAD,GAAUA,EAAOH,KAAI,SAACK,EAAGC,GACrB,GAAK1B,EAAW0B,GAoBZ,OADAF,EAAU,YAAOA,GAlBjB,IAIIG,EAAM,CACNC,OALY,8BACXH,EAAEG,OADS,IACD,uBAAGvE,UAAU,cAAb,MAKXwE,KAAMJ,EAAEI,KACRb,SAAUS,EAAET,SACZc,UAAyB,IAAfL,EAAEK,SACZC,UAAWN,EAAEM,YAAa,EAC1B1E,UAAWoE,EAAEpE,WAAa,KAC1B2E,gBAAiBP,EAAEO,iBAAmB,KACtCxE,MAAOiE,EAAEjE,OAAS,KAClBe,MAAOkD,EAAElD,OAAS,MAGtB,OADAiD,EAAU,sBAAOA,GAAP,CAAmBG,OAQP,UAA1B,EAAKhD,MAAMqB,WAAwB,CACnC,IAGI2B,EAAM,CACNC,OAHA,uBAAGvE,UAAU,gCAIb2D,SAAU,UACVzC,MAAO,GACPf,MAAO,CAAE2C,UAAW,WAExBqB,EAAU,sBAAOA,GAAP,CAAmBG,IAGjC,OAAOH,GA5DP,EAAKzC,MAAQ,CACTkD,WAAW,EACXC,UAAW,IACXC,eAAgB,IALL,E,qDAiET,IACEA,EAAmBC,KAAKrD,MAAxBoD,eADH,EAE4DC,KAAKzD,MAAhEyB,EAFD,EAECA,QAASzD,EAFV,EAEUA,KAAMsB,EAFhB,EAEgBA,QAASgC,EAFzB,EAEyBA,OAAQoC,EAFjC,EAEiCA,YAAahF,EAF9C,EAE8CA,UAC/CzB,EAAawG,KAAKxG,WAAWe,EAAMyD,EAAS+B,GAChD,OAEI,kBAAC,IAAMG,SAAP,KACI,kBAAC3B,EAAD,CACItD,UAAWA,EACX+C,QAASxE,EACTe,KAAMA,EACN4F,gBAAgB,EAChB/E,MAAOyC,EACPuC,WAA2B,UAAfH,EAA0B,cAAgB,iBACtDI,QAAQ,IACRV,WAAW,EACXW,WAAY,SAAC3D,EAAO4D,EAASC,EAAQC,GACjC,MAAO,CACH5E,QAAS,SAAChB,EAAG6F,GACP7E,GACEA,EAAQ0E,EAAQI,SAAUhE,EAAO6D,EAAQ3F,EAAG4F,IAEpDrF,MAAO,CACHO,OAAQ,OACRiF,SAAU/E,GAAW,UACrBkC,UAAW8C,MAAK,OAACN,QAAD,IAACA,OAAD,EAACA,EAASI,SAASH,EAAO7C,KACpC,OACA,WAIlBmD,gBAAiB,U,GAjGXC,IAAMC,WAyGjBzD,O,uDClHf,oEAAO,IAAMU,EAAyB,CAClC,CAAE9B,MAAO,OAAQqD,OAAQ,YAAayB,YAAa,YAAarC,SAAU,YAAaxD,MAAO,CAAE2C,UAAW,OAAQmD,QAAS,QAASC,eAAgB,eACrJ,CAAEhF,MAAO,OAAQqD,OAAQ,OAAQyB,YAAa,OAAQrC,SAAU,aAChE,CAAEzC,MAAO,OAAQqD,OAAQ,SAAUyB,YAAa,SAAUrC,SAAU,SAAUxD,MAAO,CAAE2C,UAAW,QAASmD,QAAS,OAAQC,eAAgB,eAC5I,CAAEhF,MAAO,OAAQqD,OAAQ,mBAAoByB,YAAa,mBAAoBrC,SAAU,kBAAmBxD,MAAO,CAAE2C,UAAW,mBAAoBmD,QAAS,OAAQC,eAAgB,cAAgBlG,UAAW,cAAe2E,gBAAiB,gBAGtOwB,EAA+B,CACxC,CAAEjF,MAAO,OAAQqD,OAAQ,kBAAmByB,YAAa,kBAAmBrC,SAAU,iBAAkBxD,MAAO,CAAE2C,UAAW,OAAQmD,QAAS,QAASC,eAAgB,eACtK,CAAEhF,MAAO,OAAQqD,OAAQ,aAAcyB,YAAa,aAAcrC,SAAU,aAC5E,CAAEzC,MAAO,OAAQqD,OAAQ,SAAUyB,YAAa,SAAUrC,SAAU,SAAUxD,MAAO,CAAE2C,UAAW,mBAAoBmD,QAAS,OAAQC,eAAgB,cAAgBlG,UAAW,cAAe2E,gBAAiB","file":"static/js/52.bdcd8dcc.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { dateFull } from 'services'\r\n\r\nconst Saved = ({ submit, userName, status }) => {\r\n    const [show, setShow] = useState(false)\r\n    const [success, setSuccess] = useState()\r\n    const saved = {\r\n        success: {\r\n            headerIcon: 'em em-tada',\r\n            textColor: 'green',\r\n            button: 'bg-green text-white',\r\n            date: dateFull({ date: new Date }),\r\n            title: 'Success',\r\n            message1: 'Active Stock already synchronize on all modules',\r\n            message2: '',\r\n            message3: '',\r\n            buttonText: 'Got it!',\r\n            userName: userName ? userName : ''\r\n        },\r\n        failed: {\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            button: 'bg-red text-white',\r\n            date: '',\r\n            title: 'Failed',\r\n            message1: '',\r\n            message2: 'Please check the detail from the Active history table',\r\n            message3: 'Active Stock failed to synchronize.',\r\n            buttonText: 'Check history',\r\n            userName: ''\r\n        },\r\n        error: {\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            button: 'bg-red text-white',\r\n            date: '',\r\n            title: 'Failed',\r\n            message1: '',\r\n            message2: 'Server error. Please Contact the admin',\r\n            message3: 'Active Stock failed to synchronize.',\r\n            buttonText: 'Check history',\r\n            userName: ''\r\n        }\r\n    }\r\n    const isError = status?.code === 500 ? false : submit?.data?.isSuccess\r\n    console.log(isError);\r\n    window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\r\n    useEffect(_ => {\r\n        if (isError === true || isError === false) setShow(true)\r\n        if (isError) setSuccess(true)\r\n        if (!isError) setSuccess(false)\r\n\r\n    }, [status?.code, submit])\r\n    const isSuccess = status?.code === 500 ? saved.error : (success ? saved.success : saved.failed)\r\n    return (\r\n        <CRow className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    className={``}\r\n                    show={show}\r\n\r\n                    onClose={() => null}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 iconU-modalClose\" ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 py-5 d-flex justify-content-between flex-column\">\r\n                        <div>\r\n                            <div>\r\n                                <label className={`${isSuccess.textColor} LatoBold mr-2 h5 mb-3`}>{isSuccess.title}</label> <span><i className={`${isSuccess.headerIcon}`}></i></span>\r\n                            </div>\r\n                            <div className='text mb-3'>{isSuccess.message1}</div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA', opacity: 1 }} className={`w-100 border rounded px-3 pt-3 pb-3 mb-3 ${success ? null : 'd-none'}`}>\r\n                            <div className='mb-0'>\r\n                                <div className={`mr-1 ${success ? null : 'd-none'}`}>\r\n                                    <div style={{ wordWrap: 'break-word', opacity: 1, height: true ? false : 0 }} className={`mr-1`}>\r\n                                        <div className={`h5 text mb-3 ${success ? null : 'd-none'}`}>{isSuccess.date}</div>\r\n                                        <div style={{ fontSize: '1rem' }} className={`${success ? null : 'd-none'} font-green`}>{`By ${isSuccess.userName}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ fontSize: '1rem' }} className={`${!success ? null : 'd-none'} text mb-3`}>{`${isSuccess.message3}`}</div>\r\n                        <div style={{ fontSize: '1rem' }} className={`${!success ? null : 'd-none'} text mb-3`}>{`${isSuccess.message2}`}</div>\r\n                        <div className='w-100 d-flex '>\r\n                            <CButton onClick={() => status?.code === 500 ? window.location.reload() : setShow(false)} className={`no-shadow px-5 mr-4 mb-3 ${isSuccess.button}`}>\r\n                                {isSuccess.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow >\r\n    );\r\n};\r\n\r\nexport default Saved;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useDimension } from 'Page/StockEntry/GeneralServices/'\r\nimport CustomTable from 'Component/CustomTable'\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport { getSyncHistories, syncAllHistories } from 'apiServices'\r\nimport { activeStockTableHeader, data } from './services'\r\nimport Saved from './Saved'\r\n\r\nconst { height, emptyItem, width, isMobile } = useDimension(200)\r\nconst tableHeight = height + 50\r\nconst customTableClass = isMobile ? 'target-movement-mobile' : 'target-movement'\r\n\r\nconst ActiveStock = (props) => {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector((state) => state.status);\r\n    const syncHistories = useSelector(state => state.syncHistories)\r\n    const userName = useSelector(state => state.user.email)\r\n    const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n    const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n    // const showSubmit = process.env.REACT_APP_API_URL === 'https://inventory-management-oss-prd.apps.aws.sayurbox.io/' ? false : true\r\n    const showSubmit = true\r\n    const [submit, setSubmit] = useState()\r\n    useEffect(_ => {\r\n        getSyncHistories({ dispatch, warehouseUuid })\r\n    }, [])\r\n\r\n    if (thereAreRequest !== 0 && !syncHistories?.length) return (\r\n        <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem + 200, maxHeight: emptyItem + 200 }}>\r\n            <img className=\"loading\" src={loading} alt=\"loading\" />\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"bg-white border radius-all w-100 active-stock\" style={{ minHeight: height, height: height, maxHeight: height }} >\r\n            <Saved isSaved={true} submit={submit} setSubmit={(value) => setSubmit(value)} thereAreRequest={thereAreRequest} userName={userName} status={status} />\r\n            {/* <PopUp status={status} /> */}\r\n            <div style={{ minHeight: tableHeight }}>\r\n                <CustomTable\r\n                    onClick={(v) => props.history.push(`/settings/active-stock/${v?.id}`)}\r\n                    editColumn={'false'}\r\n                    className={`${customTableClass} pointer`}\r\n                    styles={{ color: 'red', textAlign: 'right', width: '100%', maxHeight: tableHeight }}\r\n                    data={syncHistories?.length ? syncHistories : []}\r\n                    columns={activeStockTableHeader} />\r\n            </div>\r\n\r\n            <div className='w-100 d-flex justify-content-end'>\r\n                <button onClick={() => syncAllHistories({ warehouseUuid, setSubmit })} type=\"button\" className={`${showSubmit ? null : 'd-none'} btn px-5 mt-3 sku-item no-shadow text-white ${!thereAreRequest && syncHistories?.length ? \"bg-green\" : \"bg-lineGrey\"}`}>{thereAreRequest ? 'Processing...' : 'Update Stock Active'}</button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ActiveStock","import ReactTable from 'react-table-v6'\r\nimport 'react-table-v6/react-table.css'\r\nimport './CustomTable.scss'\r\nimport React from 'react'\r\n\r\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\r\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\r\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\r\n\r\nclass CustomTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            activeTab: '1',\r\n            editColumnTemp: {},\r\n        }\r\n    }\r\n\r\n    getColumnWidth = (rows, accessor, headerText) => {\r\n        const cellLength = Math.max(\r\n            ...rows.map(row => {\r\n                let value = '';\r\n                value = accessor(row);\r\n                if (typeof value === 'number') return value.toString().length;\r\n                return (value || '').length;\r\n            }),\r\n            headerText.length\r\n        );\r\n        return cellLength * 12\r\n    }\r\n\r\n    headerIcon = (data, header, editColumn) => {\r\n        let listHeader = []\r\n        header && header.map((h, index) => {\r\n            if (!editColumn[index]) {\r\n                let withIcon = (<span>\r\n                    {h.Header} <i className=\"iconU-sort\"> </i>\r\n                </span>\r\n                )\r\n                let obj = {\r\n                    Header: withIcon,\r\n                    Cell: h.Cell,\r\n                    accessor: h.accessor,\r\n                    sortable: h.sortable === false ? false : true,\r\n                    resizable: h.resizable || false,\r\n                    className: h.className || null,\r\n                    headerClassName: h.headerClassName || null,\r\n                    style: h.style || null,\r\n                    width: h.width || null,\r\n                }\r\n                listHeader = [...listHeader, obj]\r\n                return listHeader\r\n            } else {\r\n                listHeader = [...listHeader]\r\n                return listHeader\r\n            }\r\n        })\r\n\r\n        if (this.props.editColumn !== 'false') {\r\n            let editBtn = (\r\n                <i className='iconU-tableEdit pencilTable' />\r\n            )\r\n            let obj = {\r\n                Header: editBtn,\r\n                accessor: 'editBtn',\r\n                width: 50,\r\n                style: { textAlign: 'center' },\r\n            };\r\n            listHeader = [...listHeader, obj];\r\n        }\r\n\r\n        return listHeader;\r\n    };\r\n\r\n    render() {\r\n        const { editColumnTemp } = this.state\r\n        let { columns, data, onClick, styles, tableStatus, className } = this.props\r\n        let headerIcon = this.headerIcon(data, columns, editColumnTemp);\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <ReactTableFixedColumns\r\n                    className={className}\r\n                    columns={headerIcon}\r\n                    data={data}\r\n                    showPagination={false}\r\n                    style={styles}\r\n                    noDataText={tableStatus == \"noData\" ? 'Please Wait' : 'No  Data Found'}\r\n                    minRows='0'\r\n                    resizable={false}\r\n                    getTdProps={(state, rowInfo, column, instance) => {\r\n                        return {\r\n                            onClick: (e, handleOriginal) => {\r\n                                !!onClick &&\r\n                                    onClick(rowInfo.original, state, column, e, instance);\r\n                            },\r\n                            style: {\r\n                                height: \"3rem\",\r\n                                cursor: !!onClick && 'pointer',\r\n                                textAlign: isNaN(rowInfo?.original[column.id])\r\n                                    ? 'left'\r\n                                    : 'right',\r\n                            },\r\n                        };\r\n                    }}\r\n                    defaultPageSize={50}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CustomTable","export const activeStockTableHeader = [\r\n    { width: '100%', Header: 'SYNC DATE', placeholder: 'Sync Date', accessor: 'updatedAt', style: { textAlign: 'left', display: 'start', justifyContent: 'flex-start' } },\r\n    { width: '100%', Header: 'USER', placeholder: 'User', accessor: 'createdBy' },\r\n    { width: '100%', Header: 'MODULE', placeholder: 'Module', accessor: 'module', style: { textAlign: 'right', display: 'flex', justifyContent: 'flex-start' }, },\r\n    { width: '100%', Header: 'MESSAGE RESPONSE', placeholder: 'Message Response', accessor: 'responseMessage', style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-start' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\r\n]\r\n\r\nexport const activeStockTableHeaderDetail = [\r\n    { width: '100%', Header: 'SKU DESCRIPTION', placeholder: 'Sku Description', accessor: 'skuDescription', style: { textAlign: 'left', display: 'start', justifyContent: 'flex-start' } },\r\n    { width: '100%', Header: 'SKU NUMBER', placeholder: 'Sku Number', accessor: 'skuNumber' },\r\n    { width: '100%', Header: 'REASON', placeholder: 'Reason', accessor: 'reason', style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-start' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\r\n]\r\n\r\nexport const data = [\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n]"],"sourceRoot":""}