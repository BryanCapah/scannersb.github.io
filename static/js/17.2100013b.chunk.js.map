{"version":3,"sources":["Page/StockEntry/StockTake/index.jsx","Page/StockEntry/GeneralServices/index.js","Component/Dropdown/index.jsx","Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/SKUItem/index.jsx","Component/Modal/ModalConfirmation/services.js","Component/Modal/ModalConfirmation/index.jsx","Component/Calculator/index.jsx","assets/icons/loading/LOADING-MLS-GRAY.gif","Component/Filter/index.jsx","Component/Search/index.jsx","Component/Search/services.js","Component/Modal/PopUpDiscard/index.jsx","assets/icons/barcodeActive.svg","assets/icons/barcodeInactive.svg","assets/icons/ascOn.svg","assets/icons/ascOff.svg","assets/icons/categoryOn.svg","assets/icons/categoryOff.svg","assets/icons/deleteCategoryOn.svg","assets/icons/deleteCategoryOff.svg","assets/icons/checkHover.svg","assets/icons/checkNotHover.svg","Component/Calculator/Display.jsx","Component/Calculator/Keypad.jsx","Component/Calculator/Button.jsx","Component/Input/Decimal.jsx","assets/icons/trash.png","Component/Input/index.jsx","Component/Modal/PopUpSaved/services.js","Component/Modal/PopUpSaved/index.jsx","Component/Input/Note.jsx","Page/StockEntry/Repacking/services.js","Component/Modal/PopUpUnfinished/index.jsx","Component/Input/InputImage.jsx","Component/SingleViewModal/SkuItem.jsx","Page/StockEntry/StockTake/services.js","Component/Input/InputDatePicker.jsx","Component/Input/Excess.jsx","Component/Input/Pack.jsx","Component/SingleViewModal/services.js","Component/SingleViewModal/moduleValidation.js","Component/SingleViewModal/inputController.js","Component/SingleViewModal/index.jsx","Component/ItemListModal/SkuItem.jsx","Component/ItemListModal/index.jsx","Component/Scanner/index.jsx"],"names":["withRouter","props","dispatch","useDispatch","story","useHistory","useDimension","height","emptyItem","width","useStockTake","moduleName","thereAreRequest","moduleFirstLoad","warehouseUuid","status","isLoading","stockTakeEntryData","summary","setSummary","localEntryData","setLocalEntryData","search","setSearch","area","areaId","setAreaId","discard","setDiscard","zeroQuantity","useSingleView","getStockTakeSummary","category","updateList","action","setAction","confirmation","setConfirmation","setIsSuccess","isSuccess","isSaved","setIsSaved","createPo","setCreatePo","singleViewData","setSingleViewData","fromBarcode","setFromBarcode","postInfo","useScanner","showScanner","setShowScanner","showSkuList","setShowSkuList","isCheckedTotal","selectedSkuCheck","moduleEntry","isPlural","noLength","length","isReady","jobPost","list","useState","setCategory","sortBy","setSortBy","className","areaName","value","module","close","discardEntry","id","removeEntryModule","redirect","history","push","previousPage","goBack","refresh","areaMovement","submit","totalSku","noSkuChecking","deleteSentSKU","resetSummary","name","saveJobSheet","show","title","placeholder","options","onChangeDropdown","selected","selectedValue","showTitle","shape","color","size","checked","onChange","setSwitch","barcodeScanner","val","filter","searchHandler","desc","setModule","style","minHeight","maxHeight","sort","a","b","filterBySkuName","map","data","idx","key","img","photo","skuDescription","skuName","skuNumber","uomLabel","uomValue","totalQty","uom","unitOfMeassures","isCheckedHandler","selectSku","moduleSummary","check","singleView","responseCheck","label","src","loading","alt","tabIndex","onClick","type","resetJobSheet","hValue","wValue","dimention","document","documentElement","clientHeight","clientWidth","isMobile","useEntryDimention","showTargetRepack","heightAdj","useSelector","state","user","stockTakeFirstLoad","warehouseTypeName","setArea","useEffect","getRipenessLevel","ripeness","getWarehouseArea","areaList","storageList","typeId","getUnfinishedEntries","isExist","getData","e","console","log","useStockTakeEntry","activeSku","success","isRequired","setIsRequired","hideContent","setHideContent","allowPage","setAllowPage","poList","gradeList","totalWeight","totalWeightCount","edited","jobSheetChecker","useStockMovement","stockMovementFirstLoad","stockMovementDropdown","areaIdDesposition","stockMovementEntryData","wasteReasonList","isCheckedBefore","setIsCheckedBefore","areaMatched","setAreaMatched","added","entryIsReady","stockMovementTargetRepack","getWasteReason","_","useStockMovementEntry","useStockTransferEntry","useWaste","wasteFirstLoad","wasteEntryData","getWasteWarehouseArea","useWasteEntry","useAdditionalOutbound","outboundFirstLoad","outboundEntryData","warehouseArea","outboundAddSku","next","setNext","useAdditionalOutboundEntry","outboundTypeList","useRepacking","repackFirstLoad","repackEntryData","targetRepack","areaDestinationId","setAreaDestinationId","aId","adId","setTargetRepack","IS_LOADING","useRepackingEntry","invalidThreshold","setInvalidThreshold","activeTab","setActiveTab","totalPack","totalPackCount","moveAll","setMoveAll","props2","setTimeout","useTargetRepack","targetRepacks","slotList","slot","setSlot","tgtRpck","table","filterTargetRepack","setShowTargetRepack","totalEmptyThreshold","countThresholdIsEmpty","updateTargetRepack","useTargetMovement","targetMovements","useOutside","wrapperRef","setShow","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","Dropdown","isEmpty","entryListIdx","poListIdx","isDisabled","noMarginBottom","resetName","isMulti","hideResetOpt","zInfinity","isOpen","setIsOpen","isEmptyStyle","styles","border","elem","getElementById","position","getBoundingClientRect","defaultvalue","menuPlacement","bottom","inputId","isSearchable","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","cursor","fontWeight","theme","borderRadius","PopUp","icon","statusDisplay","cancelButtonTitle","actionButtonTitle","cancelButtonClass","actionButtonClass","actionButtonEvent","colorText","msg1","msg2","onCloseFunction","refreshOnCancel","code","message","window","onkeydown","keyCode","closeOnBackdrop","onClose","STATUS","bodyOpenClassName","location","reload","refreshPage","parentOncCloseFunction","SKUItem","skuUuId","selectAll","Img","targetMovementProgress","targetRepackProgress","setSingleViewSku","mobile","React","isChecked","setIsChecked","createPoSingleView","showProgress","totalMove","total","forEach","Number","totalUom","totalUos","onKeyDown","tabindex","minWidth","marginLeft","isFloat","max","toUpperCase","paddingLeft","paddingRight","paddingTop","paddingBottom","isCaptcha","setIsValidated","setIsType","isType","isValidated","includes","type_","parseInt","focus","setSelectionRange","split","stat","index","ModalsConfirmation","save","buttonName","areaDestinationName","warehouseDestinationName","skuListUpdate","newModule","po","itemList","item","qty","grade","_qty","isInteger","parseFloat","_sku","wasteType","_toWaste","_uom","newSku","sku","wqty","swqty","findIndex","i","s","skuListUpdateCheck","overflow","borderBottom","textAlign","maxWidth","ModalsCaptcha","setIsShowModal","submitText","text","characters","charactersLength","text_split","r","charAt","Math","floor","random","selectorCsvFileName","csvFileName","isCaptchaText","autocomplete","onKeyUp","textTransform","maxLength","Calculator","setData","useRef","calculate","result","eval","toString","setShowCalculator","showCalculator","menuOnTop","top","handleClick","getAttribute","useCalculator","ref","left","right","rowSpan","colSpan","twoSpace","exports","Filter","rectPosition","topValue","opacity","setSelected","active","setActive","handleSelected","reset","newOptions","thereIsTargetRepack","sortOptions","filterCategoryGreen","filterCategoryGrey","filterAscGreen","filterAscGrey","transition","transitionProperty","transitionDuration","currentItem","itemTextStyle","onMouseEnter","onMouseLeave","handleSingleSelected","fontSize","deleteOn","deleteOff","toLowerCase","filterBySelected","itemOpacity","tableLayout","align","checkHover","checkNotHover","Search","textSearch","filterDropdown","areaDestination","setAreaDestination","hideFilter","filterShow","setFilterShow","filterText","filterIcon","setDesc","categoryList","onKeyPress","scannerChecker","barcodeActive","barcodeInActive","filterToggle","PopUpDiscard","Display","Keypad","children","Button","data-size","data-value","data-twoSpace","Decimal","inputWidth","values","toCompare","readOnly","autoComplete","Input","submitAction","PopUpSaved","complete","updateEntry","setUpdateEntry","saved","header","headerIcon","textColor","date","dateFull","button","buttonText","failed","updateSuccess","updatedAlready","showErrorMessage","setShowErrorMessage","arrowIcon","errorText","wordWrap","handleFailed","Note","wmsPoSkuInfoId","isReadOnly","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","skuUuid","jsD","sI","getGradeRepacking","skuId","getPORepacking","warehouseId","addPoItem","expiryMs","inBoundyMs","expiryDate","inboundDate","packSize","initialWeight","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","areaSource","CREATE_JOB_SHEET","preAddSku","preAddHandler","isNewItem","submitValidation","setActiveSKU","isClear","js","jsR","description","originalUom","qtyCount","totalListItemWeightCount","moduleList","pack","note","isNaN","qtyIsEmpty","gradeIsEmpty","noteIsEmpty","ratio","grd","multiplier","standardWeight","inputWeight","packThresholdIsEmpty","packThreshold","packIsEmpty","qtyToCompareIsEmpty","slotIsEmpty","valid","checkIsSkuRequired","number","ls","listIndex","excess","PopUpUnfinished","moment","createdAt","format","InputImage","hover","setHover","backgroundImage","backgroundSize","margin","nv-file-select","uploader","accept","getGrade","getPoBySkuId","grades","expiryDateText","dateDMY","initialWeightUpdate","inboundQty","initialWeightScreenUpdate","valueOf","finish","ripenessIsEmpty","InputDatePicker","disabled","classNames","dt","Excess","hidePercent","Pack","setValue","setItemList","changedList","setTotalQty","addLine","expiryDateSelected","newList","lastList","changeValues","ddName","regexQty","outbound","outboundIsEmpty","reasonIsEmpty","reason","saveImage","image","uploadPhoto","uploadPhotoIsEmpty","test","newValue","arr","commaNumber","undefined","sliceNumber","slice","qtyToCompare","checkItemList","supplierNameSelected","inboundDateSelected","Object","assign","JSON","parse","stringify","supplierName","moduleIsEmpty","moduleCheckItemList","moduleTotalQty","stockMovementValidation","p","condition","updateInitialWeight","initialWeightFormatted","filterByDropdown","parameterList","setSupplierNameSelected","setInboundDateSelected","setExpiryDateSelected","setInboundDateOption","setExpiryDateOption","updatedInbound","noTime","poNumber","d","updatedExpiryDate","inputController","inputType","isWaste","componentConditionMovement","componentConditionStockTake","componentConditionRepack","SingleView","setIsMobile","closeModal","ripenessLevel","movement","stockTake","default","skuList","indexOf","wmsPoSkuCode","getSVSource","inboundDateList","expiryDateList","inboundDateOption","expiryDateOption","sameSKUNumber","sameSupplierName","sameInboundDate","sameExpiryDate","getPoDataByHeader","totalWeightUpdate","isFruits","filteredGradeList","rip","updateFilter","w","sw","setOptionValue","addLines","submits","SkuItem","newItem","deleteRow","Trash","totalList","setEntry","selectedSku","ItemListModal","setSkuList","getPoByPoCode","thereIsData","Scanner","previewStyle","setPoNumber","facingMode","delay","onError","onScan"],"mappings":"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","file":"static/js/17.2100013b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport Dropdown from \"Component/Dropdown\";\r\nimport Search from \"Component/Search\";\r\nimport { getStockTakeSummary, removeEntryModule, saveJobSheet } from \"apiServices\";\r\nimport SKUItem from \"Component/SKUItem\";\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport \"./index.scss\";\r\nimport { selectSku } from './services'\r\nimport { filterBySkuName, resetJobSheet, responseCheck, selectedSkuCheck, setSwitch } from \"Page/StockEntry/GeneralServices/moduleServices\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport PopUpUnfinished from 'Component/Modal/PopUpUnfinished'\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport SingleView from 'Component/SingleViewModal'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\"\r\nimport { deleteSentSKU } from 'services'\r\nimport { useDimension, useStockTake, useSingleView, useScanner } from 'Page/StockEntry/GeneralServices'\r\nimport { CSwitch } from \"@coreui/react\";\r\nimport ItemListModal from 'Component/ItemListModal'\r\nimport Scanner from 'Component/Scanner'\r\n\r\nconst StockTake = (props) => {\r\n  const dispatch = useDispatch();\r\n  const story = useHistory()\r\n  const { height, emptyItem, width } = useDimension(400)\r\n  const {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    stockTakeEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    areaId,\r\n    setAreaId,\r\n    discard,\r\n    setDiscard,\r\n    zeroQuantity\r\n  } = useStockTake({ dispatch })\r\n\r\n  const {\r\n    updateList,\r\n    action,\r\n    setAction,\r\n    confirmation,\r\n    setConfirmation,\r\n    isSuccess,\r\n    setIsSuccess,\r\n    isSaved,\r\n    setIsSaved,\r\n    createPo,\r\n    setCreatePo,\r\n    singleViewData,\r\n    setSingleViewData,\r\n    fromBarcode,\r\n    setFromBarcode,\r\n    postInfo } = useSingleView({ dispatch, setLocalEntryData, setSummary, setSearch, getStockTakeSummary, search, warehouseUuid, areaId, localEntryData, moduleName, category })\r\n\r\n  const { showScanner, setShowScanner, showSkuList, setShowSkuList } = useScanner()\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  //Condition\r\n  const isPlural = isCheckedTotal > 1 ? \"s\" : \"\"\r\n  const noLength = summary?.length ? \"flex-column\" : \"flex-row\"\r\n  const isReady = thereAreRequest === 0 && (localEntryData && localEntryData?.jobPost?.list?.length > 0)\r\n\r\n  //search\r\n  const [category, setCategory] = useState()\r\n  const [sortBy, setSortBy] = useState()\r\n\r\n  return (\r\n    <div className=\"w-100  stock-take-summary\">\r\n      <ItemListModal\r\n        moduleName={moduleName}\r\n        areaId={areaId}\r\n        areaName={area}\r\n        warehouseUuid={warehouseUuid}\r\n        showSkuList={showSkuList}\r\n        setShowSkuList={setShowSkuList}\r\n        dispatch={dispatch}\r\n        setLocalEntryData={setLocalEntryData}\r\n        localEntryData={localEntryData}\r\n        setCreatePo={setCreatePo}\r\n        thereAreRequest={thereAreRequest}\r\n        setShowScanner={(value) => setShowScanner(value)} />\r\n      <Discard\r\n        discard={discard}\r\n        module={'Inventory Entry - Stock Take'}\r\n        moduleEntry={stockTakeEntryData}\r\n        close={() => setDiscard(false)}\r\n        discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch, setDiscard })}\r\n      />\r\n      <PopUpUnfinished\r\n        discard={discard}\r\n        moduleFirstLoad={moduleFirstLoad}\r\n        moduleEntry={stockTakeEntryData}\r\n        redirect={() => props.history.push(\"/inventory-entry/stock-take/weight-entry\")}\r\n        previousPage={() => story.goBack()}\r\n        setDiscard={() => setDiscard(true)}\r\n      />\r\n      <PopUp refresh={() => updateList()} status={status} />\r\n      <SingleView\r\n        fromBarcode={fromBarcode}\r\n        status={status}\r\n        moduleName={moduleName}\r\n        moduleEntry={localEntryData}\r\n        areaMovement={area}\r\n        createPo={createPo}\r\n        setCreatePo={setCreatePo}\r\n        setSingleViewData={setSingleViewData}\r\n        setConfirmation={setConfirmation}\r\n        confirmation={confirmation} />\r\n\r\n      <PopUpSaved\r\n        moduleEntry={singleViewData}\r\n        submit={() => updateList()}\r\n        confirmation={confirmation}\r\n        setConfirmation={setConfirmation}\r\n        isSaved={isSaved}\r\n        action={action}\r\n        setIsSaved={setIsSaved}\r\n        moduleName={moduleName}\r\n        totalSku={localEntryData?.jobPost?.list.length}\r\n        setLocalEntryData={setLocalEntryData} />\r\n\r\n      <Confirmation\r\n        noSkuChecking={false}\r\n        isLoading={isLoading}\r\n        singleViewData={singleViewData}\r\n        moduleEntry={localEntryData}\r\n        confirmation={confirmation}\r\n        setConfirmation={setConfirmation}\r\n        isSuccess={postInfo}\r\n        setAction={setAction}\r\n        action={action}\r\n        submit={() => deleteSentSKU({\r\n          summary: summary,\r\n          resetSummary: setSummary,\r\n          singleViewData: singleViewData,\r\n          name: 'submit',\r\n          moduleEntry: localEntryData,\r\n          moduleName,\r\n          dispatch,\r\n          setIsSuccess,\r\n          saveJobSheet,\r\n          setLocalEntryData,\r\n          setCreatePo\r\n        })} />\r\n      {showScanner ? <Scanner\r\n        setLocalEntryData={setLocalEntryData}\r\n        setShowSkuList={(value) => setShowSkuList(value)}\r\n        showScanner={showScanner}\r\n        setShowScanner={(value) => setShowScanner(value)}\r\n        setSearch={(value) => setSearch(value)}\r\n        search={search}\r\n      /> : false}\r\n\r\n      <div className=\"px-3 pt-3 bg-white border-all radius-all d-md-flex dd-group\">\r\n        <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n          <Dropdown\r\n            show={true}\r\n            title=\"Select Area\"\r\n            placeholder='Select Area'\r\n            options={area}\r\n            onChangeDropdown={(selected) => setAreaId(selected)}\r\n            selectedValue={areaId}\r\n            showTitle={true}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white mt-3 border-all radius-all mb-3\">\r\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n          <div className=\"text LatoBold d-md-flex justify-content-between w-100 align-items-center sku-des\">\r\n            <div>\r\n              Enter SKU or Description{\" \"}\r\n              <span className=\"green\">{`(${isCheckedTotal} Selected SKU${isPlural})`}</span>\r\n            </div>\r\n            <div className='d-flex align-items-center mt-2 mt-md-0 justify-content-between'>\r\n              <span className='emptyTextField LatoBold mr-3'>Only show SKU that has 0 Initial Qty</span>\r\n              <CSwitch className=\"float-right\" shape=\"pill\" color=\"success\" size={width <= 500 ? \"sm\" : \"md\"} checked={zeroQuantity} onChange={() => isLoading ? false : setSwitch({ moduleName, search, updateList, dispatch, zeroQuantity, setSummary })} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Search\r\n          setSortBy={setSortBy}\r\n          category={category}\r\n          setCategory={setCategory}\r\n          setAreaId={setAreaId}\r\n          areaId={areaId}\r\n          useScanner={true}\r\n          showScanner={showScanner}\r\n          barcodeScanner={(value) => {\r\n            setShowScanner(value)\r\n            setFromBarcode(true)\r\n          }}\r\n          value={(val) => setSearch(val)}\r\n          placeholder={\"Enter SKU\"}\r\n          filter={false}\r\n          searchHandler={(desc) =>\r\n            areaId ?\r\n              getStockTakeSummary({\r\n                category,\r\n                moduleName,\r\n                zeroQuantity,\r\n                dispatch,\r\n                desc,\r\n                warehouseUuid,\r\n                areaId,\r\n                setModule: setSummary,\r\n                module: localEntryData\r\n              },\r\n                setSearch(desc))\r\n              :\r\n              setAreaId('empty')\r\n          }\r\n        />\r\n        <div\r\n          className={`mb-3 mt-3 d-flex align-items-center scroll-sku ${noLength} w-100 text-center`}\r\n          style={{ minHeight: height, maxHeight: height }}\r\n        >\r\n          {summary?.length ? (\r\n            summary?.sort(function (a, b) { return filterBySkuName(a, b, sortBy?.value) })?.map((data, idx) => {\r\n              return (\r\n                <SKUItem\r\n                  key={idx}\r\n                  img={data?.photo}\r\n                  skuDescription={data?.skuName}\r\n                  skuNumber={data?.skuNumber}\r\n                  uomLabel=\"weight\"\r\n                  uomValue={data?.totalQty}\r\n                  uom={data?.unitOfMeassures}\r\n                  isCheckedHandler={(checked) =>\r\n                    selectSku({\r\n                      idx,\r\n                      checked,\r\n                      dispatch,\r\n                      setLocalEntryData,\r\n                      moduleSummary: summary,\r\n                      moduleEntry: localEntryData,\r\n                      moduleName,\r\n                      warehouseUuid,\r\n                      areaId,\r\n                      zeroQuantity\r\n                    })\r\n                  }\r\n                  check={data?.checked}\r\n                  singleView={true}\r\n                  createPo={createPo}\r\n                  setCreatePo={setCreatePo}\r\n                  setFromBarcode={setFromBarcode}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem, maxHeight: emptyItem }}>\r\n              {!responseCheck({ isLoading, summary }) ? (\r\n                <img className=\"loading\" src={loading} alt=\"loading\" />\r\n              ) : areaId && summary?.length === 0 ? (\r\n                <div>\r\n                  Sorry, we couldn't find any matches\r\n                  for '<span className='LatoBold'>{search}</span>' in {areaId?.label} area.\r\n                  <br />\r\n                  Please Try search with another term.\r\n                </div>\r\n              ) : 'Enter SKU'}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* <SKUPagination/> */}\r\n      </div>\r\n      <div className=\"h-screen-summary-footer d-flex flex-column justify-content-start\">\r\n        <div className=\"w-100 d-flex align-items-center justify-content-between mb-1\">\r\n          <button\r\n            tabIndex='0'\r\n            onClick={() => props.history.push(\"/inventory-entry/stock-take/CSV-upload\")}\r\n            type=\"button\"\r\n            className=\"btn px-4 no-shadow sku-item border-all bg-white fontSizeButton\"\r\n          >\r\n            Upload File\r\n          </button>\r\n          <button\r\n            tabIndex='0'\r\n            onClick={() => {\r\n              if (isReady) {\r\n                resetJobSheet({ localEntryData, dispatch })\r\n                props.history.push(\"/inventory-entry/stock-take/weight-entry\")\r\n              }\r\n            }\r\n            }\r\n            type=\"button\" className={`btn px-5 fontSizeButton sku-item no-shadow text-white ${isReady ? \"bg-green\" : \"bg-lineGrey\"}`}\r\n          >\r\n            {(!localEntryData || localEntryData?.jobPost?.list?.length === 0) && thereAreRequest === 0 ? 'Next' : isReady ? 'Next' : 'Processing...'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(StockTake);\r\n","import { useState, useEffect } from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUnfinishedEntries, getWasteWarehouseArea, getStockTakeSummary } from \"apiServices\";\r\nimport { getWarehouseArea, getRipenessLevel, getWasteReason } from \"apiServices/dropdown\";\r\nimport { IS_LOADING } from 'apiServices/action'\r\nimport { jobSheetChecker, totalWeightCount, selectedSkuCheck, totalPackCount, filterTargetRepack, updateTargetRepack, setTargetRepack } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport { countThresholdIsEmpty } from '../Repacking/services';\r\n//dimension\r\nexport const useDimension = (hValue, wValue) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const width = document.documentElement.clientWidth\r\n  const height = dimention - (hValue ? hValue : 0)\r\n  const emptyItem = dimention - (hValue ? hValue : 0)\r\n  const isMobile = width <= 500 ? true : false\r\n  return { dimention, height, emptyItem, width, isMobile }\r\n}\r\n\r\nexport const useEntryDimention = (showTargetRepack) => {\r\n  const dimention = document.documentElement.clientWidth\r\n  let height = document.documentElement.clientHeight\r\n  let heightAdj = height - (showTargetRepack ? 535 : 290)\r\n  height = dimention <= 500 ? (showTargetRepack ? (heightAdj + 100) : heightAdj) : height\r\n\r\n  return { height, heightAdj, dimention, loading }\r\n}\r\n\r\n// Stock Take\r\nexport const useStockTake = ({ dispatch }) => {\r\n  const user = useSelector((state) => state.user)\r\n  const moduleName = 'stockTake'\r\n  const zeroQuantity = useSelector(state => state.zeroQuantity)\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTakeFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const warehouseTypeName = useSelector((state) => state.user.warehouseTypeName);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockTakeEntryData = useSelector((state) => state.stockTakeEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState({})\r\n  const [discard, setDiscard] = useState()\r\n\r\n  // use Effect\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      const storageList = areaList?.filter(data => data.typeId === 1)\r\n      if (warehouseTypeName === 'Warehouse') setAreaId(storageList?.filter(data => data.label === 'Storage Ambient')[0])\r\n      else setAreaId(storageList?.filter(data => data.label === 'Storage')[0])\r\n      setArea(areaList)\r\n      getUnfinishedEntries({ dispatch, moduleName, isExist: stockTakeEntryData ? true : false, ripeness })\r\n    }\r\n\r\n    try {\r\n      getData()\r\n    }\r\n    catch (e) {\r\n      console.log(e)\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    stockTakeEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    discard,\r\n    setDiscard,\r\n    zeroQuantity\r\n  }\r\n}\r\n\r\n// Stock Take Entry\r\nexport const useStockTakeEntry = ({ moduleEntry, activeSku }) => {\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/stock-take/weight-entry',\r\n    '/inventory-entry/stock-take/weight-entry/remove-sku',\r\n    '/inventory-entry/stock-take/weight-entry/add-sku',\r\n  ])\r\n\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    status\r\n  }\r\n}\r\n\r\n// Stock Movement\r\nexport const useStockMovement = ({ dispatch }) => {\r\n  const moduleName = 'stockMovement'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockMovementFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const stockMovementDropdown = useSelector(state => state.stockMovementDropdown)\r\n  const areaId = useSelector(state => state.areaId)\r\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockMovementEntryData = useSelector((state) => state.stockMovementEntryData);\r\n  const wasteReasonList = useSelector(state => state.wasteReasonList)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState('')\r\n  const [area, setArea] = useState()\r\n  const [areaMatched, setAreaMatched] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  // const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n\r\n\r\n  const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockMovementEntryData ? true : false, ripeness })\r\n      if (!wasteReasonList?.length) {\r\n        getWasteReason({ dispatch })\r\n      }\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(_ => {\r\n    if (areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value) setAreaMatched(true)\r\n    else setAreaMatched(false)\r\n  }, [areaId, areaIdDesposition, added])\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId, areaIdDesposition])\r\n\r\n  useEffect(_ => {\r\n    if (stockMovementTargetRepack) {\r\n      const isMatchedDropdown = areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value\r\n      if (isMatchedDropdown) {\r\n        setSummary()\r\n        getStockTakeSummary({\r\n          moduleName,\r\n          stockMovementTargetRepack,\r\n          dispatch,\r\n          desc: search,\r\n          warehouseUuid,\r\n          areaId,\r\n          areaIdDesposition,\r\n          setModule: setSummary,\r\n          module: localEntryData\r\n        })\r\n        setSearch(search)\r\n      }\r\n    }\r\n    if (!stockMovementTargetRepack) setSummary()\r\n  }, [stockMovementTargetRepack])\r\n\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    stockMovementDropdown,\r\n    areaId,\r\n    areaIdDesposition,\r\n    areaMovement,\r\n    status,\r\n    isLoading,\r\n    stockMovementEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area, setArea,\r\n    areaMatched, setAreaMatched,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    entryIsReady,\r\n    stockMovementTargetRepack\r\n  }\r\n}\r\n\r\n// Stock Movement Entry\r\nexport const useStockMovementEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/movement/weight-entry',\r\n    '/inventory-entry/movement/weight-entry/remove-sku',\r\n    '/inventory-entry/movement/weight-entry/add-sku',\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    areaMovement,\r\n    status\r\n  }\r\n}\r\n\r\n// Stock Transfer\r\nexport const useStockTransfer = ({ dispatch }) => {\r\n  const moduleName = 'stockTransfer'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTransferFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const stockTransferDropdown = useSelector(state => state.stockTransferDropdown)\r\n  const areaId = useSelector(state => state.areaId)\r\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockTransferEntryData = useSelector((state) => state.stockTransferEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaMatched, setAreaMatched] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockTransferEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(_ => {\r\n    if (areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value) setAreaMatched(true)\r\n    else setAreaMatched(false)\r\n  }, [areaId, areaIdDesposition, added])\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId, areaIdDesposition])\r\n\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    stockTransferDropdown,\r\n    areaId,\r\n    areaIdDesposition,\r\n    areaMovement,\r\n    status,\r\n    isLoading,\r\n    stockTransferEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area, setArea,\r\n    areaMatched, setAreaMatched,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    entryIsReady\r\n  }\r\n}\r\n\r\n// Stock Transfer Entry\r\nexport const useStockTransferEntry = ({ moduleEntry, activeSku }) => {\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/stock-transfer/weight-entry',\r\n    '/inventory-entry/stock-transfer/weight-entry/remove-sku',\r\n    '/inventory-entry/stock-transfer/weight-entry/add-sku',\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    areaMovement,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n// Waste\r\nexport const useWaste = ({ dispatch }) => {\r\n  const moduleName = 'waste'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.wasteFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const wasteEntryData = useSelector((state) => state.wasteEntryData);\r\n\r\n  const [areaId, setAreaId] = useState()\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const b = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      const areaId = await getWasteWarehouseArea({ warehouseUuid, setAreaId })\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: wasteEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    wasteEntryData,\r\n    areaId,\r\n    setAreaId,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal\r\n  }\r\n}\r\n\r\n// Waste Entry\r\nexport const useWasteEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/waste/weight-entry',\r\n    '/inventory-entry/waste/weight-entry/remove-sku',\r\n    '/inventory-entry/waste/weight-entry/add-sku',\r\n  ])\r\n\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    status\r\n  }\r\n}\r\n\r\n// Additional Outbound\r\nexport const useAdditionalOutbound = ({ dispatch }) => {\r\n  const moduleName = 'outbound'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.outboundFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const outboundEntryData = useSelector((state) => state.outboundEntryData);\r\n  const warehouseArea = useSelector(state => state.warehouseArea);\r\n  const outboundAddSku = useSelector(state => state.outboundAddSku)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [next, setNext] = useState(false)\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState()\r\n  const [search, setSearch] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: outboundEntryData ? true : false })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    outboundEntryData,\r\n    warehouseArea,\r\n    outboundAddSku,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    next,\r\n    setNext,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added\r\n  }\r\n}\r\n\r\n// Additional Outbound Entry\r\nexport const useAdditionalOutboundEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const { skuName, skuNumber, poList, outboundTypeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/additional-outbound/weight-entry',\r\n    '/inventory-entry/additional-outbound/remove-sku',\r\n    '/inventory-entry/additional-outbound/add-sku',\r\n  ])\r\n\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    outboundTypeList,\r\n    status\r\n  }\r\n}\r\n\r\n// Repacking\r\nexport const useRepacking = ({ dispatch }) => {\r\n  const moduleName = 'repack'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.repackFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const repackEntryData = useSelector((state) => state.repackEntryData);\r\n  const warehouseArea = useSelector(state => state.warehouseArea);\r\n  const targetRepack = useSelector(state => state.targetRepack)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState('')\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState()\r\n  const [areaDestinationId, setAreaDestinationId] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n\r\n  const setTargetRepack = (value) => {\r\n    dispatch({ type: IS_LOADING, targetRepack: value })\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const aId = areaList?.filter(area => area.label === 'Production')\r\n      const adId = areaList?.filter(area => area.label === 'Staging')\r\n      if (aId?.length) setAreaId(aId[0])\r\n      if (adId?.length) setAreaDestinationId(adId[0])\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: repackEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  useEffect(_ => {\r\n    if (targetRepack) {\r\n      setSummary()\r\n      if (areaId) getStockTakeSummary({\r\n        moduleName,\r\n        targetRepack,\r\n        dispatch,\r\n        desc: '',\r\n        warehouseUuid,\r\n        areaId,\r\n        areaIdDesposition: areaDestinationId,\r\n        setModule: setSummary,\r\n        module: localEntryData\r\n      })\r\n    }\r\n    if (!targetRepack) setSummary()\r\n  }, [targetRepack, areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    repackEntryData,\r\n    warehouseArea,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    areaDestinationId,\r\n    setAreaDestinationId,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    targetRepack,\r\n    setTargetRepack\r\n  }\r\n}\r\n\r\n// Repacking Entry\r\nexport const useRepackingEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const [invalidThreshold, setInvalidThreshold] = useState()\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/repacking/weight-entry',\r\n    '/inventory-entry/repacking/weight-entry/remove-sku',\r\n    '/inventory-entry/repacking/weight-entry/add-sku',\r\n  ])\r\n\r\n  //filter item by active slot\r\n  const [activeTab, setActiveTab] = useState(0)\r\n\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const totalPack = totalPackCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isLoading,\r\n    invalidThreshold,\r\n    setInvalidThreshold,\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    totalPack,\r\n    status,\r\n    activeTab,\r\n    setActiveTab\r\n  }\r\n}\r\n\r\n// Single view\r\nexport const useSingleView = ({ category, dispatch, setLocalEntryData, setSummary, setSearch, getStockTakeSummary, search, warehouseUuid, areaId, localEntryData, moduleName, stockMovementTargetRepack }) => {\r\n\r\n  //submit\r\n  const [action, setAction] = useState()\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: 'submit' })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [isSaved, setIsSaved] = useState()\r\n\r\n  // create po single view\r\n  const [createPo, setCreatePo] = useState()\r\n  const [singleViewData, setSingleViewData] = useState()\r\n  const [fromBarcode, setFromBarcode] = useState()\r\n\r\n\r\n  //condition move all\r\n  const [moveAll, setMoveAll] = useState()\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  // end of submit\r\n\r\n  //singleview\r\n  const updateList = (props, props2, moduleName) => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n    if (search === 'barcode') return\r\n\r\n    dispatch({ type: IS_LOADING, isLoading: true })\r\n    setTimeout(() => {\r\n      getStockTakeSummary({\r\n        category,\r\n        moduleName,\r\n        stockMovementTargetRepack: props2,\r\n        zeroQuantity: props,\r\n        singleView: true,\r\n        dispatch,\r\n        desc: search,\r\n        warehouseUuid,\r\n        areaId,\r\n        setModule: setSummary,\r\n        module: localEntryData\r\n      },\r\n        setSearch(search))\r\n    }, 10);\r\n  }\r\n\r\n  return { fromBarcode, setFromBarcode, updateList, action, setAction, confirmation, setConfirmation, isSuccess, setIsSuccess, isSaved, setIsSaved, createPo, setCreatePo, singleViewData, setSingleViewData, postInfo, moveAll, setMoveAll }\r\n}\r\n\r\n// Scanner\r\nexport const useScanner = () => {\r\n  const [showScanner, setShowScanner] = useState()\r\n  const [showSkuList, setShowSkuList] = useState()\r\n  return { showScanner, setShowScanner, showSkuList, setShowSkuList }\r\n}\r\n\r\nexport const useTargetRepack = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\r\n  const targetRepacks = useSelector(state => state.targetRepacks)\r\n  const slotList = useSelector(state => state.slotList)\r\n\r\n  const [slot, setSlot] = useState()\r\n\r\n  const { gradeList } = moduleEntry?.jobPost?.list[activeSku]\r\n  const tgtRpck = moduleEntry?.jobPost?.list[activeSku]?.poList[0]?.targetRepacks || []\r\n  const table = filterTargetRepack(tgtRpck, gradeList, activeSku, moduleEntry, slot)\r\n\r\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\r\n\r\n  const totalEmptyThreshold = countThresholdIsEmpty(moduleEntry)\r\n\r\n\r\n  //set Target Repack\r\n\r\n  useEffect(_ => {\r\n    setTargetRepack({ moduleEntry, dispatch })\r\n  }, [])\r\n\r\n  useEffect(_ => {\r\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\r\n    if (table?.data?.length) setShowTargetRepack(true)\r\n    updateTargetRepack({ data: table?.data, targetRepacks, activeSku, dispatch })\r\n  }, [table])\r\n\r\n  return { showTargetRepack, table, slot, setSlot, slotList, totalEmptyThreshold }\r\n}\r\n\r\n//use target movement\r\nexport const useTargetMovement = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\r\n  const targetRepacks = moduleEntry.jobPost.list[activeSku].poList[0]?.targetMovements\r\n  const slotList = useSelector(state => state.slotList)\r\n  const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\r\n\r\n  const [slot, setSlot] = useState()\r\n\r\n  const { gradeList } = moduleEntry.jobPost.list[activeSku]\r\n  const table = filterTargetRepack(targetRepacks, gradeList, activeSku, moduleEntry, slot, true)\r\n\r\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\r\n\r\n  useEffect(_ => {\r\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\r\n    if (table?.data?.length) setShowTargetRepack(true)\r\n    updateTargetRepack({ data: table?.data, targetRepacks, activeSku, dispatch })\r\n  }, [table])\r\n\r\n  return { showTargetRepack, table, slot, setSlot, slotList, stockMovementTargetRepack }\r\n}\r\n\r\n//use filter new item to active\r\nexport const useIsNewItem = ({ setActiveSKU, moduleEntry, selectedSku, dispatch, moduleName }) => {\r\n  const sorted = null\r\n  useEffect(() => {\r\n    let skuName = null\r\n    const newSkuList = moduleEntry?.jobPost?.list?.filter(data => data.isNewItem)\r\n    const length = newSkuList?.length\r\n    if (length) skuName = newSkuList[length - 1]?.skuName\r\n    const idx = moduleEntry?.jobPost?.list?.findIndex(data => data.skuName === skuName)\r\n    if (idx >= 0) setActiveSKU(idx)\r\n\r\n  }, [selectedSku]);\r\n  return { sorted }\r\n}\r\n\r\nexport function useOutside({ wrapperRef, setShow, show }) {\r\n  useEffect(() => {\r\n\r\n    function handleClickOutside(event) {\r\n      if (show && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n        setShow(!show)\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [wrapperRef, show]);\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom,\r\n    resetName,\r\n    isMulti,\r\n    hideResetOpt,\r\n    zInfinity\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? (styles) => {\r\n        return {\r\n            ...styles,\r\n            border: 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{ label: `-${resetName ? resetName : title}-`, value: null }]\r\n    if (options) defaultvalue = [...defaultvalue, ...options]\r\n    if (hideResetOpt) defaultvalue = defaultvalue.filter(val => val?.value)\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if (dimention <= 500) {\r\n        menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n        if (title === 'Categories') menuPlacement = 'top'\r\n    }\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                inputId={`${title}_${poListIdx}_${entryListIdx}`}\r\n                isMulti={isMulti}\r\n                isSearchable={dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : (selectedValue?.length ? selectedValue : false)}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={resetName ? resetName : placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={150}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: zInfinity ? 9999999999999999 : 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#969696',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { onClose, refreshPage } from \"./services.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { STATUS } from \"apiServices/action\";\r\n\r\nconst PopUp = ({\r\n  refresh,\r\n  status,\r\n  icon,\r\n  statusDisplay = false,\r\n  title = \"\",\r\n  cancelButtonTitle = \"Cancel\",\r\n  actionButtonTitle = \"Submit\",\r\n  cancelButtonClass = \"bg-background\",\r\n  actionButtonClass = \"bg-background\",\r\n  actionButtonEvent = null,\r\n  colorText = \"red\",\r\n  msg1 = null,\r\n  msg2 = null,\r\n  onCloseFunction = null,\r\n  refreshOnCancel = true,\r\n  setIsSuccess\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  if (status?.code === 500 ) {\r\n    icon = \"em-pensive\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 408 ) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Request Timeout\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 400 ) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n  if (status?.code === 404) {\r\n    title = \"Something wrong with the application\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n\r\n  const [show, setShow] = useState(statusDisplay);\r\n\r\n  useEffect(() => {\r\n    //from outside change\r\n    setShow(statusDisplay);\r\n  }, [statusDisplay]);\r\n\r\n  useEffect(() => {\r\n  }, [show]);\r\n\r\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\r\n  return (\r\n    <CRow className={`${show ? null : \"d-none\"}`}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          closeOnBackdrop={false}\r\n          onClose={() => {\r\n            setShow(false)\r\n            if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n            dispatch({ type: STATUS, status: null });\r\n            if (onCloseFunction) {\r\n              onCloseFunction()\r\n            }\r\n          }}\r\n          size=\"lg\"\r\n          style={{ minHeight: \"280px\" }}\r\n          bodyOpenClassName=\"p-3\"\r\n        >\r\n          {/* <div className='d-flex flex-row-reverse'>\r\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-3 border-none\">\r\n              <CModalTitle className={`text LatoBold ${colorText}`}>\r\n                {title}\r\n              </CModalTitle> */}\r\n\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <i\r\n              className=\"pr-3 pt-3 iconU-modalClose\"\r\n              onClick={() => {\r\n                setShow(false)\r\n                if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n                dispatch({ type: STATUS, status: null });\r\n                if (onCloseFunction) {\r\n                  onCloseFunction()\r\n                }\r\n              }}\r\n            ></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className={`text LatoBold ${colorText}`}>\r\n              {title} <span><i className={`em ${icon}`}></i></span>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">{msg1}</p>\r\n            <p className=\"text\">{msg2}</p>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            {cancelButtonTitle ? (\r\n              <CButton\r\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\r\n                onClick={() => {\r\n                  if (refreshOnCancel) {\r\n                    if (typeof (refresh) === 'function') refresh()\r\n                    else refreshPage({ refresh: true });\r\n                  } else {\r\n                    onClose({\r\n                      setShow,\r\n                      parentOncCloseFunction: onCloseFunction,\r\n                    });\r\n                  }\r\n                  dispatch({ type: STATUS, status: null });\r\n                }}\r\n              >\r\n                {cancelButtonTitle}\r\n              </CButton>\r\n            ) : null}\r\n            {actionButtonTitle ? (\r\n              <CButton\r\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\r\n                onClick={() => {\r\n                  if (actionButtonEvent) {\r\n                    actionButtonEvent();\r\n                    setShow(false);\r\n                  } else {\r\n                    setShow(false)\r\n                  }\r\n                }\r\n                }\r\n              >\r\n                {actionButtonTitle}\r\n              </CButton>\r\n            ) : null}{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\r\n  setShow(false);\r\n  if (parentOncCloseFunction) {\r\n    parentOncCloseFunction();\r\n  }\r\n\r\n};\r\n\r\nexport const refreshPage = ({ refresh = true }) => {\r\n  if (refresh === true) {\r\n    window.location.reload(false);\r\n  }\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport Img from 'assets/icons/sayur-box-logo.svg'\r\nimport { isFloat } from 'services'\r\nimport { CProgress } from '@coreui/react'\r\n\r\nconst SKUItem = ({\r\n    skuUuId = 123,\r\n    selectAll,\r\n    img = Img,\r\n    skuDescription = 'SKU Description',\r\n    skuNumber = '1001',\r\n    uomLabel = 'weight',\r\n    uomValue = 100.3,\r\n    uom = 'KG',\r\n    isCheckedHandler = null,\r\n    check = false,\r\n    idx = 0,\r\n    singleView,\r\n    setCreatePo,\r\n    target,\r\n    targetMovementProgress,\r\n    targetRepackProgress,\r\n    moduleName,\r\n    setFromBarcode,\r\n    setSingleViewSku\r\n}) => {\r\n    const dimention = document.documentElement.clientWidth\r\n    const mobile = dimention <= 500 ? true : false\r\n    const [isChecked, setIsChecked] = React.useState(check)\r\n    const checkHandler = () => {\r\n        setIsChecked(!isChecked)\r\n        if (isCheckedHandler) isCheckedHandler(!isChecked)\r\n    }\r\n\r\n    const createPoSingleView = () => {\r\n        setIsChecked(true)\r\n        if (typeof (setSingleViewSku) === 'function') setSingleViewSku(skuUuId)\r\n        if (typeof (setSingleViewSku) !== 'function') isCheckedHandler(true)\r\n        if (typeof (setCreatePo) === 'function') setCreatePo({ show: true, skuNumber })\r\n        if (typeof (setFromBarcode) === 'function') setFromBarcode(false)\r\n    }\r\n\r\n    const showProgress = target ? true : 'd-none'\r\n    let totalMove = 0\r\n    let total = 0\r\n\r\n    if (targetRepackProgress?.length && moduleName === 'repack') {\r\n        targetRepackProgress.forEach(data => {\r\n            totalMove += Number(data.totalPack)\r\n            total += Number(data.totalUom)\r\n        })\r\n    }\r\n\r\n\r\n    if (targetMovementProgress?.length && moduleName !== 'repack') {\r\n        totalMove = targetMovementProgress[0]?.totalMove\r\n        total = targetMovementProgress[0]?.totalUos\r\n    }\r\n\r\n    useEffect(_ => {\r\n        if (selectAll) {\r\n            setIsChecked(true)\r\n            isCheckedHandler(true)\r\n        }\r\n        if (selectAll === false) setIsChecked(false)\r\n    }, [selectAll])\r\n\r\n    return (\r\n        <div onKeyDown={(e) => e.keyCode === 13 ? createPoSingleView() : false} tabindex=\"0\" key={idx} className={`w-100 border d-md-flex sku-item justify-content-between ${mobile ? 'pl-0 pr-0' : 'pl-2 pr-3'} py-2 mb-3 rounded ${check ? 'bg-softGreen' : 'bg-white'}`}>\r\n            <div className={`d-flex align-items-center w-100 cursor-pointer ${mobile ? 'pl-2 pr-3' : 'pl-0 pr-0'}`} onClick={(checkHandler)}>\r\n                <div\r\n                    style={{ cursor: 'pointer', height: '23px', width: '23px', minWidth: '23px' }}\r\n                    className={`mr-3 text-white d-flex align-items-center rounded px-1 ${check ? 'iconU-pickCheck bg-green pl-1-5' : 'bg-borderHeader'}`} />\r\n                <img\r\n                    src={img} alt='sku image'\r\n                    className='w-5 mr-3 border softGreen rounded' />\r\n                <div className='text-left'>\r\n                    <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                    <div className='text fontSizeTitle'>{skuNumber}</div>\r\n                </div>\r\n            </div>\r\n            <hr className={`${mobile ? null : 'd-none'}`} />\r\n            <div className={`d-flex w-100 ${mobile ? 'pr-3' : 'pr-0'} pl-5 pl-md-0 align-items-center`}>\r\n                <div className={`d-flex justify-content-md-end align-items-center w-100 ${mobile ? 'justify-content-end' : null}`}>\r\n                    <div className={`w-25 mr-4 ${showProgress} tooltips`}>\r\n                        <span style={{ marginLeft: -260 }} className={`${'tooltiptext'}`}>\r\n                            <span className='pl-1 pr-1'>{moduleName === 'repack' ? 'Repack Percentage' : 'Movement Percentage'}</span>\r\n                        </span>\r\n                        <div className='latoBold'>{`${totalMove}/${total}`}<span className='font-green'>{` (${isFloat(totalMove / total * 100)}%)`}</span></div>\r\n                        <CProgress value={totalMove} max={total} className=\"mb-3\" />\r\n                    </div>\r\n                    <div className={`mr-3 iconU-sideBarDot d-flex align-items-center ${showProgress}`} />\r\n                    <div className={`my-0 mr-3 text fontSizeWeightNumber ${mobile ? 'd-none' : null}`}>{`Total ${uom.toUpperCase() === 'KG' ? uomLabel.toUpperCase() : uom.toUpperCase()}`}</div>\r\n                    <div className='mr-1 font-weight-bold green fontSizeWeightNumber'>{isFloat(uomValue)}</div>\r\n                    <div className='mr-3 font-weight-bold green fontSizeWeightNumber'>{uom}</div>\r\n                </div>\r\n                <div onClick={(createPoSingleView)} style={{ paddingLeft: '10px', paddingRight: '10px', paddingTop: '10px', paddingBottom: '8px' }} className={`${singleView ? null : 'd-none'} cursor-pointer iconU-sideBarHideRight font-weight-bold green d-flex align-items-center border rounded border-green`}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SKUItem","import { isInteger } from \"formik\";\r\n\r\nexport const next = ({\r\n  e,\r\n  state,\r\n  isCaptcha,\r\n  setIsValidated,\r\n  setIsType,\r\n  isType,\r\n  isValidated,\r\n  submit\r\n}) => {\r\n  const key = e.key; // const {key} = event; ES6+\r\n  let type = [...isType];\r\n\r\n  //if press enter\r\n  if (key === \"Enter\"){\r\n    if(isValidated){\r\n      submit();\r\n    }else{\r\n      return;\r\n    }\r\n  }\r\n\r\n  let arr_tmp = [\"ArrowUp\", \"ArrowDown\", \"Tab\",\"Delete\"];\r\n  if (arr_tmp.includes(key)) {\r\n    return 0;\r\n  } else if (key === \"Backspace\") {\r\n    let type_ = [...isType];\r\n    let state_ = type_[state];\r\n    if (state_ == \"\" && state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).value = \"\";\r\n      type_[state - 1] = \"\";\r\n      type[state - 1] = \"\";\r\n    }\r\n    console.log(type_);\r\n  } else if (key === \"ArrowLeft\") {\r\n    if (state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) - 1))\r\n        .setSelectionRange(-1, -1);\r\n\r\n      return 0;\r\n    }\r\n  } else if (key === \"ArrowRight\") {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) + 1))\r\n        .setSelectionRange(-1, -1);\r\n      return 0;\r\n    }\r\n  } else {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n    }\r\n  }\r\n\r\n  if (key === \"Backspace\") {\r\n    type[state] = \"\";\r\n  } else {\r\n    type[state] = key.toUpperCase();\r\n  }\r\n  let char = \"QWERTYUIOPLKJHGFDSAZXCVBNM1234567890\";\r\n  let allowedChar = char.split(\"\");\r\n  if (allowedChar.includes(key.toUpperCase()) || type[state] == \"\") {\r\n    document.getElementById(\"t\" + parseInt(state)).value = type[state];\r\n    setIsType(type);\r\n  } else {\r\n    return 0;\r\n  }\r\n\r\n  let stat = true;\r\n  isCaptcha.map((data, index) => {\r\n    // if (index == 0) {\r\n    //   return;\r\n    // }\r\n    if (!(type[index + 1] == isCaptcha[index])) {\r\n      stat = false;\r\n    }\r\n    console.log(type[index + 1], isCaptcha[index], stat)\r\n  });\r\n  setIsValidated(stat);\r\n};\r\n\r\nexport const skuListUpdateCheck = (module, noSkuChecking, moduleName) => {\r\n  if (module?.length) {\r\n    let newModule = [];\r\n    module.map((list) => {\r\n      list.poList.map((po) => {\r\n        po.itemList.map((item) => {\r\n          const { qty, grade } = item;\r\n          const _qty = isInteger(qty)\r\n            ? parseInt(qty)\r\n            : !qty\r\n              ? 0\r\n              : parseFloat(qty);\r\n          const _sku = noSkuChecking\r\n            ? list.skuName\r\n            : moduleName === \"waste\"\r\n              ? item.wasteType?.label\r\n                ? item.wasteType?.label\r\n                : list.skuName\r\n              : grade?.label;\r\n          const _toWaste =\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\" ||\r\n                item.wasteType?.label === \"Waste\"\r\n                ? true\r\n                : false\r\n              : grade?.label === \"Waste\" || grade?.label === \"Semi Waste\"\r\n                ? true\r\n                : false;\r\n          const _uom = noSkuChecking\r\n            ? list.unitOfMeassures\r\n            : grade?.uom === \"gram\"\r\n              ? \"kg\"\r\n              : grade?.uom;\r\n          let newSku = {\r\n            sku: _sku,\r\n            qty: _qty,\r\n            uom: _uom,\r\n            wqty: 0,\r\n            swqty: 0,\r\n          };\r\n          if (_toWaste) {\r\n            newSku.qty = 0;\r\n            newSku.sku = list.skuName;\r\n          }\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Waste\"\r\n              : grade?.label === \"Waste\"\r\n          )\r\n            newSku.wqty = _qty;\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\"\r\n              : grade?.label === \"Semi Waste\"\r\n          )\r\n            newSku.swqty = _qty;\r\n          const isExist = newModule.findIndex(\r\n            (sku) => sku?.sku === (_toWaste ? list.skuName : _sku)\r\n          );\r\n\r\n          if (moduleName !== \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (grade?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (grade?.label === \"Waste\") newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n\r\n          if (moduleName === \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (item.wasteType?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (item.wasteType?.label === \"Waste\")\r\n                newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n    const skuName = module.length ? module[0].skuName : \"No SKU\";\r\n    const i = newModule.findIndex((s) => s.sku === skuName);\r\n    newModule.forEach((sku) => {\r\n      if (i !== -1) {\r\n        if (sku.sku === \"Waste\") newModule[i].wqty = sku.qty;\r\n        if (sku.sku === \"Semi Waste\") newModule[i].swqty = sku.qty;\r\n      }\r\n    });\r\n    return newModule;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { next, skuListUpdateCheck } from \"./services.js\";\r\nimport { totalQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst ModalsConfirmation = ({ moduleEntry, confirmation, setConfirmation, save, submit, isSuccess, isLoading, moveAll, setAction, moduleName, noSkuChecking, singleViewData }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 300\r\n\r\n  let buttonName = 'Submit'\r\n\r\n  if (confirmation.name === 'save') buttonName = 'Save'\r\n  useEffect(() => {\r\n    if (isSuccess) setConfirmation({ show: false, name: null })\r\n  }, [isSuccess])\r\n  window.onkeydown = e => e.keyCode === 27 ? setConfirmation({ show: false, name: null }) : null\r\n\r\n  useEffect(() => {\r\n    setAction(confirmation.name)\r\n  }, [confirmation])\r\n\r\n  let module = singleViewData && !moveAll ? singleViewData : moduleEntry\r\n\r\n  const areaDestinationName = module?.jobPost?.areaDestinationName\r\n  const warehouseDestinationName = module?.jobPost?.warehouseDestinationName\r\n  const areaName = module?.jobPost?.areaName\r\n\r\n  const skuListUpdate = skuListUpdateCheck(module?.jobPost.list, noSkuChecking, moduleName)\r\n  return (\r\n    <CRow className={\"modalConfirmation \"+(confirmation.show ? null : 'd-none')}>\r\n      <CCol>\r\n        <CModal\r\n          show={confirmation.show}\r\n          closeOnBackdrop={false}\r\n        >\r\n          <CModalHeader className=\"px-4 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation <span><i className=\"em em-pray\"></i></span></CModalTitle>\r\n            <label tabIndex='0' onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false} onClick={() => setConfirmation({ show: false, name: null })} className='sku-item iconU-modalClose' />\r\n\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-4 py-0\" style={{ minHeight: height }}>\r\n            <p className=\"text mb-2\">\r\n              <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n              <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n              <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n              <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n              <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${moduleName === 'stockTransfer' ? warehouseDestinationName : (areaDestinationName ? areaDestinationName : areaName)} `}</span>\r\n            </p>\r\n            <p className=\"text\">\r\n              Please double check this list, this record will store to database.\r\n            </p>\r\n            <div\r\n              style={{\r\n                minHeight: height,\r\n                maxHeight: height,\r\n                overflow: \"auto\",\r\n                border: \"1px solid var(--lineGrey)\",\r\n              }}\r\n            >\r\n              <table>\r\n                <thead>\r\n                  <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                    <th style={{ color: \"var(--emptyTextField)\" }}>SKU List</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Weight</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Semi Waste</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Waste</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {skuListUpdate?.map((data) => (\r\n                    <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                      <td style={{ maxWidth: '160px' }}>{data.sku}</td>\r\n                      <td className=\"text-right py-3\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.qty)}`}\r\n                      </td>\r\n                      <td className=\"text-right text-nowrap\" style={{ textAlign: \"right\" }}>\r\n                        <span className='text-nowrap'>{`${totalQty(data?.swqty)} `}</span>\r\n                      </td>\r\n                      <td className=\"text-right\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.wqty)}`}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"px-0 pb-5 pt-0 justify-content-start border-none\">\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false}\r\n                className=\"bg-background sku-item text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n                onClick={() => setConfirmation({ show: false, name: null })}\r\n              >\r\n                Cancel\r\n            </CButton>\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? (isLoading ? null : (confirmation.name === 'save' ? save() : submit())) : false}\r\n                className={`${isLoading ? 'bg-softGreen text' : 'bg-green text-white'} no-shadow px-5 mt-4 sku-item mb-0 ml-3 mr-0`}\r\n                onClick={() => isLoading ? null : (confirmation.name === 'save' ? save() : submit())}\r\n              >\r\n                {isLoading ? 'Processing...' : buttonName}\r\n              </CButton>{\" \"}\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst ModalsCaptcha = ({\r\n  show = false,\r\n  setIsShowModal,\r\n  submit,\r\n  submitText = \"Submit\",\r\n}) => {\r\n  //random text\r\n  var text = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  var text_split = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    let r = characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    text += r;\r\n    text_split.push(r);\r\n  }\r\n\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const [isCaptcha, setIsCaptcha] = React.useState(text_split);\r\n  const [isCaptchaText, setIsCaptchaText] = React.useState(text);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n  const [isType, setIsType] = React.useState([]);\r\n\r\n  //reset if visible = false \r\n  useEffect(() => {\r\n    if (show === true) {\r\n      document.getElementById('t1').value = '';\r\n      document.getElementById('t2').value = '';\r\n      document.getElementById('t3').value = '';\r\n    }\r\n  }, [show]);\r\n\r\n  return (\r\n    <CRow className={show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          onClose={() => {\r\n            setIsShowModal(false);\r\n          }}\r\n          size=\"lg\"\r\n          style={{ height: \"400px\" }}\r\n        >\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">\r\n              Are you sure want to upload <span className=\"green\">Edited</span>{\" \"}\r\n              {selectorCsvFileName}?\r\n            </p>\r\n            <p className=\"text\">\r\n              Once uploaded this record will store to databases.\r\n            </p>\r\n            <p className=\"text mb-2\">\r\n              Please type ‘{isCaptchaText}’ on the Box to confirm upload file.\r\n            </p>\r\n\r\n            <div className=\"captcha-box\">\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 1,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                    isValidated,\r\n                    submit\r\n                  });\r\n                }}\r\n                id=\"t1\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[0]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 2,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                    isValidated,\r\n                    submit\r\n                  });\r\n                }}\r\n                id=\"t2\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input ml-0 mr-0\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[1]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 3,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                    isValidated,\r\n                    submit\r\n                  });\r\n                }}\r\n                id=\"t3\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[2]}\r\n              />\r\n            </div>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            <CButton\r\n              className=\"bg-background text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n              onClick={() => {\r\n                setIsShowModal(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </CButton>\r\n            <CButton\r\n              className={\r\n                (isValidated ? \"bg-green\" : \"bg-emptyTextField disabled\") +\r\n                \" no-shadow px-5 mt-4 mb-0 ml-3 mr-0\"\r\n              }\r\n              onClick={() => {\r\n                submit();\r\n                setIsValidated(false);\r\n              }}\r\n            >\r\n              {submitText}\r\n            </CButton>{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport { ModalsConfirmation, ModalsCaptcha };\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport './index.scss'\r\nimport Display from './Display'\r\nimport Keypad from './Keypad'\r\nimport Button from './Button'\r\nimport { useDimension, useOutside } from 'Page/StockEntry/GeneralServices'\r\n// import {} from './services'\r\n\r\nconst Calculator = (props) => {\r\n    const [data, setData] = useState('')\r\n    const wrapperRef = useRef(null);\r\n\r\n    const calculate = (onChange) => {\r\n        try {\r\n            const result = eval(data);\r\n            const value = {\r\n                value: result?.toString(),\r\n                name: props.name\r\n            }\r\n\r\n            onChange(value)\r\n            // setData(result);\r\n        } catch (e) {\r\n            console.log(e);\r\n            setData('')\r\n        }\r\n    }\r\n\r\n    useOutside({ wrapperRef, setShow: props.setShowCalculator, show: props.showCalculator });\r\n\r\n    const { isMobile } = useDimension()\r\n    // track element position\r\n    let elem = null\r\n    if (!props.singleView) elem = document?.getElementById(`dropdown${props.entryListIdx}${props.poListIdx}`);\r\n    else elem = null\r\n    let position = elem?.getBoundingClientRect()\r\n    let menuOnTop = position?.bottom > 600 ? true : false\r\n    if (isMobile) menuOnTop = position?.bottom > 400 ? true : false\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [props.showCalculator])\r\n\r\n    const top = position?.top - (menuOnTop ? (isMobile ? 400 : 320) : (isMobile ? 50 : -30))\r\n    const handleClick = e => {\r\n        const value = e.target.getAttribute('data-value');\r\n        switch (value) {\r\n            case 'clear':\r\n                props.onChange({\r\n                    value: '',\r\n                    name: props.name\r\n                })\r\n                break;\r\n            case 'clearall':\r\n                props.onChange({\r\n                    value: '',\r\n                    name: props.name\r\n                })\r\n                setData('');\r\n                break;\r\n            case 'equal':\r\n                calculate(props.onChange);\r\n                props.setShowCalculator()\r\n                break;\r\n            default:\r\n                setData(data + value);\r\n        }\r\n    }\r\n    return (\r\n        <div className={`${props.useCalculator ? null : 'd-none'} calculator ${props.className} ${isMobile ? 'px-5' : false}`} ref={wrapperRef} style={{ top, left: isMobile ? 0 : false, width: isMobile ? '100%' : false, right: props.singleView ? '1rem' : false }}>\r\n            <Display data={data} setData={setData} />\r\n            <Keypad>\r\n                <table >\r\n                    <tr>\r\n                        <td style={{ backgroundColor: 'rgba(168, 177, 190, 1)', color: 'white' }}><Button onClick={handleClick} label=\"x\" value=\"*\" /></td>\r\n                        <td style={{ backgroundColor: 'rgba(168, 177, 190, 1)', color: 'white' }}><Button onClick={handleClick} label=\"/\" value=\"/\" /></td>\r\n                        <td style={{ backgroundColor: 'rgba(168, 177, 190, 1)', color: 'white' }}><Button onClick={handleClick} label=\"+\" value=\"+\" /></td>\r\n                        <td style={{ backgroundColor: 'rgba(168, 177, 190, 1)', color: 'white' }}><Button onClick={handleClick} label=\"-\" value=\"-\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Button onClick={handleClick} label=\"7\" value=\"7\" /></td>\r\n                        <td><Button onClick={handleClick} label=\"8\" value=\"8\" /></td>\r\n                        <td><Button onClick={handleClick} label=\"9\" value=\"9\" /></td>\r\n                        <td style={{ backgroundColor: 'rgba(74, 190, 132, 1)', color: 'white' }} ><Button onClick={handleClick} label=\"CE\" value=\"clear\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Button onClick={handleClick} label=\"4\" value=\"4\" /></td>\r\n                        <td><Button onClick={handleClick} label=\"5\" value=\"5\" /></td>\r\n                        <td><Button onClick={handleClick} label=\"6\" value=\"6\" /></td>\r\n                        <td style={{ backgroundColor: 'rgba(74, 190, 132, 1)', color: 'white' }} ><Button onClick={handleClick} label=\"C\" value=\"clearall\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Button onClick={handleClick} label=\"1\" value=\"1\" /></td>\r\n                        <td><Button onClick={handleClick} label=\"2\" value=\"2\" /></td>\r\n                        <td><Button onClick={handleClick} label=\"3\" value=\"3\" /></td>\r\n                        <td style={{ backgroundColor: 'rgba(74, 190, 132, 1)', color: 'white' }} rowSpan={2}><Button onClick={handleClick} label=\"=\" value=\"equal\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan={2}><Button onClick={handleClick} label=\"0\" value=\"0\" twoSpace={true} /></td>\r\n                        <td><Button onClick={handleClick} label=\".\" value=\".\" /></td>\r\n                    </tr>\r\n                </table>\r\n            </Keypad>\r\n        </div >\r\n    )\r\n}\r\nexport default Calculator","module.exports = __webpack_public_path__ + \"static/media/LOADING-MLS-GRAY.903088aa.gif\";","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport filterAscGreen from 'assets/icons/ascOn.svg'\r\nimport filterAscGrey from 'assets/icons/ascOff.svg'\r\nimport filterCategoryGreen from 'assets/icons/categoryOn.svg'\r\nimport filterCategoryGrey from 'assets/icons/categoryOff.svg'\r\nimport deleteOn from 'assets/icons/deleteCategoryOn.svg'\r\nimport deleteOff from 'assets/icons/deleteCategoryOff.svg'\r\nimport checkHover from 'assets/icons/checkHover.svg'\r\nimport checkNotHover from 'assets/icons/checkNotHover.svg'\r\nimport { useEntryDimention } from 'Page/StockEntry/GeneralServices'\r\nimport './index.scss'\r\n\r\nconst Filter = ({\r\n    isMulti,\r\n    options,\r\n    onChange,\r\n    moduleName\r\n}) => {\r\n    const [show, setShow] = useState(false)\r\n    const { dimention } = useEntryDimention()\r\n    const isMobile = dimention <= 500 ? true : false\r\n    const wrapperRef = useRef(null);\r\n    const leftValue = () => {\r\n\r\n        if (dimention >= 1024 && dimention < 1280) return -180\r\n        if (dimention >= 1280 && dimention < 1366) return -80\r\n        if (dimention >= 1366 && dimention < 1396) return -50\r\n        if (dimention >= 1396 && dimention < 1440) return -90\r\n        if (dimention >= 1440 && dimention < 1536) return -70\r\n        if (dimention >= 1536 && dimention < 1600) return -50\r\n        if (dimention >= 1600 && dimention < 1920) return -70\r\n        if (dimention >= 1920 && dimention < 1930) return -50\r\n\r\n        // switch (dimention) {\r\n        //     case 1920:\r\n        //         return -50\r\n        //     case 1600:\r\n        //         return -70\r\n        //     case 1536:\r\n        //         return -30\r\n        //     case 1440:\r\n        //         return -70\r\n        //     case 1396:\r\n        //         return -90\r\n        //     case 1366:\r\n        //         return -50\r\n        //     case 1280:\r\n        //         return -80\r\n        //     case 1024:\r\n        //         return -180\r\n        // }\r\n    }\r\n\r\n    const topValue = (moduleName, options, isMulti) => {\r\n        switch (dimention) {\r\n            case 1024:\r\n                return -250\r\n            default:\r\n                if (moduleName === 'waste' || moduleName === 'ADD_SKU') return -100\r\n                return -220\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //handle auto adjust position\r\n\r\n    const elem = document?.getElementById(`c-filter`);\r\n    let rectPosition = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        rectPosition = elem?.getBoundingClientRect()\r\n    }, [show])\r\n\r\n    const top = rectPosition?.top + (isMobile ? -70 : topValue(moduleName, options, isMulti))\r\n\r\n    //handle klick outside\r\n\r\n    function useOutside() {\r\n        useEffect(() => {\r\n            function handleClickOutside(event) {\r\n                if (show && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n                    setShow(!show)\r\n                }\r\n            }\r\n\r\n            // Bind the event listener\r\n            document.addEventListener(\"mousedown\", handleClickOutside);\r\n            return () => {\r\n                // Unbind the event listener on clean up\r\n                document.removeEventListener(\"mousedown\", handleClickOutside);\r\n            };\r\n        }, [wrapperRef, show]);\r\n    }\r\n\r\n    useOutside();\r\n\r\n    const maxHeight = show ? 280 : 0\r\n    const opacity = show ? 1 : 0\r\n\r\n    const left = isMobile ? '1rem' : leftValue()\r\n    const right = isMobile ? '1rem' : false\r\n    const position = isMobile ? 'fixed' : 'absolute'\r\n    const minWidth = isMobile ? '100% !important' : 250\r\n\r\n    // data variable\r\n    const [search, setSearch] = useState('')\r\n    const [selected, setSelected] = useState(isMulti ? [] : {})\r\n    const [active, setActive] = useState(false)\r\n    const handleSelected = ({ options, item, setSelected, reset }) => {\r\n        let newOptions = options?.map(data => data)\r\n        newOptions = newOptions.map(data => {\r\n            if (item === data.value) data.selected = !data.selected\r\n            if (reset) data.selected = false\r\n            return data\r\n        })\r\n        newOptions = newOptions.filter(data => data.selected)\r\n        setSelected(newOptions)\r\n        if (typeof (onChange) === 'function') onChange(newOptions)\r\n    }\r\n\r\n    const handleSingleSelected = (selected) => {\r\n        setSelected(selected)\r\n        if (typeof (onChange) === 'function') onChange(selected)\r\n        setShow(false)\r\n    }\r\n    const filterBySelected = ((a, b) => {\r\n        if (a.selected && !b.selected) return -1\r\n        else if (!a.selected && b.selected) return 1\r\n        else return 0\r\n    })\r\n\r\n    const targetRepack = useSelector(state => state.targetRepack)\r\n    const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\r\n    const thereIsTargetRepack = (targetRepack && moduleName === 'repack') || (stockMovementTargetRepack && moduleName === 'stockMovement') ? true : false\r\n\r\n\r\n    let sortOptions = [\r\n        { value: 'asc', label: 'Ascending' },\r\n        { value: 'desc', label: 'Descending' },\r\n        { target: true, value: 'tasc', label: 'Most Completion Target' },\r\n        { target: true, value: 'tdesc', label: 'Least Completion Target' },\r\n    ]\r\n\r\n    return (\r\n        <div className='position-sticky'>\r\n            <div>\r\n\r\n                <img className='cursor-pointer' id='c-filter' src={isMulti ? (selected?.length ? filterCategoryGreen : filterCategoryGrey) : (selected?.label ? filterAscGreen : filterAscGrey)} onClick={() => setShow(true)} />\r\n\r\n            </div>\r\n            <div ref={wrapperRef} className='text mt-3 rounded shadow py-2'\r\n                style={{\r\n                    zIndex: 1040,\r\n                    transition: 'max-height ease-in',\r\n                    transitionProperty: 'all',\r\n                    transitionDuration: '0.15s',\r\n                    maxHeight,\r\n                    opacity,\r\n                    minWidth,\r\n                    backgroundColor: 'white',\r\n                    top,\r\n                    position,\r\n                    left,\r\n                    right,\r\n                    overflow: 'hidden',\r\n                    // display: show ? false : 'none'\r\n                }}>\r\n\r\n                <div style={{ zIndex: 1040, maxHeight: 230, overflow: 'scroll' }} className={`hide-scrollbar ${isMulti ? 'd-none' : null}`}>\r\n                    {\r\n                        !isMulti && sortOptions?.map(data => {\r\n                            const currentItem = data.label === active ? true : false\r\n                            const itemOpacity = currentItem ? 1 : 0\r\n                            const itemTextStyle = currentItem ? (active === data.label ? 'green' : 'text') : 'emptyTextField'\r\n\r\n                            return (\r\n                                <div\r\n                                    onMouseEnter={() => setActive(data.label)}\r\n                                    onMouseLeave={() => setActive(null)}\r\n                                    onClick={() => handleSingleSelected(data)}\r\n                                    style={{ minHeight: 40, backgroundColor: 'white' }}\r\n                                    className={`${data.target ? (thereIsTargetRepack ? null : 'd-none') : null} filter-items rounded cursor-pointer w-100 d-flex justify-content-between align-items-center px-3 ${data?.label === selected?.label ? 'LatoBold text' : false} ${itemTextStyle}`}>\r\n                                    {data.label}\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                <div className={`px-2 ${isMulti ? null : 'd-none'}`}>\r\n                    <div className='border rounded w-100 d-flex justify-content-between align-items-center pl-3 pr-2' style={{ height: 40, }}>\r\n                        <input id='filter-input' value={search} placeholder='Search Category' onChange={e => setSearch(e.target.value)} type='text' className='plain-input m-0 p-0' style={{\r\n                            color: '#969696'\r\n                            , fontSize: '1rem'\r\n                        }} />\r\n                        <div className='green'>\r\n                            <img\r\n                                src={selected?.length ? deleteOn : deleteOff}\r\n                                alt=\"delete icon\"\r\n                                className=\"cursor-pointer\"\r\n                                onClick={(e) => handleSelected({ options, setSelected, reset: true })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ zIndex: 1040, maxHeight: 230, overflow: 'scroll' }} className='hide-scrollbar'>\r\n                    {\r\n                        isMulti && options?.filter(name => {\r\n                            if (search?.length) {\r\n                                if (name.label.toLowerCase().includes(search.toLowerCase())) return name\r\n                            }\r\n                            else return name\r\n                        }).sort(function (a, b) { return filterBySelected(a, b) }).map((data, idx) => {\r\n                            const currentItem = selected.filter(item => item?.value === data?.value)?.length ? true : false\r\n                            const itemOpacity = currentItem ? 1 : 0\r\n                            const itemTextStyle = isMulti ? (currentItem ? (active === idx ? 'green' : 'text') : 'emptyTextField') : (selected ? 'text' : 'emptyTextField')\r\n\r\n                            return (\r\n                                <div\r\n                                    onMouseEnter={() => setActive(idx)}\r\n                                    onMouseLeave={() => setActive(null)}\r\n                                    onClick={() => handleSelected({ options, item: data.value, setSelected })}\r\n                                    style={{ minHeight: 40, backgroundColor: 'white' }}\r\n                                    className={`filter-items rounded cursor-pointer w-100 d-flex justify-content-between align-items-center ${itemTextStyle}`}>\r\n                                    <table style={{ tableLayout: 'fixed', width: '100%' }}>\r\n                                        <tr>\r\n                                            <td align={'center'} style={{ width: '20%' }} ><img style={{ opacity: itemOpacity }} src={active === idx && currentItem ? checkHover : checkNotHover} /></td>\r\n                                            <td style={{ width: '80%' }} >{data.label}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Filter","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { filterToggle } from './services'\r\nimport barcodeActive from 'assets/icons/barcodeActive.svg'\r\nimport barcodeInActive from 'assets/icons/barcodeInactive.svg'\r\nimport Filter from 'Component/Filter'\r\n\r\nconst Search = ({\r\n    placeholder = '',\r\n    textSearch = '', //text search\r\n    searchHandler = null, //fungsi ketika tombol search di klik\r\n    barcodeScanner,\r\n    filter = '', //isi dari filter\r\n    width = 'w-100',\r\n    className = null,\r\n    filterDropdown = null,\r\n    value,\r\n    showScanner,\r\n    areaId,\r\n    setAreaId,\r\n    areaDestination,\r\n    setAreaDestination,\r\n    moduleName,\r\n    setSearch,\r\n    category,\r\n    setCategory,\r\n    setSortBy,\r\n    hideFilter,\r\n    useScanner\r\n}) => {\r\n    const [filterShow = false, setFilterShow] = useState()\r\n    let filterText = ''\r\n    let filterIcon = ''\r\n    if (filterShow) {\r\n        filterText = \"Show Filter\"\r\n        filterIcon = ''\r\n\r\n    } else {\r\n        filterText = `Hide Filter`\r\n        filterIcon = <i className=\"p-2 rounded-circle bg-background iconU-entryTrash\"></i>\r\n    }\r\n    //params\r\n    const [desc, setDesc] = useState('')\r\n    const categoryList = useSelector(state => state.categoryList)\r\n\r\n    const search = (e) => {\r\n        if (e.key === 'Enter') searchHandler(desc)\r\n    }\r\n\r\n    const scannerChecker = ({ areaId, areaDestination, setAreaId, setAreaDestination, barcodeScanner, moduleName }) => {\r\n        if (moduleName !== 'stockMovement') {\r\n            if (areaId?.value) {\r\n                barcodeScanner(true)\r\n                return\r\n            }\r\n            if (typeof (setAreaId) === 'function') setAreaId('empty')\r\n            return\r\n        }\r\n        if (moduleName === 'stockMovement') {\r\n            if (!areaId?.value) {\r\n                setAreaId('empty')\r\n                return\r\n            }\r\n            if (!areaDestination?.value) {\r\n                setAreaDestination('empty')\r\n                return\r\n            }\r\n            if (areaId?.value === areaDestination?.value) {\r\n                setAreaDestination('empty')\r\n                return\r\n            }\r\n            if (typeof (barcodeScanner) === 'function') barcodeScanner(true)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"search-bar w-100\">\r\n            <div className=\"bg-white d-flex justify-content-between border-all radius-all pl-3 pr-1 py-1 search-m w-100\">\r\n                <div className=\"d-flex align-items-center sub-search-m w-100\">\r\n                    <i className=\"iconU-searchBarSearch fontSizeTitle emptyTextField border-right pr-3\"></i>\r\n                    <div className=\"px-lg-3 px-0 input-search d-flex align-items-center\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"borber-none plain-input\"\r\n                            placeholder={placeholder}\r\n                            onChange={(e) => {\r\n                                setDesc(e.target.value)\r\n                                if (typeof (setSearch) === 'function') setSearch(e.target.value)\r\n                                // value(e.target.value)\r\n                            }}\r\n                            onKeyPress={(e) => search(e)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={`w-100 d-flex align-items-center mb-md-0 mb-3 ${hideFilter ? 'd-none' : null}`}>\r\n                    <div className='mr-2 w-100 d-flex justify-content-end'>\r\n                        {/* <Dropdown\r\n                            isMulti={true}\r\n                            noMarginBottom={true}\r\n                            onChangeDropdown={(selected) => {\r\n                                if (typeof (setCategory) === 'function') setCategory(selected)\r\n                            }}\r\n                            selectedValue={category}\r\n                            options={categoryList}\r\n                            className='w-30'\r\n                            placeholder='Select Category'\r\n                            title='Categories'\r\n                            show /> */}\r\n\r\n                    </div>\r\n                    <div className='mr-md-2'>\r\n                        <Filter\r\n                            moduleName={moduleName}\r\n                            selectedValue={category}\r\n                            options={categoryList}\r\n                            onChange={(selected) => setSortBy(selected)}\r\n                        />\r\n                    </div>\r\n                    <div className=''>\r\n                        <Filter\r\n                            moduleName={moduleName}\r\n                            isMulti={true}\r\n                            selectedValue={category}\r\n                            options={categoryList}\r\n                            onChange={(selected) => setCategory(selected)}\r\n                        />\r\n                    </div>\r\n                    <div className='mr-0 mr-md-2'>\r\n                        <img onClick={() => scannerChecker({ areaId, areaDestination, setAreaId, setAreaDestination, barcodeScanner, moduleName })} className={`ml-2 pointer ${useScanner ? null : 'd-none'}`} src={showScanner ? barcodeActive : barcodeInActive} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"text d-flex align-items-center btn-c-m\" style={{ width: 'fit-content' }}>\r\n                    {filter ?\r\n                        <div className=\"text pointer d-flex sub-btn-m\" onClick={() => filterToggle({ filterShow, setFilterShow })}><div className=\"filter-text\">{filterText}</div> <span className=\"px-3\"><i className=\"fontSizeTitle iconU-searchFilter pr-3\"></i>{filterIcon}</span></div> : null}\r\n                    <button className=\"btn px-5 py-2 text-white bg-green LatoBold no-shadow\" style={{ height: \"fit-content !important\" }} onClick={() => searchHandler(desc)} >Search</button>\r\n                </div>\r\n            </div>\r\n            <div>{(!filterShow ? <div className='w-100'> {filterDropdown} </div> : null)}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","\r\nexport const filterToggle = ({ filterShow, setFilterShow }) => {\r\n    setFilterShow(!filterShow)\r\n}","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    return (\r\n        <CRow onKeyDown={e => e.keyCode === 27 ? close() : false} className={discard ? null : 'd-none'}>\r\n            <CCol onKeyDown={e => e.keyCode === 27 ? close() : false}>\r\n                <CModal\r\n                    onClose={() => close()}\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                            from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-4 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","module.exports = __webpack_public_path__ + \"static/media/barcodeActive.f2ec13af.svg\";","module.exports = __webpack_public_path__ + \"static/media/barcodeInactive.dc8d7118.svg\";","module.exports = __webpack_public_path__ + \"static/media/ascOn.cccbb7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/ascOff.d8a8c79c.svg\";","module.exports = __webpack_public_path__ + \"static/media/categoryOn.5bc834d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/categoryOff.ffb704a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteCategoryOn.fc3f380e.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteCategoryOff.fc0332a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkHover.4cfe8e6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkNotHover.a429f43c.svg\";","import React from 'react'\r\n\r\nconst Display = (props) => {\r\n    return (\r\n        <div className='display'>\r\n            {props.data}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display","import React from 'react'\r\nconst Keypad = (props) => {\r\n    return (\r\n        <div className='keypad'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Keypad","import React from 'react'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <div\r\n            className=\"button w-100\"\r\n            onClick={props.onClick}\r\n            data-size={props.size}\r\n            data-value={props.value}\r\n            data-twoSpace={props.twoSpace}\r\n        >\r\n            {props.label}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useState } from 'react'\r\nimport Calculator from 'Component/Calculator'\r\nimport { useDimension } from 'Page/StockEntry/GeneralServices'\r\nconst Decimal = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title,\r\n    toCompare,\r\n    useCalculator,\r\n    singleView\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' || uom === 'KG' ? true : false\r\n    const [showCalculator, setShowCalculator] = useState()\r\n    const { isMobile } = useDimension()\r\n\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input readOnly={useCalculator && isMobile ? true : false} onClick={() => setShowCalculator(!showCalculator)} id={`wgt_${poListIdx}_${entryListIdx}`} maxLength='12' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={toCompare ? 'weightToCompare' : 'weight'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n            <Calculator\r\n                singleView={singleView}\r\n                useCalculator={useCalculator}\r\n                className={showCalculator ? null : 'd-none'}\r\n                setShowCalculator={setShowCalculator}\r\n                showCalculator={showCalculator}\r\n                onChange={(val) => onChange(null, val)}\r\n                name={toCompare ? 'weightToCompare' : 'weight'}\r\n                entryListIdx={entryListIdx}\r\n                poListIdx={poListIdx} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Decimal","module.exports = __webpack_public_path__ + \"static/media/trash.121a7b10.png\";","import React from 'react'\r\nimport Calculator from 'Component/Calculator'\r\nimport { useState } from 'react'\r\nimport { useDimension } from 'Page/StockEntry/GeneralServices'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title,\r\n    name,\r\n    useCalculator,\r\n    singleView\r\n}) => {\r\n    let show = uom === 'gram' || uom === 'kg' ? false : true\r\n    const [showCalculator, setShowCalculator] = useState()\r\n    const { isMobile } = useDimension()\r\n\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input readOnly={useCalculator && isMobile ? true : false} onClick={() => setShowCalculator(!showCalculator)} id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n            <Calculator\r\n                singleView={singleView}\r\n                useCalculator={useCalculator}\r\n                className={showCalculator ? null : 'd-none'}\r\n                setShowCalculator={setShowCalculator}\r\n                showCalculator={showCalculator}\r\n                onChange={(val) => onChange(null, val)}\r\n                name={'qty'}\r\n                entryListIdx={entryListIdx}\r\n                poListIdx={poListIdx} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","export const submitAction = ({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) => {\r\n    if (confirmation.name === 'submit') {\r\n        if (moveAll) setLocalEntryData()\r\n        submit()\r\n        setIsSaved()\r\n\r\n    }\r\n    else {\r\n        setIsSaved()\r\n    }\r\n}\r\n\r\nexport const message = ({ moduleEntry, complete }) => {\r\n    if (moduleEntry?.jobPost) {\r\n        let messageReturn = null\r\n        const { areaDestinationName, areaName } = moduleEntry?.jobPost\r\n        if (areaDestinationName) messageReturn = ` ${areaName} reefer ${areaDestinationName} - `\r\n        else messageReturn = ` ${areaName} - `\r\n        return messageReturn\r\n    }\r\n}\r\n\r\nexport const handleFailed = ({ setIsSaved, setConfirmation, action, setLocalEntryData }) => {\r\n    setIsSaved()\r\n    setConfirmation({ show: false, name: action })\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { dateFull } from 'services'\r\nimport { submitAction, message, handleFailed } from './services'\r\n\r\nconst PopUpSaved = ({\r\n    isSaved,\r\n    moduleName,\r\n    totalSku,\r\n    setIsSaved,\r\n    confirmation,\r\n    setConfirmation,\r\n    submit,\r\n    action,\r\n    moduleEntry,\r\n    complete,\r\n    setLocalEntryData,\r\n    moveAll,\r\n    status,\r\n    updateEntry,\r\n    setUpdateEntry\r\n}) => {\r\n    const saved = {\r\n        success: {\r\n            header: confirmation.name === 'submit' ? 'Success ! ' : 'Saved !',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: `${confirmation.name === 'submit' ? 'Submitted' : 'Saved'} successfully`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        failed: {\r\n            header: `${confirmation.name === 'submit' ? 'Submit' : 'Save'} Failed`,\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            date: dateFull({}),\r\n            sku: '',\r\n            module: `Sorry `,\r\n            status: 'item not recorded.',\r\n            button: 'bg-red',\r\n            buttonText: 'Try Again'\r\n        },\r\n        updateSuccess: {\r\n            header: 'Updated',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: ` updated successfully.`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        updatedAlready: {\r\n            header: 'Already Updated',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: ` already updated`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        }\r\n    }\r\n    let data = isSaved ? saved.success : saved.failed\r\n    const [showErrorMessage, setShowErrorMessage] = useState(false)\r\n\r\n    let show = isSaved === true || isSaved === false ? true : false\r\n\r\n    if (updateEntry === true || updateEntry === false) {\r\n        data = updateEntry === true ? saved.updateSuccess : (updateEntry === false ? saved.updatedAlready : saved.success)\r\n        if (updateEntry) show = true\r\n        else if (updateEntry === false) show = true\r\n        else {\r\n            if (typeof (setUpdateEntry) === 'function') {\r\n                setUpdateEntry()\r\n                show = false\r\n            }\r\n        }\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_saved')\r\n    if (focus) focus.focus()\r\n\r\n    const arrowIcon = showErrorMessage ? 'iconU-arrowTop' : 'iconU-arrowBottom'\r\n    const opacity = isSaved ? 1 : (showErrorMessage ? 1 : 0)\r\n    const errorText = showErrorMessage ? 'Hide Message' : 'Show Message'\r\n\r\n    const reset = () => {\r\n        setIsSaved()\r\n        if (typeof (setUpdateEntry) === 'function') setUpdateEntry()\r\n    }\r\n    return (\r\n        <CRow onKeyDown={e => e.keyCode === 27 ? setIsSaved() : false} className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    className={`${isSaved ? null : 'popup-saved'}`}\r\n                    show={show}\r\n\r\n                    onClose={() => {\r\n                        if (isSaved) submitAction({ confirmation, setIsSaved, submit })\r\n                        if (!isSaved) setIsSaved()\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit }) : reset()} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${data.textColor} LatoBold mr-2 h5 mb-3`}>{data.header}</label> <span><i className={`${data.headerIcon}`}></i></span>\r\n                        <div className='mr-1 h5 mb-3'>{`Entries ${data.status}`}</div>\r\n                        <div className={updateEntry ? 'mb-3 h5' : 'd-none'}>Please continue your work.</div>\r\n                        <div onClick={() => setShowErrorMessage(!showErrorMessage)} className={`d-flex align-items-center mr-1 mb-3 error-message pointer ${isSaved || updateEntry === true || updateEntry === false ? 'd-none' : null}`}>\r\n                            <div className={`mr-2 ${arrowIcon}`} />\r\n                            <div className='green'>{errorText}</div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA', opacity: opacity }} className='w-100 border rounded px-3 pt-3 pb-3 mb-3'>\r\n                            <div className={`h5 mb-3 ${isSaved ? null : 'd-none'}`}>{data.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className={`mr-1 ${isSaved ? null : 'd-none'}`}>{`${message({ moduleEntry, complete })} ${data.sku}`}</label>\r\n                                <div className={`mr-1 ${isSaved || updateEntry ? 'd-none' : null}`}>\r\n                                    <div style={{ wordWrap: 'break-word !important', opacity: opacity, height: showErrorMessage ? false : 0 }} className={`mr-1 `}>\r\n                                        {`${status?.message?.toString() ? status?.message?.toString() : 'The transaction cannot be processed. Please update current entries'}`}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`mb-2 h5 ${confirmation.name === 'submit' || updateEntry ? 'd-none' : null}`}>Please continue your work</div>\r\n                        <div className='w-100 d-flex '>\r\n                            <CButton onClick={() => reset()} className={`text no-shadow px-5 mr-4 mb-3 ${`bg-softGreen ${isSaved ? 'd-none' : null}`}`}>\r\n                                Cancel\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => setUpdateEntry()} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button} ${updateEntry === true || updateEntry === false ? null : 'd-none'}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) : handleFailed({ setIsSaved, setConfirmation, action })} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button} ${updateEntry === true || updateEntry === false ? 'd-none' : null}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","import React from 'react'\r\nconst Note = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    isReadOnly,\r\n    poListIdx\r\n}) => {\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${grade === 'Waste' ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} border rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`note_${poListIdx}_${entryListIdx}`} readOnly={isReadOnly} autoComplete='off' className='w-100 plain-input' value={values} name='note' onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","import { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { getPORepacking } from 'apiServices'\r\nimport { getGradeRepacking } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { checkIsSkuRequired, filterBySkuName, totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    areaDestinationId }) => {\r\n    try {\r\n        let moduleSummaryNew = [...moduleSummary]\r\n        moduleSummaryNew[idx].checked = checked\r\n        dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n        const selectedData = moduleSummaryNew?.filter(ldata => {\r\n            if (ldata.checked) return ldata\r\n        })\r\n        let jsSelector = []\r\n        if (moduleEntry) {\r\n            moduleEntry.jobPost.list.map(data => {\r\n                const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n                if (jsList.skuUuid) {\r\n                    jsSelector.push(jsList.skuUuid)\r\n                }\r\n            })\r\n        }\r\n        let jsD = []\r\n        const a = selectedData.map(async (list, sI) => {\r\n            const isInclude = jsSelector.includes(list.skuUuid)\r\n            if (!isInclude) {\r\n                const grade = await getGradeRepacking({ skuId: list.skuUuid })\r\n                list['gradeList'] = grade\r\n                const data = await getPORepacking({ skuId: list.skuUuid, warehouseId: warehouseUuid, uom: list.unitOfMeassures })\r\n                if (data) {\r\n                    const addPoItem = [\r\n                        {\r\n                            itemList: [],\r\n                            expiryMs: null,\r\n                            inBoundyMs: null,\r\n                            expiryDate: null,\r\n                            inboundDate: null,\r\n                            skuUuid: list.skuUuid,\r\n                            uom: list.unitOfMeassures,\r\n                            packSize: list.packSize,\r\n                            category: list.category,\r\n                            initialWeight: Number.isInteger(data?.data.totalWeight) ? parseInt(data?.data.totalWeight) : parseFloat(data?.data.totalWeight),\r\n                            targetRepacks: data?.data.targetRepacks\r\n                        }\r\n                    ]\r\n                    list['poList'] = addPoItem\r\n                    jsD.push(list)\r\n                }\r\n\r\n            }\r\n        })\r\n        const aF = await Promise.all(a)\r\n        let newJs = []\r\n        if (moduleEntry) {\r\n            newJs = moduleEntry.jobPost.list.concat(jsD)\r\n        }\r\n        if (!moduleEntry) newJs = jsD\r\n\r\n        const uncheckedSku = moduleSummaryNew[idx]\r\n        if (!uncheckedSku.checked) {\r\n            newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n        }\r\n\r\n        const id = moduleEntry?.jobPost?.id\r\n        const jobSheet = {\r\n            jobPost: {\r\n                id: id ? id : 0,\r\n                warehouseSource: warehouseUuid,\r\n                warehouseDestination: warehouseUuid,\r\n                areaSource: parseInt(areaId?.value),\r\n                areaName: areaId?.label,\r\n                areaDestination: parseInt(areaDestinationId?.value),\r\n                areaDestinationName: areaDestinationId?.label,\r\n                list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\r\n            }\r\n        }\r\n        if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n        setLocalEntryData(jobSheet)\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    try {\r\n        let moduleSummaryNew = [...moduleSummary]\r\n        moduleSummaryNew[idx].checked = checked\r\n\r\n        const selectedData = moduleSummaryNew?.filter(ldata => {\r\n            if (ldata.checked) return ldata\r\n        })\r\n        let jsSelector = []\r\n        if (moduleEntry) {\r\n            moduleEntry.map(data => {\r\n                const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n                if (jsList.skuUuid) {\r\n                    jsSelector.push(jsList.skuUuid)\r\n                }\r\n            })\r\n        }\r\n        let jsD = []\r\n        const a = selectedData.map(async (list, sI) => {\r\n            const isInclude = jsSelector.includes(list.skuUuid)\r\n            if (!isInclude) {\r\n                const grade = await getGradeRepacking({ skuId: list.skuUuid })\r\n                list['gradeList'] = grade\r\n                const data = await getPORepacking({ skuId: list.skuUuid, warehouseId: warehouseUuid, uom: list.unitOfMeassures })\r\n                if (data) {\r\n                    const addPoItem = [\r\n                        {\r\n                            itemList: [],\r\n                            expiryMs: null,\r\n                            inBoundyMs: null,\r\n                            expiryDate: null,\r\n                            inboundDate: null,\r\n                            skuUuid: list.skuUuid,\r\n                            uom: list.unitOfMeassures,\r\n                            packSize: list.packSize,\r\n                            category: list.category,\r\n                            initialWeight: isFloat(data?.data.totalWeight) ? isFloat(data?.data.totalWeight) : data?.data.totalWeight,\r\n                            targetRepacks: data?.data.targetRepacks\r\n                        }\r\n                    ]\r\n                    list['poList'] = addPoItem\r\n                    list.isNewItem = true\r\n                    jsD.push(list)\r\n                }\r\n\r\n            }\r\n        })\r\n        const aF = await Promise.all(a)\r\n        let newJs = []\r\n        if (moduleEntry) {\r\n            newJs = moduleEntry.concat(jsD)\r\n        }\r\n        if (!moduleEntry) newJs = jsD\r\n\r\n        const uncheckedSku = moduleSummaryNew[idx]\r\n        if (!uncheckedSku.checked) {\r\n            newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n        }\r\n        preAddHandler(newJs);\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired, setInvalidThreshold }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    let invalidThreshold = []\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        let description = data.originalUom\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            const { packSize, targetRepacks } = po\r\n            const isTargetRepacks = targetRepacks?.length ? true : false\r\n            po.itemList.map(item => {\r\n                const { qty, grade, pack, note } = item\r\n\r\n                if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                    item.qtyIsEmpty = false\r\n                    item.gradeIsEmpty = false\r\n                    item.noteIsEmpty = false\r\n                    item.packIsEmpty = false\r\n                    item.packThresholdIsEmpty = false\r\n                }\r\n                else {\r\n                    if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        let grd = data.gradeList.filter(grd => grd.value === grade.value)\r\n                        let ratio = grd[0].multiplier\r\n                        let standardWeight = description?.toLowerCase() == 'gram' ? packSize / 1000 : packSize\r\n                        let inputWeight = qty / pack\r\n                        inputWeight = inputWeight - (standardWeight / ratio)\r\n                        inputWeight = inputWeight / (standardWeight / ratio)\r\n                        inputWeight = inputWeight * 100\r\n                        if (inputWeight >= 51 || inputWeight <= -20) {\r\n                            item.packThresholdIsEmpty = true\r\n                            invalidThreshold.push(true)\r\n                        }\r\n                        else {\r\n                            item.packThresholdIsEmpty = false\r\n                            invalidThreshold.push(false)\r\n                        }\r\n                        item.packThreshold = isFloat(inputWeight)\r\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        isNaN(pack) || pack == 0 || pack === \"\" || pack === null ? item.packIsEmpty = true : item.packIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        if (isTargetRepacks) {\r\n                            // !slot?.value && slot?.value?.toString() !== '0' ? item.slotIsEmpty = true : item.slotIsEmpty = false\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item.packIsEmpty || item?.noteIsEmpty || item?.qtyToCompareIsEmpty || item?.slotIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(false)\r\n    }\r\n    else {\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    if (!invalidThreshold.includes(true)) {\r\n        if (typeof (setInvalidThreshold) === 'function') setInvalidThreshold(false)\r\n    }\r\n    else {\r\n        if (typeof (setInvalidThreshold) === 'function') setInvalidThreshold(true)\r\n    }\r\n\r\n    // if (!isClear.includes(false) && valid && !invalidThreshold.includes(true)) {\r\n    if (!isClear.includes(false) && valid) {\r\n        if (invalidThreshold.includes(true)) return\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}\r\n\r\nexport const countThresholdIsEmpty = (js) => {\r\n\r\n    let number = []\r\n    if (js.jobPost.list.length) {\r\n        js.jobPost.list.map((ls, listIndex) => {\r\n            if (ls.poList.length) {\r\n                ls.poList.map((po, poListIdx) => {\r\n                    if (po.itemList.length) {\r\n                        po.itemList.map((item, entryListIdx) => {\r\n                            if (item.packThresholdIsEmpty) {\r\n                                number.push({ skuName: ls.skuName, id: `pack_${poListIdx}_${entryListIdx}`, excess: item.packThreshold, slot: item.slot, activeSku: listIndex })\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    return number\r\n}","import React from \"react\";\r\nimport moment from 'moment'\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpUnfinished = ({ moduleEntry, redirect, previousPage, discard, setDiscard, moduleFirstLoad }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    const show = discard || !moduleEntry ? false : true\r\n\r\n    if (!moduleFirstLoad) return (\r\n        <CModal\r\n            show={true}\r\n            size=\"lg\"\r\n            closeOnBackdrop={false}\r\n        >\r\n            <div className=\"green h4 w-100 text-center p-4\">\r\n                Checking Unfinished Entry\r\n            </div>\r\n        </CModal>\r\n    )\r\n    return (\r\n        <CRow onKeyDown={e => e.keyCode === 27 ? previousPage() : false} className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={show}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => previousPage()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pt-3 border-none\">\r\n                        <CModalTitle className=\"green LatoBold respon-txt\">Unfinished Entry Left! <span><i className=\"em em-speak_no_evil\"></i></span></CModalTitle>\r\n                    </CModalHeader>\r\n                    <CModalBody className=\"px-5 py-0\" style={{ minHeight: height }}>\r\n                        <p className=\"text mb-3 fontSizeWeightNumber\">\r\n                            You must complete the Entry that you worked on :\r\n                        </p>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100  rounded p-3 d-flex justify-content-between align-items-center'>\r\n                            <div>\r\n                                <div className=\"respon-txt\">{moment(moduleEntry?.jobPost?.createdAt).format(\"dddd, MMMM DD YYYY, h:mm:ss a\")}</div>\r\n                                <div className=\"green respon-txt\">\r\n                                    {`${moduleEntry?.jobPost?.areaName} - ${moduleEntry?.jobPost?.list.length} SKU${moduleEntry?.jobPost?.list.length > 1 ? '(s)' : ''}`}\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={() => setDiscard()} className='iconU-entryTrash emptyTextField' style={{ opacity: 0.5, fontSize: '1.2rem' }} />\r\n                        </div>\r\n                        <p className=\"text mt-3 fontSizeWeightNumber\">\r\n                            Do you want to continue this Entries ?\r\n                        </p>\r\n                        <br />\r\n                    </CModalBody>\r\n\r\n                    <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n                        <CButton onClick={() => previousPage()} className=\"bg-background text no-shadow px-5 mb-0 mx-0\">\r\n                            Later\r\n                        </CButton>\r\n                        <CButton onClick={() => redirect()} className=\"bg-green no-shadow px-5 mb-0 ml-3 mr-0\">\r\n                            Continue\r\n                        </CButton>{\" \"}\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpUnfinished\r\n","import React, { useState } from 'react'\r\n\r\nconst InputImage = ({\r\n    isEmpty,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title\r\n}) => {\r\n    const [hover, setHover] = useState()\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n\r\n    return (\r\n        <div name='upload' className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`} onClick={() => hover && values ? onChange() : null}>\r\n            <div className={` pb-1 LatoBold text-nowrap ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div\r\n                onMouseLeave={() => setHover()}\r\n                onMouseEnter={() => setHover(true)}\r\n                style={{\r\n                    backgroundImage: `url(${values})`,\r\n                    backgroundSize: 'cover',\r\n                    opacity: 0.7,\r\n                    width: values ? 42 : false\r\n                }}\r\n                id='input-img'\r\n                className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green bg-white d-flex w-fit-content px-2 justify-content-center align-items-center input-height d-flex mr-3`}\r\n            >\r\n                {\r\n                    values && hover ?\r\n                        <div className=\"hand-cursor\" style={{ margin: 0 }}>\r\n                            <span style={{ fontSize: values ? 25 : false }} className={`photo_text hidden-xs ${values ? (hover ? 'iconU-entryTrash css-2613qy-menu' : null) : \" iconU-entryPhotos\"}`} />\r\n                        </div>\r\n                        :\r\n                        <label className=\"hand-cursor\" style={{ margin: 0 }}>\r\n                            <input name='upload' type=\"file\" nv-file-select uploader=\"$ctrl.uploader\" accept=\"image/x-png,image/gif,image/jpeg\" onChange={(e) => onChange(e)} />\r\n                            <span className=\"fa fa-camera\" />\r\n                            <span style={{ fontSize: values ? 25 : false }} className={`photo_text hidden-xs ${values ? (hover ? 'iconU-entryTrash css-2613qy-menu' : null) : \" iconU-entryPhotos\"}`} />\r\n                        </label>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputImage","import React from 'react'\r\nimport Img from 'assets/icons/sayur-box-logo.svg'\r\nimport { isFloat } from 'services'\r\n\r\nconst SKUItem = ({\r\n    img = Img,\r\n    skuDescription = 'SKU Description',\r\n    skuNumber = '1001',\r\n    uomLabel = 'weight',\r\n    uomValue = 100.3,\r\n    uom = 'KG',\r\n    isCheckedHandler = null,\r\n    check = false,\r\n    idx = 0,\r\n    singleView\r\n}) => {\r\n    const [isChecked, setIsChecked] = React.useState(check)\r\n    return (\r\n        <div key={idx} className={`w-100 d-md-flex justify-content-between pl-3 pr-2 py-3 mb-0 ${isChecked ? 'bg-softGreen' : null}`}>\r\n            <div className='d-flex align-items-center w-100 cursor-pointer'>\r\n                <img\r\n                    style={{ width: '50px', height: '50px' }}\r\n                    src={img} alt='sku image'\r\n                    className='w-5 mr-2 border softGreen rounded' />\r\n                <div className='text-left w-100'>\r\n                    <div className='mr-2 text LatoBold'>{skuDescription}</div>\r\n                    <div className='w-100 d-flex justify-content-between align-items-center mt-1 m-md-0'>\r\n                        <div className='text'>{skuNumber}</div>\r\n                        <div className='d-flex justify-content-md-end align-items-center '>\r\n                            <div className='mr-1 font-weight-bold green'>{isFloat(uomValue)}</div>\r\n                            <div className='mr-2 font-weight-bold green'>{uom}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SKUItem","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET, IS_LOADING } from 'apiServices/action'\r\nimport { getPoBySkuId } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { isFloat, dateDMY } from 'services'\r\nimport { checkIsSkuRequired, filterBySkuName } from '../GeneralServices/moduleServices'\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    zeroQuantity }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew, finish: false })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName, zeroQuantity })\r\n            if (data) {\r\n                const grades = list.gradeList.filter(grade => { return grade?.value === list.skuUuid })\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = [\r\n                        {\r\n                            qty: poList.initialWeight,\r\n                            grade: grades[0],\r\n                            // ripeness: { value: String(poList.ripenessLevel), label: poList.ripenessLevel },\r\n                            expiryDate: poList?.expiryDate,\r\n                            expiryDateText: dateDMY({ date: poList?.expiryDate })\r\n                        }\r\n                    ]\r\n                    poList.initialWeightUpdate = poList.inboundQty - poList.initialWeight\r\n                    poList.initialWeightScreenUpdate = parseInt(0)\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    dispatch({ type: IS_LOADING, finish: true })\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaId?.value),\r\n            list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    setLocalEntryData(jobSheet)\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    zeroQuantity,\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName, zeroQuantity })\r\n            if (data) {\r\n                const grades = list.gradeList.filter(grade => { return grade?.value === list.skuUuid })\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = [\r\n                        {\r\n                            qty: poList.initialWeight,\r\n                            grade: grades[0],\r\n                            // ripeness: { value: String(poList.ripenessLevel), label: poList.ripenessLevel },\r\n                            expiryDate: poList?.expiryDate,\r\n                            expiryDateText: dateDMY({ date: poList?.expiryDate })\r\n                        }\r\n                    ]\r\n                    poList.initialWeightScreenUpdate = parseInt(0)\r\n                    poList.initialWeightUpdate = poList.inboundQty - poList.initialWeight\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                list.isNewItem = true\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const { qty, grade, ripeness, note } = item\r\n\r\n                if (po.category === 'Fruits') {\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                            isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                        else {\r\n                            isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            !ripeness?.value ? item.ripenessIsEmpty = true : item.ripenessIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                    }\r\n                }\r\n\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty || item?.qtyToCompareIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                if (item?.qty >= 0) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}","import React, { useState, useEffect, useRef } from 'react'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport 'Component/DatePickerNew/index.scss'\r\nimport { Calendar } from 'react-date-range'\r\n\r\nconst InputDatePicker = ({ placeholder, inputWidth, values, text, showTitle, title, isEmpty, onChange, onClick, disabled, entryListIdx, poListIdx }) => {\r\n    const [show, setShow] = useState()\r\n\r\n    const elem = document?.getElementById(`date${entryListIdx}${poListIdx}`);\r\n    let width = document.documentElement.clientWidth\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [show])\r\n    let top = position?.top + 50\r\n    let right = false\r\n    if (width > 500) {\r\n        if (position?.bottom > 450) {\r\n            top = position?.top - 320\r\n        }\r\n    }\r\n    else {\r\n        if (position?.bottom > 400) {\r\n            right = 30\r\n            top = position?.top - 200\r\n        }\r\n\r\n        if (position?.bottom < 400) {\r\n            right = 30\r\n            top = position?.top + 120\r\n        }\r\n    }\r\n\r\n    function useOutside({ wrapperRef, show, setShow }) {\r\n        useEffect(() => {\r\n            /**\r\n             * Alert if clicked on outside of element\r\n             */\r\n            function handleClickOutside(event) {\r\n                if (show && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n                    setShow(!show)\r\n                }\r\n            }\r\n\r\n            // Bind the event listener\r\n            document.addEventListener(\"mousedown\", handleClickOutside);\r\n            return () => {\r\n                // Unbind the event listener on clean up\r\n                document.removeEventListener(\"mousedown\", handleClickOutside);\r\n            };\r\n        }, [wrapperRef, show]);\r\n    }\r\n\r\n    const wrapperRef = useRef(null);\r\n    useOutside({ wrapperRef, show, setShow });\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 `} >\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div tabIndex='0' id={`date${entryListIdx}${poListIdx}`} onClick={() => setShow(s => !s)} className={`${isEmpty ? 'border-red' : 'border'} rounded mb-2 sku-item border-soft-green w-100 w-lg-50 bg-white d-flex align-items-center input-height px-2 mr-3 ${typeof (onClick) === 'function' ? 'cursor-pointer' : null}`}>\r\n                <input disabled={disabled} autoComplete='off' type='text' className={`w-100 plain-input ${typeof (onClick) === 'function' ? 'cursor-pointer' : null}`} value={text} />\r\n                <span className='iconU-filterDate emptyTextField' />\r\n            </div>\r\n            <div style={{ top, right, zIndex: 9 }} className={`position-fixed border border-soft-green rounded shadow ${show ? null : 'd-none'} `} ref={wrapperRef}>\r\n                <Calendar\r\n\r\n                    classNames='p-1'\r\n                    date={values}\r\n                    onChange={dt => {\r\n                        onClick(dt)\r\n                        setShow(false)\r\n                    }} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputDatePicker","import React from 'react'\r\nimport { isFloat } from 'services'\r\nconst Excess = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    placeholder,\r\n    grade,\r\n    title,\r\n    className,\r\n    packThreshold,\r\n    hidePercent\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={`${inputWidth} mb-3 mr-3 ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold text-nowrap ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={` ${isEmpty ? 'tooltip-custom' : 'tooltip-custom1'} w-100 d-flex align-items-center input-height px-2 mr-3`}>\r\n                <div className={`LatoBold ${inputWidth} ${isEmpty ? 'red' : 'green'}`}>{`${packThreshold && !isNaN(parseInt(packThreshold)) ? `${isFloat(packThreshold)}${hidePercent ? '' : '%'}` : (hidePercent ? '0' : '0%')}`}</div>\r\n                <span className={`${isEmpty ? 'tooltiptext' : 'd-none'}`}>\r\n                    <span style={{ fontWeight: 600 }}>Threshold Error</span>\r\n                    <br />\r\n                    <span>{`Cannot be larger than 50%. Your current threshold is ${packThreshold}%`}</span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Excess","import React, { useState } from 'react'\r\nimport Calculator from 'Component/Calculator'\r\nconst Pack = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    placeholder,\r\n    title,\r\n    className,\r\n    useCalculator,\r\n    singleView\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    const [showCalculator, setShowCalculator] = useState()\r\n\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input onClick={() => setShowCalculator(!showCalculator)} id={`pack_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name='pack' placeholder={placeholder} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom}</div>\r\n            </div>\r\n            <Calculator\r\n                singleView={singleView}\r\n                useCalculator={useCalculator}\r\n                className={showCalculator ? null : 'd-none'}\r\n                setShowCalculator={setShowCalculator}\r\n                showCalculator={showCalculator}\r\n                onChange={(val) => onChange(null, val)}\r\n                name={'pack'}\r\n                entryListIdx={entryListIdx}\r\n                poListIdx={poListIdx} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pack","import { saveImage } from 'apiServices'\r\nimport moment from 'moment'\r\nimport { checkIsSkuRequired } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { dateDMY, dateFull, isFloat } from 'services'\r\nimport { stockMovementValidation } from './moduleValidation'\r\n\r\nconst setValue = ({ setItemList, changedList, setTotalQty, totalQty }) => {\r\n    setItemList(changedList)\r\n\r\n    changedList.map(item => {\r\n        if (item.qty) totalQty = Number(totalQty) + Number(item?.qty)\r\n    })\r\n\r\n    setTotalQty(totalQty)\r\n}\r\n\r\nexport const addLine = ({ itemList, setItemList, expiryDateSelected, moduleName, module }) => {\r\n    let newList = [...itemList]\r\n    const lastList = newList[newList.length - 1]\r\n    switch (moduleName) {\r\n        case 'stockTake':\r\n            newList.push({\r\n                grade: lastList?.grade,\r\n                expiryDate: expiryDateSelected?.value,\r\n                expiryDateText: dateDMY({ date: expiryDateSelected?.value })\r\n            })\r\n            setItemList(newList)\r\n            break;\r\n        case 'stockMovement':\r\n            newList.push({\r\n                qty: '',\r\n                expiryDate: expiryDateSelected?.value,\r\n                expiryDateText: dateDMY({ date: expiryDateSelected?.value }),\r\n                grade: lastList?.grade,\r\n            })\r\n            setItemList(newList)\r\n            break;\r\n        case 'repack':\r\n            let gradeList = module?.jobPost?.list[0]?.gradeList?.filter(grd => grd?.label === module?.jobPost?.list[0]?.skuName)\r\n            newList.push({\r\n                qty: '',\r\n                grade: gradeList[0],\r\n                ripeness: lastList?.ripeness,\r\n            })\r\n            setItemList(newList)\r\n            break;\r\n    }\r\n}\r\n\r\n\r\nexport const changeValues = async ({ e, val, idx, itemList, setItemList, setTotalQty, ddName, selected, moduleName, module }) => {\r\n    let changedList = [...itemList]\r\n    let js = { ...module }\r\n    let regexQty = /^[0-9]+$/\r\n    if (ddName) {\r\n        switch (ddName) {\r\n            case 'ripeness':\r\n                changedList[idx].ripeness = selected\r\n                if (moduleName === 'stockMovement') changedList[idx].grade = selected\r\n                changedList[idx].ripenessIsEmpty = false\r\n                changedList[idx].noteIsEmpty = false\r\n                changedList[idx].qtyIsEmpty = false\r\n                setItemList(changedList)\r\n                break\r\n            case 'grade':\r\n                if ((selected?.label === 'Waste' || selected?.label === 'Semi Waste') && moduleName === 'stockTake') {\r\n                    changedList[idx].ripenessIsEmpty = false\r\n                    changedList[idx].ripeness = ''\r\n                }\r\n                if ((selected?.label === 'Waste' || selected?.label === 'Semi Waste') && moduleName === 'stockMovement') {\r\n                    changedList[idx].ripenessIsEmpty = false\r\n                    changedList[idx].ripeness = ''\r\n                }\r\n                changedList[idx].note = ''\r\n                changedList[idx].grade = selected\r\n                changedList[idx].gradeIsEmpty = false\r\n                setItemList(changedList)\r\n                break\r\n            case 'outbound':\r\n                changedList[idx].outbound = selected\r\n                changedList[idx].outboundIsEmpty = false\r\n                setItemList(changedList)\r\n                break\r\n            case 'date':\r\n                let date = moment(selected).valueOf()\r\n                changedList[idx].expiryDate = date\r\n                changedList[idx].expiryDateText = dateDMY({ date })\r\n                setItemList(changedList)\r\n                break\r\n            case 'reason':\r\n                changedList[idx].reasonIsEmpty = false\r\n                changedList[idx].reason = selected\r\n                setItemList(changedList)\r\n                break\r\n        }\r\n        return\r\n    }\r\n\r\n\r\n    let value = e?.target?.value\r\n    let name = e?.target?.name\r\n    if (!e?.target) {\r\n        value = val?.value\r\n        name = val?.name\r\n    }\r\n    let totalQty = 0\r\n    switch (name) {\r\n        case 'upload':\r\n            const image = await saveImage({ e })\r\n            changedList[idx].uploadPhoto = image\r\n            changedList[idx].uploadPhotoIsEmpty = false\r\n            setItemList(changedList)\r\n            break\r\n        case 'note':\r\n            changedList[idx].note = e.target.value\r\n            changedList[idx].noteIsEmpty = false\r\n            setItemList(changedList)\r\n            break\r\n\r\n        case 'qty':\r\n            if ((regexQty.test(value) === false && value !== \"\")) {\r\n                return;\r\n            }\r\n            changedList[idx].qty = value\r\n            changedList[idx].qtyIsEmpty = false\r\n            setItemList(changedList)\r\n            setValue({ setItemList, changedList, setTotalQty, totalQty })\r\n            break\r\n\r\n        case 'pack':\r\n            if ((regexQty.test(value) === false && value !== \"\")) {\r\n                return;\r\n            }\r\n            changedList[idx].pack = value > 0 ? parseInt(value) : value\r\n            changedList[idx].packIsEmpty = false\r\n            changedList[idx].packThresholdIsEmpty = false\r\n            setItemList(changedList)\r\n            setValue({ setItemList, changedList, setTotalQty, totalQty })\r\n            break\r\n\r\n        case 'weight':\r\n            if (name === 'weight' || name === 'weightToCompare') {\r\n                let regex = /^[0-9\\.\\x0]+$/\r\n                if ((regex.test(value) === true && value !== \"\")) {\r\n                    let newValue = 0;\r\n                    let arr = value?.split('.')\r\n                    let number = arr[0];\r\n                    if (number >= 0) number = parseInt(number)\r\n                    let commaNumber = arr[1];\r\n\r\n                    if ((commaNumber !== null && commaNumber !== undefined)) {\r\n                        if (commaNumber.length > 2) {\r\n                            //jika dibelakang koma ada lebih dari 2 angka\r\n                            var sliceNumber = commaNumber.slice(0, 2);\r\n                            newValue = `${number}.${sliceNumber}`\r\n                        } else {\r\n                            newValue = `${number}.${commaNumber}`\r\n                        }\r\n                    } else {\r\n                        newValue = parseInt(number)\r\n                    }\r\n\r\n                    //fill weight qty\r\n                    if (name === 'weight') {\r\n                        changedList[idx].qty = newValue\r\n                        changedList[idx].qtyIsEmpty = false\r\n                    }\r\n                    if (name === 'weightToCompare') {\r\n                        changedList[idx].qtyToCompare = newValue\r\n                        changedList[idx].qtyToCompareIsEmpty = false\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    //fill weight qty\r\n                    if (name === 'weight') {\r\n                        changedList[idx].qty = ''\r\n                    }\r\n                    if (name === 'weightToCompare') {\r\n                        changedList[idx].qtyToCompare = ''\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (moduleName === 'repack') {\r\n                let description = js.jobPost.list[0]?.originalUom\r\n                const { totalPack, uom } = js.jobPost.list[0]?.poList[0]\r\n                const { qty, grade, pack } = changedList[idx]\r\n                if (grade, totalPack, uom) {\r\n                    let ratio = grade?.multiplier\r\n                    let standardWeight = description?.toLowerCase() == 'gram' ? 1 / 1000 : 1\r\n                    let inputWeight = qty / pack\r\n                    inputWeight = inputWeight - (standardWeight / ratio)\r\n                    inputWeight = inputWeight / (standardWeight / ratio)\r\n                    inputWeight = inputWeight * 100\r\n                    if (inputWeight >= 51 || inputWeight <= -20) {\r\n                        changedList[idx].packThresholdIsEmpty = true\r\n                    }\r\n                    else {\r\n                        changedList[idx].packThresholdIsEmpty = false\r\n                    }\r\n                    changedList[idx].packThreshold = isFloat(inputWeight)\r\n                }\r\n            }\r\n\r\n            setValue({ setItemList, changedList, setTotalQty, totalQty })\r\n            break\r\n\r\n    }\r\n}\r\n\r\nexport const submitValidation = ({ module, moduleName, setConfirmation, itemList, setItemList, setSingleViewData, supplierNameSelected, inboundDateSelected, expiryDateSelected, areaMovement }) => {\r\n    let isEmpty = []\r\n    let checkItemList = []\r\n    let jobPost = Object.assign({}, JSON.parse(JSON.stringify(module)))\r\n    let totalQty = 0\r\n    let po = []\r\n    const supplierName = supplierNameSelected?.value\r\n    const inboundDate = inboundDateSelected?.value\r\n    const expiryDate = expiryDateSelected?.value\r\n    const { moduleIsEmpty, moduleCheckItemList, moduleTotalQty } = stockMovementValidation({ itemList, jobPost, moduleName, areaMovement })\r\n    isEmpty = moduleIsEmpty\r\n    checkItemList = moduleCheckItemList\r\n    totalQty = moduleTotalQty\r\n\r\n    po = jobPost.jobPost.list[0].poList.filter(p => {\r\n        let condition = null\r\n        if (!expiryDate) condition = p.supplierName === supplierName && p.inboundDate === inboundDate\r\n        if (expiryDate) condition = p.supplierName === supplierName && p.inboundDate === inboundDate && expiryDate === p.expiryDate\r\n\r\n        if (condition) return p\r\n    })\r\n\r\n    setItemList(checkItemList)\r\n\r\n    let updateInitialWeight = po[0].initialWeight - totalQty\r\n    jobPost.jobPost.list[0].poList = [po[0]]\r\n    jobPost.jobPost.list[0].poList[0].initialWeight = updateInitialWeight\r\n    jobPost.jobPost.list[0].poList[0].totalQty = updateInitialWeight.toString()\r\n    jobPost.jobPost.list[0].poList[0].initialWeightFormatted = updateInitialWeight.toString()\r\n    jobPost.jobPost.list[0].poList[0].itemList = itemList\r\n    jobPost.jobPost.list[0].poList[0].supplierName = supplierNameSelected?.value\r\n    jobPost.jobPost.list[0].poList[0].inboundDate = inboundDateSelected?.value ? inboundDateSelected?.value : jobPost.jobPost.list[0].poList[0].inboundDate\r\n    jobPost.jobPost.list[0].poList[0].expiryDate = expiryDateSelected?.value ? expiryDateSelected?.value : jobPost.jobPost.list[0].poList[0].expiryDate\r\n    if (!isEmpty.includes(true)) {\r\n        setSingleViewData(jobPost)\r\n        setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        checkIsSkuRequired({ moduleEntry: jobPost })\r\n        setConfirmation({ show: false, name: null })\r\n    }\r\n}\r\n\r\nexport const updateSummaryAndModuleEntry = ({ singleViewData, moduleName, moduleEntry, setLocalEntryData, summary, resetSummary }) => {\r\n    let updatedLocalEntryData = { ...moduleEntry }\r\n    let updatedSummary = [...summary]\r\n    if (singleViewData?.jobPost?.list?.length) {\r\n        //sku\r\n        const skuUuid = singleViewData.jobPost.list[0].skuUuid\r\n        //po\r\n        const updatedPo = singleViewData.jobPost.list[0].poList[0]\r\n        const supplierName = singleViewData.jobPost.list[0].poList[0].supplierName\r\n        const inboundDate = singleViewData.jobPost.list[0].poList[0].inboundDate\r\n        const expiryDate = singleViewData.jobPost.list[0].poList[0].expiryDate\r\n        const skuName = singleViewData.jobPost.list[0].skuName\r\n        let qty = 0\r\n        updatedPo.itemList.map(item => {\r\n            if (item?.grade?.label === skuName && moduleName === 'stockTake') qty += isFloat(item.qty)\r\n            if (moduleName === 'stockMovement') qty += isFloat(item.qty)\r\n        })\r\n        if (moduleName === 'stockTake') updatedPo.initialWeight = qty\r\n        // update summaries\r\n        updatedSummary = updatedSummary.map(data => {\r\n            if (data.skuUuid === skuUuid) {\r\n                if (moduleName === 'stockMovement') data.totalQty -= qty\r\n                if (moduleName === 'stockTake') data.totalQty = qty\r\n                return data\r\n            }\r\n            return data\r\n        })\r\n        //update local entry\r\n        if (supplierName && inboundDate && expiryDate) {\r\n            let list = updatedLocalEntryData?.jobPost?.list?.map(sku => {\r\n                let po = sku.poList.map(po => {\r\n                    if (sku.skuUuid === skuUuid && po.supplierName === supplierName && po.inboundDate === inboundDate && po.expiryDate === expiryDate) {\r\n                        po = updatedPo\r\n                        if (moduleName !== 'stockTake') po.itemList = []\r\n                        return po\r\n                    }\r\n                    return po\r\n                })\r\n                sku.poList = po\r\n                return sku\r\n            })\r\n            updatedLocalEntryData.jobPost.list = list\r\n        }\r\n\r\n        if (supplierName && inboundDate) {\r\n            let list = updatedLocalEntryData?.jobPost?.list?.map(sku => {\r\n                let po = sku.poList.map(po => {\r\n                    if (sku.skuUuid === skuUuid && po.supplierName === supplierName && po.inboundDate === inboundDate) {\r\n                        po = updatedPo\r\n                        if (moduleName !== 'stockTake') po.itemList = []\r\n                        return po\r\n                    }\r\n                    return po\r\n                })\r\n                sku.poList = po\r\n                return sku\r\n            })\r\n            updatedLocalEntryData.jobPost.list = list\r\n        }\r\n        setLocalEntryData(updatedLocalEntryData)\r\n        return updatedSummary\r\n    }\r\n}\r\n\r\nexport const getPoDataByHeader = ({ moduleName, supplierNameSelected, inboundDateSelected, expiryDateSelected, moduleEntry, skuNumber, setItemList }) => {\r\n    const supplierName = supplierNameSelected?.value\r\n    const inboundDate = inboundDateSelected?.value\r\n    const expiryDate = expiryDateSelected?.value\r\n    let initialWeight = 0\r\n    let list = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(sku => {\r\n            sku.poList.map(po => {\r\n                const sameSKUNumber = sku.skuNumber === skuNumber\r\n                const sameSupplierName = po.supplierName === supplierName\r\n                const sameInboundDate = po.inboundDate === inboundDate\r\n                const sameExpiryDate = po.expiryDate === expiryDate\r\n\r\n                let condition = null\r\n                if (!expiryDate) condition = sameSKUNumber && sameSupplierName && sameInboundDate\r\n                if (expiryDate) condition = sameSKUNumber && sameSupplierName && sameInboundDate && sameExpiryDate\r\n\r\n                if (condition) {\r\n                    initialWeight = po.initialWeight\r\n                    list = po.itemList\r\n                }\r\n            })\r\n        })\r\n    }\r\n    return { initialWeight }\r\n}\r\n\r\nexport const getSVSource = ({ moduleEntry, skuNumber }) => {\r\n    let supplierName = []\r\n    let module = null\r\n    let category = null\r\n    let gradeList = []\r\n    let uom = null\r\n    let totalWeight = 0\r\n    let parameterList = []\r\n\r\n    if (moduleEntry?.jobPost?.list?.length && skuNumber) {\r\n        //sku filter by sku name\r\n        module = Object.assign({}, JSON.parse(JSON.stringify(moduleEntry)))\r\n        const skuList = module?.jobPost?.list?.filter(data => data.skuNumber === skuNumber)\r\n\r\n        module.jobPost.list = skuList\r\n        if (skuList.length) {\r\n            const item = module?.jobPost?.list[0]\r\n            category = item.category\r\n            totalWeight = item.totalQty\r\n            uom = item.unitOfMeassures\r\n            gradeList = item.gradeList\r\n\r\n\r\n            //filter dropdown, supplier name & expiry date\r\n            const poList = item.poList\r\n\r\n            supplierName = poList.map(data => data?.supplierName)\r\n            supplierName = supplierName.filter((item, idx, arr) => {\r\n                if (arr.indexOf(item) === idx) return { label: item, value: item }\r\n            })\r\n\r\n            supplierName = supplierName.map(data => ({ value: data, label: data }))\r\n\r\n            parameterList = poList.map(po => {\r\n                return {\r\n                    supplierName: po.supplierName,\r\n                    inboundDate: po.inboundDate,\r\n                    expiryDate: po.expiryDate,\r\n                    poNumber: po.wmsPoSkuCode\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n    return { supplierName, module, category, uom, gradeList, totalWeight, parameterList }\r\n}\r\n\r\nexport const setOptionValue = ({\r\n    module,\r\n    moduleName,\r\n    setTotalQty,\r\n    setItemList,\r\n    setSupplierNameSelected,\r\n    setInboundDateSelected,\r\n    setExpiryDateSelected,\r\n    setMoveAll,\r\n    setInboundDateOption,\r\n    setExpiryDateOption,\r\n    supplierName,\r\n    parameterList\r\n}) => {\r\n    setSupplierNameSelected(supplierName[0])\r\n    let updatedInbound = parameterList.map(date => {\r\n        if (date.supplierName === supplierName[0].value) return { label: date.inboundDate ? `${dateFull({ noTime: true, date: date.inboundDate })} - ${date.poNumber}` : `${date.inboundDate} - ${date.poNumber}`, value: date.inboundDate }\r\n    })\r\n    updatedInbound = updatedInbound.filter(dt => dt !== undefined)\r\n    setInboundDateOption(updatedInbound)\r\n    setInboundDateSelected(updatedInbound[0])\r\n\r\n    let updatedExpiryDate = parameterList.map(date => {\r\n        if (date.supplierName === supplierName[0].value && date.inboundDate === updatedInbound[0].value) return { label: (date.expiryDate ? `${dateFull({ noTime: true, date: date.expiryDate })} - ${date.poNumber}` : `${date.expiryDate} - ${date.poNumber}`), value: date.expiryDate }\r\n    })\r\n    updatedExpiryDate = updatedExpiryDate.filter(dt => dt !== undefined)\r\n    setExpiryDateOption(updatedExpiryDate)\r\n    setExpiryDateSelected(updatedExpiryDate[0])\r\n\r\n    if (moduleName === 'stockTake') {\r\n        if (module) {\r\n            const list = module.jobPost.list[0].poList[0]?.itemList\r\n            if (list?.length) {\r\n                setTotalQty(list[0].qty)\r\n                setItemList(list)\r\n            }\r\n        }\r\n    }\r\n\r\n    if (typeof (setMoveAll) === 'function') setMoveAll()\r\n\r\n}\r\n\r\nexport const filterByDropdown = ({\r\n    module,\r\n    setItemList,\r\n    parameterList,\r\n    ddName,\r\n    selected,\r\n    setSupplierNameSelected,\r\n    setInboundDateSelected,\r\n    setExpiryDateSelected,\r\n\r\n    setInboundDateOption,\r\n    setExpiryDateOption,\r\n    supplierNameSelected,\r\n\r\n    inboundDateSelected,\r\n    expiryDateSelected,\r\n    moduleEntry,\r\n    skuNumber\r\n}) => {\r\n    let list = []\r\n    list = moduleEntry?.jobPost?.list.filter(sku => sku.skuNumber === skuNumber)\r\n    list = list[0].poList.map(po => {\r\n        let item = po.itemList.map(item => {\r\n            item.qty = po.initialWeight\r\n            return item\r\n        })\r\n        po.itemList = item\r\n        return po\r\n    })\r\n    if (ddName === 'supplierName') {\r\n        setSupplierNameSelected(selected)\r\n        let updatedInbound = parameterList.map(date => {\r\n            if (date.supplierName === selected.value && date.inboundDate) return { label: (date.inboundDate ? `${dateFull({ noTime: true, date: date.inboundDate })} - ${date.poNumber}` : `${date.inboundDate} - ${date.poNumber}`), value: date.inboundDate }\r\n        })\r\n        updatedInbound = updatedInbound.filter(d => d !== undefined)\r\n        setInboundDateOption(updatedInbound)\r\n        setInboundDateSelected(updatedInbound[0])\r\n\r\n        let updatedExpiryDate = parameterList.map(date => {\r\n            if (date.supplierName === selected.value && date.inboundDate === updatedInbound[0].value) return { label: date.expiryDate ? `${dateFull({ noTime: true, date: date.expiryDate })} - ${date.poNumber}` : `${date.expiryDate} - ${date.poNumber}`, value: date.expiryDate }\r\n        })\r\n        updatedExpiryDate = updatedExpiryDate.filter(d => d !== undefined)\r\n        setExpiryDateOption(updatedExpiryDate)\r\n        setExpiryDateSelected(updatedExpiryDate[0])\r\n\r\n    }\r\n    if (ddName === 'inboundDate') {\r\n        setInboundDateSelected(selected)\r\n        let updatedExpiryDate = parameterList.map(date => {\r\n            if (date.supplierName === supplierNameSelected.value && date.inboundDate === selected.value) return { label: date.expiryDate ? `${dateFull({ noTime: true, date: date.expiryDate })} - ${date.poNumber}` : `${date.expiryDate} - ${date.poNumber}`, value: date.expiryDate }\r\n        })\r\n        updatedExpiryDate = updatedExpiryDate.filter(d => d !== undefined)\r\n        setExpiryDateOption(updatedExpiryDate)\r\n        setExpiryDateSelected(updatedExpiryDate[0])\r\n    }\r\n\r\n    if (ddName === 'expiryDate') {\r\n        setExpiryDateSelected(selected)\r\n    }\r\n}\r\n\r\nexport const deleteRow = ({ idx, itemList, setItemList, setTotalQty }) => {\r\n    const newItem = itemList.filter((item, i) => i !== idx)\r\n    let qty = 0\r\n    newItem.map(item => qty += item.qty)\r\n    setTotalQty(qty)\r\n    setItemList(newItem)\r\n}\r\n\r\nexport const updateInitialWeight = ({ moduleEntry, supplierNameSelected, inboundDateSelected, expiryDateSelected, skuNumber, setItemList, setTotalQty }) => {\r\n    let list = []\r\n    list = moduleEntry?.jobPost?.list.filter(sku => sku.skuNumber === skuNumber)\r\n    list = list[0].poList.map(po => {\r\n        let item = po.itemList.map(item => {\r\n            item.qty = po.initialWeight\r\n            return item\r\n        })\r\n        po.itemList = item\r\n        return po\r\n    })\r\n\r\n    list = list.filter(po => po.supplierName === supplierNameSelected.value && po.inboundDate === inboundDateSelected.value && po.expiryDate === expiryDateSelected.value)\r\n    if (list.length) {\r\n        setItemList(list[0].itemList)\r\n        setTotalQty(list[0].itemList.qty)\r\n    }\r\n\r\n}","import { isFloat } from \"services\"\r\n\r\nexport const stockMovementValidation = ({ itemList, jobPost, moduleName, areaMovement }) => {\r\n    if (jobPost) {\r\n        let moduleIsEmpty = []\r\n        let moduleCheckItemList = []\r\n        let moduleTotalQty = 0\r\n        let areaDestinationName = jobPost?.jobPost?.areaDestinationName\r\n        let totalWeight = jobPost.jobPost.list[0].totalQty\r\n        let category = jobPost.jobPost.list[0].poList[0].category\r\n        totalWeight = isFloat(totalWeight)\r\n        moduleCheckItemList = itemList?.map(item => {\r\n            switch (moduleName) {\r\n                case 'stockMovement':\r\n                    if (!item.grade?.value && areaDestinationName === 'Waste') {\r\n                        item.gradeIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    if (item.ripeness?.value === 'waste' && !item.note) {\r\n                        item.noteIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    if (item.grade?.value === 'waste' && !item.reason?.value) {\r\n                        item.reasonIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    if (item.grade?.value === 'waste' && !item.note) {\r\n                        item.noteIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    if (!item.qty) {\r\n                        item.qtyIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    else {\r\n                        item.qtyIsEmpty = false\r\n                        moduleIsEmpty.push(false)\r\n                        moduleTotalQty = moduleTotalQty + isFloat(item.qty)\r\n                    }\r\n                    if (areaMovement?.value === 8 && !item?.grade?.value) {\r\n                        item.gradeIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    if (areaMovement?.value === 8 && item?.grade?.value === 'waste' && !item?.note) {\r\n                        item.noteIsEmpty = true\r\n                        moduleIsEmpty.push(true)\r\n                    }\r\n                    if (totalWeight < moduleTotalQty) moduleCheckItemList = moduleCheckItemList.map(item => {\r\n                        item.qtyIsEmpty = true\r\n                        return item\r\n                    })\r\n                    break\r\n                case 'stockTake':\r\n                    if (category === 'Fruits') {\r\n                        if ((item.qty == 0 || isNaN(item.qty)) && item.grade?.value === null) {\r\n                            item.qtyIsEmpty = false\r\n                            item.gradeIsEmpty = false\r\n                            item.ripenessIsEmpty = false\r\n                            item.noteIsEmpty = false\r\n                        }\r\n                        else {\r\n                            if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                                isNaN(item.qty) || item.qty === \"\" || item.qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                                !item.grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                                item.grade?.label === 'Waste' && !item.note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                            }\r\n                            else {\r\n                                isNaN(item.qty) || item.qty === \"\" || item.qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                                !item.grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                                !item.ripeness?.value ? item.ripenessIsEmpty = true : item.ripenessIsEmpty = false\r\n                                item.grade?.label === 'Waste' && !item.note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n\r\n                        if ((item.qty == 0 || isNaN(item.qty)) && item.grade?.value === null) {\r\n                            item.qtyIsEmpty = false\r\n                            item.gradeIsEmpty = false\r\n                            item.ripenessIsEmpty = false\r\n                            item.noteIsEmpty = false\r\n                        }\r\n                        else {\r\n                            isNaN(item.qty) || item.qty === \"\" || item.qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !item.grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            item.grade?.label === 'Waste' && !item.note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                    }\r\n                    if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty || item?.qtyToCompareIsEmpty) moduleIsEmpty.push(true)\r\n                    else moduleIsEmpty.push(false)\r\n                    break\r\n                //\r\n                default:\r\n            }\r\n            return item\r\n        })\r\n        return { moduleIsEmpty, moduleCheckItemList, moduleTotalQty }\r\n    }\r\n}","const width = document.documentElement.clientWidth\r\n\r\nconst componentConditionMovement = ({ inputType, item, category, areaMovement, areaDestinationName }) => {\r\n    const isWaste = item.grade?.label === 'Semi Waste' || item.grade?.label === 'Waste' ? null : 'd-none'\r\n    switch (inputType) {\r\n        case 'image':\r\n            return isWaste\r\n        case 'ripeness':\r\n            return areaMovement?.value === 3 ? null : 'd-none'\r\n        case 'grade':\r\n            return areaDestinationName === 'Waste' ? null : 'd-none'\r\n        case 'reason':\r\n            return isWaste\r\n        case 'note':\r\n            return isWaste\r\n        default:\r\n            return 'd-none'\r\n    }\r\n}\r\n\r\nconst componentConditionStockTake = ({ inputType, item, category }) => {\r\n    switch (inputType) {\r\n        case 'grade':\r\n            return true\r\n        case 'note':\r\n            return item?.grade?.label === 'Waste' ? null : 'd-none'\r\n        case 'expiryDate':\r\n            return category === 'Fruits' || category === 'Vegetables' ? 'd-none' : null\r\n        case 'ripeness':\r\n            return item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : (category === 'Fruits' ? null : 'd-none')\r\n        default:\r\n            return 'd-none'\r\n    }\r\n}\r\n\r\nconst componentConditionRepack = ({ inputType, item }) => {\r\n    switch (inputType) {\r\n        case 'grade':\r\n            return true\r\n        case 'expiryDate':\r\n            return 'd-none'\r\n        case 'note':\r\n            return item?.grade?.label === 'Waste' ? null : 'd-none'\r\n        case 'excess':\r\n            return item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : null\r\n        case 'pack':\r\n            return item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : null\r\n        default:\r\n            return 'd-none'\r\n    }\r\n}\r\n\r\nexport const inputController = ({ moduleName, inputType, areaMovement, item, category, areaDestinationName }) => {\r\n    switch (moduleName) {\r\n        case 'stockMovement':\r\n            return componentConditionMovement({ inputType, areaMovement, item, category, areaDestinationName })\r\n        case 'stockTake':\r\n            return componentConditionStockTake({ inputType, item, category })\r\n        case 'repack':\r\n            return componentConditionRepack({ inputType })\r\n        default:\r\n            return 'd-none'\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport './index.scss'\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport { addLine, getSVSource, changeValues, submitValidation, getPoDataByHeader, setOptionValue, filterByDropdown, deleteRow, updateInitialWeight } from './services'\r\nimport { inputController } from './inputController'\r\nimport { CButton, CCol, CModal, CModalBody, CModalHeader, CRow, } from \"@coreui/react\";\r\nimport SkuItem from './SkuItem'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport InputQty from 'Component/Input'\r\nimport InputWeight from 'Component/Input/Decimal'\r\nimport Note from 'Component/Input/Note'\r\nimport { useSelector } from \"react-redux\";\r\nimport { isFloat } from \"services\";\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport InputDatePicker from 'Component/Input/InputDatePicker'\r\nimport Excess from 'Component/Input/Excess'\r\nimport Pack from 'Component/Input/Pack'\r\nimport InputImage from 'Component/Input/InputImage'\r\n\r\nconst SingleView = ({ moduleName, areaMovement, createPo, setCreatePo, moduleEntry, setConfirmation, setSingleViewData, confirmation, setMoveAll, status, fromBarcode }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const [isMobile, setIsMobile] = useState(0)\r\n  useEffect(_ => {\r\n    const width = document.documentElement.clientWidth\r\n    let height = dimention - 400\r\n    height = width <= 500 ? height + 250 : height\r\n    setIsMobile(height)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (status?.code === 500) closeModal()\r\n  }, [status?.code]);\r\n\r\n  const ripenessLevel = useSelector(state => state.ripenessLevel)\r\n  const wasteReasonList = useSelector(state => state.wasteReasonList)\r\n  const areaName = moduleEntry?.jobPost?.areaName\r\n  const areaDestinationName = moduleEntry?.jobPost?.areaDestinationName\r\n  const [supplierNameSelected, setSupplierNameSelected] = useState()\r\n  const [inboundDateSelected, setInboundDateSelected] = useState()\r\n  const [expiryDateSelected, setExpiryDateSelected] = useState()\r\n\r\n  const [itemList, setItemList] = useState([])\r\n\r\n  const title = {\r\n    movement: (\r\n      <span className=\"text mb-2 LatoBold\">\r\n        {areaMovement?.label}\r\n      </span>\r\n    ),\r\n    stockTake: (\r\n      <span className=\"text m-0 LatoBold\">\r\n        {`Weight entry - ${areaName}`}\r\n      </span>\r\n    ),\r\n    default: (\r\n      <p className=\"text mb-2\">\r\n        <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n        <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n        <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n        <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n        <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${areaDestinationName ? areaDestinationName : areaName}?`}</span>\r\n      </p>\r\n    )\r\n  }\r\n\r\n  const { supplierName, inboundDateList, expiryDateList, module, category, uom, gradeList, parameterList } = getSVSource({ moduleEntry, skuNumber: createPo?.skuNumber, supplierNameSelected, inboundDateSelected, expiryDateSelected })\r\n  const [inboundDateOption, setInboundDateOption] = useState([])\r\n  const [expiryDateOption, setExpiryDateOption] = useState([])\r\n\r\n\r\n  const { initialWeight } = getPoDataByHeader({ moduleName, supplierNameSelected, inboundDateSelected, expiryDateSelected, moduleEntry, skuNumber: createPo?.skuNumber, setItemList })\r\n  const [totalQty, setTotalQty] = useState(0)\r\n  const totalWeightUpdate = initialWeight - totalQty\r\n  const isReady = module?.jobPost?.list?.length ? null : 'd-none'\r\n  const isFruits = category === 'Fruits' || category === 'Vegetables' ? 'd-none' : true\r\n  let filteredGradeList = gradeList\r\n  const show = createPo?.show && !confirmation?.show ? true : false\r\n  //ripeness back from staging only movement\r\n  let rip = []\r\n  useEffect(() => {\r\n    if (moduleName === 'stockMovement' && ripenessLevel?.length) {\r\n      const w = ripenessLevel.findIndex(r => r.value === 'waste')\r\n      const sw = ripenessLevel.findIndex(r => r.value === 'semi_waste')\r\n      if (w === -1 && areaMovement?.value === 3) ripenessLevel.push({ label: \"Waste\", value: \"waste\" })\r\n      if (sw === -1 && areaMovement?.value === 3) ripenessLevel.push({ label: \"Semi Waste\", value: \"semi_waste\" })\r\n    }\r\n  }, [areaMovement])\r\n\r\n  if (moduleName === 'stockMovement' && ripenessLevel?.length) {\r\n    if (category !== 'Fruits') rip = ripenessLevel?.filter(r => r?.value === 'waste' || r?.value === 'semi_waste')\r\n    if (category === 'Fruits') rip = ripenessLevel\r\n  }\r\n\r\n  if (moduleName === 'stockMovement' && areaMovement?.value === 8) {\r\n    filteredGradeList = gradeList.filter(grade => grade?.label === 'Waste' || grade.label === 'Semi Waste')\r\n  }\r\n\r\n  // end\r\n\r\n  useEffect(() => {\r\n    setItemList([])\r\n    setTotalQty(0)\r\n    if (module?.jobPost?.list.length) {\r\n      setOptionValue({\r\n        module,\r\n        moduleName,\r\n        setTotalQty,\r\n        setSupplierNameSelected,\r\n        setInboundDateSelected,\r\n        setExpiryDateSelected,\r\n        setInboundDateOption,\r\n        setExpiryDateOption,\r\n        setItemList,\r\n        setMoveAll,\r\n        supplierName,\r\n        inboundDateList,\r\n        expiryDateList,\r\n        parameterList\r\n      })\r\n    }\r\n  }, [createPo?.skuNumber, moduleEntry, createPo?.show])\r\n\r\n  function closeModal() {\r\n    if (typeof (setCreatePo) === 'function') setCreatePo({ show: false, skuNumber: null })\r\n  }\r\n\r\n  function updateFilter(ddName, selected) {\r\n    if (ddName === 'supplierName') filterByDropdown({ module, setItemList, ddName, setSupplierNameSelected, setInboundDateOption, setInboundDateSelected, setExpiryDateOption, setExpiryDateSelected, selected, parameterList, supplierNameSelected, inboundDateSelected, expiryDateSelected, moduleEntry, skuNumber: createPo?.skuNumber })\r\n    if (ddName === 'inboundDate') filterByDropdown({ module, setItemList, ddName, setInboundDateSelected, setExpiryDateOption, setExpiryDateSelected, selected, parameterList, supplierNameSelected, inboundDateSelected, expiryDateSelected, moduleEntry, skuNumber: createPo?.skuNumber })\r\n    if (ddName === 'expiryDate') filterByDropdown({ module, setItemList, ddName, setInboundDateSelected, setExpiryDateOption, setExpiryDateSelected, selected, parameterList, supplierNameSelected, inboundDateSelected, expiryDateSelected, moduleEntry, skuNumber: createPo?.skuNumber })\r\n  }\r\n\r\n  //action condition\r\n  const addLines = moduleName === 'stockTake' ? true : (totalWeightUpdate >= 0 ? true : false)\r\n  const submits = moduleName === 'stockTake' ? true : (itemList.length && totalWeightUpdate >= 0 ? true : false)\r\n\r\n\r\n  useEffect(() => {\r\n    if (moduleEntry?.jobPost?.list?.length && moduleName === 'stockTake') {\r\n      updateInitialWeight({ moduleEntry, supplierNameSelected, inboundDateSelected, expiryDateSelected, skuNumber: createPo.skuNumber, setItemList, setTotalQty })\r\n    }\r\n\r\n  }, [supplierNameSelected, inboundDateSelected, expiryDateSelected]);\r\n  return (\r\n    <CRow onKeyDown={e => e.keyCode === 27 ? closeModal() : false} className={`${show ? null : 'd-none'} single-view`}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          closeOnBackdrop={false}\r\n          className='w-100'\r\n        >\r\n          <CModalHeader className=\"px-3 pt-3  border-none m-0 d-flex align-items-center\">\r\n            {title.stockTake}\r\n            <label onClick={() => typeof (setCreatePo) === 'function' ? setCreatePo({ show: false, skuNumber: null }) : false} className='iconU-modalClose m-0' />\r\n          </CModalHeader>\r\n          <CModalBody className=\"pl-3 pr-1 py-0 w-100 overflow-y border-top pt-4\" style={{ isMobile, maxHeight: isMobile, minHeight: isMobile }}>\r\n            {\r\n              module?.jobPost?.list?.length ? module?.jobPost?.list.map((data, idx) =>\r\n                <SkuItem key={idx}\r\n                  img={data?.photo}\r\n                  skuDescription={data?.skuName}\r\n                  skuNumber={data?.skuNumber}\r\n                  uomLabel=\"weight\"\r\n                  uomValue={data?.totalQty}\r\n                  uom={data?.unitOfMeassures}\r\n                  check={data?.checked} />\r\n              )\r\n\r\n                : <div style={{ isMobile, maxHeight: isMobile, minHeight: isMobile }} className='w-100 d-flex align-items-center justify-content-center'><img className=\"loading\" src={loading} alt=\"loading\" /></div>\r\n            }\r\n\r\n            <div style={{ backgroundColor: '#F9FAFC' }} className={`w-100 p-3 mb-3 ${isReady}`}>\r\n              <Dropdown onChangeDropdown={(selected) => updateFilter('supplierName', selected)} selectedValue={supplierNameSelected} options={supplierName} style={{}} title={'Supplier Name'} showTitle show className />\r\n\r\n              {\r\n                fromBarcode ? <Note isReadOnly={true} grade={true} entryListIdx={0} poListIdx={0} isEmpty={false} grade={'Waste'} inputWidth={`w-100`} values={inboundDateSelected?.label} showTitle={true} title={'Inbound Date'} onChange={(e) => false} /> :\r\n                  <Dropdown onChangeDropdown={(selected) => updateFilter('inboundDate', selected)} selectedValue={inboundDateSelected} options={inboundDateOption} style={{}} title={'Inbound Date'} showTitle show className />\r\n              }\r\n\r\n\r\n              <Dropdown onChangeDropdown={(selected) => updateFilter('expiryDate', selected)} selectedValue={expiryDateSelected} options={expiryDateOption} style={{}} title={'Expiry Date'} showTitle show className={isFruits} />\r\n            </div>\r\n\r\n            <div style={{ backgroundColor: '#F9FAFC' }} className={`w-100 p-3 ${isReady}`}>\r\n              {\r\n                itemList?.map((item, idx) =>\r\n                  <div className='w-100 mb-1 d-flex'>\r\n                    <span className='mr-1 LatoBold'>{`${idx + 1}.`}</span>\r\n                    <span className='w-100'>\r\n                      <div className='w-100 grid-container'>\r\n                        <Dropdown\r\n                          entryListIdx={idx}\r\n                          poListIdx={0}\r\n                          isEmpty={item?.gradeIsEmpty}\r\n                          selectedValue={item?.grade}\r\n                          grade={item.grade?.label}\r\n                          uom={uom}\r\n                          show={true}\r\n                          onChangeDropdown={(selected) => changeValues({ itemList, setItemList, idx, selected, ddName: 'grade' })}\r\n                          title='Grade'\r\n                          placeholder='Select Grade'\r\n                          options={filteredGradeList}\r\n                          width='w-100'\r\n                          showTitle={true}\r\n                          className={inputController({ moduleName, areaMovement, inputType: 'grade', category, item, areaDestinationName })} />\r\n                        <Pack\r\n                          packThreshold={item.packThreshold}\r\n                          isEmpty={item.packIsEmpty || item.packThresholdIsEmpty}\r\n                          entryListIdx={idx}\r\n                          poListIdx={0}\r\n                          uom={'PACK'}\r\n                          inputWidth={`w-100 ${inputController({ moduleName, inputType: 'pack', category, item })}`}\r\n                          values={item?.pack}\r\n                          showTitle={true}\r\n                          title={'Input Pack'}\r\n                          onChange={(e) => changeValues({ e, idx, itemList, setItemList, setTotalQty, module, moduleName })} />\r\n                        <InputQty\r\n                          singleView={true}\r\n                          useCalculator={moduleName === 'stockTake' ? true : false}\r\n                          entryListIdx={idx}\r\n                          poListIdx={0}\r\n                          isEmpty={item?.qtyIsEmpty}\r\n                          uom={uom}\r\n                          inputWidth={'w-100'}\r\n                          values={item.qty}\r\n                          onChange={(e, val) => changeValues({ e, val, idx, itemList, setItemList, setTotalQty, module, moduleName })}\r\n                          showTitle={true}\r\n                          title={'Input Quantity'} />\r\n                        <InputWeight\r\n                          singleView={true}\r\n                          useCalculator={moduleName === 'stockTake' ? true : false}\r\n                          poListIdx={0}\r\n                          entryListIdx={idx}\r\n                          isEmpty={item?.qtyIsEmpty}\r\n                          uom={uom}\r\n                          inputWidth={'w-100'}\r\n                          values={item.qty}\r\n                          onChange={(e, val) => changeValues({ e, val, idx, itemList, setItemList, setTotalQty, module, moduleName })}\r\n                          showTitle={true}\r\n                          title={'Input Weight'} />\r\n                        <Dropdown\r\n                          isEmpty={item?.ripenessIsEmpty}\r\n                          entryListIdx={idx}\r\n                          poListIdx={0}\r\n                          onChangeDropdown={(selected) => changeValues({ moduleName, selected, ddName: 'ripeness', idx, itemList, setItemList })}\r\n                          selectedValue={item?.ripeness}\r\n                          options={rip.length ? rip : ripenessLevel}\r\n                          style={{}}\r\n                          title={'Ripeness'}\r\n                          showTitle={true}\r\n                          show\r\n                          className={`${inputController({ moduleName, item, areaMovement, category, inputType: 'ripeness' })} w-100`} />\r\n                        <Dropdown\r\n                          // isDisabled={entryListIdx === 0 ? true : false}\r\n                          isEmpty={item.reasonIsEmpty}\r\n                          selectedValue={item?.reason}\r\n                          grade={item.grade?.label}\r\n                          poListIdx={0}\r\n                          entryListIdx={idx}\r\n                          uom={uom}\r\n                          show={true}\r\n                          onChangeDropdown={(selected) => changeValues({ itemList, setItemList, idx, selected, ddName: 'reason' })}\r\n                          title='Reason'\r\n                          placeholder='Select Reason'\r\n                          options={wasteReasonList}\r\n                          width='w-100'\r\n                          showTitle={true}\r\n                          className={inputController({ moduleName, areaMovement, inputType: 'reason', category, item })} />\r\n                        <Note\r\n                          grade={true}\r\n                          entryListIdx={idx}\r\n                          poListIdx={0}\r\n                          isEmpty={item.noteIsEmpty}\r\n                          grade={'Waste'}\r\n                          inputWidth={`w-100 ${inputController({ moduleName, inputType: 'note', item, areaMovement })}`}\r\n                          values={item?.note}\r\n                          showTitle={true}\r\n                          title={'Note'}\r\n                          onChange={(e) => changeValues({ e, idx, itemList, setItemList, setTotalQty })} />\r\n                        <InputDatePicker\r\n                          onClick={(date) => changeValues({ itemList, setItemList, idx, selected: date, ddName: 'date' })}\r\n                          poListIdx={0}\r\n                          entryListIdx={idx}\r\n                          inputWidth={`w-100 ${inputController({ moduleName, inputType: 'expiryDate', category, item })}`}\r\n                          text={item?.expiryDateText}\r\n                          values={item?.expiryDate}\r\n                          showTitle={true}\r\n                          title={'Expiry Date'}\r\n                          disabled={true} />\r\n                        <Excess\r\n                          entryListIdx={idx}\r\n                          poListIdx={0}\r\n                          packThreshold={item.packThreshold}\r\n                          isEmpty={item.packThresholdIsEmpty}\r\n                          inputWidth={`w-100 ${inputController({ moduleName, inputType: 'excess', category, item })}`}\r\n                          showTitle={true}\r\n                          title={'Excess'} />\r\n                        <InputImage\r\n                          isEmpty={item.uploadPhotoIsEmpty}\r\n                          uom={'PACK'}\r\n                          inputWidth={`fit-content ${inputController({ moduleName, inputType: 'image', category, item })}`}\r\n                          values={item.uploadPhoto}\r\n                          onChange={(e) => changeValues({ e, idx, itemList, setItemList, setTotalQty })}\r\n                          showTitle={true}\r\n                          title={'Add Photos'} />\r\n                      </div>\r\n                      <div className='d-flex w-100 justify-content-between align-items-center' >\r\n                        <div></div>\r\n                        <div onClick={() => deleteRow({ idx, itemList, setItemList, setTotalQty })}>\r\n                          <img style={{ width: '15px', height: '15px' }} src={Trash} className='cursor-pointer mr-1' />\r\n                          <span className='emptyTextField pointer'>{`Delete row`}</span>\r\n                        </div>\r\n\r\n                      </div>\r\n                    </span>\r\n\r\n                  </div>\r\n                )\r\n              }\r\n              <div onKeyDown={(e) => e.keyCode === 13 ? addLine({ itemList, setItemList, moduleName, module }) : false} tabIndex='0' className={`w-100 sku-item ${addLines ? 'green' : 'red'} LatoBold cursor-pointer`} onClick={() => addLine({ itemList, setItemList, expiryDateSelected, moduleName, module })}>\r\n                <i className={`iconU-entryAdd pr-2`}></i>\r\n                {`Add ${'Weight'} (${isFloat(totalWeightUpdate)} ${true ? 'KG' : ''}${totalWeightUpdate > 1 ? \"s\" : \"\"} left)`}\r\n              </div>\r\n            </div>\r\n          </CModalBody>\r\n          <div className={`px-3 pb-3 ${isReady}`}>\r\n            <CButton onClick={() => submits ? submitValidation({ module, moduleName, setConfirmation, setSingleViewData, itemList, setItemList, supplierNameSelected, inboundDateSelected, expiryDateSelected, areaMovement }) : false} className={`${submits ? 'bg-green text-white' : 'bg-softGreen text'} no-shadow sku-item px-5 mt-3 w-100`}> Submit</CButton>\r\n          </div>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default SingleView","import React, { useEffect } from 'react'\r\nimport SkuItemSingleView from '../SingleViewModal/SkuItem'\r\n\r\nconst SkuItem = ({ showSkuList, totalList, img, skuDescription, skuNumber, uom, uomValue, expiryDate, ripeness, idx, setLocalEntryData, setCreatePo, setShowSkuList, skuList }) => {\r\n\r\n    const setEntry = async ({ skuList, setLocalEntryData, setCreatePo, skuNumber }) => {\r\n        let selectedSku = { ...skuList }\r\n        console.log(selectedSku);\r\n        let list = skuList.jobPost.list.filter(data => data?.skuNumber === skuNumber)\r\n        selectedSku.jobPost.list = list\r\n        await setLocalEntryData(selectedSku)\r\n        await setShowSkuList({ show: false, poNumber: null })\r\n        await setCreatePo({ show: true, skuNumber })\r\n    }\r\n\r\n    useEffect(_ => {\r\n        if (totalList === 1 && showSkuList?.show) setEntry({ skuList, setLocalEntryData, setCreatePo, skuNumber })\r\n    }, [])\r\n\r\n    return (\r\n        <div className='border borderLineGrey rounded mb-3 cursor-pointer' onClick={() => setEntry({ skuList, setLocalEntryData, setCreatePo, skuNumber })}>\r\n            <SkuItemSingleView\r\n                img={img}\r\n                skuDescription={skuDescription}\r\n                skuNumber={skuNumber}\r\n                uomLabel='weight'\r\n                uomValue={uomValue}\r\n                uom={uom}\r\n                idx={idx} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkuItem","import React, { useState, useEffect } from \"react\";\r\nimport { getPoByPoCode } from 'apiServices'\r\nimport '../SingleViewModal/index.scss'\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport SkuItemCard from './SkuItem'\r\nimport { CButton, CCol, CModal, CModalBody, CModalHeader, CRow, } from \"@coreui/react\";\r\nconst ItemListModal = ({ areaId, areaDestination, warehouseUuid, showSkuList, setShowSkuList, setLocalEntryData, setCreatePo, localEntryData, thereAreRequest, setShowScanner, moduleName }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    let height = dimention - 400\r\n    const [isMobile, setIsMobile] = useState(0)\r\n    useEffect(_ => {\r\n        const width = document.documentElement.clientWidth\r\n\r\n        height = width <= 500 ? height + 250 : height\r\n        setIsMobile(height)\r\n    }, [])\r\n\r\n\r\n    // sku list\r\n    const [skuList, setSkuList] = useState([])\r\n    useEffect(_ => {\r\n\r\n        if (showSkuList?.poNumber) getPoByPoCode({ areaId, warehouseUuid, poNumber: showSkuList?.poNumber, setSkuList, setLocalEntryData, moduleName, areaDestination })\r\n    }, [showSkuList?.poNumber])\r\n\r\n    const thereIsData = localEntryData?.jobPost?.list?.length\r\n    return (\r\n        <CRow className={`${showSkuList?.show ? null : 'd-none'} single-view`}>\r\n            <CCol>\r\n                <CModal\r\n                    show={showSkuList?.show}\r\n                    closeOnBackdrop={false}\r\n                    className='w-100 bg-black'\r\n                >\r\n                    <CModalHeader className=\"px-3 pt-3  border-none LatoBold text\">\r\n                        Selected SKU\r\n                        <label onClick={() => setShowSkuList({ show: false, poNumber: null })} className='iconU-modalClose' />\r\n                    </CModalHeader>\r\n                    <CModalBody className=\"pl-3 pr-1 py-0 w-100 overflow-y\" style={{ isMobile, maxHeight: isMobile, minHeight: isMobile }}>\r\n                        {\r\n                            thereAreRequest ?\r\n                                <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: isMobile }}>\r\n                                    <img className=\"loading\" src={loading} alt=\"loading\" />\r\n                                </div> :\r\n                                (\r\n                                    !thereIsData ? <div\r\n                                        className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\"\r\n                                        style={{ minHeight: isMobile }}>\r\n                                        There is no data\r\n                                        <div>\r\n                                            <CButton onClick={() => {\r\n                                                setShowScanner(true)\r\n                                                setShowSkuList({ show: false, poNumber: null })\r\n                                            }} className={`${showSkuList?.show ? 'bg-green text-white' : 'bg-softGreen text'} no-shadow sku-item px-5 mt-3 w-100`}>\r\n                                                Scan another QR Code\r\n                                            </CButton>\r\n                                        </div>\r\n\r\n                                    </div> :\r\n                                        localEntryData?.jobPost?.list?.map((data, idx) => <SkuItemCard showSkuList={showSkuList} totalList={localEntryData?.jobPost?.list?.length} skuList={localEntryData} setShowSkuList={setShowSkuList} setLocalEntryData={setLocalEntryData} setCreatePo={setCreatePo} img={data?.photo} skuDescription={data?.skuName} skuNumber={data?.skuNumber} uom={data?.unitOfMeassures} uomValue={data?.totalQty} expiryDate={data?.inboundDate} idx={idx} />))\r\n                        }\r\n                    </CModalBody>\r\n                    {/* <div className={`px-3 pb-3 ${showSkuList?.show}`}>\r\n                        <CButton className={`${showSkuList?.show ? 'bg-green text-white' : 'bg-softGreen text'} no-shadow sku-item px-5 mt-3 w-100`}> Submit</CButton>\r\n                    </div> */}\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default ItemListModal","import React, { useState } from \"react\";\r\nimport {\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport QrReader from 'react-qr-reader'\r\n\r\nconst submit = ({ setShowSkuList, setShowScanner, poNumber }) => {\r\n  setShowSkuList({ show: true, poNumber: poNumber })\r\n  setShowScanner(false)\r\n}\r\n\r\nconst Scanner = ({ showScanner, setShowScanner, setSearch, setShowSkuList, search, setLocalEntryData }) => {\r\n  const width = document.documentElement.clientWidth\r\n  let previewStyle = {\r\n    height: 'unset',\r\n    width: 500,\r\n  }\r\n\r\n  if (width <= 500) {\r\n    previewStyle.width = 350\r\n  }\r\n  const [poNumber, setPoNumber] = useState(null)\r\n  console.log(poNumber)\r\n  return (\r\n    <CRow tabIndex='0' className={showScanner ? null : 'd-none'} onKeyDown={e => e.keyCode === 13 ? setShowScanner(false) : false}>\r\n      <CCol>\r\n        <CModal\r\n          onClose={() => setShowScanner(false)}\r\n          show={showScanner}\r\n          closeOnBackdrop={true}\r\n        >\r\n          <CModalBody style={{ height: 'fit-content', width: previewStyle.width }} className=\"w-100 p-0 d-flex justify-content-center\">\r\n            <QrReader\r\n              facingMode=\"environment\"\r\n              className={'rounded frame'}\r\n              delay={0}\r\n              style={previewStyle}\r\n              onError={(e) => console.log(e)}\r\n              onScan={async data => {\r\n                if (data && showScanner) {\r\n                  if (typeof (setLocalEntryData) === 'function') await setLocalEntryData();\r\n                  await setSearch('barcode')\r\n                  await setPoNumber(data)\r\n                  await submit({ setShowSkuList, setShowScanner, poNumber: data })\r\n                }\r\n              }}\r\n            />\r\n          </CModalBody>\r\n          {/* <CModalFooter className=\"px-5 border-none bg-green d-flex justify-content-between\">\r\n            <div onClick={() => setShowScanner(false)} className='LatoBold text-white pointer'>Cancel</div>\r\n            <div className='LatoBold text-white'>{search}</div>\r\n            <div onClick={() => submit({ setShowSkuList, setShowScanner, poNumber })} className='LatoBold text-white pointer'>Submit</div>\r\n          </CModalFooter> */}\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default Scanner\r\n"],"sourceRoot":""}