{"version":3,"sources":["Page/ConfigModules/Settings/services.js","Page/ConfigModules/Settings/Saved.jsx","Page/ConfigModules/Settings/ActiveStock.jsx","assets/icons/loading/LOADING-MLS-GRAY.gif","Component/CustomTable/index.jsx"],"names":["activeStockTableHeader","width","Header","placeholder","accessor","style","textAlign","display","justifyContent","className","headerClassName","Saved","submit","userName","useState","show","setShow","success","setSuccess","saved","headerIcon","textColor","button","date","dateFull","Date","title","message1","message2","message3","buttonText","failed","window","onkeydown","e","keyCode","useEffect","_","isError","data","isSuccess","onClose","size","minHeight","bodyOpenClassName","closeOnBackdrop","backgroundColor","opacity","wordWrap","height","fontSize","onClick","useDimension","emptyItem","isMobile","tableHeight","customTableClass","ActiveStock","dispatch","useDispatch","lastSyncHistories","useSelector","state","user","email","thereAreRequest","warehouseUuid","setSubmit","getLatestSyncHistories","length","maxHeight","isSaved","value","CustomTable","editColumn","styles","color","columns","syncAllHistories","type","src","loading","alt","module","exports","ReactTableFixedColumns","withFixedColumns","ReactTable","props","getColumnWidth","rows","headerText","Math","max","map","row","toString","header","listHeader","h","index","obj","Cell","sortable","resizable","showModal","activeTab","editColumnTemp","this","fields","tableStatus","Fragment","showPagination","noDataText","minRows","getTdProps","rowInfo","column","instance","handleOriginal","original","cursor","isNaN","id","defaultPageSize","React","Component"],"mappings":"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","file":"static/js/47.ecae9a6f.chunk.js","sourcesContent":["export const activeStockTableHeader = [\r\n    { width: '100%', Header: 'SYNC DATE', placeholder: 'Sync Date', accessor: 'updatedAt', style: { textAlign: 'left', display: 'start', justifyContent: 'flex-start' } },\r\n    { width: '100%', Header: 'USER', placeholder: 'User', accessor: 'createdBy' },\r\n    { width: '100%', Header: 'MODULE', placeholder: 'Module', accessor: 'module', style: { textAlign: 'right', display: 'flex', justifyContent: 'flex-start' }, },\r\n    { width: '100%', Header: 'MESSAGE RESPONSE', placeholder: 'Message Response', accessor: 'responseMessage', style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-start' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\r\n]\r\n\r\nexport const data = [\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n]","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { dateFull } from 'services'\r\nimport { submitAction, message, handleFailed } from './services'\r\n\r\nconst Saved = ({ submit, userName }) => {\r\n    const [show, setShow] = useState(true)\r\n    const [success, setSuccess] = useState()\r\n    const saved = {\r\n        success: {\r\n            headerIcon: 'em em-tada',\r\n            textColor: 'green',\r\n            button: 'bg-green text-white',\r\n            date: dateFull({ date: new Date }),\r\n            title: 'Success',\r\n            message1: 'Active Stock already synchronize on all modules',\r\n            message2: '',\r\n            message3: '',\r\n            buttonText: 'Got it!',\r\n            userName: userName ? userName : ''\r\n        },\r\n        failed: {\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            button: 'bg-red text-white',\r\n            date: '',\r\n            title: 'Failed',\r\n            message1: '',\r\n            message2: 'Please check the detail from the Active history table',\r\n            message3: 'Active Stock failed to synchronize.',\r\n            buttonText: 'Check history',\r\n            userName: ''\r\n        }\r\n    }\r\n    window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\r\n    useEffect(_ => {\r\n        const isError = submit?.data?.isSuccess\r\n        if (submit?.data?.isSuccess) setShow(true)\r\n        if (!submit?.data?.isSuccess) setShow(false)\r\n        if (isError) setSuccess(true)\r\n        if (!isError) setSuccess(false)\r\n    }, [submit])\r\n    const isSuccess = success ? saved.success : saved.failed\r\n    return (\r\n        <CRow className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    className={``}\r\n                    show={show}\r\n\r\n                    onClose={() => null}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 iconU-modalClose\" ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 py-0 d-flex justify-content-between flex-column\">\r\n                        <div>\r\n                            <div>\r\n                                <label className={`${isSuccess.textColor} LatoBold mr-2 h5 mb-3`}>{isSuccess.title}</label> <span><i className={`${isSuccess.headerIcon}`}></i></span>\r\n                            </div>\r\n                            <div className='text'>{isSuccess.message1}</div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA', opacity: 1 }} className={`w-100 border rounded px-3 pt-3 pb-3 mb-3 ${success ? null : 'd-none'}`}>\r\n                            <div className='mb-0'>\r\n                                <div className={`mr-1 ${success ? null : 'd-none'}`}>\r\n                                    <div style={{ wordWrap: 'break-word', opacity: 1, height: true ? false : 0 }} className={`mr-1`}>\r\n                                        <div className={`h5 text mb-3 ${success ? null : 'd-none'}`}>{isSuccess.date}</div>\r\n                                        <div style={{ fontSize: '1rem' }} className={`${success ? null : 'd-none'} font-green`}>{`By ${isSuccess.userName}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ fontSize: '1rem' }} className={`${!success ? null : 'd-none'} text`}>{`${isSuccess.message3}`}</div>\r\n                        <div style={{ fontSize: '1rem' }} className={`${!success ? null : 'd-none'} text`}>{`${isSuccess.message2}`}</div>\r\n                        <div className='w-100 d-flex '>\r\n                            <CButton onClick={() => setShow(false)} className={`no-shadow px-5 mr-4 mb-3 ${isSuccess.button}`}>\r\n                                {isSuccess.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow >\r\n    );\r\n};\r\n\r\nexport default Saved;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useDimension } from 'Page/StockEntry/GeneralServices/'\r\nimport CustomTable from 'Component/CustomTable'\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport { getLatestSyncHistories, syncAllHistories } from 'apiServices'\r\nimport { activeStockTableHeader, data } from './services'\r\nimport Saved from './Saved'\r\n\r\nconst { height, emptyItem, width, isMobile } = useDimension(200)\r\nconst tableHeight = height + 50\r\nconst customTableClass = isMobile ? ('stockMovement' === 'stockMovement' ? 'target-movement-mobile' : 'target-repack-mobile') : ('stockMovement' === 'stockMovement' ? 'target-movement' : 'target-repack')\r\n\r\nconst ActiveStock = () => {\r\n    const dispatch = useDispatch()\r\n    const lastSyncHistories = useSelector(state => state.lastSyncHistories)\r\n    const userName = useSelector(state => state.user.email)\r\n    const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n    const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n    const showSubmit = process.env.REACT_APP_API_URL === 'https://inventory-management-oss-prd.apps.aws.sayurbox.io/' ? false : true\r\n    const [submit, setSubmit] = useState()\r\n    useEffect(_ => {\r\n        getLatestSyncHistories({ dispatch })\r\n    }, [])\r\n\r\n    if (thereAreRequest !== 0 && !lastSyncHistories?.length) return (\r\n        <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem + 200, maxHeight: emptyItem + 200 }}>\r\n            <img className=\"loading\" src={loading} alt=\"loading\" />\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"bg-white border radius-all w-100 active-stock\" style={{ minHeight: height, height: height, maxHeight: height }} >\r\n            <Saved isSaved={true} submit={submit} setSubmit={(value) => setSubmit(value)} thereAreRequest={thereAreRequest} userName={userName} />\r\n            <div style={{ minHeight: tableHeight }}>\r\n                <CustomTable\r\n                    editColumn={'false'}\r\n                    className={`${customTableClass} pointer`}\r\n                    styles={{ color: 'red', textAlign: 'right', width: '100%', maxHeight: tableHeight }}\r\n                    data={lastSyncHistories?.length ? lastSyncHistories : []}\r\n                    columns={activeStockTableHeader} />\r\n            </div>\r\n\r\n            <div className='w-100 d-flex justify-content-end'>\r\n                <button onClick={() => syncAllHistories({ warehouseUuid, setSubmit })} type=\"button\" className={`${showSubmit ? null : 'd-none'} btn px-5 mt-3 sku-item no-shadow text-white ${!thereAreRequest && lastSyncHistories?.length ? \"bg-green\" : \"bg-lineGrey\"}`}>{thereAreRequest ? 'Processing...' : 'Update Stock Active'}</button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ActiveStock","module.exports = __webpack_public_path__ + \"static/media/LOADING-MLS-GRAY.903088aa.gif\";","import ReactTable from 'react-table-v6'\r\nimport 'react-table-v6/react-table.css'\r\nimport './CustomTable.scss'\r\nimport React from 'react'\r\n\r\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\r\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\r\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\r\n\r\nclass CustomTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            activeTab: '1',\r\n            editColumnTemp: {},\r\n        }\r\n    }\r\n\r\n    getColumnWidth = (rows, accessor, headerText) => {\r\n        const cellLength = Math.max(\r\n            ...rows.map(row => {\r\n                let value = '';\r\n                value = accessor(row);\r\n                // if (typeof accessor === 'string') {\r\n                //     value = _.get(row, accessor);\r\n                // } else {\r\n                //     value = accessor(row);\r\n                // }\r\n                if (typeof value === 'number') return value.toString().length;\r\n                return (value || '').length;\r\n            }),\r\n            headerText.length\r\n        );\r\n        return cellLength * 12\r\n    }\r\n\r\n    headerIcon = (data, header, editColumn) => {\r\n        let listHeader = []\r\n        header && header.map((h, index) => {\r\n            if (!editColumn[index]) {\r\n                let withIcon = (<span>\r\n                    {h.Header} <i className=\"iconU-sort\"> </i>\r\n                </span>\r\n                )\r\n                let obj = {\r\n                    Header: withIcon,\r\n                    Cell: h.Cell,\r\n                    accessor: h.accessor,\r\n                    sortable: h.sortable === false ? false : true,\r\n                    resizable: h.resizable || false,\r\n                    className: h.className || null,\r\n                    headerClassName: h.headerClassName || null,\r\n                    style: h.style || null,\r\n                    width: h.width || null,\r\n                }\r\n                return listHeader = [...listHeader, obj]\r\n            } else {\r\n                return listHeader = [...listHeader]\r\n            }\r\n        })\r\n\r\n        if (this.props.editColumn !== 'false') {\r\n            let editBtn = (\r\n                <i className='iconU-tableEdit pencilTable' />\r\n            )\r\n            let obj = {\r\n                Header: editBtn,\r\n                accessor: 'editBtn',\r\n                width: 50,\r\n                style: { textAlign: 'center' },\r\n            };\r\n            listHeader = [...listHeader, obj];\r\n        }\r\n\r\n        return listHeader;\r\n    };\r\n\r\n    render() {\r\n        const { showModal, editColumnTemp, fields } = this.state\r\n        let { columns, data, onClick, styles, tableStatus, className } = this.props\r\n        let headerIcon = this.headerIcon(data, columns, editColumnTemp);\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <ReactTableFixedColumns\r\n                    className={className}\r\n                    columns={headerIcon}\r\n                    data={data}\r\n                    showPagination={false}\r\n                    style={styles}\r\n                    noDataText={tableStatus == \"noData\" ? 'Please Wait' : 'No  Data Found'}\r\n                    minRows='0'\r\n                    resizable={false}\r\n                    getTdProps={(state, rowInfo, column, instance) => {\r\n                        return {\r\n                            onClick: (e, handleOriginal) => {\r\n                                !!onClick &&\r\n                                    onClick(rowInfo.original, state, column, e, instance);\r\n                            },\r\n                            style: {\r\n                                height: \"3rem\",\r\n                                cursor: !!onClick && 'pointer',\r\n                                textAlign: isNaN(rowInfo?.original[column.id])\r\n                                    ? 'left'\r\n                                    : 'right',\r\n                            },\r\n                        };\r\n                    }}\r\n                    defaultPageSize={50}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CustomTable"],"sourceRoot":""}