{"version":3,"sources":["Page/StockEntry/AdditionalInbound/AddSKU.jsx","Component/Dropdown/index.jsx","Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/SKUItem/index.jsx","Component/Filter/index.jsx","Component/Search/index.jsx","Component/Search/services.js","assets/icons/barcodeActive.svg","assets/icons/barcodeInactive.svg","assets/icons/ascOn.svg","assets/icons/ascOff.svg","assets/icons/categoryOn.svg","assets/icons/categoryOff.svg","assets/icons/deleteCategoryOn.svg","assets/icons/deleteCategoryOff.svg","assets/icons/checkHover.svg","assets/icons/checkNotHover.svg","Page/StockEntry/AdditionalInbound/services.js"],"names":["withRouter","props","thereAreRequest","useSelector","state","dispatch","useDispatch","warehouseUuid","user","status","isLoading","inboundEntryData","warehouseArea","selectedSkuCheck","moduleEntry","moduleName","areaId","inboundAddSku","useState","summary","setSummary","isSkusNumber","setSkusNumber","firstLoadCheck","setFirstLoadCheck","isSelectedData","setIsSelectedData","search","setSearch","useEffect","getRipenessLevel","getWarehouseArea","undefined","history","push","jobPost","list","map","data","idx","skuNumber","areaData","areaSource","areaName","setAreaId","selected","category","setCategory","dimention","document","documentElement","clientHeight","height","emptyItem","length","className","show","title","placeholder","options","onChangeDropdown","selectedValue","showTitle","filter","searchHandler","desc","getStockTakeSummaryAddSku","setModule","selectedSkusNumber","style","minHeight","key","img","photo","skuDescription","skuName","uomLabel","uomValue","totalQty","uom","unitOfMeassures","isCheckedHandler","checked","preAddSku","moduleSummary","preAddHandler","check","maxHeight","responseCheck","label","src","loading","alt","onClick","type","to","e","preventDefault","addSku","Dropdown","isEmpty","width","entryListIdx","poListIdx","isDisabled","noMarginBottom","resetName","isMulti","hideResetOpt","zInfinity","isOpen","setIsOpen","isEmptyStyle","styles","border","elem","getElementById","position","getBoundingClientRect","clientWidth","defaultvalue","value","val","menuPlacement","bottom","inputId","isSearchable","id","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","onChange","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","color","cursor","fontWeight","theme","borderRadius","PopUp","refresh","icon","statusDisplay","cancelButtonTitle","actionButtonTitle","cancelButtonClass","actionButtonClass","actionButtonEvent","colorText","msg1","msg2","onCloseFunction","refreshOnCancel","setIsSuccess","code","message","setShow","window","onkeydown","keyCode","closeOnBackdrop","onClose","success","name","STATUS","size","bodyOpenClassName","location","reload","refreshPage","parentOncCloseFunction","SKUItem","skuUuId","selectAll","Img","singleView","setCreatePo","target","targetMovementProgress","targetRepackProgress","setFromBarcode","setSingleViewSku","mobile","React","isChecked","setIsChecked","createPoSingleView","showProgress","totalMove","total","forEach","Number","totalPack","totalUom","totalUos","_","onKeyDown","tabindex","minWidth","marginLeft","isFloat","max","toUpperCase","paddingLeft","paddingRight","paddingTop","paddingBottom","Filter","useEntryDimention","isMobile","wrapperRef","useRef","rectPosition","top","topValue","handleClickOutside","event","current","contains","addEventListener","removeEventListener","opacity","left","right","setSelected","active","setActive","handleSelected","item","reset","newOptions","targetRepack","stockMovementTargetRepack","thereIsTargetRepack","sortOptions","filterCategoryGreen","filterCategoryGrey","filterAscGreen","filterAscGrey","ref","transition","transitionProperty","transitionDuration","overflow","currentItem","itemTextStyle","onMouseEnter","onMouseLeave","handleSingleSelected","fontSize","deleteOn","deleteOff","toLowerCase","includes","sort","a","b","filterBySelected","itemOpacity","tableLayout","align","checkHover","checkNotHover","Search","textSearch","barcodeScanner","filterDropdown","showScanner","areaDestination","setAreaDestination","setSortBy","hideFilter","useScanner","filterShow","setFilterShow","filterText","filterIcon","setDesc","categoryList","onKeyPress","scannerChecker","barcodeActive","barcodeInActive","filterToggle","module","exports","selectSku","setLocalEntryData","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","skuUuid","jsD","sI","getGrade","skuId","grade","getPoBySkuId","addPoItem","poList","itemList","expiryMs","expiryDate","moment","valueOf","inBoundyMs","inboundDate","initialWeight","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","parseInt","filterBySkuName","CREATE_JOB_SHEET"],"mappings":"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","file":"static/js/29.ebd9d5d8.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport Dropdown from \"Component/Dropdown\";\r\nimport Search from \"Component/Search\";\r\nimport { getStockTakeSummaryAddSku } from \"apiServices\";\r\nimport { getWarehouseArea, getRipenessLevel } from \"apiServices/dropdown\";\r\nimport SKUItem from \"Component/SKUItem\";\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport \"./index.scss\";\r\nimport { preAddSku } from './services'\r\nimport { responseCheck, selectedSkuCheck, setAreaId, addSku } from \"Page/StockEntry/GeneralServices/moduleServices\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AddSKU = (props) => {\r\n    const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n    const dispatch = useDispatch();\r\n    const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n    const status = useSelector((state) => state.status);\r\n    const isLoading = useSelector((state) => state.isLoading);\r\n    const inboundEntryData = useSelector((state) => state.inboundEntryData);\r\n    const isCheckedTotal = selectedSkuCheck({ moduleEntry: inboundEntryData, moduleName: 'inbound' });\r\n    const warehouseArea = useSelector(state => state.warehouseArea);\r\n    const areaId = useSelector(state => state.areaId)\r\n    const inboundAddSku = useSelector(state => state.inboundAddSku)\r\n    const [summary, setSummary] = useState(null)\r\n    const [isSkusNumber, setSkusNumber] = useState(null)\r\n    const [firstLoadCheck, setFirstLoadCheck] = useState(true)\r\n    const [isSelectedData, setIsSelectedData] = useState([])\r\n    const [search, setSearch] = useState()\r\n\r\n    useEffect(() => {\r\n        getRipenessLevel({ dispatch })\r\n        getWarehouseArea({ dispatch, warehouseUuid })\r\n    }, []);\r\n    \r\n\r\n    if (!inboundEntryData || inboundEntryData === undefined) {\r\n        props.history.push(\"/inventory-entry/additional-inbound\")\r\n    }\r\n\r\n    if (firstLoadCheck === true && inboundEntryData !== undefined) {\r\n        //get sku number only\r\n        let skusNumber = inboundEntryData.jobPost.list.map((data, idx) => {\r\n            return data.skuNumber\r\n        });\r\n        setSkusNumber(skusNumber)\r\n\r\n        //get area source from selected data\r\n        let areaData = {}\r\n        areaData['value'] = inboundEntryData?.jobPost?.areaSource\r\n        areaData['label'] = inboundEntryData?.jobPost?.areaName\r\n        \r\n        setAreaId({ selected: areaData, dispatch })\r\n        setFirstLoadCheck(false)\r\n    }\r\n\r\n    //search\r\n    const [category, setCategory] = useState()\r\n\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 290\r\n    const emptyItem = dimention - 290\r\n\r\n    if (inboundAddSku === false && inboundEntryData?.jobPost.list.length > 0 ) props.history.push(\"/inventory-entry/additional-inbound/weight-entry\")\r\n    return (\r\n        <div className=\"w-100  stock-take-summary\">\r\n            <PopUp status={status} />\r\n            <div className=\" bg-white border-all radius-all d-md-flex dd-group d-none\">\r\n                <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n                    <Dropdown\r\n                        show={true}\r\n                        title=\"Select Area\"\r\n                        placeholder='Select Area'\r\n                        options={warehouseArea}\r\n                        onChangeDropdown={(selected) => setAreaId({ selected, dispatch })}\r\n                        selectedValue={areaId}\r\n                        showTitle={true}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white   border-all radius-all mb-3\">\r\n                <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n                    <div className=\"text LatoBold d-flex justify-content-between align-items-center sku-des\">\r\n                        <div>\r\n                            Search & check SKU(s) that you want add to entries{\" \"}\r\n                            <span className=\"green\">{`(${isSelectedData.length} Selected SKU${isSelectedData.length> 1 ? \"s\" : \"\"})`}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Search\r\n                    category={category}\r\n                    setCategory={setCategory}\r\n                    placeholder={\"Enter SKU\"}\r\n                    filter={false}\r\n                    searchHandler={(desc) =>\r\n                        getStockTakeSummaryAddSku({\r\n                            category,\r\n                            dispatch,\r\n                            desc,\r\n                            warehouseUuid,\r\n                            areaId,\r\n                            setModule: setSummary,\r\n                            selectedSkusNumber: isSkusNumber\r\n                        },setSearch(desc))\r\n                        // areaId\r\n                        // ? getStockTakeSummary({dispatch, desc, warehouseUuid, areaId})\r\n                        // : setAreaId(\"empty\")\r\n                    }\r\n                />\r\n                <div\r\n                    className={`mb-3 mt-3 d-flex align-items-center ${summary?.length ? \"flex-column\" : \"flex-row\"\r\n                        } w-100 text-center`}\r\n                    style={{ minHeight: height }}\r\n                >\r\n                    {summary?.length ? (\r\n                        summary?.map((data, idx) => {\r\n                            return (\r\n                                <SKUItem\r\n                                    key={idx}\r\n                                    img={data?.photo}\r\n                                    skuDescription={data?.skuName}\r\n                                    skuNumber={data?.skuNumber}\r\n                                    uomLabel=\"weight\"\r\n                                    uomValue={data?.totalQty}\r\n                                    uom={data?.unitOfMeassures}\r\n                                    isCheckedHandler={(checked) =>\r\n                                        preAddSku({\r\n                                            idx,\r\n                                            checked,\r\n                                            dispatch,\r\n                                            moduleSummary: summary,\r\n                                            moduleEntry: isSelectedData,\r\n                                            moduleName: 'inbound',\r\n                                            warehouseUuid,\r\n                                            areaId,\r\n                                            preAddHandler: setIsSelectedData\r\n                                        })\r\n                                    }\r\n                                    check={data?.checked}\r\n                                />\r\n                            );\r\n                        })\r\n                    ) : (\r\n                            <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem, maxHeight:emptyItem }}>\r\n                                {!responseCheck({ isLoading, summary }) ? (\r\n                                    <img className=\"loading\" src={loading} alt=\"loading\" />\r\n                                ) :  areaId && summary?.length === 0 ? (\r\n                                    <div>\r\n                                      Sorry, we couldn't find any matches\r\n                                      for '<span className='LatoBold'>{search}</span>' in {areaId?.label} area.\r\n                                      <br/>\r\n                                      Please Try search with another term.\r\n                                    </div>\r\n                                  ) : 'Enter SKU'}\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n            <div className=\"h-screen-summary-footer d-flex flex-column justify-content-start\">\r\n                <div className=\"w-100 d-flex align-items-center justify-content-between mb-1\">\r\n                    <button\r\n                        onClick={() => props.history.push(\"/inventory-entry/additional-inbound/weight-entry\")}\r\n                        type=\"button\"\r\n                        className=\"btn px-4 no-shadow border-all bg-white fontSizeButton\"\r\n                    >\r\n                        Cancel\r\n          </button>\r\n                    <Link to='/inventory-entry/additional-inbound/weight-entry' onClick={(e) => thereAreRequest === 0 && isSelectedData?.length > 0 ? true : e.preventDefault()}>\r\n                        <button\r\n                            onClick={() => thereAreRequest === 0 && isSelectedData?.length > 0 ? addSku({ dispatch, moduleEntry: isSelectedData, moduleSummary: inboundEntryData, moduleName: 'inbound' }) : null}\r\n                            type=\"button\"\r\n                            className={`btn px-5 fontSizeButton no-shadow text-white ${thereAreRequest === 0 && isSelectedData?.length > 0 ? \"bg-green\" : \"bg-lineGrey\"\r\n                                }`}\r\n                        >\r\n                            {isSelectedData?.length === 0 ? 'Update' :thereAreRequest === 0 && isSelectedData?.length > 0? 'Update' : 'Processing...'}\r\n          </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default withRouter(AddSKU);\r\n","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom,\r\n    resetName,\r\n    isMulti,\r\n    hideResetOpt,\r\n    zInfinity\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? (styles) => {\r\n        return {\r\n            ...styles,\r\n            border: 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{ label: `-${resetName ? resetName : title}-`, value: null }]\r\n    if (options) defaultvalue = [...defaultvalue, ...options]\r\n    if (hideResetOpt) defaultvalue = defaultvalue.filter(val => val?.value)\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if (dimention <= 500) {\r\n        menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n        if (title === 'Categories') menuPlacement = 'top'\r\n    }\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                inputId={`${title}_${poListIdx}_${entryListIdx}`}\r\n                isMulti={isMulti}\r\n                isSearchable={dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : (selectedValue?.length ? selectedValue : false)}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={resetName ? resetName : placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={150}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: zInfinity ? 9999999999999999 : 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#969696',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { onClose, refreshPage } from \"./services.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { STATUS } from \"apiServices/action\";\r\n\r\nconst PopUp = ({\r\n  refresh,\r\n  status,\r\n  icon,\r\n  statusDisplay = false,\r\n  title = \"\",\r\n  cancelButtonTitle = \"Cancel\",\r\n  actionButtonTitle = \"Submit\",\r\n  cancelButtonClass = \"bg-background\",\r\n  actionButtonClass = \"bg-background\",\r\n  actionButtonEvent = null,\r\n  colorText = \"red\",\r\n  msg1 = null,\r\n  msg2 = null,\r\n  onCloseFunction = null,\r\n  refreshOnCancel = true,\r\n  setIsSuccess\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  if (status?.code === 500 ) {\r\n    icon = \"em-pensive\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 408 ) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Request Timeout\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 400 ) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n  if (status?.code === 404) {\r\n    title = \"Something wrong with the application\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n\r\n  const [show, setShow] = useState(statusDisplay);\r\n\r\n  useEffect(() => {\r\n    //from outside change\r\n    setShow(statusDisplay);\r\n  }, [statusDisplay]);\r\n\r\n  useEffect(() => {\r\n  }, [show]);\r\n\r\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\r\n  return (\r\n    <CRow className={`${show ? null : \"d-none\"}`}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          closeOnBackdrop={false}\r\n          onClose={() => {\r\n            setShow(false)\r\n            if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n            dispatch({ type: STATUS, status: null });\r\n            if (onCloseFunction) {\r\n              onCloseFunction()\r\n            }\r\n          }}\r\n          size=\"lg\"\r\n          style={{ minHeight: \"280px\" }}\r\n          bodyOpenClassName=\"p-3\"\r\n        >\r\n          {/* <div className='d-flex flex-row-reverse'>\r\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-3 border-none\">\r\n              <CModalTitle className={`text LatoBold ${colorText}`}>\r\n                {title}\r\n              </CModalTitle> */}\r\n\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <i\r\n              className=\"pr-3 pt-3 iconU-modalClose\"\r\n              onClick={() => {\r\n                setShow(false)\r\n                if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n                dispatch({ type: STATUS, status: null });\r\n                if (onCloseFunction) {\r\n                  onCloseFunction()\r\n                }\r\n              }}\r\n            ></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className={`text LatoBold ${colorText}`}>\r\n              {title} <span><i className={`em ${icon}`}></i></span>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">{msg1}</p>\r\n            <p className=\"text\">{msg2}</p>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            {cancelButtonTitle ? (\r\n              <CButton\r\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\r\n                onClick={() => {\r\n                  if (refreshOnCancel) {\r\n                    if (typeof (refresh) === 'function') refresh()\r\n                    else refreshPage({ refresh: true });\r\n                  } else {\r\n                    onClose({\r\n                      setShow,\r\n                      parentOncCloseFunction: onCloseFunction,\r\n                    });\r\n                  }\r\n                  dispatch({ type: STATUS, status: null });\r\n                }}\r\n              >\r\n                {cancelButtonTitle}\r\n              </CButton>\r\n            ) : null}\r\n            {actionButtonTitle ? (\r\n              <CButton\r\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\r\n                onClick={() => {\r\n                  if (actionButtonEvent) {\r\n                    actionButtonEvent();\r\n                    setShow(false);\r\n                  } else {\r\n                    setShow(false)\r\n                  }\r\n                }\r\n                }\r\n              >\r\n                {actionButtonTitle}\r\n              </CButton>\r\n            ) : null}{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\r\n  setShow(false);\r\n  if (parentOncCloseFunction) {\r\n    parentOncCloseFunction();\r\n  }\r\n\r\n};\r\n\r\nexport const refreshPage = ({ refresh = true }) => {\r\n  if (refresh === true) {\r\n    window.location.reload(false);\r\n  }\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport Img from 'assets/icons/sayur-box-logo.svg'\r\nimport { isFloat } from 'services'\r\nimport { CProgress } from '@coreui/react'\r\n\r\nconst SKUItem = ({\r\n    skuUuId = 123,\r\n    selectAll,\r\n    img = Img,\r\n    skuDescription = 'SKU Description',\r\n    skuNumber = '1001',\r\n    uomLabel = 'weight',\r\n    uomValue = 100.3,\r\n    uom = 'KG',\r\n    isCheckedHandler = null,\r\n    check = false,\r\n    idx = 0,\r\n    singleView,\r\n    setCreatePo,\r\n    target,\r\n    targetMovementProgress,\r\n    targetRepackProgress,\r\n    moduleName,\r\n    setFromBarcode,\r\n    setSingleViewSku\r\n}) => {\r\n    const dimention = document.documentElement.clientWidth\r\n    const mobile = dimention <= 500 ? true : false\r\n    const [isChecked, setIsChecked] = React.useState(check)\r\n    const checkHandler = () => {\r\n        setIsChecked(!isChecked)\r\n        if (isCheckedHandler) isCheckedHandler(!isChecked)\r\n    }\r\n\r\n    const createPoSingleView = () => {\r\n        setIsChecked(true)\r\n        if (typeof (setSingleViewSku) === 'function') setSingleViewSku(skuUuId)\r\n        if (typeof (setSingleViewSku) !== 'function') isCheckedHandler(true)\r\n        if (typeof (setCreatePo) === 'function') setCreatePo({ show: true, skuNumber })\r\n        if (typeof (setFromBarcode) === 'function') setFromBarcode(false)\r\n    }\r\n\r\n    const showProgress = target ? true : 'd-none'\r\n    let totalMove = 0\r\n    let total = 0\r\n\r\n    if (targetRepackProgress?.length && moduleName === 'repack') {\r\n        targetRepackProgress.forEach(data => {\r\n            totalMove += Number(data.totalPack)\r\n            total += Number(data.totalUom)\r\n        })\r\n    }\r\n\r\n\r\n    if (targetMovementProgress?.length && moduleName !== 'repack') {\r\n        totalMove = targetMovementProgress[0]?.totalMove\r\n        total = targetMovementProgress[0]?.totalUos\r\n    }\r\n\r\n    useEffect(_ => {\r\n        if (selectAll) {\r\n            setIsChecked(true)\r\n            isCheckedHandler(true)\r\n        }\r\n        if (selectAll === false) setIsChecked(false)\r\n    }, [selectAll])\r\n\r\n    return (\r\n        <div onKeyDown={(e) => e.keyCode === 13 ? createPoSingleView() : false} tabindex=\"0\" key={idx} className={`w-100 border d-md-flex sku-item justify-content-between ${mobile ? 'pl-0 pr-0' : 'pl-2 pr-3'} py-2 mb-3 rounded ${isChecked ? 'bg-softGreen' : null}`}>\r\n            <div className={`d-flex align-items-center w-100 cursor-pointer ${mobile ? 'pl-2 pr-3' : 'pl-0 pr-0'}`} onClick={(checkHandler)}>\r\n                <div\r\n                    style={{ cursor: 'pointer', height: '23px', width: '23px', minWidth: '23px' }}\r\n                    className={`mr-3 text-white d-flex align-items-center rounded px-1 ${check ? 'iconU-pickCheck bg-green pl-1-5' : 'bg-borderHeader'}`} />\r\n                <img\r\n                    src={img} alt='sku image'\r\n                    className='w-5 mr-3 border softGreen rounded' />\r\n                <div className='text-left'>\r\n                    <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                    <div className='text fontSizeTitle'>{skuNumber}</div>\r\n                </div>\r\n            </div>\r\n            <hr className={`${mobile ? null : 'd-none'}`} />\r\n            <div className={`d-flex w-100 ${mobile ? 'pr-3' : 'pr-0'} pl-5 pl-md-0 align-items-center`}>\r\n                <div className={`d-flex justify-content-md-end align-items-center w-100 ${mobile ? 'justify-content-end' : null}`}>\r\n                    <div className={`w-25 mr-4 ${showProgress} tooltips`}>\r\n                        <span style={{ marginLeft: -260 }} className={`${'tooltiptext'}`}>\r\n                            <span className='pl-1 pr-1'>{moduleName === 'repack' ? 'Repack Percentage' : 'Movement Percentage'}</span>\r\n                        </span>\r\n                        <div className='latoBold'>{`${totalMove}/${total}`}<span className='font-green'>{` (${isFloat(totalMove / total * 100)}%)`}</span></div>\r\n                        <CProgress value={totalMove} max={total} className=\"mb-3\" />\r\n                    </div>\r\n                    <div className={`mr-3 iconU-sideBarDot d-flex align-items-center ${showProgress}`} />\r\n                    <div className={`my-0 mr-3 text fontSizeWeightNumber ${mobile ? 'd-none' : null}`}>{`Total ${uom.toUpperCase() === 'KG' ? uomLabel.toUpperCase() : uom.toUpperCase()}`}</div>\r\n                    <div className='mr-1 font-weight-bold green fontSizeWeightNumber'>{isFloat(uomValue)}</div>\r\n                    <div className='mr-3 font-weight-bold green fontSizeWeightNumber'>{uom}</div>\r\n                </div>\r\n                <div onClick={(createPoSingleView)} style={{ paddingLeft: '10px', paddingRight: '10px', paddingTop: '10px', paddingBottom: '8px' }} className={`${singleView ? null : 'd-none'} cursor-pointer iconU-sideBarHideRight font-weight-bold green d-flex align-items-center border rounded border-green`}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SKUItem","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport filterAscGreen from 'assets/icons/ascOn.svg'\r\nimport filterAscGrey from 'assets/icons/ascOff.svg'\r\nimport filterCategoryGreen from 'assets/icons/categoryOn.svg'\r\nimport filterCategoryGrey from 'assets/icons/categoryOff.svg'\r\nimport deleteOn from 'assets/icons/deleteCategoryOn.svg'\r\nimport deleteOff from 'assets/icons/deleteCategoryOff.svg'\r\nimport checkHover from 'assets/icons/checkHover.svg'\r\nimport checkNotHover from 'assets/icons/checkNotHover.svg'\r\nimport { useEntryDimention } from 'Page/StockEntry/GeneralServices'\r\nimport './index.scss'\r\n\r\nconst Filter = ({\r\n    isMulti,\r\n    options,\r\n    onChange,\r\n    moduleName\r\n}) => {\r\n    const [show, setShow] = useState(false)\r\n    const { dimention } = useEntryDimention()\r\n    const isMobile = dimention <= 500 ? true : false\r\n    const wrapperRef = useRef(null);\r\n    const leftValue = () => {\r\n\r\n        if (dimention >= 1024 && dimention < 1280) return -180\r\n        if (dimention >= 1280 && dimention < 1366) return -80\r\n        if (dimention >= 1366 && dimention < 1396) return -50\r\n        if (dimention >= 1396 && dimention < 1440) return -90\r\n        if (dimention >= 1440 && dimention < 1536) return -70\r\n        if (dimention >= 1536 && dimention < 1600) return -50\r\n        if (dimention >= 1600 && dimention < 1920) return -70\r\n        if (dimention >= 1920 && dimention < 1930) return -50\r\n\r\n        // switch (dimention) {\r\n        //     case 1920:\r\n        //         return -50\r\n        //     case 1600:\r\n        //         return -70\r\n        //     case 1536:\r\n        //         return -30\r\n        //     case 1440:\r\n        //         return -70\r\n        //     case 1396:\r\n        //         return -90\r\n        //     case 1366:\r\n        //         return -50\r\n        //     case 1280:\r\n        //         return -80\r\n        //     case 1024:\r\n        //         return -180\r\n        // }\r\n    }\r\n\r\n    const topValue = (moduleName, options, isMulti) => {\r\n        switch (dimention) {\r\n            case 1024:\r\n                return -250\r\n            default:\r\n                if (moduleName === 'waste' || moduleName === 'ADD_SKU') return -100\r\n                return -220\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //handle auto adjust position\r\n\r\n    const elem = document?.getElementById(`c-filter`);\r\n    let rectPosition = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        rectPosition = elem?.getBoundingClientRect()\r\n    }, [show])\r\n\r\n    const top = rectPosition?.top + (isMobile ? -70 : topValue(moduleName, options, isMulti))\r\n\r\n    //handle klick outside\r\n\r\n    function useOutside() {\r\n        useEffect(() => {\r\n            function handleClickOutside(event) {\r\n                if (show && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n                    setShow(!show)\r\n                }\r\n            }\r\n\r\n            // Bind the event listener\r\n            document.addEventListener(\"mousedown\", handleClickOutside);\r\n            return () => {\r\n                // Unbind the event listener on clean up\r\n                document.removeEventListener(\"mousedown\", handleClickOutside);\r\n            };\r\n        }, [wrapperRef, show]);\r\n    }\r\n\r\n    useOutside();\r\n\r\n    const maxHeight = show ? 280 : 0\r\n    const opacity = show ? 1 : 0\r\n\r\n    const left = isMobile ? '1rem' : leftValue()\r\n    const right = isMobile ? '1rem' : false\r\n    const position = isMobile ? 'fixed' : 'absolute'\r\n    const minWidth = isMobile ? '100% !important' : 250\r\n\r\n    // data variable\r\n    const [search, setSearch] = useState('')\r\n    const [selected, setSelected] = useState(isMulti ? [] : {})\r\n    const [active, setActive] = useState(false)\r\n    const handleSelected = ({ options, item, setSelected, reset }) => {\r\n        let newOptions = options?.map(data => data)\r\n        newOptions = newOptions.map(data => {\r\n            if (item === data.value) data.selected = !data.selected\r\n            if (reset) data.selected = false\r\n            return data\r\n        })\r\n        newOptions = newOptions.filter(data => data.selected)\r\n        setSelected(newOptions)\r\n        if (typeof (onChange) === 'function') onChange(newOptions)\r\n    }\r\n\r\n    const handleSingleSelected = (selected) => {\r\n        setSelected(selected)\r\n        if (typeof (onChange) === 'function') onChange(selected)\r\n        setShow(false)\r\n    }\r\n    const filterBySelected = ((a, b) => {\r\n        if (a.selected && !b.selected) return -1\r\n        else if (!a.selected && b.selected) return 1\r\n        else return 0\r\n    })\r\n\r\n    const targetRepack = useSelector(state => state.targetRepack)\r\n    const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\r\n    const thereIsTargetRepack = (targetRepack && moduleName === 'repack') || (stockMovementTargetRepack && moduleName === 'stockMovement') ? true : false\r\n\r\n\r\n    let sortOptions = [\r\n        { value: 'asc', label: 'Ascending' },\r\n        { value: 'desc', label: 'Descending' },\r\n        { target: true, value: 'tasc', label: 'Most Completion Target' },\r\n        { target: true, value: 'tdesc', label: 'Least Completion Target' },\r\n    ]\r\n\r\n    return (\r\n        <div className='position-sticky'>\r\n            <div>\r\n\r\n                <img className='cursor-pointer' id='c-filter' src={isMulti ? (selected?.length ? filterCategoryGreen : filterCategoryGrey) : (selected?.label ? filterAscGreen : filterAscGrey)} onClick={() => setShow(true)} />\r\n\r\n            </div>\r\n            <div ref={wrapperRef} className='text mt-3 rounded shadow py-2'\r\n                style={{\r\n                    zIndex: 1040,\r\n                    transition: 'max-height ease-in',\r\n                    transitionProperty: 'all',\r\n                    transitionDuration: '0.15s',\r\n                    maxHeight,\r\n                    opacity,\r\n                    minWidth,\r\n                    backgroundColor: 'white',\r\n                    top,\r\n                    position,\r\n                    left,\r\n                    right,\r\n                    overflow: 'hidden',\r\n                    // display: show ? false : 'none'\r\n                }}>\r\n\r\n                <div style={{ zIndex: 1040, maxHeight: 230, overflow: 'scroll' }} className={`hide-scrollbar ${isMulti ? 'd-none' : null}`}>\r\n                    {\r\n                        !isMulti && sortOptions?.map(data => {\r\n                            const currentItem = data.label === active ? true : false\r\n                            const itemOpacity = currentItem ? 1 : 0\r\n                            const itemTextStyle = currentItem ? (active === data.label ? 'green' : 'text') : 'emptyTextField'\r\n\r\n                            return (\r\n                                <div\r\n                                    onMouseEnter={() => setActive(data.label)}\r\n                                    onMouseLeave={() => setActive(null)}\r\n                                    onClick={() => handleSingleSelected(data)}\r\n                                    style={{ minHeight: 40, backgroundColor: 'white' }}\r\n                                    className={`${data.target ? (thereIsTargetRepack ? null : 'd-none') : null} filter-items rounded cursor-pointer w-100 d-flex justify-content-between align-items-center px-3 ${data?.label === selected?.label ? 'LatoBold text' : false} ${itemTextStyle}`}>\r\n                                    {data.label}\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                <div className={`px-2 ${isMulti ? null : 'd-none'}`}>\r\n                    <div className='border rounded w-100 d-flex justify-content-between align-items-center pl-3 pr-2' style={{ height: 40, }}>\r\n                        <input id='filter-input' value={search} placeholder='Search Category' onChange={e => setSearch(e.target.value)} type='text' className='plain-input m-0 p-0' style={{\r\n                            color: '#969696'\r\n                            , fontSize: '1rem'\r\n                        }} />\r\n                        <div className='green'>\r\n                            <img\r\n                                src={selected?.length ? deleteOn : deleteOff}\r\n                                alt=\"delete icon\"\r\n                                className=\"cursor-pointer\"\r\n                                onClick={(e) => handleSelected({ options, setSelected, reset: true })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ zIndex: 1040, maxHeight: 230, overflow: 'scroll' }} className='hide-scrollbar'>\r\n                    {\r\n                        isMulti && options?.filter(name => {\r\n                            if (search?.length) {\r\n                                if (name.label.toLowerCase().includes(search.toLowerCase())) return name\r\n                            }\r\n                            else return name\r\n                        }).sort(function (a, b) { return filterBySelected(a, b) }).map((data, idx) => {\r\n                            const currentItem = selected.filter(item => item?.value === data?.value)?.length ? true : false\r\n                            const itemOpacity = currentItem ? 1 : 0\r\n                            const itemTextStyle = isMulti ? (currentItem ? (active === idx ? 'green' : 'text') : 'emptyTextField') : (selected ? 'text' : 'emptyTextField')\r\n\r\n                            return (\r\n                                <div\r\n                                    onMouseEnter={() => setActive(idx)}\r\n                                    onMouseLeave={() => setActive(null)}\r\n                                    onClick={() => handleSelected({ options, item: data.value, setSelected })}\r\n                                    style={{ minHeight: 40, backgroundColor: 'white' }}\r\n                                    className={`filter-items rounded cursor-pointer w-100 d-flex justify-content-between align-items-center ${itemTextStyle}`}>\r\n                                    <table style={{ tableLayout: 'fixed', width: '100%' }}>\r\n                                        <tr>\r\n                                            <td align={'center'} style={{ width: '20%' }} ><img style={{ opacity: itemOpacity }} src={active === idx && currentItem ? checkHover : checkNotHover} /></td>\r\n                                            <td style={{ width: '80%' }} >{data.label}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Filter","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { filterToggle } from './services'\r\nimport barcodeActive from 'assets/icons/barcodeActive.svg'\r\nimport barcodeInActive from 'assets/icons/barcodeInactive.svg'\r\nimport Filter from 'Component/Filter'\r\n\r\nconst Search = ({\r\n    placeholder = '',\r\n    textSearch = '', //text search\r\n    searchHandler = null, //fungsi ketika tombol search di klik\r\n    barcodeScanner,\r\n    filter = '', //isi dari filter\r\n    width = 'w-100',\r\n    className = null,\r\n    filterDropdown = null,\r\n    value,\r\n    showScanner,\r\n    areaId,\r\n    setAreaId,\r\n    areaDestination,\r\n    setAreaDestination,\r\n    moduleName,\r\n    setSearch,\r\n    category,\r\n    setCategory,\r\n    setSortBy,\r\n    hideFilter,\r\n    useScanner\r\n}) => {\r\n    const [filterShow = false, setFilterShow] = useState()\r\n    let filterText = ''\r\n    let filterIcon = ''\r\n    if (filterShow) {\r\n        filterText = \"Show Filter\"\r\n        filterIcon = ''\r\n\r\n    } else {\r\n        filterText = `Hide Filter`\r\n        filterIcon = <i className=\"p-2 rounded-circle bg-background iconU-entryTrash\"></i>\r\n    }\r\n    //params\r\n    const [desc, setDesc] = useState('')\r\n    const categoryList = useSelector(state => state.categoryList)\r\n\r\n    const search = (e) => {\r\n        if (e.key === 'Enter') searchHandler(desc)\r\n    }\r\n\r\n    const scannerChecker = ({ areaId, areaDestination, setAreaId, setAreaDestination, barcodeScanner, moduleName }) => {\r\n        if (moduleName !== 'stockMovement') {\r\n            if (areaId?.value) {\r\n                barcodeScanner(true)\r\n                return\r\n            }\r\n            if (typeof (setAreaId) === 'function') setAreaId('empty')\r\n            return\r\n        }\r\n        if (moduleName === 'stockMovement') {\r\n            if (!areaId?.value) {\r\n                setAreaId('empty')\r\n                return\r\n            }\r\n            if (!areaDestination?.value) {\r\n                setAreaDestination('empty')\r\n                return\r\n            }\r\n            if (areaId?.value === areaDestination?.value) {\r\n                setAreaDestination('empty')\r\n                return\r\n            }\r\n            if (typeof (barcodeScanner) === 'function') barcodeScanner(true)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"search-bar w-100\">\r\n            <div className=\"bg-white d-flex justify-content-between border-all radius-all pl-3 pr-1 py-1 search-m w-100\">\r\n                <div className=\"d-flex align-items-center sub-search-m w-100\">\r\n                    <i className=\"iconU-searchBarSearch fontSizeTitle emptyTextField border-right pr-3\"></i>\r\n                    <div className=\"px-lg-3 px-0 input-search d-flex align-items-center\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"borber-none plain-input\"\r\n                            placeholder={placeholder}\r\n                            onChange={(e) => {\r\n                                setDesc(e.target.value)\r\n                                if (typeof (setSearch) === 'function') setSearch(e.target.value)\r\n                                // value(e.target.value)\r\n                            }}\r\n                            onKeyPress={(e) => search(e)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={`w-100 d-flex align-items-center mb-md-0 mb-3 ${hideFilter ? 'd-none' : null}`}>\r\n                    <div className='mr-2 w-100 d-flex justify-content-end'>\r\n                        {/* <Dropdown\r\n                            isMulti={true}\r\n                            noMarginBottom={true}\r\n                            onChangeDropdown={(selected) => {\r\n                                if (typeof (setCategory) === 'function') setCategory(selected)\r\n                            }}\r\n                            selectedValue={category}\r\n                            options={categoryList}\r\n                            className='w-30'\r\n                            placeholder='Select Category'\r\n                            title='Categories'\r\n                            show /> */}\r\n\r\n                    </div>\r\n                    <div className='mr-md-2'>\r\n                        <Filter\r\n                            moduleName={moduleName}\r\n                            selectedValue={category}\r\n                            options={categoryList}\r\n                            onChange={(selected) => setSortBy(selected)}\r\n                        />\r\n                    </div>\r\n                    <div className=''>\r\n                        <Filter\r\n                            moduleName={moduleName}\r\n                            isMulti={true}\r\n                            selectedValue={category}\r\n                            options={categoryList}\r\n                            onChange={(selected) => setCategory(selected)}\r\n                        />\r\n                    </div>\r\n                    <div className='mr-0 mr-md-2'>\r\n                        <img onClick={() => scannerChecker({ areaId, areaDestination, setAreaId, setAreaDestination, barcodeScanner, moduleName })} className={`ml-2 pointer ${useScanner ? null : 'd-none'}`} src={showScanner ? barcodeActive : barcodeInActive} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"text d-flex align-items-center btn-c-m\" style={{ width: 'fit-content' }}>\r\n                    {filter ?\r\n                        <div className=\"text pointer d-flex sub-btn-m\" onClick={() => filterToggle({ filterShow, setFilterShow })}><div className=\"filter-text\">{filterText}</div> <span className=\"px-3\"><i className=\"fontSizeTitle iconU-searchFilter pr-3\"></i>{filterIcon}</span></div> : null}\r\n                    <button className=\"btn px-5 py-2 text-white bg-green LatoBold no-shadow\" style={{ height: \"fit-content !important\" }} onClick={() => searchHandler(desc)} >Search</button>\r\n                </div>\r\n            </div>\r\n            <div>{(!filterShow ? <div className='w-100'> {filterDropdown} </div> : null)}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","\r\nexport const filterToggle = ({ filterShow, setFilterShow }) => {\r\n    setFilterShow(!filterShow)\r\n}","module.exports = __webpack_public_path__ + \"static/media/barcodeActive.f2ec13af.svg\";","module.exports = __webpack_public_path__ + \"static/media/barcodeInactive.dc8d7118.svg\";","module.exports = __webpack_public_path__ + \"static/media/ascOn.cccbb7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/ascOff.d8a8c79c.svg\";","module.exports = __webpack_public_path__ + \"static/media/categoryOn.5bc834d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/categoryOff.ffb704a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteCategoryOn.fc3f380e.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteCategoryOff.fc0332a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkHover.4cfe8e6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkNotHover.a429f43c.svg\";","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { getPoBySkuId } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { checkIsSkuRequired, filterBySkuName } from '../GeneralServices/moduleServices'\r\n\r\n\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    //     if (list.unitOfMeassures !== 'kg') {\r\n                    //         poList.itemList = [{\r\n                    //             qty: 0\r\n                    //         }]\r\n                    //     }\r\n\r\n                    //     else {\r\n                    //         poList.itemList = [{\r\n                    //             qty: 0,\r\n                    //             grade: { label: null, value: null },\r\n                    //             ripeness: { label: null, value: null }\r\n                    //         }]\r\n                    //     }\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    // poList.inboundQty =\r\n                    //     poList.initialWeight =\r\n                    //     poList.ripenessLevel =\r\n                    poList.skuUuid = list.skuUuid\r\n                    // poList.supplierId =\r\n                    //     poList.supplierName =\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaId?.value),\r\n            list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    setLocalEntryData(jobSheet)\r\n    // dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    // if (list.unitOfMeassures !== 'kg') {\r\n                    //     poList.itemList = [{\r\n                    //         qty: 0\r\n                    //     }]\r\n                    // }\r\n\r\n                    // else {\r\n                    //     poList.itemList = [{\r\n                    //         qty: 0,\r\n                    //         grade: { label: null, value: null },\r\n                    //         ripeness: { label: null, value: null }\r\n                    //     }]\r\n                    // }\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    // poList.inboundQty =\r\n                    //     poList.initialWeight =\r\n                    //     poList.ripenessLevel =\r\n                    poList.skuUuid = list.skuUuid\r\n                    // poList.supplierId =\r\n                    //     poList.supplierName =\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const { qty, grade, ripeness, note } = item\r\n\r\n                if (po.uom === 'kg') {\r\n\r\n\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                            isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                        else {\r\n                            isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            !ripeness?.value ? item.ripenessIsEmpty = true : item.ripenessIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                }\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}"],"sourceRoot":""}