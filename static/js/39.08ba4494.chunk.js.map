{"version":3,"sources":["Page/StockEntry/Waste/WeightEntry/SelectedSKUList/SelectedSKU/index.jsx","Page/StockEntry/Waste/WeightEntry/SelectedSKUList/index.jsx","Component/Input/InputImage.jsx","Page/StockEntry/Waste/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry/index.jsx","Page/StockEntry/Waste/WeightEntry/services.js","Page/StockEntry/Waste/WeightEntry/WeightEntryList/WeightEntryCard/index.jsx","Page/StockEntry/Waste/WeightEntry/WeightEntryList/index.jsx","Page/StockEntry/Waste/WeightEntry/index.jsx","Component/Dropdown/index.jsx","Component/Modal/ModalConfirmation/services.js","Component/Modal/ModalConfirmation/index.jsx","Component/Input/decimal.jsx","assets/icons/trash.png","Component/Modal/PopUpSaved/services.js","Component/Modal/PopUpSaved/index.jsx","Component/Input/index.jsx","Component/Input/Note.jsx","Component/Modal/PopUpRequired/services.js","Component/Modal/PopUpRequired/index.jsx","assets/icons/asc.svg","assets/icons/desc.svg","Component/DatePickerNew/index.jsx","Component/DatePickerNew/services.js","Component/Sort/index.jsx","Page/StockEntry/Waste/services.js"],"names":["SelectedSKU","img","skuDescription","skuNumber","activeSku","uomValue","idx","uom","onClick","data","edited","getEditedData","isEmpty","checkisEmpty","tabIndex","onKeyDown","e","keyCode","className","src","alt","toUpperCase","SelectedSKUList","hideSKUList","setActiveSKU","moduleEntry","moduleName","selectedSku","jobPost","list","length","dimention","document","documentElement","clientWidth","height","clientHeight","useState","hideContent","setHideContent","dispatch","useDispatch","style","padding","to","type","ADD_SKU","maxHeight","map","skuName","uomLabel","unitOfMeassures","totalQty","photo","InputImage","inputWidth","values","onChange","showTitle","title","hover","setHover","show","name","onMouseLeave","onMouseEnter","backgroundImage","backgroundSize","opacity","width","id","margin","fontSize","nv-file-select","uploader","accept","WeightEntry","entryListIdx","wmsPoSkuInfoId","gradeList","ripeness","item","onChangeDropdown","poListIdx","category","Input","qtyIsEmpty","qty","Dropdown","wasteTypeIsEmpty","selectedValue","wasteType","selected","placeholder","options","Note","noteIsEmpty","grade","note","uploadPhotoIsEmpty","uploadPhoto","updateJSWeightLine","a","target","value","js","poList","itemList","CREATE_JOB_SHEET","saveImage","image","regex","console","clear","test","newValue","arr","split","number","parseInt","commaNumber","undefined","sliceNumber","slice","qtyToCompare","qtyToCompareIsEmpty","initialWeight","inboundQty","initialWeightUpdate","minus","isNaN","filter","initialWeightScreen","initialWeightScreenUpdate","over","totalListItemWeightCount","moduleList","initialWeightOver","WeightEntryCard","poItem","expiryDate","inboundDate","supplierName","poUuid","skuUuid","supplierId","ripenessLevel","wmsPoSkuCode","codeGrade","isHidden","initialWeightTotal","uomType","dateFull","date","noTime","label","ripenessIsEmpty","updateJSWeightLineDropdown","Trash","deleteRow","countQty","grades","lastSelected","gradeSelected","push","addRow","isFloat","WeightEntryList","setHideSKUList","useEntryDimention","heightAdj","useWasteEntry","setIsSuccess","confirmation","setConfirmation","discard","setDiscard","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","isLoading","totalWeight","postInfo","isMobile","isPlural","isEdited","paddingLeft","module","close","discardEntry","removeEntryModule","PopUpSaved","submit","totalSku","PopUpRequired","isSuccess","save","saveJobSheet","Sort","minHeight","submitValidation","wasteEntryData","useSelector","state","isDisabled","noMarginBottom","isOpen","setIsOpen","useEffect","isEmptyStyle","styles","border","elem","getElementById","position","getBoundingClientRect","defaultvalue","menuPlacement","bottom","isSearchable","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","color","cursor","fontWeight","theme","borderRadius","next","isCaptcha","setIsValidated","setIsType","isType","key","includes","focus","stat","index","ModalsConfirmation","moveAll","noSkuChecking","singleViewData","buttonName","window","onkeydown","areaDestinationName","areaName","skuListUpdate","newModule","po","_qty","isInteger","parseFloat","_sku","_toWaste","_uom","newSku","sku","wqty","swqty","isExist","findIndex","i","s","skuListUpdateCheck","closeOnBackdrop","overflow","borderBottom","textAlign","maxWidth","ModalsCaptcha","setIsShowModal","submitText","text","characters","charactersLength","text_split","r","charAt","Math","floor","random","selectorCsvFileName","csvFileName","React","isCaptchaText","isValidated","onClose","size","autocomplete","onKeyUp","textTransform","maxLength","toCompare","autoComplete","exports","submitAction","setLocalEntryData","complete","saved","success","header","headerIcon","textColor","status","button","buttonText","failed","bodyOpenClassName","message","handleFailed","defaults","threshold","isTrue","invalidThreshold","setInvalidThreshold","isLessThanInitWeight","log","SKUDatePicker","showDate","selectDate","setShowDate","startDate","Date","endDate","dateRange","setDateRange","setDate","mode","setMode","singleDate","multipleDate","wrapperRef","useRef","handleClickOutside","event","current","contains","addEventListener","removeEventListener","useOutside","ref","ranges","newdate","dt","selection","setDates","dateShow","sortBy","setSortBy","resetFilter","setResetFilter","dateDMY","datePicker","sortByInboundDate","_","filterByDate","minWidth","d","desc","asc","selectSku","checked","moduleSummary","warehouseUuid","areaId","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","jsD","sI","getGrade","skuId","getPoBySkuId","addPoItem","expiryMs","moment","valueOf","inBoundyMs","Number","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","areaSource","areaDestination","preAddSku","preAddHandler","isClear","jsR","qtyCount","valid"],"mappings":"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","file":"static/js/39.08ba4494.chunk.js","sourcesContent":["import React from 'react'\r\nimport { getEditedData,checkisEmpty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nconst SelectedSKU = ({\r\n    img,\r\n    skuDescription,\r\n    skuNumber,\r\n    activeSku,\r\n    uomValue,\r\n    idx,\r\n    uom,\r\n    onClick,\r\n    data\r\n}) => {\r\n    const edited = getEditedData({ data })\r\n    const isEmpty = checkisEmpty(data)\r\n    return (\r\n        <div tabIndex='0' onKeyDown={e => e.keyCode === 13 ? onClick() : false} onClick={() => onClick()} className={`w-100 sku-item softGreen d-flex justify-content-between pl-2 pr-3 py-2 mb-3 cursor-pointer rounded ${edited ? 'soft-green' : null} ${activeSku === idx ? 'border-green' : (isEmpty ? 'border-red' : 'border')}`}>\r\n            <div className='d-flex align-items-center w-100'>\r\n                <div className='d-flex align-items-center'>\r\n                    <img src={img} alt='sku image' className='w-5 mr-3 border softGreen rounded' />\r\n                </div>\r\n                <div className=\"w-100\">\r\n                    <div className='mr-3'>\r\n                        <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div className='text'>{skuNumber}</div>{activeSku}\r\n                        <div className='green LatoBold'>{uomValue} <span>{`${uom ? uom.toUpperCase() : ''}${uomValue > 1 ? 's' : ''}`}</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKU","import React,{useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { ADD_SKU } from 'apiServices/action'\r\nimport './index.scss'\r\nimport SelectedSKU from 'Page/StockEntry/Waste/WeightEntry/SelectedSKUList/SelectedSKU'\r\nconst SelectedSKUList = ({\r\n    hideSKUList,\r\n    setActiveSKU,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName\r\n}) => {\r\n    const selectedSku = moduleEntry.jobPost.list.length\r\n    const dimention = document.documentElement.clientWidth\r\n    let height = document.documentElement.clientHeight\r\n    height = height-212\r\n    const [hideContent, setHideContent] = useState(false)\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className={`${hideSKUList ? 'w-0' : 'w-30'} overflow-hidden  mt-md-0 rounded-bottom rounded-top`}>\r\n            <div style={{padding:17}} className='w-100 bg-white border-top border-left border-right rounded-top border-soft-green text d-flex align-items-center justify-content-between' onClick={() => dimention <= 500 ? setHideContent(!hideContent) : null}>\r\n                <div className=\"LatoBold\"> Selected SKU <span className='font-green'>{`(${selectedSku} SKU${selectedSku > 1 ? 's' : ''})`}</span></div>\r\n                <div className='d-flex align-items-center justify-content-between'>\r\n                    <Link to='/inventory-entry/waste/weight-entry/remove-sku'>\r\n                        <div className=\"fontSizeTitle px-3 emptyTextField iconU-remove\" />\r\n                    </Link>\r\n                    <Link to='/inventory-entry/waste/weight-entry/add-sku'>\r\n                        <div onClick={() => dispatch({ type: ADD_SKU, [`${moduleName}AddSku`]: true })} className='fontSizeTitle emptyTextField text-bold iconU-entryAdd' ></div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div style={{height: dimention <= 500 ? false : height, maxHeight:height}} className={` overflow-y w-100 bg-white mr-0 border rounded-bottom border-soft-green pl-3 pr-0 pt-3 ${hideContent ? 'd-none' : null}`}>\r\n                {\r\n                    moduleEntry?.jobPost.list.map((data, idx) =>\r\n                        <SelectedSKU\r\n                            data={data}\r\n                            idx={idx}\r\n                            activeSku={activeSku}\r\n                            skuDescription={data?.skuName}\r\n                            skuNumber={data?.skuNumber}\r\n                            uomLabel={data?.unitOfMeassures}\r\n                            uomValue={data?.totalQty}\r\n                            uom={data?.unitOfMeassures}\r\n                            img={data?.photo}\r\n                            onClick={() => setActiveSKU(idx)}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKUList","import React, { useEffect, useState } from 'react'\r\n\r\nconst InputImage = ({\r\n    isEmpty,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title\r\n}) => {\r\n    const [hover, setHover] = useState()\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n\r\n    return (\r\n        <div name='upload' className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`} onClick={() => hover && values ? onChange() : null}>\r\n            <div className={` pb-1 LatoBold text-nowrap ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div\r\n                onMouseLeave={() => setHover()}\r\n                onMouseEnter={() => setHover(true)}\r\n                style={{\r\n                    backgroundImage: `url(${values})`,\r\n                    backgroundSize: 'cover',\r\n                    opacity: 0.7,\r\n                    width: values ? 42 : false\r\n                }}\r\n                id='input-img'\r\n                className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green bg-white d-flex w-fit-content px-2 justify-content-center align-items-center input-height d-flex mr-3`}\r\n            >\r\n                {\r\n                    values && hover ?\r\n                        <div className=\"hand-cursor\" style={{ margin: 0 }}>\r\n                            <span style={{ fontSize: values ? 25 : false }} className={`photo_text hidden-xs ${values ? (hover ? 'iconU-entryTrash css-2613qy-menu' : null) : \" iconU-entryPhotos\"}`} />\r\n                        </div>\r\n                        :\r\n                        <label className=\"hand-cursor\" style={{ margin: 0 }}>\r\n                            <input name='upload' type=\"file\" nv-file-select uploader=\"$ctrl.uploader\" accept=\"image/x-png,image/gif,image/jpeg\" onChange={(e) => onChange(e)} />\r\n                            <span className=\"fa fa-camera\" />\r\n                            <span style={{ fontSize: values ? 25 : false }} className={`photo_text hidden-xs ${values ? (hover ? 'iconU-entryTrash css-2613qy-menu' : null) : \" iconU-entryPhotos\"}`} />\r\n                        </label>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputImage","import React from 'react'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport Decimal from 'Component/Input/decimal'\r\nimport Input from 'Component/Input'\r\nimport Note from 'Component/Input/Note'\r\nimport InputImage from 'Component/Input/InputImage'\r\n\r\n\r\nconst WeightEntry = ({\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    gradeList,\r\n    ripeness,\r\n    inputWidth,\r\n    showTitle,\r\n    item,\r\n    onChange,\r\n    onChangeDropdown,\r\n    uom,\r\n    poListIdx,\r\n    category\r\n}) => {\r\n    return (\r\n        <div className='d-flex w-100 we-m'>\r\n            <Input\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                showTitle={showTitle}\r\n                title={'Input Quantity'}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            <Decimal\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n            <Dropdown\r\n                isEmpty={item.wasteTypeIsEmpty}\r\n                selectedValue={item?.wasteType}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={true}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'grade' })}\r\n                title='Waste'\r\n                placeholder='Select Waste'\r\n                options={gradeList}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={null} />\r\n            <Note\r\n                isEmpty={item.noteIsEmpty}\r\n                grade={'Waste'}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                inputWidth={'w-30'}\r\n                values={item?.note}\r\n                showTitle={showTitle}\r\n                title={'Note'}\r\n                onChange={(e) => onChange(e)} />\r\n            <InputImage\r\n                isEmpty={item.uploadPhotoIsEmpty}\r\n                uom={'PACK'}\r\n                inputWidth={'fit-content'}\r\n                values={item.uploadPhoto}\r\n                onChange={(e) => onChange(e)}\r\n                showTitle={true}\r\n                title={'Add Photos'} />\r\n        </div>\r\n    )\r\n}\r\nexport default WeightEntry","import { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport {saveImage} from 'apiServices'\r\nimport {totalListItemWeightCount} from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nexport const addRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    const codeGrade = js.jobPost.list[activeSku].poList[poListIdx].codeGrade\r\n    const grades = js.jobPost.list[activeSku].gradeList.filter(grade => grade?.value === codeGrade)\r\n    const itemList = js.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    const lastSelected = itemList[itemList?.length -1]\r\n    const gradeSelected = lastSelected ? lastSelected.grade : grades[0]\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.push({\r\n        qty: '',\r\n        grade: gradeSelected,\r\n        note: null,\r\n        uploadPhoto:null,\r\n        wasteType:null\r\n    })\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLine = async ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e\r\n}) => {\r\n    const name = e?.target?.name\r\n    let value = e?.target?.value\r\n    let js = { ...moduleEntry }\r\n    if(!name){\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].uploadPhoto = null\r\n        dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n        return\r\n    }\r\n    if(name === 'upload'){\r\n        const image = await saveImage({e,dispatch})\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].uploadPhoto = image\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].uploadPhotoIsEmpty = false\r\n        dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n        return\r\n    }\r\n\r\n    if (name === 'weight' || name === 'weightToCompare') {\r\n        // js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = parseInt(value)\r\n        let regex = /^[0-9\\.\\x0]+$/\r\n        console.clear()\r\n        if ((regex.test(value) === true && value !== \"\")) {\r\n            let newValue = 0;\r\n        let arr = value?.split('.')\r\n        let number = arr[0];\r\n        if(number >= 0) number = parseInt(number)\r\n        let commaNumber = arr[1];\r\n        \r\n        if ((commaNumber !== null && commaNumber !== undefined)) {\r\n            if (commaNumber.length > 2) {\r\n                //jika dibelakang koma ada lebih dari 2 angka\r\n                var sliceNumber = commaNumber.slice(0, 2);\r\n                newValue = `${number}.${sliceNumber}`\r\n            } else {\r\n                newValue = `${number}.${commaNumber}`\r\n            }\r\n        } else {\r\n            newValue = parseInt(number)\r\n        }\r\n        \r\n            //fill weight qty\r\n            if(name === 'weight'){\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n            }\r\n            if(name === 'weightToCompare'){\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompareIsEmpty = false\r\n            }\r\n\r\n        }\r\n        else{\r\n            //fill weight qty\r\n            if(name === 'weight'){\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n            }\r\n            if(name === 'weightToCompare'){\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = ''\r\n            }   \r\n        }\r\n    }\r\n\r\n    else if (name === 'qty'){\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = value ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n    }\r\n    if (name === 'note'){\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    const initialWeight = js.jobPost.list[activeSku].poList[poListIdx].inboundQty\r\n    let initialWeightUpdate = initialWeight\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        if (data.qty) js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        initialWeightUpdate = initialWeightUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = initialWeightUpdate\r\n        const value = js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty\r\n        if (initialWeightUpdate < 0) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n            js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = 0\r\n        }\r\n        else{\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList.filter(item => {return item.qtyIsEmpty=false})\r\n        }\r\n    })\r\n\r\n    //initial weight from it self\r\n    const initialWeightScreen = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n    let initialWeightScreenUpdate = initialWeightScreen\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        initialWeightScreenUpdate = initialWeightScreenUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = initialWeightScreenUpdate\r\n    })\r\n    //end of initial weight from it self\r\n    \r\n    const over = totalListItemWeightCount({moduleList:js.jobPost.list[activeSku].poList[poListIdx].itemList})\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightOver = over > initialWeight ? over : 0\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })    \r\n}\r\n\r\nexport const updateJSWeightLineDropdown = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    selected,\r\n    name\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    if (name === 'grade') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].wasteType = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].wasteTypeIsEmpty = false\r\n    }\r\n    if (name === 'ripeness') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n    }\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dateFull, isFloat } from 'services';\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport WeightEntry from \"Page/StockEntry/Waste/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry\";\r\nimport \"./index.scss\";\r\nimport {\r\n  addRow,\r\n  updateJSWeightLine,\r\n  updateJSWeightLineDropdown\r\n} from \"Page/StockEntry/Waste/WeightEntry/services\";\r\nimport {deleteRow,countQty} from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst WeightEntryCard = ({\r\n  inputWidth,\r\n  activeSku,\r\n  poListIdx,\r\n  poItem,\r\n  moduleEntry,\r\n  moduleName,\r\n  gradeList,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    expiryDate,\r\n    inboundDate,\r\n    initialWeight,\r\n    inboundQty,\r\n    initialWeightUpdate,\r\n    initialWeightScreenUpdate,\r\n    poUuid,\r\n    skuUuid,\r\n    supplierId,\r\n    supplierName,\r\n    uom,\r\n    ripeness,\r\n    ripenessLevel,\r\n    edited,\r\n    wmsPoSkuCode,\r\n    category,\r\n    codeGrade,\r\n    isHidden\r\n  } = poItem;\r\n  const total = !isNaN(initialWeightUpdate) ? initialWeightUpdate : inboundQty;\r\n  const initialWeightTotal = !isNaN(initialWeightScreenUpdate) ? initialWeightScreenUpdate : initialWeight\r\n  const uomType = uom === \"kg\" || uom === \"gram\" ? \"Weight\" : \"Quantity\";\r\n  const grade = moduleEntry.jobPost.list[activeSku].gradeList.filter(grade => { return grade?.value === codeGrade })\r\n  return (\r\n    <div className={`${isHidden ? 'd-none' : null} z-0 d-flex flex-column justify-content-between w-100 mb-3 align-items-center border rounded border-soft-green ${edited ? \"soft-green\" : null\r\n      }`}\r\n    >\r\n      {/* Line 1 */}\r\n      <div className=\"w-100 border-soft-green mt-3 d-flex align-items-start px-3\">\r\n        <div className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex justify-content-between align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Inbound Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {inboundDate ? dateFull({ date: inboundDate }) : '-'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex align-items-center mb-3\">\r\n            {`Initial ${uomType}`}\r\n            <span className=\"ml-2 font-green\">\r\n              {` ${initialWeight} ${uom?.toUpperCase()}${initialWeight > 1 ? \"s\" : \"\"}`}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 2 */}\r\n\r\n      <div className=\"w-100 border-soft-green d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`PO Code`}\r\n              <span className=\"ml-2 font-green\">{` ${wmsPoSkuCode ? wmsPoSkuCode : '-'}`}</span>\r\n            </div>\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Supplier Name`}\r\n              <span className=\"ml-2 font-green\">{` ${supplierName}`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 3 */}\r\n      <div className=\"w-100 border-bottom border-soft-green mb-3 d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Expiry Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {expiryDate ? dateFull({ date: expiryDate, noTime: true }) : '-'}\r\n              </span>\r\n            </div>\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Grade`}\r\n              <span className=\"ml-2 font-green\">{` ${grade.length ? grade[0].label : '-'}`}</span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`Inbound Quantity`}\r\n              <span className=\"ml-2 font-green\">{` ${inboundQty ? inboundQty : '-'}`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex flex-column justify-content-between w-100 align-items-center px-3 z-0\">\r\n        {poItem.itemList?.map((item, entryListIdx) => {\r\n          return (\r\n            <div className=\"d-flex w-100 align-items-center justify-content-between\">\r\n              <div className=\"w-100 d-flex\">\r\n                <div style={{width:'10px'}} className=\"input-height d-flex align-items-center mb-3 mr-3 pt-4 mt-2\">{`${entryListIdx + 1}.`}</div>\r\n                <div className=\"w-100\">\r\n                  <WeightEntry\r\n                    entryListIdx={entryListIdx}\r\n                    wmsPoSkuInfoId={item.wmsPoSkuInfoId}\r\n                    showTitle={true}\r\n                    gradeList={gradeList}\r\n                    onChange={(e) =>\r\n                      updateJSWeightLine({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        e,\r\n                      })\r\n                    }\r\n                    onChangeDropdown={({ selected, name }) =>\r\n                      updateJSWeightLineDropdown({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        selected,\r\n                        name,\r\n                      })\r\n                    }\r\n                    uom={uom}\r\n                    ripeness={ripeness}\r\n                    inputWidth={inputWidth}\r\n                    item={item}\r\n                    className={!ripeness ? \"d-none\" : null}\r\n                    poListIdx={poListIdx}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex w-25 align-items-center justify-content-end input-height mb-0 p-0\">\r\n                <img\r\n                  src={Trash}\r\n                  alt=\"delete icon\"\r\n                  className=\"w-1 cursor-pointer\"\r\n                  onClick={(e) =>\r\n                    deleteRow({\r\n                      dispatch,\r\n                      moduleEntry,\r\n                      moduleName,\r\n                      activeSku,\r\n                      poListIdx,\r\n                      entryListIdx,\r\n                      e,\r\n                      countQty\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        // className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer ${total === 0 ? 'd-none' : null}`}\r\n        className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer`}\r\n        onClick={() => addRow({\r\n          dispatch, moduleEntry,\r\n          moduleName, activeSku, poListIdx\r\n        })}\r\n      >\r\n        <i className=\"green iconU-entryAdd pr-2\"></i>\r\n        {`Add ${uomType} (${isFloat(initialWeightTotal) ? isFloat(initialWeightTotal) : initialWeightTotal} ${uom ? uom.toUpperCase() : ''}${initialWeightTotal > 1 ? \"s\" : \"\"} left)`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WeightEntryCard;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport WeightEntryCard from 'Page/StockEntry/Waste/WeightEntry/WeightEntryList/WeightEntryCard'\r\nimport { removeEntryModule, saveJobSheet } from 'apiServices'\r\nimport { submitValidation } from 'Page/StockEntry/Waste/services'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\";\r\nimport PopUpRequired from \"Component/Modal/PopUpRequired\";\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport Sort from 'Component/Sort'\r\nimport { useEntryDimention, useWasteEntry } from 'Page/StockEntry/GeneralServices'\r\n\r\nconst WeightEntryList = ({\r\n    hideSKUList,\r\n    setHideSKUList,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName\r\n}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const {dimention,height,heightAdj} = useEntryDimention()\r\n    \r\n    const {\r\n        setIsSuccess,\r\n        confirmation,\r\n        setConfirmation,\r\n        discard,\r\n        setDiscard,\r\n        isSaved,\r\n        setIsSaved,\r\n        action,\r\n        setAction,\r\n        isRequired,\r\n        setIsRequired,\r\n        hideContent,\r\n        setHideContent,\r\n        isLoading,\r\n        skuName,\r\n        skuNumber,\r\n        poList,\r\n        gradeList,\r\n        unitOfMeassures,\r\n        totalWeight,\r\n        edited,\r\n        postInfo\r\n      } = useWasteEntry({moduleEntry,activeSku})\r\n\r\n    //Condition\r\n    const isMobile = dimention <= 500\r\n    const isHidden = hideContent ? 'd-none' : null\r\n    const isPlural = totalWeight > 1 ? \"s\" : ''\r\n    const isEdited = edited ? 'bg-green' : 'bg-lineGrey'\r\n\r\n    return (\r\n        <div style={{paddingLeft:isMobile ? 0 : 10}} className='w-100 h-100 mt-3 mt-md-0'>\r\n            {/* <Prompt\r\n                when={true}\r\n                message={location => {\r\n                    let pathname = location.pathname\r\n                    if (!allowPage.includes(pathname)) {\r\n                        setDiscard(true)\r\n                        return false\r\n                    }\r\n                }}\r\n            /> */}\r\n            <Discard\r\n                discard={discard}\r\n                module={'Inventory Entry - Waste'}\r\n                moduleEntry={moduleEntry}\r\n                close={() => setDiscard(false)}\r\n                discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch })}\r\n            />\r\n            <PopUpSaved\r\n                moduleEntry={moduleEntry}\r\n                submit={() => dispatch({ type: 'CREATE_JOB_SHEET', [`${moduleName}EntryData`]: null, [`${moduleName}SummaryData`]: null })}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSaved={isSaved}\r\n                action={action}\r\n                setIsSaved={setIsSaved}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <PopUpRequired\r\n                isRequired={isRequired}\r\n                module={moduleEntry}\r\n                setIsRequired={setIsRequired}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <Confirmation\r\n                moduleName={moduleName}\r\n                isLoading={isLoading}\r\n                moduleEntry={moduleEntry}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSuccess={postInfo}\r\n                setAction={setAction}\r\n                action={action}\r\n                save={() => saveJobSheet({ name: 'save', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n                submit={() => saveJobSheet({ name: 'submit', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n            />\r\n            <div className='mb-3 bg-white rounded-bottom rounded-top'>\r\n                <div style={{height}} style={{padding:10}} className='w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green'>\r\n                    <div className='d-flex w-75 m-0 p-0' onClick={() => isMobile ? setHideContent(!hideContent) : null}>\r\n                        <div className={`${hideSKUList ? 'iconU-sideBarHideRight' : 'iconU-sideBarHideLeft'} emptyTextField fontSizeTitle mr-3 m-0 p-0`} onClick={() => setHideSKUList(!hideSKUList)} />\r\n                        <div className='mr-3 pr-1 d-flex align-items-center m-0 p-0 LatoBold'>Weight Entry</div>\r\n                        <div className='mr-3 iconU-sideBarDot d-flex align-items-center m-0 p-0' />\r\n                        <div className='mr-3 d-flex align-items-center font-green LatoBold m-0 p-0'>{`${skuName} (${skuNumber})`}</div>\r\n                    </div>\r\n                    <Sort moduleEntry = {moduleEntry} moduleName = {moduleName} activeSku = {activeSku} dispatch = {dispatch}/>\r\n                </div>\r\n                <div style={{height:isMobile ? height : heightAdj, minHeight:isMobile ? height : heightAdj}} className={`w-100 overflow-y mr-0 border-left border-right border-soft-green pl-3 pr-2 pt-3 ${isHidden}`}>\r\n                    {\r\n                        poList?.map((poItem, idx) => {\r\n                            return <WeightEntryCard\r\n                                gradeList={gradeList}\r\n                                inputWidth='input-w-100'\r\n                                activeSku={activeSku}\r\n                                poListIdx={idx}\r\n                                poItem={poItem}\r\n                                moduleEntry={moduleEntry}\r\n                                moduleName={moduleName}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <div className='w-100 d-flex align-items-center p-3 border-left border-right border-bottom rounded-bottom LatoBold'>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={`btn ${isEdited}  text-white px-5 mr-3 LatoBold`}\r\n                        onClick={() => edited ? setConfirmation({ show: true, name: 'save' }) : null}>\r\n                        Save\r\n                    </button>\r\n                    <div>Total Weight <span className='font-green'>{`${totalWeight} ${unitOfMeassures?.toUpperCase()}${isPlural}`}</span></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end\">\r\n                <div onClick={() => setDiscard(true)} className='red pr-3 fontSizeButton cursor-pointer'><i className='iconU-entryTrash'></i> Discard</div>\r\n                <button onClick={() => edited ? submitValidation({ moduleEntry, moduleName, dispatch, setConfirmation, setIsRequired }) : null} className={`btn px-5 py-2 text-white ${isEdited} LatoBold no-shadow`} style={{ height: \"fit-content !important\" }} >Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntryList","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport SelectedSKUList from 'Page/StockEntry/Waste/WeightEntry/SelectedSKUList'\r\nimport WeightEntryList from 'Page/StockEntry/Waste/WeightEntry/WeightEntryList'\r\n\r\nconst WeightEntry = () => {\r\n    const wasteEntryData = useSelector(state => state.wasteEntryData)\r\n    const [hideSKUList, setHideSKUList] = useState(false)\r\n    const [activeSku, setActiveSKU] = useState(0)\r\n    let height = document.documentElement.clientHeight\r\n    let clientWidth = document.documentElement.clientWidth\r\n    let heightAdj = height - 150\r\n    const moduleName = 'waste'\r\n    if (!wasteEntryData || wasteEntryData?.jobPost.list.length === 0) {\r\n        return (\r\n            <div className='d-flex align-items-center justify-content-center text-center w-100 h-screen'><Redirect to='/inventory-entry/waste'>Please Select At Least 1 SKU</Redirect></div >)\r\n    }\r\n    return (\r\n        <div style={{height: clientWidth <= 500 ? height : heightAdj }} className='w-100 d-md-flex justify-content-between scroll-y z-0'>\r\n            <SelectedSKUList\r\n                hideSKUList={hideSKUList}\r\n                activeSku={activeSku}\r\n                setActiveSKU={setActiveSKU}\r\n                moduleName={moduleName}\r\n                moduleEntry={wasteEntryData}\r\n            />\r\n            <WeightEntryList\r\n                setHideSKUList={setHideSKUList}\r\n                hideSKUList={hideSKUList}\r\n                moduleName={moduleName}\r\n                moduleEntry={wasteEntryData}\r\n                activeSku={activeSku}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntry","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? (styles, { isOpen }) => {\r\n        return {\r\n            ...styles,\r\n            border: isOpen ? 'solid #eb5c5c 1px' : 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{label:`-${title}-`, value:null}]\r\n    if(options) defaultvalue=[...defaultvalue, ...options]\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if(dimention <= 500) menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                isSearchable= {dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : false}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={200}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected, isOpen }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#a8b1be',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import { isInteger } from \"formik\";\r\n\r\nexport const next = ({\r\n  e,\r\n  state,\r\n  isCaptcha,\r\n  setIsValidated,\r\n  setIsType,\r\n  isType,\r\n}) => {\r\n  const key = e.key; // const {key} = event; ES6+\r\n  // console.log(key, state, isType[state]);\r\n  let arr_tmp = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown', 'Tab']\r\n  if (arr_tmp.includes(key)) {\r\n    return 0;\r\n  } else if (key === \"Backspace\") {\r\n    if (state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n    }\r\n  } else {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n    }\r\n  }\r\n\r\n  let type = [...isType];\r\n  if (key === \"Backspace\") {\r\n    type[state] = '';\r\n  } else {\r\n    type[state] = key.toUpperCase();\r\n  }\r\n  let char = \"QWERTYUIOPLKJHGFDSAZXCVBNM1234567890\"\r\n  let allowedChar = char.split('')\r\n  if (allowedChar.includes(key.toUpperCase()) || type[state] == '') {\r\n    document.getElementById(\"t\" + (parseInt(state))).value = type[state];\r\n    setIsType(type);\r\n  } else {\r\n    return 0;\r\n  }\r\n\r\n  let stat = true;\r\n  isCaptcha.map((data, index) => {\r\n    if (index == 0) {\r\n      return;\r\n    }\r\n    if (!(type[index + 1] == isCaptcha[index])) {\r\n      stat = false;\r\n    }\r\n  });\r\n  // console.log(isCaptcha);\r\n  // console.log(type);\r\n  setIsValidated(stat);\r\n};\r\n\r\nexport const skuListUpdateCheck = (module, noSkuChecking, moduleName) => {\r\n  if(module?.length){\r\n    let newModule = []\r\n    module.map(list => {\r\n      list.poList.map(po => {\r\n        po.itemList.map(item => {\r\n          const {qty, grade} = item\r\n          const _qty = isInteger(qty) ? parseInt(qty) : (!qty ? 0 : parseFloat(qty))\r\n          const _sku = noSkuChecking ? list.skuName : moduleName === 'waste' ? (item.wasteType?.label ? item.wasteType?.label : list.skuName) : grade?.label\r\n          const _toWaste = moduleName === 'waste' ?( item.wasteType?.label ==='Semi Waste' || item.wasteType?.label ==='Waste' ? true :false) : grade?.label ==='Waste' || grade?.label === 'Semi Waste' ? true : false\r\n          const _uom = noSkuChecking ? list.unitOfMeassures : grade?.uom  === 'gram' ? 'kg' : grade?.uom\r\n          let newSku = {\r\n            sku:_sku,\r\n            qty:_qty,\r\n            uom:_uom,\r\n            wqty:0,\r\n            swqty:0\r\n          }\r\n          if(_toWaste){\r\n            newSku.qty = 0\r\n            newSku.sku = list.skuName\r\n          }\r\n          if( moduleName === 'waste' ? item.wasteType?.label === 'Waste' : grade?.label === 'Waste') newSku.wqty = _qty\r\n          if( moduleName === 'waste' ? item.wasteType?.label === 'Semi Waste' : grade?.label === 'Semi Waste') newSku.swqty = _qty\r\n          const isExist = newModule.findIndex(sku => sku?.sku === (_toWaste ? list.skuName : _sku))\r\n          \r\n          if(moduleName !== 'waste'){\r\n            if(isExist === -1) newModule.push(newSku)\r\n            if(isExist !== -1){\r\n              if(!_toWaste) newModule[isExist].qty += _qty\r\n              if(grade?.label ==='Semi Waste')newModule[isExist].swqty += _qty\r\n              if(grade?.label ==='Waste')newModule[isExist].wqty += _qty\r\n            }\r\n          }\r\n\r\n          if(moduleName === 'waste'){\r\n            if(isExist === -1) newModule.push(newSku)\r\n            if(isExist !== -1){\r\n              if(!_toWaste) newModule[isExist].qty += _qty\r\n              if(item.wasteType?.label ==='Semi Waste')newModule[isExist].swqty += _qty\r\n              if(item.wasteType?.label ==='Waste')newModule[isExist].wqty += _qty\r\n            }\r\n          }\r\n          \r\n        })\r\n      })\r\n    })\r\n    const skuName = module.length ? module[0].skuName : 'No SKU'\r\n    const i = newModule.findIndex(s => s.sku === skuName)\r\n    newModule.map(sku => {\r\n      if(i !== -1){\r\n        if(sku.sku === 'Waste') newModule[i].wqty = sku.qty\r\n        if(sku.sku === 'Semi Waste') newModule[i].swqty = sku.qty\r\n      }\r\n    })\r\n    return newModule\r\n  }\r\n}","import React, { useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { next,skuListUpdateCheck } from \"./services.js\";\r\nimport { totalQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst ModalsConfirmation = ({ moduleEntry, confirmation, setConfirmation, save, submit, isSuccess, isLoading, moveAll, setAction, moduleName,noSkuChecking, singleViewData }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 300\r\n\r\n  let buttonName = 'Submit'\r\n\r\n  if (confirmation.name === 'save') buttonName = 'Save'\r\n  useEffect(() => {\r\n    if (isSuccess) setConfirmation({ show: false, name: null })\r\n  }, [isSuccess])\r\n  window.onkeydown = e => e.keyCode === 27 ? setConfirmation({ show: false, name: null }) : null\r\n\r\n  useEffect(() => {\r\n    setAction(confirmation.name)\r\n  }, [confirmation])\r\n\r\n  let module = singleViewData && !moveAll ? singleViewData : moduleEntry\r\n\r\n  const areaDestinationName = module?.jobPost?.areaDestinationName\r\n  const areaName = module?.jobPost?.areaName\r\n\r\n  const skuListUpdate = skuListUpdateCheck(module?.jobPost.list,noSkuChecking,moduleName)\r\n  return (\r\n    <CRow className={confirmation.show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={confirmation.show}\r\n          closeOnBackdrop={false}\r\n        >\r\n          <CModalHeader className=\"px-4 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation <span><i className=\"em em-pray\"></i></span></CModalTitle>\r\n            <label tabIndex='0' onKeyDown={e => e.keyCode === 13 ?  setConfirmation({ show: false, name: null }) : false} onClick={() => setConfirmation({ show: false, name: null })} className='sku-item iconU-modalClose' />\r\n\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-4 py-0\" style={{ minHeight: height }}>\r\n            <p className=\"text mb-2\">\r\n              <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n              <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n              <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n              <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n              <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${areaDestinationName ? areaDestinationName : areaName}?`}</span>\r\n            </p>\r\n            <p className=\"text\">\r\n              Please double check this list, this record will store to database.\r\n            </p>\r\n            <div\r\n              style={{\r\n                minHeight: height,\r\n                overflow: \"auto\",\r\n                border: \"1px solid var(--lineGrey)\",\r\n              }}\r\n            >\r\n              <table>\r\n                <thead>\r\n                  <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                    <th style={{ color: \"var(--emptyTextField)\" }}>SKU List</th>\r\n                    <th style={{textAlign: \"right\",color: \"var(--emptyTextField)\",}}>Weight</th>\r\n                    <th style={{textAlign: \"right\",color: \"var(--emptyTextField)\",}}>Semi Waste</th>\r\n                    <th style={{textAlign: \"right\",color: \"var(--emptyTextField)\",}}>Waste</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {skuListUpdate?.map((data) => (\r\n                    <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                      <td style={{maxWidth:'160px'}}>{data.sku}</td>\r\n                      <td className=\"text-right py-3\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.qty)}`}\r\n                      </td>\r\n                      <td className=\"text-right text-nowrap\" style={{ textAlign: \"right\" }}>\r\n                        <span className='text-nowrap'>{`${totalQty(data?.swqty)} `}</span>\r\n                      </td>\r\n                      <td className=\"text-right\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.wqty)}`}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"px-0 pb-5 pt-0 justify-content-start border-none\">\r\n              <CButton\r\n              tabIndex='0'\r\n              onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false}\r\n                className=\"bg-background sku-item text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n                onClick={() => setConfirmation({ show: false, name: null })}\r\n              >\r\n                Cancel\r\n            </CButton>\r\n              <CButton\r\n              tabIndex='0'\r\n              onKeyDown={e => e.keyCode === 13 ? (isLoading ? null : (confirmation.name === 'save' ? save() : submit())) : false}\r\n                className={`${isLoading ? 'bg-softGreen text' : 'bg-green text-white'} no-shadow px-5 mt-4 sku-item mb-0 ml-3 mr-0`}\r\n                onClick={() => isLoading ? null : (confirmation.name === 'save' ? save() : submit())}\r\n              >\r\n                {isLoading ? 'Processing...' : buttonName}\r\n              </CButton>{\" \"}\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst ModalsCaptcha = ({\r\n  show = false,\r\n  setIsShowModal,\r\n  submit,\r\n  submitText = \"Submit\",\r\n}) => {\r\n  //random text\r\n  var text = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  var text_split = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    let r = characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    text += r;\r\n    text_split.push(r);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const [isCaptcha, setIsCaptcha] = React.useState(text_split);\r\n  const [isCaptchaText, setIsCaptchaText] = React.useState(text);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n  const [isButtonSubmit, setIsButtonSubmit] = React.useState(\"Submit\");\r\n  const [isType, setIsType] = React.useState([]);\r\n\r\n  //reset if visible = false \r\n  useEffect(() => {\r\n    if (show === true) {\r\n      document.getElementById('t1').value = '';\r\n      document.getElementById('t2').value = '';\r\n      document.getElementById('t3').value = '';\r\n    }\r\n  }, [show]);\r\n\r\n  return (\r\n    <CRow className={show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          onClose={() => {\r\n            setIsShowModal(false);\r\n          }}\r\n          size=\"lg\"\r\n          style={{ height: \"400px\" }}\r\n        >\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">\r\n              Are you sure want to upload <span className=\"green\">Edited</span>{\" \"}\r\n              {selectorCsvFileName}?\r\n            </p>\r\n            <p className=\"text\">\r\n              Once uploaded this record will store to databases.\r\n            </p>\r\n            <p className=\"text mb-2\">\r\n              Please type ‘{isCaptchaText}’ on the Box to confirm upload file.\r\n            </p>\r\n\r\n            <div className=\"captcha-box\">\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 1,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t1\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[0]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 2,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t2\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input ml-0 mr-0\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[1]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 3,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t3\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[2]}\r\n              />\r\n            </div>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            <CButton\r\n              className=\"bg-background text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n              onClick={() => {\r\n                setIsShowModal(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </CButton>\r\n            <CButton\r\n              className={\r\n                (isValidated ? \"bg-green\" : \"bg-emptyTextField disabled\") +\r\n                \" no-shadow px-5 mt-4 mb-0 ml-3 mr-0\"\r\n              }\r\n              onClick={() => {\r\n                submit();\r\n                setIsValidated(false);\r\n              }}\r\n            >\r\n              {submitText}\r\n            </CButton>{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport { ModalsConfirmation, ModalsCaptcha };\r\n","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    ripeness,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title,\r\n    toCompare\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' || uom === 'KG' ? true : false\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`wgt_${poListIdx}_${entryListIdx}`} maxLength='12' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={toCompare ? 'weightToCompare' : 'weight'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","module.exports = __webpack_public_path__ + \"static/media/trash.121a7b10.png\";","export const submitAction = ({ confirmation, setIsSaved, submit, setLocalEntryData,moveAll}) => {\r\n    if (confirmation.name === 'submit') {\r\n        if(moveAll)  setLocalEntryData()\r\n        submit()\r\n        setIsSaved()\r\n        \r\n    }\r\n    else {\r\n        setIsSaved()\r\n    }\r\n}\r\n\r\nexport const message = ({moduleEntry, complete}) => {\r\n    if(moduleEntry?.jobPost){\r\n        let message = null\r\n        const {areaDestinationName, areaName} = moduleEntry?.jobPost\r\n        if(areaDestinationName) message = ` ${areaName} reefer ${areaDestinationName} - `\r\n        else message = ` ${areaName} - `\r\n        return message\r\n    }\r\n}\r\n\r\nexport const handleFailed = ({setIsSaved,setConfirmation,action, setLocalEntryData}) => {\r\n    setIsSaved()\r\n    setConfirmation({ show: true, name: action })\r\n}","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { dateFull } from 'services'\r\nimport { submitAction, message,handleFailed } from './services'\r\n\r\nconst PopUpSaved = ({ isSaved, moduleName, totalSku, setIsSaved, confirmation, setConfirmation, submit, action, moduleEntry, complete,setLocalEntryData,moveAll }) => {\r\n    const saved = {\r\n        success: {\r\n            header: confirmation.name === 'submit' ? 'Success ! ' : 'Saved !',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: `${confirmation.name === 'submit' ? 'Submitted' : 'Saved'} successfully`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        failed: {\r\n            header: `${confirmation.name === 'submit' ? 'Submit' : 'Save'} Failed`,\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            date: dateFull({}),\r\n            sku: 'Sorry.',\r\n            module: `${moduleName} `,\r\n            status: 'item not recorded.',\r\n            button: 'bg-red',\r\n            buttonText: 'Try Again'\r\n        }\r\n    }\r\n    const data = isSaved ? saved.success : saved.failed\r\n\r\n\r\n    const show = isSaved === true || isSaved === false ? true : false\r\n\r\n    const focus = document.getElementById('btn_is_saved')\r\n    if(focus) focus.focus()\r\n    return (\r\n        <CRow className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={show}\r\n\r\n                    onClose={() => {\r\n                        setIsSaved()\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit }) : setIsSaved()} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${data.textColor} LatoBold mr-2 h5 mb-3`}>{data.header}</label> <span><i className={`${data.headerIcon}`}></i></span>\r\n                        <div className='mr-1 h5 mb-3'>{`Entries ${data.status}`}</div>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100 border rounded px-3 pt-4 pb-3 mb-4'>\r\n                            <div className={`h5 mb-3 ${isSaved ? null : 'd-none'}`}>{data.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className='mr-1 h5 green'>{`${message({ moduleEntry, complete })} ${data.sku}`}</label>\r\n                                <div className={`mr-1 h5 mt-2 ${isSaved ? 'd-none' : null}`}>{`Would you select another item again?`}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`mb-2 h5 ${confirmation.name === 'submit' ? 'd-none' : null}`}>Please continue your work</div>\r\n                        <CButton onClick={() => setIsSaved()} className={`text no-shadow px-5 mt-4 mr-4 mb-5 ${`bg-softGreen ${isSaved ? 'd-none' : null}`}`}>\r\n                            Cancel\r\n                </CButton>\r\n                        <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit, setLocalEntryData,moveAll }) : handleFailed({setIsSaved,setConfirmation,action})} className={`text-white sku-item no-shadow px-5 mt-4 mb-5 ${data.button}`}>\r\n                            {data.buttonText}\r\n                        </CButton>\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    name\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nconst Note = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${grade === 'Waste' ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} border rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input autoComplete='off' className='w-100 plain-input' value={values} name='note' onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","export let defaults = {\r\n    header: 'Complete All !',\r\n    headerIcon: 'em em-anger',\r\n    textColor: 'red',\r\n    date: 'You are  required to update all entries on the list.',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Check several entries left.',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const threshold = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'The threshold calculation ratio should be between -20% until 50%',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const initialWeight = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'Add Weight should not exceed Initial Weight',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}","import React from \"react\";\r\nimport {isLessThanInitWeight} from 'services'\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n    CModalFooter\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport {threshold, initialWeight, defaults} from './services'\r\n\r\nconst PopUpSaved = ({ isRequired, setIsRequired, moduleName, module,totalSku, invalidThreshold, setInvalidThreshold }) => {\r\n    let saved = defaults;\r\n    let isTrue\r\n    if ((!isRequired && invalidThreshold) || (isRequired && invalidThreshold)) {\r\n        saved = threshold\r\n    }\r\n\r\n    if(moduleName !== 'stockTake'){\r\n        isTrue = isLessThanInitWeight(module)\r\n        if(isTrue) saved = initialWeight\r\n        console.log(isTrue);\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_required')\r\n    if(focus) focus.focus()\r\n    return (\r\n        <CRow className={isRequired || invalidThreshold ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={isRequired || invalidThreshold}\r\n                    onClose={() => {\r\n                        setIsRequired(false)\r\n                        if (invalidThreshold) setInvalidThreshold(false)\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${saved?.textColor} LatoBold mr-2 mb-5 h5`}>{saved?.header}</label> <span><i className={`${saved?.headerIcon}`}></i></span>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100 border rounded px-3 pt-4 pb-3 mb-4'>\r\n                            <div className={`h5 mb-3 ${isRequired || invalidThreshold ? null : 'd-none'}`}>{saved?.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className='mr-1 h5'>{`${saved?.status}`}</label>\r\n                            </div>\r\n                        </div>\r\n                    </CModalBody>\r\n                    <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none d-flex mt-2\">\r\n                        <CButton onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} className={`text no-shadow ${`bg-softGreen ${isRequired ? 'd-none' : null}`}`}>\r\n                            Cancel\r\n                        </CButton>\r\n                        <CButton \r\n                            id={'btn_is_required'}\r\n                            tabIndex='0'\r\n                            onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} className={`text-white no-shadow ${saved?.button}`}>\r\n                            {saved?.buttonText}\r\n                        </CButton>\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","module.exports = __webpack_public_path__ + \"static/media/asc.9b60817e.svg\";","module.exports = __webpack_public_path__ + \"static/media/desc.bec03077.svg\";","import React, {useEffect,useState,useRef } from 'react'\r\nimport {Calendar,DateRangePicker } from 'react-date-range'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport './index.scss'\r\nimport {setDates} from './services'\r\n\r\nfunction useOutside({wrapperRef,showDate,setShowDate,selectDate}) {\r\n  useEffect(() => {\r\n      /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n      function handleClickOutside(event) {\r\n          if (showDate && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n              setShowDate(!showDate)\r\n              selectDate()\r\n          }\r\n      }\r\n\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n          // Unbind the event listener on clean up\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n  }, [wrapperRef,showDate]);\r\n}\r\n\r\nconst SKUDatePicker = ({ showDate, selectDate, setShowDate }) => {\r\n  let dimention = document.documentElement.clientWidth\r\n  dimention = dimention - 1555\r\n  const [dateRange, setDateRange] = useState({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n  const [date,setDate] = useState(new Date())\r\n  const [mode, setMode] = useState()\r\n\r\n  const singleDate = mode ? 'text' : 'bg-green text-white'\r\n  const multipleDate = mode ? 'bg-green text-white' : 'text'\r\n\r\n  const wrapperRef = useRef(null);\r\n  useOutside({wrapperRef,showDate,setShowDate,selectDate});\r\n\r\n  useEffect(() => {\r\n    setDateRange({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n    setDate(new Date())\r\n  },[mode])\r\n\r\n  const setDateValue = () => {\r\n    if(showDate){\r\n      mode ? selectDate(dateRange) : selectDate(date)\r\n      setShowDate()\r\n    } \r\n  }\r\n\r\n  return (\r\n    <div ref={wrapperRef} style={{ width: '350px' }} className={` mt-5 position-fixed bg-white border border-soft-green rounded z-100 d-flex flex-column justify-content-center ${showDate ? null : 'd-none'}`}>\r\n      <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <div className=' border border-soft-green d-flex rounded justify-content-between w-100 cursor-pointer'>\r\n        <span onClick={() => setMode(!mode)} className={` ${singleDate} w-50  ${mode ? 'rounded-left' : 'rounded'} text-center p-2`}>Single Date</span>\r\n        <span onClick={() => setMode(!mode)} className={` ${multipleDate} w-50 ${!mode ? 'rounded-right' : 'rounded'} text-center p-2`}>Ranged Date</span>\r\n        </div>\r\n      </div>\r\n    <DateRangePicker\r\n      className={mode ? null : 'd-none'}\r\n      ranges={[dateRange]}\r\n      onChange={newdate => setDates({newdate,dateRange,setDateRange})}\r\n      />\r\n    <Calendar\r\n    className={mode ? 'd-none' : null}\r\n      date={date}\r\n      onChange = {dt => setDate(dt)}\r\n    />\r\n    <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <span onClick={() => setDateValue()} className={` bg-green text-white w-100 border border-soft-green rounded text-center p-2`}>Confirm</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SKUDatePicker","export const setDates = ({newdate, dateRange,setDateRange}) => {\r\n    let dt = {...dateRange}\r\n    dt.startDate = newdate.selection.startDate\r\n    dt.endDate = newdate.selection.endDate\r\n    setDateRange(dt)\r\n  }","import React,{useState,useEffect} from 'react'\r\nimport { sortByInboundDate, filterByDate, dateDMY } from 'services'\r\nimport DatePicker from 'Component/DatePickerNew'\r\nimport asc from 'assets/icons/asc.svg'\r\nimport desc from 'assets/icons/desc.svg'\r\n\r\nconst Sort = ({ moduleEntry, moduleName, activeSku, dispatch }) => {\r\n    const [sortBy, setSortBy] = useState()\r\n    const [date, setDate] = useState()\r\n    const [showDate, setShowDate] = useState()\r\n    const [resetFilter, setResetFilter] = useState()\r\n    let dateShow;\r\n    const dimention = document.documentElement.clientWidth\r\n    dateShow = dateDMY({date,datePicker:true})\r\n    if(dateShow?.startDate) dateShow = `${dateShow.startDate} - ${dateShow.endDate}`\r\n    else dateShow = dateShow\r\n\r\n    useEffect(() => {\r\n        sortByInboundDate({ moduleEntry, moduleName, activeSku, dispatch, sortBy })\r\n    }, [sortBy])\r\n\r\n    useEffect(_ => {\r\n        if(!showDate)filterByDate({ moduleEntry, moduleName, activeSku, dispatch, date })\r\n    }, [date,showDate])\r\n\r\n    useEffect(_ => {\r\n        setSortBy()\r\n        setDate()\r\n    }, [resetFilter])\r\n    return(\r\n        <div className='w-25 d-flex justify-content-end'>\r\n            {/* <div className='iconU-modalClose red border-soft-green border emptyTextField rounded px-2 pt-2 mr-3 cursor-pointer' onClick={() => setResetFilter(d => !d)} /> */}\r\n            <div style={{height:40}} className={`${moduleName === 'repack' ? 'd-none' : null} border-soft-green border-top border-bottom border-left m-0 rounded-left green h6 d-flex align-items-center justify-content-center px-2 text-nowrap ${dimention > 500  ? (date ? null : 'd-none') : 'd-none'}`}>{dateShow}</div>\r\n            <div style={{height:40, minWidth:40}} \r\n                className={`${date ? 'iconU-modalClose red' : 'iconU-filterDate emptyTextField'} border-soft-green border ${date ? 'rounded-right' : 'rounded'} ${moduleName === 'repack' ? 'd-none' : null} d-flex align-items-center justify-content-center mr-3 cursor-pointer`} \r\n                onClick={() => date ? setResetFilter(d => !d) : setShowDate(d => !d)}/>\r\n            <DatePicker showDate={showDate} selectDate={(date) => setDate(date)} setShowDate={(d) => setShowDate(d)} />\r\n            <img style={{height:40, minWidth:40}} src={sortBy ? desc : asc} onClick={() => setSortBy(!sortBy)} className='p-2 border rounded border-soft-green cursor-pointer' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sort","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { getPoBySkuId, removeEntryModule } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport {totalListItemWeightCount} from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade?.filter(grade => grade?.label === 'Waste' || grade?.label === 'Semi Waste')\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaId?.value),\r\n            list: newJs\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    setLocalEntryData(jobSheet)\r\n    // dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade?.filter(grade => grade?.label === 'Waste' || grade?.label === 'Semi Waste')\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const submitValidation = ({ moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({moduleList:po.itemList})\r\n            po.itemList.map(item => {\r\n                const { qty, wasteType, note } = item\r\n                if ((qty == 0 || isNaN(qty)) && wasteType?.value === null) {\r\n                    item.qtyIsEmpty = false\r\n                    item.wasteTypeIsEmpty = false\r\n                    item.uploadPhotoIsEmpty = false\r\n                    item.noteIsEmpty = false\r\n                }\r\n                else {\r\n                    isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                    !wasteType?.value ? item.wasteTypeIsEmpty = true : item.wasteTypeIsEmpty = false\r\n                    !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                    // !uploadPhoto ? item.uploadPhotoIsEmpty = true : item.uploadPhotoIsEmpty = false\r\n                }\r\n\r\n                if(!item.qtyIsEmpty){\r\n                    if(qtyCount > po.initialWeight){\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                // if(!item.qtyIsEmpty) po.initialWeightOver > po.initialWeight ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                if (item?.qtyIsEmpty || item?.wasteTypeIsEmpty || item?.uploadPhotoIsEmpty || item?.noteIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        setConfirmation({ show: false, name: null })\r\n        setIsRequired(true)\r\n    }\r\n}"],"sourceRoot":""}