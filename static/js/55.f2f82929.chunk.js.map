{"version":3,"sources":["Page/StockEntry/StockTransfer/WeightEntry/SelectedSKUList/SelectedSKU/index.jsx","Page/StockEntry/StockTransfer/WeightEntry/SelectedSKUList/index.jsx","Page/StockEntry/StockTransfer/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry/index.jsx","Page/StockEntry/StockTransfer/WeightEntry/services.js","Page/StockEntry/StockTransfer/WeightEntry/WeightEntryList/WeightEntryCard/index.jsx","Page/StockEntry/StockTransfer/WeightEntry/WeightEntryList/index.jsx","Page/StockEntry/StockTransfer/WeightEntry/index.jsx","Component/Input/index.jsx","assets/icons/refreshIcon.svg","Page/StockEntry/StockTransfer/services.js"],"names":["SelectedSKU","isNewItem","img","skuDescription","skuNumber","activeSku","uomValue","idx","uom","onClick","data","edited","getEditedData","isEmpty","checkisEmpty","className","onKeyDown","e","onEnter","src","alt","toUpperCase","SelectedSKUList","hideSKUList","setActiveSKU","moduleEntry","moduleName","setUpdateEntry","selectedSku","jobPost","list","length","dimention","document","documentElement","clientWidth","height","clientHeight","useState","hideContent","setHideContent","dispatch","useDispatch","thereAreRequest","useSelector","state","style","padding","Reload","updateEntries","tabIndex","to","maxHeight","map","skuName","uomLabel","unitOfMeassures","totalQty","photo","WeightEntry","entryListIdx","wmsPoSkuInfoId","gradeList","ripeness","inputWidth","showTitle","item","onChange","poListIdx","category","ripenessLevel","areaMovement","useEffect","w","findIndex","r","value","sw","push","label","filter","grade","qtyIsEmpty","values","qty","title","Input","addRow","js","poList","itemList","expiryDate","type","CREATE_JOB_SHEET","WeightEntryCard","poItem","inboundDate","initialWeight","inboundQty","initialWeightUpdate","initialWeightScreenUpdate","supplierName","poUuid","skuUuid","supplierId","wmsPoSkuCode","codeGrade","isHidden","initialWeightTotal","isNaN","uomType","area","areaName","id","dateFull","date","opacity","noTime","width","name","target","console","clear","test","newValue","arr","split","number","parseInt","commaNumber","undefined","sliceNumber","slice","qtyToCompare","qtyToCompareIsEmpty","note","noteIsEmpty","minus","over","totalListItemWeightCount","moduleList","initialWeightOver","updateJSWeightLine","Trash","deleteRow","countQty","keyCode","isFloat","WeightEntryList","setHideSKUList","updateEntry","useEntryDimention","heightAdj","useStockTransferEntry","setIsSuccess","status","confirmation","setConfirmation","discard","setDiscard","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","isLoading","totalWeight","postInfo","isMobile","isPlural","isEdited","paddingLeft","module","close","discardEntry","removeEntryModule","PopUpSaved","submit","totalSku","PopUpRequired","noSkuChecking","isSuccess","save","saveJobSheet","submitValidation","Sort","minHeight","show","stockTransferEntryData","maxLength","autoComplete","exports","selectSku","a","checked","setLocalEntryData","moduleSummary","warehouseUuid","warehouseIdDestination","areaId","areaIdDesposition","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","jsD","sI","includes","getGrade","skuId","getPoBySkuId","addPoItem","expiryMs","moment","valueOf","inBoundyMs","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","warehouseDestinationName","areaSource","areaDestination","areaDestinationName","sort","b","filterBySkuName","preAddSku","preAddHandler","isClear","jsR","po","qtyCount","gradeIsEmpty","ripenessIsEmpty","Number","valid","checkIsSkuRequired"],"mappings":"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","file":"static/js/55.f2f82929.chunk.js","sourcesContent":["import React from 'react'\r\nimport { getEditedData, checkisEmpty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { onEnter } from 'services'\r\nconst SelectedSKU = ({\r\n    isNewItem,\r\n    img,\r\n    skuDescription,\r\n    skuNumber,\r\n    activeSku,\r\n    uomValue,\r\n    idx,\r\n    uom,\r\n    onClick,\r\n    data\r\n}) => {\r\n    const edited = getEditedData({ data })\r\n    const isEmpty = checkisEmpty(data)\r\n    return (\r\n        <div className={`w-100 sku-item softGreen pl-2 pr-2 pt-2 mb-3 cursor-pointer rounded ${edited ? 'soft-green' : null} ${activeSku === idx ? 'border-green' : (isEmpty ? 'border-red' : 'border')}`}>\r\n            <div className=\" w-100 d-flex justify-content-end\">\r\n                <div className={isNewItem ? 'green-dot' : 'dot'} />\r\n            </div>\r\n            <div onKeyDown={e => onEnter({ e, idx, onClick })} onClick={() => onClick()} className={`w-100 softGreen d-flex justify-content-between pl-2 pr-2 mb-3 cursor-pointer ${edited ? 'soft-green' : null}`}>\r\n                <div className='d-flex align-items-center w-100'>\r\n                    <div className='d-flex align-items-center'>\r\n                        <img src={img} alt='sku image' className='w-5 mr-3 border softGreen rounded' />\r\n                    </div>\r\n                    <div className=\"w-100\">\r\n                        <div className='mr-3 w-100 d-flex'>\r\n                            <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-between'>\r\n                            <div className='text'>{skuNumber}</div>{activeSku}\r\n                            <div className='green LatoBold'>{uomValue} <span>{`${uom ? uom.toUpperCase() : ''}${uomValue > 1 ? 's' : ''}`}</span></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKU","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './index.scss'\r\nimport SelectedSKU from 'Page/StockEntry/StockTransfer/WeightEntry/SelectedSKUList/SelectedSKU'\r\nimport Reload from 'assets/icons/refreshIcon.svg'\r\nimport { updateEntries } from 'apiServices'\r\nconst SelectedSKUList = ({\r\n    hideSKUList,\r\n    setActiveSKU,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    setUpdateEntry,\r\n}) => {\r\n    const selectedSku = moduleEntry.jobPost.list.length\r\n    const dimention = document.documentElement.clientWidth\r\n    let height = document.documentElement.clientHeight\r\n    height = height - 212\r\n    const [hideContent, setHideContent] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const thereAreRequest = useSelector(state => state.thereAreRequest)\r\n    // const { sorted } = useIsNewItem({ setActiveSKU, moduleEntry, selectedSku })\r\n    return (\r\n        <div className={`${hideSKUList ? 'w-0' : 'w-30'}  mt-md-0 rounded-bottom rounded-top`}>\r\n            <div style={{ padding: 17 }} className='w-100 bg-white border-top border-left border-right rounded-top border-soft-green text d-flex align-items-center justify-content-between' onClick={() => dimention <= 500 ? setHideContent(!hideContent) : null}>\r\n                <div className=\"LatoBold\"> Selected SKU <span className='font-green'>{`(${selectedSku} SKU${selectedSku > 1 ? 's' : ''})`}</span></div>\r\n                <div className='d-flex align-items-center justify-content-between'>\r\n                    <img className={`${thereAreRequest > 0 ? 'fa-spin-hover' : false} mt-1 pointer`} src={Reload} onClick={() => updateEntries({ moduleEntry, moduleName, dispatch, setUpdateEntry })} />\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/stock-transfer/weight-entry/remove-sku'>\r\n                        <div className=\"fontSizeTitle px-3 emptyTextField iconU-remove\" />\r\n                    </Link>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/stock-transfer/weight-entry/add-sku'>\r\n                        <div className='fontSizeTitle emptyTextField text-bold iconU-entryAdd' ></div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div style={{ height: dimention <= 500 ? false : height, maxHeight: height }} className={` overflow-y w-100 bg-white mr-0 border rounded-bottom border-soft-green pl-3 pr-0 pt-3 ${hideContent ? 'd-none' : null}`}>\r\n                {\r\n                    moduleEntry?.jobPost?.list?.map((data, idx) =>\r\n                        <SelectedSKU\r\n                            isNewItem={data?.isNewItem}\r\n                            data={data}\r\n                            idx={idx}\r\n                            activeSku={activeSku}\r\n                            skuDescription={data?.skuName}\r\n                            skuNumber={data?.skuNumber}\r\n                            uomLabel={data?.unitOfMeassures}\r\n                            uomValue={data?.totalQty}\r\n                            uom={data?.unitOfMeassures}\r\n                            img={data?.photo}\r\n                            onClick={() => setActiveSKU(idx)}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKUList","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Decimal from 'Component/Input/decimal'\r\nimport Input from 'Component/Input'\r\nimport { useEffect } from 'react'\r\n\r\n\r\nconst WeightEntry = ({\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    gradeList,\r\n    ripeness,\r\n    inputWidth,\r\n    showTitle,\r\n    item,\r\n    onChange,\r\n    uom,\r\n    poListIdx,\r\n    category\r\n}) => {\r\n    let ripenessLevel = useSelector(state => state.ripenessLevel)\r\n    let areaMovement = useSelector(state => state.areaMovement)\r\n    let rip = []\r\n    let filteredGradeList = gradeList\r\n    useEffect(() => {\r\n        const w = ripenessLevel.findIndex(r => r.value === 'waste')\r\n        const sw = ripenessLevel.findIndex(r => r.value === 'semi_waste')\r\n        if (w === -1 && areaMovement?.value === 3) ripenessLevel.push({ label: \"Waste\", value: \"waste\" })\r\n        if (sw === -1 && areaMovement?.value === 3) ripenessLevel.push({ label: \"Semi Waste\", value: \"semi_waste\" })\r\n    }, [])\r\n    if (category !== 'Fruits') rip = ripenessLevel.filter(r => r?.value === 'waste' || r?.value === 'semi_waste')\r\n    if (category === 'Fruits') rip = ripenessLevel\r\n\r\n\r\n    if (areaMovement?.value === 8) filteredGradeList = gradeList?.filter(grade => grade.label === 'Waste' || grade.label === 'Semi Waste')\r\n    return (\r\n        <div className='d-flex w-100 we-m'>\r\n\r\n            <Decimal\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            <Input\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Quantity'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n        </div>\r\n    )\r\n}\r\nexport default WeightEntry","import { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n\r\nexport const addRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.push({\r\n        qty: '',\r\n        expiryDate: js.jobPost.list[activeSku].poList[poListIdx].expiryDate\r\n    })\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLine = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e\r\n}) => {\r\n    const name = e?.target?.name\r\n    let value = e?.target?.value\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n\r\n    if (name === 'weight' || name === 'weightToCompare') {\r\n        // js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = parseInt(value)\r\n        let regex = /^[0-9\\.\\x0]+$/\r\n        console.clear()\r\n        if ((regex.test(value) === true && value !== \"\")) {\r\n            let newValue = 0;\r\n            let arr = value?.split('.')\r\n            let number = arr[0];\r\n            if (number >= 0) number = parseInt(number)\r\n            let commaNumber = arr[1];\r\n\r\n            if ((commaNumber !== null && commaNumber !== undefined)) {\r\n                if (commaNumber.length > 2) {\r\n                    //jika dibelakang koma ada lebih dari 2 angka\r\n                    var sliceNumber = commaNumber.slice(0, 2);\r\n                    newValue = `${number}.${sliceNumber}`\r\n                } else {\r\n                    newValue = `${number}.${commaNumber}`\r\n                }\r\n            } else {\r\n                newValue = parseInt(number)\r\n            }\r\n\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompareIsEmpty = false\r\n            }\r\n\r\n        }\r\n        else {\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = ''\r\n            }\r\n        }\r\n    }\r\n    else if (name === 'qty') {\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = value ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n    }\r\n\r\n    else if (name === 'note') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    const initialWeight = js.jobPost.list[activeSku].poList[poListIdx].inboundQty\r\n    let initialWeightUpdate = initialWeight\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        if (data.qty) js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        initialWeightUpdate = initialWeightUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = initialWeightUpdate\r\n        if (initialWeightUpdate < 0) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n            js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = 0\r\n        }\r\n        else {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList.filter(item => { return item.qtyIsEmpty = false })\r\n        }\r\n    })\r\n\r\n    //initial weight from it self\r\n    const initialWeightScreen = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n    let initialWeightScreenUpdate = initialWeightScreen\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        initialWeightScreenUpdate = initialWeightScreenUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = initialWeightScreenUpdate\r\n    })\r\n    //end of initial weight from it self\r\n\r\n    const over = totalListItemWeightCount({ moduleList: js.jobPost.list[activeSku].poList[poListIdx].itemList })\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightOver = over > initialWeight ? over : 0\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLineDropdown = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    selected,\r\n    name\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n    // if (name === 'grade') {\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].gradeIsEmpty = false\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = { label: null, value: null }\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = null\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    // }\r\n    if (name === 'ripeness') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = selected\r\n        if (selected?.value === 'waste' || selected?.value === 'semi_waste') js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n        else js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = { label: '', value: '' }\r\n    }\r\n    if (name === 'grade') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n    }\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].gradeIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = ''\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const countQty = ({ dispatch, activeSku, moduleEntry, poListIdx, entryListIdx }) => {\r\n    let number = parseInt(0)\r\n    const list = moduleEntry.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    list.map((item, idx) => {\r\n        if (idx !== entryListIdx) number += Number.isInteger(item?.qty) ? item?.qty : parseFloat(item?.qty)\r\n    })\r\n\r\n    return number\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dateFull, isFloat } from 'services';\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport WeightEntry from \"Page/StockEntry/StockTransfer/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry\";\r\nimport \"./index.scss\";\r\nimport {\r\n  addRow,\r\n  updateJSWeightLine,\r\n  updateJSWeightLineDropdown\r\n} from \"Page/StockEntry/StockTransfer/WeightEntry/services\";\r\nimport { deleteRow, countQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst WeightEntryCard = ({\r\n  inputWidth,\r\n  activeSku,\r\n  poListIdx,\r\n  poItem,\r\n  moduleEntry,\r\n  moduleName,\r\n  gradeList\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    expiryDate,\r\n    inboundDate,\r\n    initialWeight,\r\n    inboundQty,\r\n    initialWeightUpdate,\r\n    initialWeightScreenUpdate,\r\n    poUuid,\r\n    skuUuid,\r\n    supplierId,\r\n    supplierName,\r\n    uom,\r\n    ripeness,\r\n    ripenessLevel,\r\n    edited,\r\n    wmsPoSkuCode,\r\n    category,\r\n    codeGrade,\r\n    isHidden\r\n  } = poItem;\r\n  const total = !isNaN(initialWeightUpdate) ? initialWeightUpdate : inboundQty;\r\n  const initialWeightTotal = !isNaN(initialWeightScreenUpdate) ? initialWeightScreenUpdate : initialWeight\r\n  const uomType = uom === \"kg\" || uom === \"gram\" ? \"Weight\" : \"Quantity\";\r\n  const grade = moduleEntry.jobPost.list[activeSku].gradeList.filter(grade => { return grade?.value === codeGrade })\r\n  const area = moduleEntry.jobPost.areaName\r\n\r\n  return (\r\n    <div\r\n      // onKeyDown={e => e.keyCode === 13 ? addRow({dispatch, moduleEntry,moduleName, activeSku, poListIdx}) : false}\r\n      id={`sku_item_${activeSku}_${poListIdx}`}\r\n      tabIndex='0'\r\n      className={`${isHidden ? 'd-none' : null} z-0 d-flex flex-column sku-item justify-content-between w-100 mb-3 align-items-center border rounded border-soft-green ${edited ? \"soft-green\" : null\r\n        }`}\r\n    >\r\n      {/* Line 1 */}\r\n      <div className=\"w-100 border-soft-green mt-3 d-flex align-items-start px-3\">\r\n        <div className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex justify-content-between align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Inbound Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {inboundDate ? dateFull({ date: inboundDate }) : '-'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex align-items-center mb-3\">\r\n            {`Initial ${uomType}`}\r\n            <span className=\"ml-2 font-green\">\r\n              {` ${initialWeight} ${uom?.toUpperCase()}${initialWeight > 1 ? \"s\" : \"\"}`}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 2 */}\r\n\r\n      <div className=\"w-100 border-soft-green d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`PO Code`}\r\n              <span className=\"ml-2 font-green\">{` ${wmsPoSkuCode ? wmsPoSkuCode : '-'}`}</span>\r\n            </div>\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Supplier Name`}\r\n              <span className=\"ml-2 font-green\">{` ${supplierName}`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 3 */}\r\n      <div className=\"w-100 border-bottom border-soft-green mb-3 d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Expiry Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {expiryDate ? dateFull({ date: expiryDate, noTime: true }) : '-'}\r\n              </span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-3 ${area === 'Waste' || area === 'Semi Waste' ? null : 'd-none'}`}>\r\n              {`Grade`}\r\n              <span className=\"ml-2 font-green\">{` ${grade.length ? grade[0].label : '-'}`}</span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`Inbound Quantity`}\r\n              <span className=\"ml-2 font-green\">{` ${inboundQty ? inboundQty : '-'}`}</span>\r\n            </div>\r\n            {/* <div className={`d-flex align-items-center mb-3 mr-5 ${area === 'Waste' || area === 'Semi Waste' ? 'd-none' : (category === 'Fruits' || category === 'Vegetables' ? null : 'd-none')}`}>\r\n              {`Ripeness Level`}\r\n              <span className=\"ml-2 font-green\">{` ${ripenessLevel}`}</span>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex flex-column justify-content-between w-100 align-items-center px-3 z-0\">\r\n        {poItem.itemList?.map((item, entryListIdx) => {\r\n          return (\r\n            <div className=\"d-flex w-100 align-items-center justify-content-between\">\r\n              <div className=\"w-100 d-flex\">\r\n                <div style={{ width: '10px' }} className=\"input-height d-flex align-items-center mb-3 mr-3 pt-4 mt-2\">{`${entryListIdx + 1}.`}</div>\r\n                <div className=\"w-100\">\r\n                  <WeightEntry\r\n                    category={category}\r\n                    entryListIdx={entryListIdx}\r\n                    wmsPoSkuInfoId={item.wmsPoSkuInfoId}\r\n                    showTitle={true}\r\n                    gradeList={gradeList}\r\n                    onChange={(e) =>\r\n                      updateJSWeightLine({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        e,\r\n                      })\r\n                    }\r\n                    uom={uom}\r\n                    ripeness={ripeness}\r\n                    inputWidth={inputWidth}\r\n                    item={item}\r\n                    className={!ripeness ? \"d-none\" : null}\r\n                    poListIdx={poListIdx}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex w-25 align-items-center justify-content-end input-height mb-0 p-0\">\r\n                <img\r\n                  src={Trash}\r\n                  alt=\"delete icon\"\r\n                  className=\"w-1 cursor-pointer\"\r\n                  onClick={(e) =>\r\n                    deleteRow({\r\n                      dispatch,\r\n                      moduleEntry,\r\n                      moduleName,\r\n                      activeSku,\r\n                      poListIdx,\r\n                      entryListIdx,\r\n                      e,\r\n                      countQty\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        onKeyDown={e => e.keyCode === 13 ? addRow({ dispatch, moduleEntry, moduleName, activeSku, poListIdx }) : false}\r\n        // className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer ${total === 0 ? 'd-none' : null}`}\r\n        className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer `}\r\n        // tabIndex='0'\r\n        onClick={() => addRow({\r\n          dispatch, moduleEntry,\r\n          moduleName, activeSku, poListIdx\r\n        })}\r\n      >\r\n        <i className=\"green iconU-entryAdd pr-2\"></i>\r\n        {`Add ${uomType} (${isFloat(initialWeightTotal) ? isFloat(initialWeightTotal) : initialWeightTotal} ${uom ? uom.toUpperCase() : ''}${initialWeightTotal > 1 ? \"s\" : \"\"} left)`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WeightEntryCard;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport WeightEntryCard from 'Page/StockEntry/StockTransfer/WeightEntry/WeightEntryList/WeightEntryCard'\r\nimport { removeEntryModule, saveJobSheet } from 'apiServices'\r\nimport { submitValidation } from 'Page/StockEntry/StockTransfer/services'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\";\r\nimport PopUpRequired from \"Component/Modal/PopUpRequired\";\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport Sort from 'Component/Sort'\r\nimport { Prompt } from 'react-router'\r\nimport { useEntryDimention, useStockTransferEntry } from 'Page/StockEntry/GeneralServices'\r\n\r\nconst WeightEntryList = ({\r\n    setActiveSKU,\r\n    hideSKUList,\r\n    setHideSKUList,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    updateEntry,\r\n    setUpdateEntry\r\n}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { height, heightAdj, dimention } = useEntryDimention()\r\n\r\n    const {\r\n        setIsSuccess,\r\n        status,\r\n        confirmation,\r\n        setConfirmation,\r\n        discard,\r\n        setDiscard,\r\n        isSaved,\r\n        setIsSaved,\r\n        action,\r\n        setAction,\r\n        isRequired,\r\n        setIsRequired,\r\n        hideContent,\r\n        setHideContent,\r\n        isLoading,\r\n        skuName,\r\n        skuNumber,\r\n        poList,\r\n        gradeList,\r\n        unitOfMeassures,\r\n        totalWeight,\r\n        edited,\r\n        postInfo,\r\n        areaMovement\r\n    } = useStockTransferEntry({ moduleEntry, activeSku })\r\n\r\n    //Condition\r\n    const isMobile = dimention <= 500\r\n    const isHidden = hideContent ? 'd-none' : null\r\n    const isPlural = totalWeight > 1 ? \"s\" : ''\r\n    const isEdited = edited ? 'bg-green' : 'bg-lineGrey'\r\n\r\n    return (\r\n        <div style={{ paddingLeft: isMobile ? 0 : 10 }} className='w-100 h-100 mt-3 mt-md-0'>\r\n            {/* <Prompt\r\n                when={true}\r\n                message={location => {\r\n                    let pathname = location.pathname\r\n                    if (!allowPage.includes(pathname)) {\r\n                        setDiscard(true)\r\n                        return false\r\n                    }\r\n                }}\r\n            /> */}\r\n            <Discard\r\n                discard={discard}\r\n                module={'Inventory Entry - Stock Movement'}\r\n                moduleEntry={moduleEntry}\r\n                close={() => setDiscard(false)}\r\n                discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch })}\r\n            />\r\n            <PopUpSaved\r\n                updateEntry={updateEntry}\r\n                setUpdateEntry={setUpdateEntry}\r\n                status={status}\r\n                moduleEntry={moduleEntry}\r\n                submit={() => dispatch({ type: 'CREATE_JOB_SHEET', [`${moduleName}EntryData`]: null, [`${moduleName}SummaryData`]: null })}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSaved={isSaved}\r\n                action={action}\r\n                setIsSaved={setIsSaved}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <PopUpRequired\r\n                isRequired={isRequired}\r\n                module={moduleEntry}\r\n                setIsRequired={setIsRequired}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <Confirmation\r\n                moduleName={moduleName}\r\n                noSkuChecking={true}\r\n                isLoading={isLoading}\r\n                moduleEntry={moduleEntry}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSuccess={postInfo}\r\n                setAction={setAction}\r\n                action={action}\r\n                save={() => saveJobSheet({ name: 'save', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n                submit={() => saveJobSheet({ name: 'submit', moduleEntry, moduleName, dispatch, setIsSuccess, submitValidation, setActiveSKU })}\r\n            />\r\n            <div className='mb-3 bg-white rounded-bottom rounded-top'>\r\n                <div style={{ height }} style={{ padding: 10 }} className='w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green'>\r\n                    <div className='d-flex w-100 m-0 p-0' onClick={() => isMobile ? setHideContent(!hideContent) : null}>\r\n                        <div className={`${hideSKUList ? 'iconU-sideBarHideRight' : 'iconU-sideBarHideLeft'} emptyTextField fontSizeTitle mr-3`} onClick={() => setHideSKUList(!hideSKUList)} />\r\n                        <div className='mr-3 pr-1 d-flex align-items-center m-0 p-0 LatoBold'>Weight Entry</div>\r\n                        <div className='mr-3 iconU-sideBarDot d-flex align-items-center' />\r\n                        <div className='mr-3 d-flex align-items-center font-green LatoBold'>{`${skuName} (${skuNumber})`}</div>\r\n                    </div>\r\n                    <Sort moduleEntry={moduleEntry} moduleName={moduleName} activeSku={activeSku} dispatch={dispatch} />\r\n                </div>\r\n                <div style={{ height: isMobile ? height : heightAdj, minHeight: isMobile ? height : heightAdj }} className={`w-100 overflow-y mr-0 border-left border-right border-soft-green pl-3 pr-2 pt-3 ${isHidden}`}>\r\n                    {\r\n                        poList?.map((poItem, idx) => {\r\n                            return <WeightEntryCard\r\n                                activeSku={activeSku}\r\n                                gradeList={gradeList}\r\n                                inputWidth='input-w-100'\r\n                                activeSku={activeSku}\r\n                                poListIdx={idx}\r\n                                poItem={poItem}\r\n                                moduleEntry={moduleEntry}\r\n                                moduleName={moduleName}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <div className='w-100 d-flex align-items-center p-3 border-left border-right border-bottom rounded-bottom LatoBold'>\r\n                    <button\r\n                        tabIndex='0'\r\n                        type=\"button\"\r\n                        className={`btn sku-item ${isEdited}  text-white px-5 mr-3 LatoBold`}\r\n                        onClick={() => edited ? setConfirmation({ show: true, name: 'save' }) : null}>\r\n                        Save\r\n                    </button>\r\n                    <div>Total Weight <span className='font-green'>{`${totalWeight} ${unitOfMeassures?.toUpperCase()}${isPlural}`}</span></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end\">\r\n                <div tabIndex='0' onClick={() => setDiscard(true)} className='red pr-3 sku-item fontSizeButton cursor-pointer'><i className='iconU-entryTrash'></i> Discard</div>\r\n                <button tabIndex='0' onClick={() => edited ? submitValidation({ setActiveSKU, moduleEntry, moduleName, dispatch, setConfirmation, setIsRequired, areaMovement }) : null} className={`btn sku-item px-5 py-2 text-white ${isEdited} LatoBold no-shadow`} style={{ height: \"fit-content !important\" }} >Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntryList","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport SelectedSKUList from 'Page/StockEntry/StockTransfer/WeightEntry/SelectedSKUList'\r\nimport WeightEntryList from 'Page/StockEntry/StockTransfer/WeightEntry/WeightEntryList'\r\n\r\nconst WeightEntry = () => {\r\n    const stockTransferEntryData = useSelector(state => state.stockTransferEntryData)\r\n    const [hideSKUList, setHideSKUList] = useState(false)\r\n    const [activeSku, setActiveSKU] = useState(0)\r\n    const [updateEntry, setUpdateEntry] = useState()\r\n    let height = document.documentElement.clientHeight\r\n    let clientWidth = document.documentElement.clientWidth\r\n    let heightAdj = height - 150\r\n    const moduleName = 'stockTransfer'\r\n    if (!stockTransferEntryData || stockTransferEntryData?.jobPost.list.length === 0) {\r\n        return (\r\n            <div className='d-flex align-items-center justify-content-center text-center w-100 h-screen'><Redirect to='/inventory-entry/stock-transfer'>Please Select At Least 1 SKU</Redirect></div >)\r\n    }\r\n    return (\r\n        <div style={{ height: clientWidth <= 500 ? height : heightAdj }} className='w-100 d-md-flex justify-content-between scroll-y z-0'>\r\n            <SelectedSKUList\r\n                hideSKUList={hideSKUList}\r\n                activeSku={activeSku}\r\n                setActiveSKU={setActiveSKU}\r\n                moduleName={moduleName}\r\n                moduleEntry={stockTransferEntryData}\r\n                setUpdateEntry={setUpdateEntry}\r\n            />\r\n            <WeightEntryList\r\n                setActiveSKU={setActiveSKU}\r\n                setHideSKUList={setHideSKUList}\r\n                hideSKUList={hideSKUList}\r\n                moduleName={moduleName}\r\n                moduleEntry={stockTransferEntryData}\r\n                activeSku={activeSku}\r\n                setUpdateEntry={setUpdateEntry}\r\n                updateEntry={updateEntry}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntry","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    name\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n\r\n    // const input = document.getElementById(`qty_${poListIdx}_${entryListIdx}`)\r\n    // if (isEmpty && input) input.focus()\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","module.exports = __webpack_public_path__ + \"static/media/refreshIcon.de5bc1ae.svg\";","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { getPoBySkuId, removeEntryModule } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { checkIsSkuRequired, filterBySkuName, totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    warehouseIdDestination,\r\n    areaId,\r\n    areaIdDesposition }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseIdDestination?.value,\r\n            warehouseDestinationName: warehouseIdDestination?.label,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaIdDesposition?.value),\r\n            areaDestinationName: areaIdDesposition?.label,\r\n            list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    setLocalEntryData(jobSheet)\r\n    // dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                list.isNewItem = true\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const setAreaIdDesposition = ({ dispatch, selected }) => {\r\n    if (selected) dispatch({ type: SET_AREA, areaIdDesposition: selected })\r\n}\r\n\r\n\r\n\r\n\r\n//remove sku\r\nexport const removeSku = async ({ dispatch, moduleEntry, moduleName }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n    const list = moduleEntry.jobPost.list.filter(data => { if (data.checked) return data })\r\n    jobSheet.jobPost.list = list\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n    if (list.length === 0) removeEntryModule({ id: jobSheet.jobPost.id, moduleName, dispatch })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            po.itemList.map(item => {\r\n                const { qty, grade, ripeness, note } = item\r\n                if (po.uom === 'kg') {\r\n\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                    }\r\n                }\r\n                else {\r\n                    isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                }\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                // if(!item.qtyIsEmpty) po.initialWeightOver > po.initialWeight ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}"],"sourceRoot":""}