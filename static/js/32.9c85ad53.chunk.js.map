{"version":3,"sources":["Page/StockEntry/Repacking/UploadTargetRepack/index.jsx","Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/FileUploader/services.js","Component/FileUploadProgress/index.jsx","Component/FileUploader/index.jsx"],"names":["ExcelFile","ReactExport","ExcelSheet","ExcelColumn","withRouter","props","dispatch","useDispatch","React","useState","warehousesData","useSelector","state","warehouseData","useEffect","getWarehouses","className","element","id","style","display","filename","data","name","label","value","nextPage","history","push","transaction","field","dataField","text","editable","sort","hidden","type","PopUp","refresh","status","icon","statusDisplay","title","cancelButtonTitle","actionButtonTitle","cancelButtonClass","actionButtonClass","actionButtonEvent","colorText","msg1","msg2","onCloseFunction","refreshOnCancel","setIsSuccess","code","message","show","setShow","window","onkeydown","e","keyCode","closeOnBackdrop","onClose","isFunction","success","STATUS","size","minHeight","bodyOpenClassName","onClick","location","reload","refreshPage","parentOncCloseFunction","console","log","templateDownload","document","getElementById","click","csvReader","fieldArray","setIsProgressPercent","Promise","resolve","reject","i","jsonArray","reader","FileReader","onload","csv","parse","result","err","length","map","obj","index","newObject","toString","split","csvObj","csvIndex","percentage","Math","ceil","setTimeout","readAsBinaryString","xlsReader","setIsJsonArray","a","evt","bstr","target","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","putCsvFieldJson","STOK_TAKE_UPLOAD_JSON","csvField","validateColumn","fileName","warehouseArea","warehouseUuid","outboundType","setIsCheckingSchema","warehouseCodeList","warehouseUuidList","d","wh_area_label","toUpperCase","wh_area_value","wh_outboundtype_label","wh_outboundtype_value","csv_schema","replace","distinctPOSKUInfoId","distinctSKUNumber","schemaRow","key","keys","includes","clear","shift","emptyRow","fieldData","fieldIndex","undefined","indexOf","parseInt","tmp_data","stat","isNaN","match","csvData","csvFileName","csvDistinctPOSKUInfoId","csvDistinctSKUNumber","cleaningData","poSkuInfoValidated","poSkuNumberValidated","setIsProgressStatus","wmsPoSkuCode","wmsPoSkuUom","uom","skuNumberArray","skuUuidArray","skuPhotosArray","skuUomArray","skuNumber","imageMd","cleanData","areaSource","areaDestination","warehouseDestination","warehouseSource","indexId","skuValidatedData","isExist","inboundDate","wmsPoSkuCodeStatus","wmsPoSkuCodeReason","tmp_grade","newGrade","arr_grade","idx","newGradeStatus","newGradeUuid","newGradeReason","tmp_sku_number","skuUuid","photo","skuNumberStatus","skuNumberReason","tmp_new_grade","newGradeUom","resetCsvResist","resetStatus","setIsResetCsvPersist","VALIDATE_PO_SKU_INFO_ID","skuCodeValidated","FileUploadProgress","progressPercent","cancelHandler","cancelButton","lineHeight","cursor","class","role","width","aria-valuemin","aria-valuemax","baseStyle","flex","flexDirection","alignItems","paddingTop","paddingBottom","paddingLeft","paddingRight","outline","transition","height","parentStyle","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","activeStyle","acceptStyle","rejectStyle","FileUploader","isProgressDisplay","setIsProgressDisplay","isProgressStatus","isProgressPercent","isProgressFileName","setIsProgressFileName","isWarehouseArea","setIsWarehouseArea","isAdditionalOutbound","setIsAdditionalOutbound","isUploadStatus","setIsUploadStatus","isCheckingSchema","isResetCsvPersist","modalShow","setModalShow","modalShow2","setModalShow2","selectorWarehouseArea","warehouseAreaCsv","selectorOutboundType","outboundTypeCsv","selectorStatus","selectorDistinctPOSKUInfoId","uploadStatus","selectorDistinctSKUNumber","selectorSkuCodeValidated","selectorSkuNumberValidated","skuNumberValidated","selectorCsvData","user","getWarehouseArea","getOutboundType","onDropAccepted","file","fileArr","fileType","useDropzone","noClick","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","open","acceptedFiles","useMemo","validatePoSkuInfoId","skuData","validateSkuNumber","skuNumberData","bulk","fontSize"],"mappings":"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","file":"static/js/32.9c85ad53.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport FileUploader from \"Component/FileUploader\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport {getWarehouses} from \"apiServices\"\r\nimport \"./index.scss\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\nconst Upload = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [isDisplayProgress, setIsDisplayProgress] = React.useState(false);\r\n  const warehousesData =  useSelector(state => state.warehouseData);\r\n  const Field = [\r\n    {\r\n      dataField: \"id\", //field ini wajib ada untuk editable column\r\n      text: \"ID\",\r\n      editable: false,\r\n      sort: true,\r\n      hidden: true,\r\n      type: \"number\",\r\n    }, \r\n    {\r\n      dataField: \"warehouse\",\r\n      text: \"Warehouse\",\r\n      type: \"string\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"deliveryDate\",\r\n      text: \"Delivery Date\",\r\n      type: \"date_indo\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"slot\",\r\n      text: \"Slot\",\r\n      type: \"number\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"skuNumber\",\r\n      text: \"SKU Number\",\r\n      type: \"number\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"skuDescription\",\r\n      text: \"SKU Description\",\r\n      type: \"string\",\r\n      sort: true,\r\n    },\r\n    { dataField: \"uos\", text: \"Target UOS\", type: \"number\", sort: true },\r\n    { dataField: \"uom\", text: \"Target UOM\", type: \"number\", sort: true }, \r\n  ];\r\n\r\n  const dataSet1 = [\r\n    {\r\n      data: \"\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if(!warehousesData){\r\n      getWarehouses({dispatch})\r\n    } \r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"mb-5\">\r\n      {/* export this table to excel */}\r\n      <ExcelFile\r\n        element={\r\n          //dont change id and style please\r\n          <button id=\"download-template-xls\" style={{ display: \"none\" }}>\r\n            Download Data\r\n          </button>\r\n        }\r\n        //file name without types\r\n        filename=\"Repacking_Template\"\r\n      >\r\n        <ExcelSheet data={dataSet1} name=\"template\">\r\n          <ExcelColumn label=\"Warehouse\" value=\"data\" />\r\n          <ExcelColumn label=\"Delivery Date\" value=\"data\" />\r\n          <ExcelColumn label=\"Slot\" value=\"data\" />\r\n          <ExcelColumn label=\"SKU Number\" value=\"data\" />\r\n          <ExcelColumn label=\"SKU Description\" value=\"data\" />\r\n          <ExcelColumn label=\"Target UOS\" value=\"data\" />\r\n          <ExcelColumn label=\"Target UOM\" value=\"data\" /> \r\n        </ExcelSheet>\r\n      </ExcelFile>\r\n      {/* end export this table to excel */}\r\n\r\n      <FileUploader\r\n        nextPage={() =>\r\n          props.history.push(\"/inventory-entry/repacking/upload-target-repack/review\")\r\n        }\r\n        transaction={\"repacking\"}\r\n        field={Field}\r\n        type=\"repacking\" \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Upload);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { onClose, refreshPage } from \"./services.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { STATUS } from \"apiServices/action\";\r\nimport { isFunction } from \"lodash\";\r\n\r\nconst PopUp = ({\r\n  refresh,\r\n  status,\r\n  icon,\r\n  statusDisplay = false,\r\n  title = \"\",\r\n  cancelButtonTitle = \"Cancel\",\r\n  actionButtonTitle = \"Submit\",\r\n  cancelButtonClass = \"bg-background\",\r\n  actionButtonClass = \"bg-background\",\r\n  actionButtonEvent = null,\r\n  colorText = \"red\",\r\n  msg1 = null,\r\n  msg2 = null,\r\n  onCloseFunction = null,\r\n  refreshOnCancel = true,\r\n  setIsSuccess\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  if (status?.code === 500 && statusDisplay == false) {\r\n    icon = \"em-pensive\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 408 && statusDisplay == false) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Request Timeout\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 400 && statusDisplay == false) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n  if (status?.code === 404) {\r\n    title = \"Something wrong with the application\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n\r\n  const [show, setShow] = useState(statusDisplay);\r\n\r\n  useEffect(() => {\r\n    //from outside change\r\n    setShow(statusDisplay);\r\n  }, [statusDisplay]);\r\n\r\n  useEffect(() => {\r\n  }, [show]);\r\n\r\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\r\n  return (\r\n    <CRow className={`${show ? null : \"d-none\"}`}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          closeOnBackdrop={false}\r\n          onClose={() => {\r\n            setShow(false)\r\n            if (isFunction(setIsSuccess)) setIsSuccess({ success: null, name: null })\r\n            dispatch({ type: STATUS, status: null });\r\n            if (onCloseFunction) {\r\n              onCloseFunction()\r\n            }\r\n          }}\r\n          size=\"lg\"\r\n          style={{ minHeight: \"280px\" }}\r\n          bodyOpenClassName=\"p-3\"\r\n        >\r\n          {/* <div className='d-flex flex-row-reverse'>\r\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-3 border-none\">\r\n              <CModalTitle className={`text LatoBold ${colorText}`}>\r\n                {title}\r\n              </CModalTitle> */}\r\n\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <i\r\n              className=\"pr-3 pt-3 iconU-modalClose\"\r\n              onClick={() => {\r\n                setShow(false)\r\n                if (isFunction(setIsSuccess)) setIsSuccess({ success: null, name: null })\r\n                dispatch({ type: STATUS, status: null });\r\n                if (onCloseFunction) {\r\n                  onCloseFunction()\r\n                }\r\n              }}\r\n            ></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className={`text LatoBold ${colorText}`}>\r\n              {title} <span><i className={`em ${icon}`}></i></span>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">{msg1}</p>\r\n            <p className=\"text\">{msg2}</p>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            {cancelButtonTitle ? (\r\n              <CButton\r\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\r\n                onClick={() => {\r\n                  if (refreshOnCancel) {\r\n                    if(typeof(refresh) === 'function') refresh()\r\n                    else refreshPage({ refresh: true });\r\n                  } else {\r\n                    onClose({\r\n                      setShow,\r\n                      parentOncCloseFunction: onCloseFunction,\r\n                    });\r\n                  }\r\n                  dispatch({ type: STATUS, status: null });\r\n                }}\r\n              >\r\n                {cancelButtonTitle}\r\n              </CButton>\r\n            ) : null}\r\n            {actionButtonTitle ? (\r\n              <CButton\r\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\r\n                onClick={() => {\r\n                  if (actionButtonEvent) {\r\n                    actionButtonEvent();\r\n                    setShow(false);\r\n                  } else {\r\n                    setShow(false)\r\n                  }\r\n                }\r\n                }\r\n              >\r\n                {actionButtonTitle}\r\n              </CButton>\r\n            ) : null}{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\r\n  setShow(false);\r\n  console.log(parentOncCloseFunction)\r\n  if (parentOncCloseFunction) {\r\n    parentOncCloseFunction();\r\n  }\r\n\r\n};\r\n\r\nexport const refreshPage = ({ refresh = true }) => {\r\n  if (refresh === true) {\r\n    window.location.reload(false);\r\n  }\r\n};\r\n","/* eslint-disable array-callback-return */\r\nimport csv from \"csv\";\r\nimport * as XLSX from \"xlsx\";\r\nimport {\r\n  STOK_TAKE_UPLOAD_JSON,\r\n  VALIDATE_PO_SKU_INFO_ID,\r\n  STATUS,\r\n} from \"apiServices/action\";\r\n\r\nexport const templateDownload = () => {\r\n  document.getElementById(\"download-template-xls\").click();\r\n};\r\nexport const csvReader = (e, fieldArray, setIsProgressPercent) => {\r\n  return new Promise((resolve, reject) => {\r\n    let i = 0;\r\n    let jsonArray = [];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      csv.parse(reader.result, (err, data) => {\r\n        if (data.length > 2001) {\r\n          //why 2001? , because line 1 is header\r\n          setIsProgressPercent(0);\r\n          resolve(false);\r\n        }\r\n        data.map((obj, index) => {\r\n          if (index === 0) {\r\n            i++;\r\n            return false; // skip\r\n          }\r\n\r\n          let newObject = {};\r\n          newObject[\"id\"] = index;\r\n\r\n          let csvArray = data[i].toString().split(\";\");\r\n          csvArray.map((csvObj, csvIndex) => {\r\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\r\n          });\r\n          i++;\r\n          jsonArray.push(newObject);\r\n\r\n          //count percent\r\n          let percentage = ((index + 1) * 25) / data.length;\r\n          setIsProgressPercent(Math.ceil(percentage));\r\n        });\r\n      });\r\n    };\r\n\r\n    //checking\r\n    setTimeout(() => {\r\n      resolve(jsonArray);\r\n    }, 200);\r\n    reader.readAsBinaryString(e[0]);\r\n  });\r\n};\r\n\r\nexport const xlsReader = async (\r\n  e,\r\n  fieldArray,\r\n  setIsProgressPercent,\r\n  setIsJsonArray,\r\n  dispatch\r\n) => {\r\n  let i = 0;\r\n  let jsonArray = [];\r\n  const reader = new FileReader();\r\n  let data = null;\r\n  let error = false;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    var fr = new FileReader();\r\n    reader.onload = async (evt) => {\r\n      /* Parse data */\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n      /* Update state */\r\n\r\n      await csv.parse(data, (err, data) => {\r\n        if (data.length > 2001) {\r\n          //why 2001? , because line 1 is header\r\n          setIsProgressPercent(0);\r\n          resolve(false);\r\n        }\r\n        data.map((obj, index) => {\r\n          let newObject = {};\r\n          newObject[\"id\"] = index;\r\n\r\n          let csvArray = data[i].toString().split(\",\");\r\n          csvArray.map((csvObj, csvIndex) => {\r\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\r\n          });\r\n          i++;\r\n          jsonArray.push(newObject);\r\n\r\n          //count percent\r\n          let percentage = ((index + 1) * 25) / data.length;\r\n          setIsProgressPercent(Math.ceil(percentage));\r\n        });\r\n      });\r\n\r\n      //checking\r\n      setTimeout(() => {\r\n        resolve(jsonArray);\r\n      }, 200);\r\n    };\r\n\r\n    reader.readAsBinaryString(e[0]);\r\n  });\r\n};\r\n\r\nexport const putCsvFieldJson = ({ dispatch, jsonArray }) => {\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvField: jsonArray });\r\n};\r\n\r\nexport const validateColumn = async ({\r\n  field,\r\n  jsonArray,\r\n  setIsProgressPercent,\r\n  fileName,\r\n  dispatch,\r\n  warehouseArea,\r\n  warehouseUuid,\r\n  outboundType,\r\n  setIsCheckingSchema,\r\n  warehousesData\r\n}) => {\r\n\r\n  //warehouse\r\n  let warehouseCodeList = [];\r\n  let warehouseUuidList = [];\r\n  if(warehousesData){\r\n    warehousesData.data.map((d) => {\r\n      warehouseCodeList.push(d.code);\r\n      warehouseUuidList.push(d.id);\r\n    });\r\n  }  \r\n\r\n  //warehouse area\r\n  let wh_area_label = !warehouseArea\r\n    ? []\r\n    : warehouseArea.map((data) => data.label.toUpperCase());\r\n  let wh_area_value = !warehouseArea\r\n    ? []\r\n    : warehouseArea.map((data) => data.value);\r\n  let wh_outboundtype_label = !outboundType\r\n    ? []\r\n    : outboundType.map((data) => data.label.toUpperCase());\r\n  let wh_outboundtype_value = !outboundType\r\n    ? []\r\n    : outboundType.map((data) => data.value);\r\n  let csv_schema = !field\r\n    ? []\r\n    : field.map((data) => data.text.toUpperCase().replace(/\\s/g, \"\"));\r\n  let distinctPOSKUInfoId = [];\r\n  let distinctSKUNumber = [];\r\n\r\n  // check schema\r\n  let checkSchema = true;\r\n  let i = 0;\r\n  const schemaRow = jsonArray[0];\r\n  for (var key in schemaRow) {\r\n    if (key == \"id\") {\r\n      continue;\r\n    }\r\n    let keys = schemaRow[key].toUpperCase().replace(/\\s/g, \"\");\r\n    if (\r\n      key !== \"undefined\" &&\r\n      (csv_schema[i + 1] !== keys || !csv_schema.includes(keys))\r\n    ) {\r\n      console.clear();\r\n      console.log(\"--Schema Not Same--\");\r\n      console.log(\"Schema \\t\\t: \", csv_schema[i + 1]);\r\n      console.log(\"File SChema : \", keys);\r\n      checkSchema = false;\r\n      setIsCheckingSchema(false);\r\n      return 0;\r\n    }\r\n    i++;\r\n  }\r\n\r\n  jsonArray.shift();\r\n  await jsonArray.map((data, index) => {\r\n    let emptyRow = true; // if empty row dont show\r\n    field.map((fieldData, fieldIndex) => {\r\n      //if null then return\r\n      if (fieldData === undefined || fieldData === null) {\r\n        return;\r\n      }\r\n\r\n      if (fieldData.dataField !== \"id\" && data[fieldData.dataField] == \"\") {\r\n        return;\r\n      } else if (fieldData.dataField == \"id\") {\r\n      } else {\r\n        emptyRow = false;\r\n      }\r\n      // end checking empty\r\n\r\n      //set warehouse id\r\n      data[\"warehouseSource\"] = warehouseUuid;\r\n\r\n      //checking warehouse \r\n      if (warehouseCodeList && fieldData.dataField == \"warehouse\") {\r\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`; \r\n          return;\r\n        } else{\r\n          let i = warehouseCodeList.indexOf( data[fieldData.dataField]);\r\n          data[\"warehouseUuid\"] = warehouseUuidList[i];\r\n        }\r\n      }\r\n\r\n      //checking warehouse area\r\n      if (fieldData.dataField == \"areaName\") {\r\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\r\n          data[\"areaSource\"] = null;\r\n          return;\r\n        } else {\r\n          let i = wh_area_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"areaSource\"] = wh_area_value[i];\r\n        }\r\n      }\r\n\r\n      if (fieldData.dataField == \"areaNameDestination\") {\r\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\r\n          data[\"areaDestination\"] = null;\r\n          return;\r\n        } else {\r\n          let i = wh_area_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"areaDestination\"] = wh_area_value[i];\r\n        }\r\n      }\r\n\r\n      //checking outbound type\r\n      if (\r\n        wh_outboundtype_value.length > 0 &&\r\n        fieldData.dataField == \"outboundType\"\r\n      ) {\r\n        if (\r\n          !wh_outboundtype_label.includes(\r\n            data[fieldData.dataField].toUpperCase()\r\n          )\r\n        ) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Outbound Type Not Found`;\r\n          data[\"outboundTypeCode\"] = null;\r\n          return;\r\n        } else {\r\n          let i = wh_outboundtype_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"outboundTypeCode\"] = wh_outboundtype_value[i];\r\n        }\r\n      }\r\n\r\n      //newgrade\r\n      if (fieldData.dataField == \"newGrade\") {\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n        if (\r\n          data[fieldData.dataField] &&\r\n          !arr_grade.includes(data[fieldData.dataField].toUpperCase())\r\n        ) {\r\n          //if not waste or semi waste\r\n          if (parseInt(data[fieldData.dataField])) {\r\n            //if number, check sku number\r\n            if (!distinctSKUNumber.includes(data[fieldData.dataField])) {\r\n              distinctSKUNumber.push(data[fieldData.dataField]);\r\n            }\r\n            data[fieldData.dataField + \"Status\"] = true;\r\n          } else if (data[fieldData.dataField] == \"\") {\r\n            //if null\r\n            data[fieldData.dataField + \"Status\"] = true;\r\n          } else {\r\n            //if not number => undefined\r\n            data[fieldData.dataField + \"Status\"] = false;\r\n            data[fieldData.dataField + \"Reason\"] = `Grade Undefined`;\r\n          }\r\n        } else {\r\n          data[\"newGradeUuid\"] = data[fieldData.dataField];\r\n        }\r\n      }\r\n\r\n      //set ripeness\r\n      let ripeness = null;\r\n      if (\r\n        (fieldData.dataField == \"ripenessLevel\" ||\r\n          fieldData.dataField == \"newRipeness\") &&\r\n        data[fieldData.dataField] !== undefined\r\n      ) {\r\n        let ripeness_ = data[fieldData.dataField].split(\" \");\r\n        ripeness = ripeness_[1];\r\n      }\r\n\r\n      //checking type\r\n      let tmp_data = data[fieldData.dataField];\r\n      let stat = null;\r\n      if (fieldData.type == \"number\") {\r\n        if (isNaN(tmp_data)) {\r\n          stat = false;\r\n        } else {\r\n          stat = true;\r\n\r\n          if (fieldData.dataField == \"wmsPoSkuCode\") {\r\n            if (!distinctPOSKUInfoId.includes(tmp_data)) {\r\n              distinctPOSKUInfoId.push(tmp_data);\r\n            }\r\n          }\r\n\r\n          //distinct sku angka maka push ke array buat di cek\r\n          if (fieldData.dataField == \"skuNumber\") {\r\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\r\n              distinctSKUNumber.push(tmp_data);\r\n            }\r\n          }\r\n        }\r\n      } else if (fieldData.type == \"date_indo\") {\r\n        //checking date\r\n        let regex_date = /(0[1-9]|[12][0-9]|3[01])[-.](0[1-9]|1[012])[-.](19|20)\\d\\d/;\r\n        if (tmp_data.match(regex_date)) {\r\n          stat = true;\r\n        } else {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[\r\n            fieldData.dataField + \"Reason\"\r\n          ] = `Date format must be 'dd-mm-yyyy'`;\r\n          return;\r\n        }\r\n        // console.log('stat date', stat)\r\n        // console.log(`${fieldData.dataField}Reason`, data[fieldData.dataField + \"Reason\"])\r\n      } else {\r\n        stat = true;\r\n      }\r\n\r\n      //grade can null\r\n      let canNull = [\r\n        \"grade\",\r\n        \"outboundReason\",\r\n        \"ripenessLevel\",\r\n        \"newRipeness\",\r\n        \"newGrade\",\r\n      ];\r\n      if (canNull.includes(fieldData.dataField) && tmp_data == \"\") {\r\n        stat = true;\r\n      }\r\n\r\n      //check newGrade, jika angka maka cek ke distinct sku\r\n      if (fieldData.dataField == \"newGrade\") {\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n        if (!arr_grade.includes(tmp_data.toUpperCase())) {\r\n          //if not waste or semi waste\r\n          if (parseInt(tmp_data)) {\r\n            //if number\r\n            stat = true;\r\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\r\n              distinctSKUNumber.push(tmp_data);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      data[fieldData.dataField + \"Status\"] = stat;\r\n      if (!stat) {\r\n        data[\r\n          fieldData.dataField + \"Reason\"\r\n        ] = `Invalid ${fieldData.text} \\nShould be a ${fieldData.type}`;\r\n      } else {\r\n        data[fieldData.dataField + \"Reason\"] = \"\";\r\n      }\r\n\r\n      let percentage =\r\n        ((index + 1 + parseInt(jsonArray.length)) * 50) /\r\n        (parseInt(jsonArray.length) * 2);\r\n      setIsProgressPercent(Math.ceil(percentage));\r\n    });\r\n    data[\"emptyRow\"] = emptyRow;\r\n  });\r\n\r\n  //end checking type\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: jsonArray });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: fileName });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctPOSKUInfoId: distinctPOSKUInfoId,\r\n  });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctSKUNumber: distinctSKUNumber,\r\n  });\r\n};\r\n\r\nexport const cleaningData = async ({\r\n  poSkuInfoValidated,\r\n  poSkuNumberValidated,\r\n  csvData,\r\n  setIsProgressPercent,\r\n  dispatch,\r\n  status,\r\n  transaction,\r\n  setIsProgressStatus,\r\n  nextPage,\r\n}) => {\r\n  //checking\r\n  if (status === false || status === null) {\r\n    return 0;\r\n  }\r\n  if (\r\n    csvData === undefined ||\r\n    csvData === null ||\r\n    poSkuInfoValidated === null ||\r\n    poSkuInfoValidated === undefined ||\r\n    poSkuNumberValidated === null ||\r\n    poSkuNumberValidated === undefined\r\n  ) {\r\n    console.clear();\r\n    return 0;\r\n  }\r\n\r\n  //split data and id po sku code\r\n  const wmsPoSkuCode = [];\r\n  const wmsPoSkuUom = [];\r\n  poSkuInfoValidated.map((data) => {\r\n    wmsPoSkuCode.push(data.wmsPoSkuCode);\r\n    wmsPoSkuUom.push(data.uom);\r\n  });\r\n\r\n  //split sku number and skuUUid sku number\r\n  let skuNumberArray = [];\r\n  let skuUuidArray = [];\r\n  let skuPhotosArray = [];\r\n  let skuUomArray = [];\r\n  poSkuNumberValidated.map((data) => {\r\n    skuNumberArray.push(data.skuNumber);\r\n    skuUuidArray.push(data.id);\r\n    skuPhotosArray.push(data.imageMd);\r\n    skuUomArray.push(data.uom);\r\n  });\r\n\r\n  //cleaning data\r\n  let cleanData = [];\r\n  csvData.map((data, index) => {\r\n    //if empty row then skip\r\n    if (data.emptyRow === true) {\r\n      return 0;\r\n    }\r\n\r\n    //format fixing\r\n    data.areaSource = parseInt(data.areaSource);\r\n    data.areaDestination = parseInt(data.areaDestination);\r\n\r\n    //if transaction stocktake then source and destination is same\r\n    if (\r\n      transaction == \"stock_take\" ||\r\n      transaction == \"repacking\" ||\r\n      transaction == \"outbound\"\r\n    ) {\r\n      data.areaDestination = parseInt(data.areaSource);\r\n      data.warehouseDestination = parseInt(data.warehouseSource);\r\n    }\r\n    //get index dari poskucode\r\n    let indexId = wmsPoSkuCode.indexOf(data.wmsPoSkuCode);\r\n\r\n    //get validated data\r\n    let skuValidatedData = poSkuInfoValidated[indexId];\r\n\r\n    if (\r\n      !skuValidatedData ||\r\n      skuValidatedData.isExist === undefined ||\r\n      skuValidatedData.isExist === false ||\r\n      skuValidatedData.isExist === null\r\n    ) {\r\n      data.wmsPoSkuCodeStatus = false;\r\n      data.wmsPoSkuCodeReason = \"PO SKU Code Not Found\";\r\n    } else {\r\n      // skuValidatedData.expiryDate = skuValidatedData.expiryDate\r\n      data.inboundDate = skuValidatedData.inboundDate;\r\n      data.uom = wmsPoSkuUom[indexId];\r\n    }\r\n\r\n    //check grade\r\n    let tmp_grade = data.newGrade;\r\n    let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n    if (\r\n      tmp_grade !== undefined &&\r\n      !arr_grade.includes(tmp_grade.toUpperCase())\r\n    ) {\r\n      //if not waste or semi waste\r\n      if (skuNumberArray.includes(tmp_grade)) {\r\n        let idx = skuNumberArray.indexOf(tmp_grade);\r\n        data.newGradeStatus = true;\r\n        data.newGradeUuid = skuUuidArray[idx];\r\n      } else if (tmp_grade == \"\") {\r\n        data.newGradeUuid = \"\";\r\n        data.newGradeStatus = true;\r\n      } else {\r\n        //if not number => undefined\r\n        data.newGradeReason = \"Grade Undefined\";\r\n        data.newGradeStatus = false;\r\n      }\r\n    }\r\n\r\n    //check Sku Number\r\n    let tmp_sku_number = data.skuNumber;\r\n    if (!skuNumberArray.includes(tmp_sku_number)) {\r\n      data.skuNumberStatus = false;\r\n      data.skuNumberReason = \"SKU Number Not Found\";\r\n      data.skuUuid = \"\";\r\n    } else {\r\n      let idx = skuNumberArray.indexOf(tmp_sku_number);\r\n      data.skuUuid = skuUuidArray[idx];\r\n      data.photo = skuPhotosArray[idx];\r\n    }\r\n\r\n    //check New Grade\r\n    let tmp_new_grade = data.newGrade;\r\n    console.log(\"tmp_new_grade\", tmp_new_grade);\r\n    if (\r\n      (tmp_new_grade && arr_grade.includes(tmp_new_grade.toUpperCase())) ||\r\n      tmp_new_grade == \"\"\r\n    ) {\r\n      data.newGradeReason = \"\";\r\n      data.newGradeStatus = true;\r\n      data.newGradeUuid = null;\r\n      data.newGradeUom = null;\r\n    } else {\r\n      if (skuNumberArray.includes(tmp_new_grade)) {\r\n        let idx = skuNumberArray.indexOf(tmp_new_grade);\r\n        data.newGradeReason = \"\";\r\n        data.newGradeStatus = true;\r\n        data.newGradeUuid = skuUuidArray[idx];\r\n        data.newGradeUom = skuUomArray[idx];\r\n      } else {\r\n        data.newGradeReason = \"SKU Number Not Found\";\r\n        data.newGradeStatus = false;\r\n        data.newGradeUuid = null;\r\n        data.newGradeUom = null;\r\n      }\r\n    }\r\n\r\n    //merging_array\r\n    cleanData.push({ ...data, ...skuValidatedData });\r\n  });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: cleanData });\r\n  setIsProgressPercent(Math.ceil(100));\r\n  setTimeout(() => {\r\n    nextPage();\r\n  }, 200);\r\n};\r\n\r\nexport const resetCsvResist = async ({\r\n  dispatch,\r\n  resetStatus,\r\n  setIsResetCsvPersist,\r\n}) => {\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: null });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: null });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctPOSKUInfoId: null,\r\n  });\r\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\r\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\r\n  dispatch({ type: STATUS, status: null });\r\n  setIsResetCsvPersist(true);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./index.scss\";\r\n\r\nconst FileUploadProgress = ({\r\n  status,\r\n  progressPercent,\r\n  fileName,\r\n  display = false,\r\n  cancelButton = null,\r\n  cancelHandler,\r\n}) => {\r\n  useEffect(() => {\r\n  }, [progressPercent, status]);\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-100 d-flex flex-column progressBar \" +\r\n        (!display ? \"hiddenProgress\" : null)\r\n      }\r\n    >\r\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white border-all radius-all mb-3 mt-0\">\r\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n          <div className=\"uploadStatus w-100\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-7\">\r\n                <i className=\"iconU-sideBarInventoryEntry green\"></i> File\r\n                {fileName}\r\n              </div>\r\n              <div className=\"col-md-5\">\r\n                <p className=\"float-right\" style={{ lineHeight: \"30px\", cursor: \"pointer\" }} onClick={() => { cancelHandler() }}>\r\n                  Cancel\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"progress\">\r\n              <div\r\n                class=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                style={{ width: progressPercent + \"%\" }}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n              ></div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <div className=\"emptyTextField inline\">{status}</div>\r\n              <div className=\"text inline font-weight-bold\">\r\n                {\"  \"}\r\n                {progressPercent}%\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadProgress;\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./FileUploader.scss\";\r\nimport {\r\n  templateDownload,\r\n  csvReader,\r\n  putCsvFieldJson,\r\n  validateColumn,\r\n  xlsReader,\r\n  cleaningData,\r\n  resetCsvResist,\r\n} from \"./services.js\";\r\nimport FileUploadProgress from \"Component/FileUploadProgress\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport { validatePoSkuInfoId, validateSkuNumber } from \"apiServices\";\r\nimport { getWarehouseArea, getOutboundType } from \"apiServices/dropdown\";\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  paddingTop: \"20px\",\r\n  paddingBottom: \"20px\",\r\n  paddingLeft: \"20px\",\r\n  paddingRight: \"20px\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n  height: \"400px\",\r\n};\r\n\r\nconst parentStyle = {\r\n  paddingTop: \"20px\",\r\n  paddingBottom: \"10px\",\r\n  paddingLeft: \"20px\",\r\n  paddingRight: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fff\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n  height: \"600px\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nconst FileUploader = ({ field, transaction, nextPage = null, type = null }) => {\r\n  const [isProgressDisplay, setIsProgressDisplay] = React.useState(false);\r\n  const [isProgressStatus, setIsProgressStatus] = React.useState();\r\n  const [isProgressPercent, setIsProgressPercent] = React.useState(0);\r\n  const [isProgressFileName, setIsProgressFileName] = React.useState(null);\r\n  const [isWarehouseArea, setIsWarehouseArea] = React.useState(null);\r\n  const [isAdditionalOutbound, setIsAdditionalOutbound] = React.useState(null);\r\n  const [isJsonArray, setIsJsonArray] = React.useState(null);\r\n  const [isUploadStatus, setIsUploadStatus] = React.useState(null);\r\n  const [isCheckingSchema, setIsCheckingSchema] = React.useState(null);\r\n  const [isResetCsvPersist, setIsResetCsvPersist] = React.useState(false);\r\n  const [defaultValues, setDefaultValues] = React.useState(0);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [modalShow2, setModalShow2] = React.useState(false);\r\n\r\n  //declare redux\r\n  const dispatch = useDispatch();\r\n  const selectorWarehouseArea = useSelector((state) => state.warehouseAreaCsv);\r\n  const selectorOutboundType = useSelector((state) => state.outboundTypeCsv);\r\n  const selectorStatus = useSelector((state) => state.status);\r\n  const uploadStatus = useSelector((state) => state.uploadStatus);\r\n  const selectorDistinctPOSKUInfoId = useSelector(\r\n    (state) => state.csvDistinctPOSKUInfoId\r\n  );\r\n  const selectorDistinctSKUNumber = useSelector(\r\n    (state) => state.csvDistinctSKUNumber\r\n  );\r\n  const selectorSkuCodeValidated = useSelector(\r\n    (state) => state.skuCodeValidated\r\n  );\r\n  const selectorSkuNumberValidated = useSelector(\r\n    (state) => state.skuNumberValidated\r\n  );\r\n  const selectorCsvData = useSelector((state) => state.csvData); \r\n  const warehousesData =  useSelector(state => state.warehouseData);\r\n\r\n  //reset csv persist\r\n  if (isResetCsvPersist !== true) {\r\n    resetCsvResist({\r\n      dispatch,\r\n      resetStatus: isResetCsvPersist,\r\n      setIsResetCsvPersist,\r\n    });\r\n  }\r\n\r\n  //get warehouse & warehouse area data\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  if (isWarehouseArea === null) {\r\n    getWarehouseArea({\r\n      warehouseUuid: warehouseUuid,\r\n      dispatch,\r\n      type: \"csvValidator\",\r\n    });\r\n    setIsWarehouseArea(1);\r\n  }\r\n\r\n  //get additional outbound type\r\n  if (isAdditionalOutbound === null && type == \"additionalOutbound\") {\r\n    getOutboundType({\r\n      dispatch,\r\n      type: \"csvValidator\",\r\n    });\r\n    setIsAdditionalOutbound(1);\r\n  }\r\n\r\n  //when file droped or selected\r\n  const onDropAccepted = async (e) => {\r\n    //reset percent\r\n    setIsProgressPercent(0);\r\n    setIsUploadStatus(true);\r\n\r\n    //get file type\r\n    const file = e[0].name;\r\n    const fileArr = file.split(\".\");\r\n    const fileType = fileArr[1];\r\n\r\n    //read file\r\n    let fieldArray = field.map((obj) => obj.dataField);\r\n    putCsvFieldJson({ dispatch, jsonArray: field });\r\n\r\n    let jsonArray = null;\r\n    let cleanArray = [];\r\n    await setIsProgressStatus(\"Reading...\");\r\n    await setIsProgressFileName(file);\r\n    await setIsProgressDisplay(true);\r\n    if (fileType == \"csv\") {\r\n      jsonArray = await csvReader(\r\n        e,\r\n        fieldArray,\r\n        setIsProgressPercent,\r\n        setIsProgressStatus\r\n      );\r\n      //console.log(\"csv\", jsonArray);\r\n    } else {\r\n      jsonArray = await xlsReader(\r\n        e,\r\n        fieldArray,\r\n        setIsProgressPercent,\r\n        setIsProgressStatus,\r\n        setIsJsonArray,\r\n        dispatch\r\n      );\r\n      // console.log(\"xls\", jsonArray);\r\n    }\r\n    console.log(jsonArray);\r\n    if (jsonArray === false) {\r\n      // resetCsvResist({ dispatch, resetStatus: 1, setIsResetCsvPersist });\r\n      setModalShow(true);\r\n      return 0;\r\n    }\r\n\r\n    await setIsProgressStatus(\"Validating Column Type...\");\r\n    await validateColumn({\r\n      field,\r\n      jsonArray,\r\n      setIsProgressPercent,\r\n      fileName: file,\r\n      dispatch,\r\n      warehouseArea: selectorWarehouseArea,\r\n      warehouseUuid,\r\n      outboundType: selectorOutboundType,\r\n      setIsCheckingSchema,\r\n      warehousesData\r\n    });\r\n    await setIsProgressStatus(\"Validating PO SKU Code. . .\");\r\n  };\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    acceptedFiles,\r\n    open,\r\n  } = useDropzone({\r\n    noClick: true,\r\n    onDropAccepted,\r\n    accept:\r\n      //accept csv, xls, and xlsx\r\n      \"text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n  });\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept]\r\n  );\r\n\r\n  const cancelCsv = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  // Use Effect\r\n  useEffect(() => {\r\n    //setelah validasi kolom\r\n    // validasi PO SKU Code\r\n    // console.clear();\r\n    validatePoSkuInfoId({\r\n      dispatch,\r\n      skuData: selectorDistinctPOSKUInfoId,\r\n      status: isUploadStatus,\r\n    });\r\n  }, [selectorDistinctPOSKUInfoId]);\r\n\r\n  useEffect(() => {\r\n    //setelah validasi PO SKU Code\r\n    //validasi SKU Number\r\n    // console.clear();\r\n    setIsProgressPercent(70);\r\n    setIsProgressStatus(\"Validating SKU Numbers\");\r\n    validateSkuNumber({\r\n      dispatch,\r\n      skuNumberData: selectorDistinctSKUNumber,\r\n      bulk: true,\r\n      status: isUploadStatus,\r\n    });\r\n  }, [selectorSkuCodeValidated]);\r\n\r\n  useEffect(() => {\r\n    //setelah validasi sku number\r\n    //re arrange data yang akan digunakan di table\r\n    // console.clear();\r\n    setIsProgressPercent(90);\r\n    setIsProgressStatus(\"rearrange data. . .\");\r\n    cleaningData({\r\n      poSkuInfoValidated: selectorSkuCodeValidated,\r\n      poSkuNumberValidated: selectorSkuNumberValidated,\r\n      csvData: selectorCsvData,\r\n      transaction: transaction,\r\n      setIsProgressPercent,\r\n      dispatch,\r\n      status: isUploadStatus,\r\n      setIsProgressStatus,\r\n      nextPage,\r\n    });\r\n  }, [selectorSkuNumberValidated]);\r\n\r\n  useEffect(() => {\r\n    if (isCheckingSchema === false) {\r\n      console.log(isCheckingSchema);\r\n      setModalShow2(true);\r\n      setIsCheckingSchema(null);\r\n    }\r\n  }, [isCheckingSchema]);\r\n\r\n  return (\r\n    <div>\r\n      <PopUp\r\n        status={selectorStatus}\r\n        onCloseFunction={() => {\r\n          setModalShow(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        statusDisplay={modalShow}\r\n        title=\"Upload File Failed\"\r\n        cancelButtonTitle=\"Try Another File\"\r\n        actionButtonTitle={null}\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div>\r\n              Upload failed because your file has more than 2000 lines.{\" \"}\r\n            </div>\r\n            <div> Please make it less than 2000 lines. </div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to try another file?\"\r\n        cancelButtonClass=\"bg-red background\"\r\n        actionButtonClass=\" \"\r\n      />\r\n\r\n      <PopUp\r\n        status={200}\r\n        onCloseFunction={() => {\r\n          setModalShow2(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        actionButtonEvent={() => templateDownload()}\r\n        statusDisplay={modalShow2}\r\n        title=\"Different File Template\"\r\n        cancelButtonTitle=\"Cancel\"\r\n        actionButtonTitle=\"Download latest template\"\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div> Your uploaded file has a different template.</div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to download the latest file template ?\"\r\n        actionButtonClass=\"bg-green background\"\r\n        cancelButtonClass=\"\"\r\n      />\r\n\r\n      <div className=\"w-100 d-flex flex-column p-3 mb-3 bg-white\">\r\n        <div\r\n          className=\"d-flex flex-column justify-content-between\"\r\n          style={parentStyle}\r\n        >\r\n          <div className=\"FileUploader\">\r\n            <div\r\n              className=\"d-flex flex-column justify-content-end\"\r\n              {...getRootProps({ style })}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <i\r\n                style={{ fontSize: \"90px\" }}\r\n                className=\"lineGrey iconU-upload\"\r\n              ></i>\r\n              <b className=\"mt-2\">Drag and Drop files here</b>\r\n              <p className=\"mt-2 mb-2 emptyTextField\"> Or </p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={open}\r\n                className=\"btn px-5 py-2 text-white bg-green LatoBold no-shadow\"\r\n              >\r\n                Browse File\r\n              </button>\r\n\r\n              <div className=\"emptyTextField LatoBold mt-3 \">\r\n                Support only CSV, XLS, XLSX file\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"downloadTemplate w-100 align-right\">\r\n            <span onClick={() => templateDownload()} className=\"float-right\">\r\n              Download the File Template\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <FileUploadProgress\r\n        status={isProgressStatus}\r\n        progressPercent={isProgressPercent}\r\n        fileName={isProgressFileName}\r\n        display={isProgressDisplay}\r\n        cancelHandler={cancelCsv}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n"],"sourceRoot":""}