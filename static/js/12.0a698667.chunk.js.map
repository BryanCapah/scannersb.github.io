{"version":3,"sources":["Component/Modal/ModalConfirmation/services.js","Component/Modal/ModalConfirmation/index.jsx","Component/Modal/PopUpDiscard/index.jsx","Component/Input/decimal.jsx","assets/icons/trash.png","Component/Modal/PopUpSaved/services.js","Component/Modal/PopUpSaved/index.jsx","Component/Modal/PopUpRequired/services.js","Component/Modal/PopUpRequired/index.jsx","Component/DatePickerNew/index.jsx","Component/DatePickerNew/services.js","Component/Sort/index.jsx","assets/icons/asc.svg","assets/icons/desc.svg"],"names":["next","e","state","isCaptcha","setIsValidated","setIsType","isType","key","includes","document","getElementById","parseInt","focus","type","toUpperCase","split","value","stat","map","data","index","ModalsConfirmation","moduleEntry","confirmation","setConfirmation","save","submit","isSuccess","isLoading","moveAll","setAction","moduleName","noSkuChecking","singleViewData","height","documentElement","clientHeight","buttonName","name","useEffect","show","window","onkeydown","keyCode","module","areaDestinationName","jobPost","warehouseDestinationName","areaName","skuListUpdate","length","newModule","list","poList","po","itemList","item","qty","grade","_qty","isInteger","parseFloat","_sku","skuName","wasteType","label","_toWaste","_uom","unitOfMeassures","uom","newSku","sku","wqty","swqty","isExist","findIndex","push","i","s","skuListUpdateCheck","className","closeOnBackdrop","tabIndex","onKeyDown","onClick","style","minHeight","maxHeight","overflow","border","borderBottom","color","textAlign","maxWidth","totalQty","ModalsCaptcha","setIsShowModal","submitText","text","characters","charactersLength","text_split","r","charAt","Math","floor","random","useDispatch","selectorCsvFileName","useSelector","csvFileName","React","useState","isCaptchaText","isValidated","onClose","size","autocomplete","onKeyUp","id","textTransform","maxLength","placeholder","PopUpDiscard","discard","close","discardEntry","Input","isEmpty","entryListIdx","poListIdx","wmsPoSkuInfoId","inputWidth","ripeness","values","onChange","showTitle","title","toCompare","autoComplete","exports","submitAction","setIsSaved","setLocalEntryData","PopUpSaved","isSaved","totalSku","action","complete","status","saved","success","header","headerIcon","textColor","date","dateFull","button","buttonText","failed","showErrorMessage","setShowErrorMessage","arrowIcon","opacity","errorText","bodyOpenClassName","backgroundColor","message","wordWrap","toString","handleFailed","defaults","threshold","initialWeight","isRequired","setIsRequired","invalidThreshold","setInvalidThreshold","isLessThanInitWeight","SKUDatePicker","showDate","selectDate","setShowDate","clientWidth","startDate","Date","endDate","dateRange","setDateRange","setDate","mode","setMode","singleDate","multipleDate","wrapperRef","useRef","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","useOutside","ref","width","ranges","newdate","dt","selection","setDates","Sort","dateShow","activeSku","dispatch","sortBy","setSortBy","resetFilter","setResetFilter","dimention","dateDMY","datePicker","sortByInboundDate","_","filterByDate","minWidth","d","src","desc","asc"],"mappings":"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","file":"static/js/12.0a698667.chunk.js","sourcesContent":["import { isInteger } from \"formik\";\r\n\r\nexport const next = ({\r\n  e,\r\n  state,\r\n  isCaptcha,\r\n  setIsValidated,\r\n  setIsType,\r\n  isType,\r\n}) => {\r\n  const key = e.key; // const {key} = event; ES6+\r\n  // console.log(key, state, isType[state]);\r\n  let arr_tmp = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown', 'Tab']\r\n  if (arr_tmp.includes(key)) {\r\n    return 0;\r\n  } else if (key === \"Backspace\") {\r\n    if (state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n    }\r\n  } else {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n    }\r\n  }\r\n\r\n  let type = [...isType];\r\n  if (key === \"Backspace\") {\r\n    type[state] = '';\r\n  } else {\r\n    type[state] = key.toUpperCase();\r\n  }\r\n  let char = \"QWERTYUIOPLKJHGFDSAZXCVBNM1234567890\"\r\n  let allowedChar = char.split('')\r\n  if (allowedChar.includes(key.toUpperCase()) || type[state] == '') {\r\n    document.getElementById(\"t\" + (parseInt(state))).value = type[state];\r\n    setIsType(type);\r\n  } else {\r\n    return 0;\r\n  }\r\n\r\n  let stat = true;\r\n  isCaptcha.map((data, index) => {\r\n    if (index == 0) {\r\n      return;\r\n    }\r\n    if (!(type[index + 1] == isCaptcha[index])) {\r\n      stat = false;\r\n    }\r\n  });\r\n  setIsValidated(stat);\r\n};\r\n\r\nexport const skuListUpdateCheck = (module, noSkuChecking, moduleName) => {\r\n  if (module?.length) {\r\n    let newModule = []\r\n    module.map(list => {\r\n      list.poList.map(po => {\r\n        po.itemList.map(item => {\r\n          const { qty, grade } = item\r\n          const _qty = isInteger(qty) ? parseInt(qty) : (!qty ? 0 : parseFloat(qty))\r\n          const _sku = noSkuChecking ? list.skuName : moduleName === 'waste' ? (item.wasteType?.label ? item.wasteType?.label : list.skuName) : grade?.label\r\n          const _toWaste = moduleName === 'waste' ? (item.wasteType?.label === 'Semi Waste' || item.wasteType?.label === 'Waste' ? true : false) : grade?.label === 'Waste' || grade?.label === 'Semi Waste' ? true : false\r\n          const _uom = noSkuChecking ? list.unitOfMeassures : grade?.uom === 'gram' ? 'kg' : grade?.uom\r\n          let newSku = {\r\n            sku: _sku,\r\n            qty: _qty,\r\n            uom: _uom,\r\n            wqty: 0,\r\n            swqty: 0\r\n          }\r\n          if (_toWaste) {\r\n            newSku.qty = 0\r\n            newSku.sku = list.skuName\r\n          }\r\n          if (moduleName === 'waste' ? item.wasteType?.label === 'Waste' : grade?.label === 'Waste') newSku.wqty = _qty\r\n          if (moduleName === 'waste' ? item.wasteType?.label === 'Semi Waste' : grade?.label === 'Semi Waste') newSku.swqty = _qty\r\n          const isExist = newModule.findIndex(sku => sku?.sku === (_toWaste ? list.skuName : _sku))\r\n\r\n          if (moduleName !== 'waste') {\r\n            if (isExist === -1) newModule.push(newSku)\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty\r\n              if (grade?.label === 'Semi Waste') newModule[isExist].swqty += _qty\r\n              if (grade?.label === 'Waste') newModule[isExist].wqty += _qty\r\n            }\r\n          }\r\n\r\n          if (moduleName === 'waste') {\r\n            if (isExist === -1) newModule.push(newSku)\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty\r\n              if (item.wasteType?.label === 'Semi Waste') newModule[isExist].swqty += _qty\r\n              if (item.wasteType?.label === 'Waste') newModule[isExist].wqty += _qty\r\n            }\r\n          }\r\n\r\n        })\r\n      })\r\n    })\r\n    const skuName = module.length ? module[0].skuName : 'No SKU'\r\n    const i = newModule.findIndex(s => s.sku === skuName)\r\n    newModule.map(sku => {\r\n      if (i !== -1) {\r\n        if (sku.sku === 'Waste') newModule[i].wqty = sku.qty\r\n        if (sku.sku === 'Semi Waste') newModule[i].swqty = sku.qty\r\n      }\r\n    })\r\n    return newModule\r\n  }\r\n}","import React, { useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { next, skuListUpdateCheck } from \"./services.js\";\r\nimport { totalQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst ModalsConfirmation = ({ moduleEntry, confirmation, setConfirmation, save, submit, isSuccess, isLoading, moveAll, setAction, moduleName, noSkuChecking, singleViewData }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 300\r\n\r\n  let buttonName = 'Submit'\r\n\r\n  if (confirmation.name === 'save') buttonName = 'Save'\r\n  useEffect(() => {\r\n    if (isSuccess) setConfirmation({ show: false, name: null })\r\n  }, [isSuccess])\r\n  window.onkeydown = e => e.keyCode === 27 ? setConfirmation({ show: false, name: null }) : null\r\n\r\n  useEffect(() => {\r\n    setAction(confirmation.name)\r\n  }, [confirmation])\r\n\r\n  let module = singleViewData && !moveAll ? singleViewData : moduleEntry\r\n\r\n  const areaDestinationName = module?.jobPost?.areaDestinationName\r\n  const warehouseDestinationName = module?.jobPost?.warehouseDestinationName\r\n  const areaName = module?.jobPost?.areaName\r\n\r\n  const skuListUpdate = skuListUpdateCheck(module?.jobPost.list, noSkuChecking, moduleName)\r\n  return (\r\n    <CRow className={confirmation.show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={confirmation.show}\r\n          closeOnBackdrop={false}\r\n        >\r\n          <CModalHeader className=\"px-4 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation <span><i className=\"em em-pray\"></i></span></CModalTitle>\r\n            <label tabIndex='0' onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false} onClick={() => setConfirmation({ show: false, name: null })} className='sku-item iconU-modalClose' />\r\n\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-4 py-0\" style={{ minHeight: height }}>\r\n            <p className=\"text mb-2\">\r\n              <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n              <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n              <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n              <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n              <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${moduleName === 'stockTransfer' ? warehouseDestinationName : (areaDestinationName ? areaDestinationName : areaName)} `}</span>\r\n            </p>\r\n            <p className=\"text\">\r\n              Please double check this list, this record will store to database.\r\n            </p>\r\n            <div\r\n              style={{\r\n                minHeight: height,\r\n                maxHeight: height,\r\n                overflow: \"auto\",\r\n                border: \"1px solid var(--lineGrey)\",\r\n              }}\r\n            >\r\n              <table>\r\n                <thead>\r\n                  <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                    <th style={{ color: \"var(--emptyTextField)\" }}>SKU List</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Weight</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Semi Waste</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Waste</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {skuListUpdate?.map((data) => (\r\n                    <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                      <td style={{ maxWidth: '160px' }}>{data.sku}</td>\r\n                      <td className=\"text-right py-3\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.qty)}`}\r\n                      </td>\r\n                      <td className=\"text-right text-nowrap\" style={{ textAlign: \"right\" }}>\r\n                        <span className='text-nowrap'>{`${totalQty(data?.swqty)} `}</span>\r\n                      </td>\r\n                      <td className=\"text-right\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.wqty)}`}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"px-0 pb-5 pt-0 justify-content-start border-none\">\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false}\r\n                className=\"bg-background sku-item text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n                onClick={() => setConfirmation({ show: false, name: null })}\r\n              >\r\n                Cancel\r\n            </CButton>\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? (isLoading ? null : (confirmation.name === 'save' ? save() : submit())) : false}\r\n                className={`${isLoading ? 'bg-softGreen text' : 'bg-green text-white'} no-shadow px-5 mt-4 sku-item mb-0 ml-3 mr-0`}\r\n                onClick={() => isLoading ? null : (confirmation.name === 'save' ? save() : submit())}\r\n              >\r\n                {isLoading ? 'Processing...' : buttonName}\r\n              </CButton>{\" \"}\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst ModalsCaptcha = ({\r\n  show = false,\r\n  setIsShowModal,\r\n  submit,\r\n  submitText = \"Submit\",\r\n}) => {\r\n  //random text\r\n  var text = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  var text_split = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    let r = characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    text += r;\r\n    text_split.push(r);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const [isCaptcha, setIsCaptcha] = React.useState(text_split);\r\n  const [isCaptchaText, setIsCaptchaText] = React.useState(text);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n  const [isButtonSubmit, setIsButtonSubmit] = React.useState(\"Submit\");\r\n  const [isType, setIsType] = React.useState([]);\r\n\r\n  //reset if visible = false \r\n  useEffect(() => {\r\n    if (show === true) {\r\n      document.getElementById('t1').value = '';\r\n      document.getElementById('t2').value = '';\r\n      document.getElementById('t3').value = '';\r\n    }\r\n  }, [show]);\r\n\r\n  return (\r\n    <CRow className={show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          onClose={() => {\r\n            setIsShowModal(false);\r\n          }}\r\n          size=\"lg\"\r\n          style={{ height: \"400px\" }}\r\n        >\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">\r\n              Are you sure want to upload <span className=\"green\">Edited</span>{\" \"}\r\n              {selectorCsvFileName}?\r\n            </p>\r\n            <p className=\"text\">\r\n              Once uploaded this record will store to databases.\r\n            </p>\r\n            <p className=\"text mb-2\">\r\n              Please type ‘{isCaptchaText}’ on the Box to confirm upload file.\r\n            </p>\r\n\r\n            <div className=\"captcha-box\">\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 1,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t1\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[0]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 2,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t2\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input ml-0 mr-0\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[1]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 3,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t3\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[2]}\r\n              />\r\n            </div>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            <CButton\r\n              className=\"bg-background text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n              onClick={() => {\r\n                setIsShowModal(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </CButton>\r\n            <CButton\r\n              className={\r\n                (isValidated ? \"bg-green\" : \"bg-emptyTextField disabled\") +\r\n                \" no-shadow px-5 mt-4 mb-0 ml-3 mr-0\"\r\n              }\r\n              onClick={() => {\r\n                submit();\r\n                setIsValidated(false);\r\n              }}\r\n            >\r\n              {submitText}\r\n            </CButton>{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport { ModalsConfirmation, ModalsCaptcha };\r\n","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    return (\r\n        <CRow className={discard ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                             from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-5 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    ripeness,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title,\r\n    toCompare\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' || uom === 'KG' ? true : false\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`wgt_${poListIdx}_${entryListIdx}`} maxLength='12' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={toCompare ? 'weightToCompare' : 'weight'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","module.exports = __webpack_public_path__ + \"static/media/trash.121a7b10.png\";","export const submitAction = ({ confirmation, setIsSaved, submit, setLocalEntryData,moveAll}) => {\r\n    if (confirmation.name === 'submit') {\r\n        if(moveAll)  setLocalEntryData()\r\n        submit()\r\n        setIsSaved()\r\n        \r\n    }\r\n    else {\r\n        setIsSaved()\r\n    }\r\n}\r\n\r\nexport const message = ({moduleEntry, complete}) => {\r\n    if(moduleEntry?.jobPost){\r\n        let message = null\r\n        const {areaDestinationName, areaName} = moduleEntry?.jobPost\r\n        if(areaDestinationName) message = ` ${areaName} reefer ${areaDestinationName} - `\r\n        else message = ` ${areaName} - `\r\n        return message\r\n    }\r\n}\r\n\r\nexport const handleFailed = ({setIsSaved,setConfirmation,action, setLocalEntryData}) => {\r\n    setIsSaved()\r\n    setConfirmation({ show: true, name: action })\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { dateFull } from 'services'\r\nimport { submitAction, message, handleFailed } from './services'\r\n\r\nconst PopUpSaved = ({ isSaved, moduleName, totalSku, setIsSaved, confirmation, setConfirmation, submit, action, moduleEntry, complete, setLocalEntryData, moveAll, status }) => {\r\n    const saved = {\r\n        success: {\r\n            header: confirmation.name === 'submit' ? 'Success ! ' : 'Saved !',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: `${confirmation.name === 'submit' ? 'Submitted' : 'Saved'} successfully`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        failed: {\r\n            header: `${confirmation.name === 'submit' ? 'Submit' : 'Save'} Failed`,\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            date: dateFull({}),\r\n            sku: '',\r\n            module: `Sorry `,\r\n            status: 'item not recorded.',\r\n            button: 'bg-red',\r\n            buttonText: 'Try Again'\r\n        }\r\n    }\r\n    const data = isSaved ? saved.success : saved.failed\r\n    const [showErrorMessage, setShowErrorMessage] = useState(false)\r\n\r\n    const show = isSaved === true || isSaved === false ? true : false\r\n\r\n    const focus = document.getElementById('btn_is_saved')\r\n    if (focus) focus.focus()\r\n\r\n    const arrowIcon = showErrorMessage ? 'iconU-arrowTop' : 'iconU-arrowBottom'\r\n    const opacity = isSaved ? 1 : (showErrorMessage ? 1 : 0)\r\n    const errorText = showErrorMessage ? 'Hide Message' : 'Show Message'\r\n\r\n    return (\r\n        <CRow className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    className={`${isSaved ? null : 'popup-saved'}`}\r\n                    show={show}\r\n\r\n                    onClose={() => {\r\n                        setIsSaved()\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit }) : setIsSaved()} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${data.textColor} LatoBold mr-2 h5 mb-3`}>{data.header}</label> <span><i className={`${data.headerIcon}`}></i></span>\r\n                        <div className='mr-1 h5 mb-3'>{`Entries ${data.status}`}</div>\r\n                        <div onClick={() => setShowErrorMessage(!showErrorMessage)} className={`d-flex align-items-center mr-1 mb-3 error-message pointer ${isSaved ? 'd-none' : null}`}>\r\n                            <div className={`mr-2 ${arrowIcon}`} />\r\n                            <div className='green'>{errorText}</div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA', opacity: opacity }} className='w-100 border rounded px-3 pt-3 pb-3 mb-3'>\r\n                            <div className={`h5 mb-3 ${isSaved ? null : 'd-none'}`}>{data.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className={`mr-1 ${isSaved ? null : 'd-none'}`}>{`${message({ moduleEntry, complete })} ${data.sku}`}</label>\r\n                                <div className={`mr-1 ${isSaved ? 'd-none' : null}`}>\r\n                                    <div style={{ wordWrap: 'break-word', opacity: opacity, height: showErrorMessage ? false : 0 }} className={`mr-1 `}>\r\n                                        {`${status?.message?.toString()}`}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`mb-2 h5 ${confirmation.name === 'submit' ? 'd-none' : null}`}>Please continue your work</div>\r\n                        <div className='w-100 d-flex '>\r\n                            <CButton onClick={() => setIsSaved()} className={`text no-shadow px-5 mr-4 mb-3 ${`bg-softGreen ${isSaved ? 'd-none' : null}`}`}>\r\n                                Cancel\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) : handleFailed({ setIsSaved, setConfirmation, action })} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","export let defaults = {\r\n    header: 'Complete All !',\r\n    headerIcon: 'em em-anger',\r\n    textColor: 'red',\r\n    date: 'You are  required to update all entries on the list.',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Check several entries left.',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const threshold = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'The threshold calculation ratio should be between -20% until 50%',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const initialWeight = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'Add Weight should not exceed Initial Weight',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}","import React from \"react\";\r\nimport {isLessThanInitWeight} from 'services'\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n    CModalFooter\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport {threshold, initialWeight, defaults} from './services'\r\n\r\nconst PopUpSaved = ({ isRequired, setIsRequired, moduleName, module,totalSku, invalidThreshold, setInvalidThreshold }) => {\r\n    let saved = defaults;\r\n    let isTrue\r\n    if ((!isRequired && invalidThreshold) || (isRequired && invalidThreshold)) {\r\n        saved = threshold\r\n    }\r\n\r\n    if(moduleName !== 'stockTake'){\r\n        isTrue = isLessThanInitWeight(module)\r\n        if(isTrue) saved = initialWeight\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_required')\r\n    if(focus) focus.focus()\r\n    return (\r\n        <CRow className={isRequired || invalidThreshold ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={isRequired || invalidThreshold}\r\n                    onClose={() => {\r\n                        setIsRequired(false)\r\n                        if (invalidThreshold) setInvalidThreshold(false)\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${saved?.textColor} LatoBold mr-2 mb-5 h5`}>{saved?.header}</label> <span><i className={`${saved?.headerIcon}`}></i></span>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100 border rounded px-3 pt-4 pb-3 mb-4'>\r\n                            <div className={`h5 mb-3 ${isRequired || invalidThreshold ? null : 'd-none'}`}>{saved?.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className='mr-1 h5'>{`${saved?.status}`}</label>\r\n                            </div>\r\n                        </div>\r\n                    </CModalBody>\r\n                    <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none d-flex mt-2\">\r\n                        <CButton onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} className={`text no-shadow ${`bg-softGreen ${isRequired ? 'd-none' : null}`}`}>\r\n                            Cancel\r\n                        </CButton>\r\n                        <CButton \r\n                            id={'btn_is_required'}\r\n                            tabIndex='0'\r\n                            onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} className={`text-white no-shadow ${saved?.button}`}>\r\n                            {saved?.buttonText}\r\n                        </CButton>\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","import React, {useEffect,useState,useRef } from 'react'\r\nimport {Calendar,DateRangePicker } from 'react-date-range'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport './index.scss'\r\nimport {setDates} from './services'\r\n\r\nfunction useOutside({wrapperRef,showDate,setShowDate,selectDate}) {\r\n  useEffect(() => {\r\n      /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n      function handleClickOutside(event) {\r\n          if (showDate && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n              setShowDate(!showDate)\r\n              selectDate()\r\n          }\r\n      }\r\n\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n          // Unbind the event listener on clean up\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n  }, [wrapperRef,showDate]);\r\n}\r\n\r\nconst SKUDatePicker = ({ showDate, selectDate, setShowDate }) => {\r\n  let dimention = document.documentElement.clientWidth\r\n  dimention = dimention - 1555\r\n  const [dateRange, setDateRange] = useState({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n  const [date,setDate] = useState(new Date())\r\n  const [mode, setMode] = useState()\r\n\r\n  const singleDate = mode ? 'text' : 'bg-green text-white'\r\n  const multipleDate = mode ? 'bg-green text-white' : 'text'\r\n\r\n  const wrapperRef = useRef(null);\r\n  useOutside({wrapperRef,showDate,setShowDate,selectDate});\r\n\r\n  useEffect(() => {\r\n    setDateRange({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n    setDate(new Date())\r\n  },[mode])\r\n\r\n  const setDateValue = () => {\r\n    if(showDate){\r\n      mode ? selectDate(dateRange) : selectDate(date)\r\n      setShowDate()\r\n    } \r\n  }\r\n\r\n  return (\r\n    <div ref={wrapperRef} style={{ width: '350px' }} className={` mt-5 position-fixed bg-white border border-soft-green rounded z-100 d-flex flex-column justify-content-center ${showDate ? null : 'd-none'}`}>\r\n      <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <div className=' border border-soft-green d-flex rounded justify-content-between w-100 cursor-pointer'>\r\n        <span onClick={() => setMode(!mode)} className={` ${singleDate} w-50  ${mode ? 'rounded-left' : 'rounded'} text-center p-2`}>Single Date</span>\r\n        <span onClick={() => setMode(!mode)} className={` ${multipleDate} w-50 ${!mode ? 'rounded-right' : 'rounded'} text-center p-2`}>Ranged Date</span>\r\n        </div>\r\n      </div>\r\n    <DateRangePicker\r\n      className={mode ? null : 'd-none'}\r\n      ranges={[dateRange]}\r\n      onChange={newdate => setDates({newdate,dateRange,setDateRange})}\r\n      />\r\n    <Calendar\r\n    className={mode ? 'd-none' : null}\r\n      date={date}\r\n      onChange = {dt => setDate(dt)}\r\n    />\r\n    <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <span onClick={() => setDateValue()} className={` bg-green text-white w-100 border border-soft-green rounded text-center p-2`}>Confirm</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SKUDatePicker","export const setDates = ({newdate, dateRange,setDateRange}) => {\r\n    let dt = {...dateRange}\r\n    dt.startDate = newdate.selection.startDate\r\n    dt.endDate = newdate.selection.endDate\r\n    setDateRange(dt)\r\n  }","import React,{useState,useEffect} from 'react'\r\nimport { sortByInboundDate, filterByDate, dateDMY } from 'services'\r\nimport DatePicker from 'Component/DatePickerNew'\r\nimport asc from 'assets/icons/asc.svg'\r\nimport desc from 'assets/icons/desc.svg'\r\n\r\nconst Sort = ({ moduleEntry, moduleName, activeSku, dispatch }) => {\r\n    const [sortBy, setSortBy] = useState()\r\n    const [date, setDate] = useState()\r\n    const [showDate, setShowDate] = useState()\r\n    const [resetFilter, setResetFilter] = useState()\r\n    let dateShow;\r\n    const dimention = document.documentElement.clientWidth\r\n    dateShow = dateDMY({date,datePicker:true})\r\n    if(dateShow?.startDate) dateShow = `${dateShow.startDate} - ${dateShow.endDate}`\r\n    else dateShow = dateShow\r\n\r\n    useEffect(() => {\r\n        sortByInboundDate({ moduleEntry, moduleName, activeSku, dispatch, sortBy })\r\n    }, [sortBy])\r\n\r\n    useEffect(_ => {\r\n        if(!showDate)filterByDate({ moduleEntry, moduleName, activeSku, dispatch, date })\r\n    }, [date,showDate])\r\n\r\n    useEffect(_ => {\r\n        setSortBy()\r\n        setDate()\r\n    }, [resetFilter])\r\n    return(\r\n        <div className='w-25 d-flex justify-content-end'>\r\n            {/* <div className='iconU-modalClose red border-soft-green border emptyTextField rounded px-2 pt-2 mr-3 cursor-pointer' onClick={() => setResetFilter(d => !d)} /> */}\r\n            <div style={{height:40}} className={`${moduleName === 'repack' ? 'd-none' : null} border-soft-green border-top border-bottom border-left m-0 rounded-left green h6 d-flex align-items-center justify-content-center px-2 text-nowrap ${dimention > 500  ? (date ? null : 'd-none') : 'd-none'}`}>{dateShow}</div>\r\n            <div style={{height:40, minWidth:40}} \r\n                className={`${date ? 'iconU-modalClose red' : 'iconU-filterDate emptyTextField'} border-soft-green border ${date ? 'rounded-right' : 'rounded'} ${moduleName === 'repack' ? 'd-none' : null} d-flex align-items-center justify-content-center mr-3 cursor-pointer`} \r\n                onClick={() => date ? setResetFilter(d => !d) : setShowDate(d => !d)}/>\r\n            <DatePicker showDate={showDate} selectDate={(date) => setDate(date)} setShowDate={(d) => setShowDate(d)} />\r\n            <img style={{height:40, minWidth:40}} src={sortBy ? desc : asc} onClick={() => setSortBy(!sortBy)} className='p-2 border rounded border-soft-green cursor-pointer' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sort","module.exports = __webpack_public_path__ + \"static/media/asc.9b60817e.svg\";","module.exports = __webpack_public_path__ + \"static/media/desc.bec03077.svg\";"],"sourceRoot":""}