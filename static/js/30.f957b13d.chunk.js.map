{"version":3,"sources":["Page/StockEntry/Repacking/WeightEntry/SelectedSKUList/SelectedSKU/index.jsx","Page/StockEntry/Repacking/WeightEntry/SelectedSKUList/index.jsx","Page/StockEntry/Repacking/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry/index.jsx","Page/StockEntry/Repacking/WeightEntry/services.js","Page/StockEntry/Repacking/WeightEntry/WeightEntryList/WeightEntryCard/index.jsx","Page/StockEntry/Repacking/WeightEntry/WeightEntryList/index.jsx","Page/StockEntry/Repacking/WeightEntry/index.jsx","Component/Dropdown/index.jsx","Component/Input/index.jsx","Component/Input/Note.jsx","assets/icons/refreshIcon.svg","Component/CustomTable/index.jsx","Component/Input/Excess.jsx","Component/Input/Pack.jsx","Page/StockEntry/Repacking/services.js"],"names":["SelectedSKU","isNewItem","img","skuDescription","skuNumber","activeSku","uomValue","idx","uom","onClick","data","edited","getEditedData","isEmpty","checkisEmpty","className","onKeyDown","e","onEnter","src","alt","toUpperCase","SelectedSKUList","hideSKUList","setActiveSKU","moduleEntry","moduleName","setUpdateEntry","selectedSku","jobPost","list","length","dimention","document","documentElement","clientWidth","height","clientHeight","useState","hideContent","setHideContent","dispatch","useDispatch","thereAreRequest","useSelector","state","style","padding","content","placement","Reload","updateEntries","tabIndex","to","maxHeight","map","skuName","uomLabel","unitOfMeassures","totalQty","photo","WeightEntry","entryListIdx","wmsPoSkuInfoId","gradeList","ripeness","inputWidth","showTitle","item","onChange","onChangeDropdown","poListIdx","targetRepacks","category","showSlot","slotList","ripenessLevel","wasteSemiWaste","grade","label","targetRepackList","t","Number","parseInt","slot","unitOfMeasuress","filter","s","includes","value","toLowerCase","keyCode","Dropdown","show","gradeIsEmpty","ddType","selectedValue","selected","name","title","placeholder","options","width","packThreshold","packIsEmpty","packThresholdIsEmpty","values","pack","Input","qtyIsEmpty","qty","Note","noteIsEmpty","note","Excess","hidePercent","addRow","activeTab","js","skuUuid","itemList","poList","lastSelected","gradeSelected","push","type","CREATE_JOB_SHEET","console","log","WeightEntryCard","poItem","initialWeight","inboundQty","initialWeightUpdate","initialWeightScreenUpdate","codeGrade","isHidden","initialWeightTotal","isNaN","uomType","areaName","setActiveTab","useEffect","variant","id","setTimeout","focus","getElementById","target","clear","test","newValue","arr","split","number","commaNumber","undefined","sliceNumber","slice","qtyToCompare","qtyToCompareIsEmpty","description","originalUom","packSize","ratio","grd","multiplier","standardWeight","inputWeight","isFloat","minus","over","totalListItemWeightCount","moduleList","initialWeightOver","updateJSWeightLine","slotIsEmpty","updateJSWeightLineDropdown","Trash","deleteRow","countQty","WeightEntryList","setHideSKUList","updateEntry","useRepackingEntry","isLoading","invalidThreshold","setInvalidThreshold","setIsSuccess","confirmation","setConfirmation","discard","setDiscard","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","totalWeight","postInfo","totalPack","status","useTargetRepack","showTargetRepack","table","setSlot","useEntryDimention","heightAdj","loading","isMobile","isPlural","isPluralPack","isEdited","showTarget","targetRepackHeight","slotListFilter","hideResetOpt","paddingLeft","module","close","discardEntry","removeEntryModule","PopUpSaved","submit","totalSku","PopUpRequired","isSuccess","save","saveJobSheet","submitValidation","minHeight","overflow","dateFull","date","Date","noTime","addDay","withDay","classNamePrefix","isMulti","resetName","marginRight","noMarginBottom","CustomTable","editColumn","styles","color","textAlign","display","columns","repackEntryData","_","getPoRepack","isDisabled","isOpen","setIsOpen","isEmptyStyle","border","elem","position","getBoundingClientRect","defaultvalue","val","menuPlacement","bottom","inputId","isSearchable","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","cursor","fontWeight","theme","borderRadius","maxLength","autoComplete","isReadOnly","readOnly","exports","ReactTableFixedColumns","withFixedColumns","ReactTable","props","getColumnWidth","rows","accessor","headerText","Math","max","row","toString","headerIcon","header","listHeader","h","index","obj","Header","Cell","sortable","resizable","headerClassName","showModal","editColumnTemp","this","tableStatus","Fragment","showPagination","noDataText","minRows","getTdProps","rowInfo","column","instance","handleOriginal","original","defaultPageSize","React","Component","Pack","selectSku","a","checked","setLocalEntryData","moduleSummary","warehouseUuid","areaId","areaDestinationId","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","jsD","sI","getGradeRepacking","skuId","getPORepacking","warehouseId","addPoItem","expiryMs","inBoundyMs","expiryDate","inboundDate","isInteger","parseFloat","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","areaSource","areaDestination","areaDestinationName","sort","b","filterBySkuName","preAddSku","preAddHandler","isClear","jsR","po","qtyCount","valid","checkIsSkuRequired"],"mappings":"mTA0CeA,EAvCK,SAAC,GAWd,IAVHC,EAUE,EAVFA,UACAC,EASE,EATFA,IACAC,EAQE,EARFA,eACAC,EAOE,EAPFA,UACAC,EAME,EANFA,UACAC,EAKE,EALFA,SACAC,EAIE,EAJFA,IACAC,EAGE,EAHFA,IACAC,EAEE,EAFFA,QACAC,EACE,EADFA,KAEMC,EAASC,YAAc,CAAEF,SACzBG,EAAUC,YAAaJ,GAC7B,OACI,yBAAKK,UAAS,8EAAyEJ,EAAS,aAAe,KAAjG,YAAyGN,IAAcE,EAAM,eAAkBM,EAAU,aAAe,WAClL,yBAAKE,UAAU,qCACX,yBAAKA,UAAWd,EAAY,YAAc,SAE9C,yBAAKe,UAAW,SAAAC,GAAC,OAAIC,YAAQ,CAAED,IAAGV,MAAKE,aAAYA,QAAS,kBAAMA,KAAWM,UAAS,uFAAkFJ,EAAS,aAAe,OAC5L,yBAAKI,UAAU,mCACX,yBAAKA,UAAU,6BACX,yBAAKI,IAAKjB,EAAKkB,IAAI,YAAYL,UAAU,uCAE7C,yBAAKA,UAAU,SACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,oCAAoCZ,IAEvD,yBAAKY,UAAU,kCACX,yBAAKA,UAAU,QAAQX,GAAiBC,EACxC,yBAAKU,UAAU,kBAAkBT,EAAjC,IAA2C,wCAAUE,EAAMA,EAAIa,cAAgB,IAApC,OAAyCf,EAAW,EAAI,IAAM,Y,oCCgCtHgB,EAzDS,SAAC,GAOlB,IAAD,IANFC,EAME,EANFA,YACAC,EAKE,EALFA,aACAnB,EAIE,EAJFA,UACAoB,EAGE,EAHFA,YACAC,EAEE,EAFFA,WACAC,EACE,EADFA,eAEMC,EAAcH,EAAYI,QAAQC,KAAKC,OACvCC,EAAYC,SAASC,gBAAgBC,YACvCC,EAASH,SAASC,gBAAgBG,aACtCD,GAAkB,IAJhB,MAKoCE,oBAAS,GAL7C,mBAKKC,EALL,KAKkBC,EALlB,KAMIC,EAAWC,cACXC,EAAkBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,mBAEnD,OACI,yBAAK5B,UAAS,UAAKQ,EAAc,MAAQ,OAA3B,yCACV,yBAAKuB,MAAO,CAAEC,QAAS,IAAMhC,UAAU,0IAA0IN,QAAS,kBAAMuB,GAAa,IAAMQ,GAAgBD,GAAe,OAC9O,yBAAKxB,UAAU,YAAf,iBAAwC,0BAAMA,UAAU,cAAhB,WAAkCa,EAAlC,eAAoDA,EAAc,EAAI,IAAM,GAA5E,OACxC,yBAAKb,UAAU,qDACX,kBAAC,IAAD,CAAUiC,QAAO,6BAAgCC,UAAWjB,GAAa,IAAM,OAAS,SACpF,6BACI,yBAAKjB,UAAS,UAAK4B,EAAkB,GAAI,gBAA3B,iBAAmExB,IAAK+B,IAAQzC,QAAS,kBAAM0C,YAAc,CAAE1B,cAAaC,aAAYe,WAAUd,wBAGxK,kBAAC,IAAD,CAAMyB,SAAS,IAAIrC,UAAU,WAAWsC,GAAG,sDACvC,yBAAKtC,UAAU,oDAEnB,kBAAC,IAAD,CAAMqC,SAAS,IAAIrC,UAAU,WAAWsC,GAAG,mDACvC,yBAAKtC,UAAU,6DAK3B,yBAAK+B,MAAO,CAAEV,SAAQJ,GAAa,MAAcI,EAAQkB,UAAWlB,GAAUrB,UAAS,iGAA4FwB,EAAc,SAAW,OAA5M,OAEQd,QAFR,IAEQA,GAFR,UAEQA,EAAaI,eAFrB,iBAEQ,EAAsBC,YAF9B,aAEQ,EAA4ByB,KAAI,SAAC7C,EAAMH,GAAP,OAC5B,kBAAC,EAAD,CACIN,UAAS,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAMT,UACjBS,KAAMA,EACNH,IAAKA,EACLF,UAAWA,EACXF,eAAc,OAAEO,QAAF,IAAEA,OAAF,EAAEA,EAAM8C,QACtBpD,UAAS,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAAMN,UACjBqD,SAAQ,OAAE/C,QAAF,IAAEA,OAAF,EAAEA,EAAMgD,gBAChBpD,SAAQ,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAMiD,SAChBnD,IAAG,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAMgD,gBACXxD,IAAG,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAMkD,MACXnD,QAAS,kBAAMe,EAAajB,Y,gFC8GzCsD,EA7JK,SAAC,GAgBd,IAAD,gBAfFC,EAeE,EAfFA,aACAC,EAcE,EAdFA,eACAC,EAaE,EAbFA,UACAC,EAYE,EAZFA,SACAC,EAWE,EAXFA,WACAC,EAUE,EAVFA,UACAC,EASE,EATFA,KACAC,EAQE,EARFA,SACAC,EAOE,EAPFA,iBACA9D,EAME,EANFA,IACA+D,EAKE,EALFA,UAGAC,GAEE,EAJFC,SAIE,EAHFC,SAGE,EAFFF,eACAtD,EACE,EADFA,QAGMyD,GADgB/B,aAAY,SAAAC,GAAK,OAAIA,EAAM+B,iBAChChC,aAAY,SAAAC,GAAK,OAAIA,EAAM8B,aACtCE,EAAwC,WAAnB,OAAJT,QAAI,IAAJA,GAAA,UAAAA,EAAMU,aAAN,eAAaC,QAA4C,gBAAnB,OAAJX,QAAI,IAAJA,GAAA,UAAAA,EAAMU,aAAN,eAAaC,OAEhEC,EAAgB,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAejB,KAAI,SAAA0B,GAAC,OAAIC,OAAOC,SAASF,EAAEG,SAG7DC,GAFgB,OAAGV,QAAH,IAAGA,KAAUW,QAAO,SAAAC,GAAC,cAAIP,QAAJ,IAAIA,OAAJ,EAAIA,EAAkBQ,SAASN,OAAOC,SAASI,EAAEE,WAE7C,WAAnB,OAAJrB,QAAI,IAAJA,GAAA,UAAAA,EAAMU,aAAN,eAAaC,QAA4C,gBAAnB,OAAJX,QAAI,IAAJA,GAAA,UAAAA,EAAMU,aAAN,eAAaC,OAAyBvE,EAA2C,UAAhC,OAAJ4D,QAAI,IAAJA,GAAA,UAAAA,EAAMU,aAAN,mBAAatE,WAAb,eAAkBkF,eAA2B,KAA7C,OAAoDtB,QAApD,IAAoDA,GAApD,UAAoDA,EAAMU,aAA1D,aAAoD,EAAatE,KACxK,OACI,yBAAKO,UAAU,oBAAoBC,UAAW,SAAAC,GAAC,OAAkB,KAAdA,EAAE0E,SAAiBzE,MAgBlE,kBAAC0E,EAAA,EAAD,CACIC,MAAM,EACNhF,QAASuD,EAAK0B,aACdC,OAAQ,QACRxB,UAAWA,EACXyB,cAAa,OAAE5B,QAAF,IAAEA,OAAF,EAAEA,EAAMU,MACrBhB,aAAcA,EACdC,eAAgBA,EAChBvD,IAAKA,EACL8D,iBAAkB,SAAC2B,GAAD,OAAc3B,EAAiB,CAAE2B,WAAUC,KAAM,WACnEC,MAAM,QACNC,YAAY,eACZC,QAASrC,EACTsC,MAAM,OACNnC,UAAWA,EACXpD,UAAW,OACf,kBAAC,IAAD,CACIwF,cAAenC,EAAKmC,cACpBxF,UAAW8D,EAAiB,SAAW,KACvChE,QAASuD,EAAKoC,aAAepC,EAAKqC,qBAClC3C,aAAcA,EACdS,UAAWA,EACXR,eAAgBA,EAChBvD,IAAK,OACL0D,WAAYA,EACZwC,OAAM,OAAEtC,QAAF,IAAEA,OAAF,EAAEA,EAAMuC,KACdxC,UAAWA,EACXgC,MAAO,aACP9B,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MAC9B,kBAAC2F,EAAA,EAAD,CACI/F,QAASuD,EAAKyC,WACd/C,aAAcA,EACdC,eAAgBA,EAChBvD,IAAK6E,EACLpB,SAAUA,EACVC,WAAYA,EACZwC,OAAM,OAAEtC,QAAF,IAAEA,OAAF,EAAEA,EAAM0C,IACd3C,UAAWA,EACXgC,MAAO,iBACP9B,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MAC9B,kBAAC,IAAD,CACIJ,QAASuD,EAAKyC,WACdtC,UAAWA,EACXT,aAAcA,EACdC,eAAgBA,EAChBvD,IAAK6E,EACLnB,WAAYA,EACZwC,OAAM,OAAEtC,QAAF,IAAEA,OAAF,EAAEA,EAAM0C,IACdX,MAAO,eACPhC,UAAWA,EACXE,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MAgC9B,kBAAC8F,EAAA,EAAD,CACIlG,QAASuD,EAAK4C,YACdlC,MAAK,UAAEV,EAAKU,aAAP,aAAE,EAAYC,MACnBR,UAAWA,EACXT,aAAcA,EACdC,eAAgBA,EAChBE,SAAUA,EACVC,WAAY,OACZwC,OAAM,OAAEtC,QAAF,IAAEA,OAAF,EAAEA,EAAM6C,KACd9C,UAAWA,EACXgC,MAAO,OACP9B,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MAE9B,kBAACiG,EAAA,EAAD,CACIC,aAAa,EACbpG,UAAW8D,EAAiB,SAAW,KACvC0B,eAAmB,OAAJnC,QAAI,IAAJA,OAAA,EAAAA,EAAM0C,MAAN,OAAY1C,QAAZ,IAAYA,OAAZ,EAAYA,EAAMuC,MACjC9F,SAAS,EACTqD,WAAYA,EACZC,UAAWA,EACXgC,MAAO,iBAEX,kBAACe,EAAA,EAAD,CACInG,UAAW8D,EAAiB,SAAW,KACvC0B,cAAenC,EAAKmC,cACpB1F,QAASuD,EAAKqC,qBACdvC,WAAYA,EACZC,UAAWA,EACXgC,MAAO,a,yBC9JViB,EAAS,SAAC,GAOhB,IANH3E,EAME,EANFA,SACAhB,EAKE,EALFA,YACAC,EAIE,EAJFA,WACArB,EAGE,EAHFA,UACAkE,EAEE,EAFFA,UACA8C,EACE,EADFA,UAEA,IAAK,IAAD,EACIC,EAAE,eAAQ7F,GACRqD,EAAK,UAAGwC,EAAGzF,QAAQC,KAAKzB,GAAW2D,iBAA9B,aAAG,EAAsCsB,QAAO,SAAAR,GAAW,OAAY,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOW,SAAU6B,EAAGzF,QAAQC,KAAKzB,GAAWkH,WACnHC,EAAWF,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SACxDE,EAAeF,GAAiB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUzF,QAAS,GAC3C4F,EAAgBD,EAAeA,EAAa5C,OAAc,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAO/C,QAAS+C,EAAM,GAAK,GACtFwC,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAASI,KAAK,CACvDd,IAAK,GACLH,KAAM,GACN7B,MAAO6C,EACPvC,KAAMiC,GAA2B,IAAdA,EAAkB,CAAEtC,MAAM,QAAD,OAAUG,OAAOC,SAASkC,IAAc5B,MAAOP,OAAOC,SAASkC,IAAe,OAE9H5E,EAAS,aAAEoF,KAAMC,KAAT,UAA+BpG,EAA/B,aAAuD4F,IAEnE,MAAOrG,GACH8G,QAAQC,IAAI/G,KCoKLgH,EA5KS,SAAC,GAQlB,IAAD,MAPJ/D,EAOI,EAPJA,WACA7D,EAMI,EANJA,UACAkE,EAKI,EALJA,UACA2D,EAII,EAJJA,OACAzG,EAGI,EAHJA,YACAC,EAEI,EAFJA,WACAsC,EACI,EADJA,UAEMvB,EAAWC,cAEfyF,EAUED,EAVFC,cACAC,EASEF,EATFE,WACAC,EAQEH,EARFG,oBACAC,EAOEJ,EAPFI,0BACA9H,EAME0H,EANF1H,IACAG,EAKEuH,EALFvH,OACA8D,EAIEyD,EAJFzD,SACA8D,EAGEL,EAHFK,UACAC,EAEEN,EAFFM,SACAhE,EACE0D,EADF1D,cAGIiE,GADSC,MAAML,GACOK,MAAMJ,GAAyDH,EAA5BG,GACzDK,EAAkB,OAARnI,GAAwB,SAARA,EAAiB,SAAW,WAhBxD,GAiBO,UAAGiB,EAAYI,QAAQC,KAAKzB,GAAW2D,iBAAvC,OAAG,EAA+CsB,QAAO,SAAAR,GAAW,OAAY,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOW,SAAU8C,KAC1F9G,EAAYI,QAAQ+G,SAKCtG,mBAAS,IAvBvC,mBAuBG+E,EAvBH,KAuBcwB,EAvBd,KAyBJC,qBAAU,WACoB,IAAD,GAA3B,OAAItE,QAAJ,IAAIA,OAAJ,EAAIA,EAAezC,SACjB8G,EAAY,UAACrE,EAAc,UAAf,aAAC,EAAkBY,QAEhC,CAAC/E,IACU,UAAG6H,EAAOV,gBAAV,OAAG,EAAiBlC,QAAO,SAAA5E,GAAI,aAAIwE,OAAOC,SAAP,OAAgBzE,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAM0E,YAAtB,aAAgB,EAAYK,SAAWP,OAAOC,SAASkC,MAAc,OAAC3G,QAAD,IAACA,OAAD,EAACA,EAAM0E,SAE7H,OACE,yBAAKrE,UAAU,iBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMgI,QAAQ,QACZ,kBAAC,IAAD,CAAUhI,UAAU,UAApB,OACGyD,QADH,IACGA,OADH,EACGA,EAAejB,KAAI,SAAA7C,GAAI,OAAI,kBAAC,IAAD,CAAUD,QAAS,kBAAMoI,EAAY,OAACnI,QAAD,IAACA,OAAD,EAACA,EAAM0E,QAA5C,sBAA4D1E,QAA5D,IAA4DA,OAA5D,EAA4DA,EAAM0E,aAIpG,yBAEE4D,GAAE,mBAAc3I,EAAd,YAA2BkE,GAE7BxD,UAAS,UAAKyH,EAAW,SAAW,KAA3B,sIAA6J7H,EAAS,aAAe,OAI9L,yBAAKI,UAAU,SACb,yBAAKA,UAAU,mGACb,yBAAKA,UAAU,iFACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,uCAAf,oBAIF,yBAAKA,UAAU,kCAAf,kBACc4H,GACZ,0BAAM5H,UAAU,mBAAhB,WACOoH,EADP,mBACwB3H,QADxB,IACwBA,OADxB,EACwBA,EAAKa,eAD7B,OAC6C8G,EAAgB,EAAI,IAAM,QAM7E,yBAAKpH,UAAU,4EAAf,UACGmH,EAAOV,gBADV,aACG,EAAiBjE,KAAI,SAACa,EAAMN,GAAkB,IAAD,EAC5C,OACE,yBAAK/C,UAAS,mEAA0E,OAAbyD,QAAa,IAAbA,OAAA,EAAAA,EAAezC,UAAc,OAAJqC,QAAI,IAAJA,GAAA,UAAAA,EAAMgB,YAAN,eAAYK,QAAS4B,EAAY,SAAmB,OACtJ,yBAAKtG,UAAU,gBACb,yBAAK+B,MAAO,CAAEwD,MAAO,QAAUvF,UAAS,sEAA6E,OAAbyD,QAAa,IAAbA,OAAA,EAAAA,EAAezC,QAAS,SAAW,OAA3I,UAAuJ+B,EAAe,EAAtK,MACA,yBAAK/C,UAAU,SACb,kBAAC,EAAD,CACEwD,UAAWA,EACXrD,QAAS,WACPkG,EAAO,CACL3E,WAAUhB,cACVC,aAAYrB,YAAWkE,YAAW8C,cAEpC4B,YAAW,WACT,IAAMC,EAAQjH,SAASkH,eAAT,eAAgC5E,EAAhC,YAA6CT,EAAe,IACtEoF,GAAOA,EAAMA,UAChB,KAGLxE,YAAuB,OAAbF,QAAa,IAAbA,OAAA,EAAAA,EAAezC,QACzByC,cAAeA,EACfC,SAAUA,EACVX,aAAcA,EACdC,eAAgBK,EAAKL,eACrBI,WAAW,EACXH,UAAWA,EACXK,SAAU,SAACpD,GAAD,ODzFA,SAAC,GAQ5B,IAAD,IAPFwB,EAOE,EAPFA,SACAhB,EAME,EANFA,YACAC,EAKE,EALFA,WACArB,EAIE,EAJFA,UACAkE,EAGE,EAHFA,UACAT,EAEE,EAFFA,aACA7C,EACE,EADFA,EAEMiF,EAAI,OAAGjF,QAAH,IAAGA,GAAH,UAAGA,EAAGmI,cAAN,aAAG,EAAWlD,KACpBT,EAAK,OAAGxE,QAAH,IAAGA,GAAH,UAAGA,EAAGmI,cAAN,aAAG,EAAW3D,MACnB6B,EAAE,eAAQ7F,GAGd,GAFA6F,EAAGzF,QAAQC,KAAKzB,GAAWJ,WAAY,EAE1B,WAATiG,GAA8B,oBAATA,EAA4B,CAIjD,GADA6B,QAAQsB,SACmB,IAFf,gBAEDC,KAAK7D,IAA6B,KAAVA,EAAe,CAC9C,IAAI8D,EAAW,EACXC,EAAG,OAAG/D,QAAH,IAAGA,OAAH,EAAGA,EAAOgE,MAAM,KACnBC,EAASF,EAAI,GACbE,GAAU,IAAGA,EAASvE,SAASuE,IACnC,IAAIC,EAAcH,EAAI,GAEtB,GAAqB,OAAhBG,QAAwCC,IAAhBD,EACzB,GAAIA,EAAY5H,OAAS,EAAG,CAExB,IAAI8H,EAAcF,EAAYG,MAAM,EAAG,GACvCP,EAAQ,UAAMG,EAAN,YAAgBG,QAExBN,EAAQ,UAAMG,EAAN,YAAgBC,QAG5BJ,EAAWpE,SAASuE,GAIX,WAATxD,IACAoB,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAcgD,IAAMyC,EAC1EjC,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAc+C,YAAa,GAExE,oBAATX,IACAoB,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAciG,aAAeR,EACnFjC,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAckG,qBAAsB,OAMjF,WAAT9D,IACAoB,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAcgD,IAAM,IAEjE,oBAATZ,IACAoB,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAciG,aAAe,SAI1F,GAAa,QAAT7D,EAAgB,CAErB,IAA2B,IADf,YACDoD,KAAK7D,IAA8B,KAAVA,EAChC,OAEJ6B,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAcgD,IAAMrB,EAAQN,SAASM,GAASA,EACpG6B,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAc+C,YAAa,EAOrF,GAJa,SAATX,IACAoB,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAcmD,KAAOxB,EAC3E6B,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAckD,aAAc,GAEzE,SAATd,EAAiB,CAEjB,IAA2B,IADf,YACDoD,KAAK7D,IAA8B,KAAVA,EAChC,OAEJ6B,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAc6C,KAAOlB,EAAQ,EAAIN,SAASM,GAASA,EACzG6B,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAc0C,aAAc,EAClFc,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAc2C,sBAAuB,EAE/F,IAAIwD,EAAc3C,EAAGzF,QAAQC,KAAKzB,GAAW6J,YAxE3C,EAyEwB5C,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAApD4F,EAzEN,EAyEMA,SAAU3J,EAzEhB,EAyEgBA,IAzEhB,EA0EiC8G,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAjFgD,EA1EN,EA0EMA,IAAKhC,EA1EX,EA0EWA,MAAO6B,EA1ElB,EA0EkBA,KA1ElB,EA0EwBM,KAE1B,GAAqBzG,EAAK,CAAC,IAAD,EAElB4J,EAAK,UADC9C,EAAGzF,QAAQC,KAAKzB,GAAW2D,UAAUsB,QAAO,SAAA+E,GAAG,OAAIA,EAAI5E,SAAJ,OAAcX,QAAd,IAAcA,OAAd,EAAcA,EAAOW,UAClE,UAAP,aAAG,EAAQ6E,WAGhBC,EAA+C,SAAnB,OAAXN,QAAW,IAAXA,OAAA,EAAAA,EAAavE,eAA0ByE,EAAW,IAAOA,EAC1EK,EAAc1D,EAAMH,EACxB6D,GAA6BD,EAAiBH,EAC9CI,GAA6BD,EAAiBH,EAC9CI,GAA4B,IAExBlD,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAc2C,qBADpE+D,GAAe,IAAMA,IAAgB,GAMzClD,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAcyC,cAAgBkE,YAAQD,GAGhG,IAAMrC,EAAgBb,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAW6D,WAC/DC,EAAsBF,EAC1Bb,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAW5D,QAAS,EACtD2G,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWmG,OAAQ,EACrDpD,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAASjE,KAAI,SAAA7C,IAClDA,EAAKoG,KAAOpG,EAAKiG,QAAMW,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAW5D,QAAS,GACjF0H,GAA8CK,MAAMhI,EAAKoG,KAAkB,EAAXpG,EAAKoG,IACrEQ,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAW8D,oBAAsBA,EAC/DA,EAAsB,GACtBf,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWmG,OAAQ,EACrDpD,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAW8D,oBAAsB,GAGnEf,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAASlC,QAAO,SAAAlB,GAAU,OAAOA,EAAKyC,YAAa,QAKxG,IACIyB,EADwBhB,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAW4D,cAEzEb,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAASjE,KAAI,SAAA7C,GACtD4H,GAA0DI,MAAMhI,EAAKoG,KAAkB,EAAXpG,EAAKoG,IACjFQ,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAW+D,0BAA4BA,KAI7E,IAAMqC,EAAOC,YAAyB,CAAEC,WAAYvD,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,WACjGF,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWuG,kBAAoBH,EAAOxC,EAAgBwC,EAAO,EAE/FlI,EAAS,aAAEoF,KAAMC,KAAT,UAA+BpG,EAA/B,aAAuD4F,IC1CzCyD,CAAmB,CACjBtI,WACAhB,cACAC,aACArB,YACAkE,YACAT,eACA7C,OAGJqD,iBAAkB,gBAAG2B,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,ODmCA,SAAC,GASpC,IARHzD,EAQE,EARFA,SACAhB,EAOE,EAPFA,YACAC,EAME,EANFA,WACArB,EAKE,EALFA,UACAkE,EAIE,EAJFA,UACAT,EAGE,EAHFA,aACAmC,EAEE,EAFFA,SACAC,EACE,EADFA,KAEIoB,EAAE,eAAQ7F,GACd6F,EAAGzF,QAAQC,KAAKzB,GAAWJ,WAAY,EAC1B,UAATiG,IACAoB,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAcgB,MAAQmB,EAC5EqB,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAcgD,IAAM,GAC1EQ,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAc6C,KAAO,GAC3EW,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAc0C,YAAc,GAClFc,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAcyC,cAAgB,EACpFe,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAc2C,sBAAuB,EAC3Fa,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAActD,IAAwB,UAAV,OAARyF,QAAQ,IAARA,OAAA,EAAAA,EAAUzF,KAAiB,KAA3B,OAAkCyF,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAUzF,IACtH8G,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAW5D,QAAS,EACtD2G,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAcmD,KAAO,MAGlE,aAATf,IACAoB,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAcG,SAAWgC,EAC/EqB,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAW5D,QAAS,GAG7C,SAATuF,IACAoB,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAcsB,KAAOa,EAC3EqB,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAW5D,QAAS,GAG1D2G,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAcgC,cAAe,EACnFwB,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAckD,aAAc,EAClFM,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAc0C,aAAc,EAClFc,EAAGzF,QAAQC,KAAKzB,GAAWoH,OAAOlD,GAAWiD,SAAS1D,GAAckH,aAAc,EAClFvI,EAAS,aAAEoF,KAAMC,KAAT,UAA+BpG,EAA/B,aAAuD4F,ICxEzC2D,CAA2B,CACzBxI,WACAhB,cACAC,aACArB,YACAkE,YACAT,eACAmC,WACAC,UAGJ1F,IAAKA,EACL0D,WAAYA,EACZE,KAAMA,MAIZ,yBAAKrD,UAAU,4EACb,yBACEI,IAAK+J,IACL9J,IAAI,cACJL,UAAU,qBACVN,QAAS,SAACQ,GAAD,OACPkK,YAAU,CACR1I,WACAhB,cACAC,aACArB,YACAkE,YACAT,eACA7C,IACAmK,wBAShB,yBACEpK,UAAW,SAAAC,GAAC,OAAkB,KAAdA,EAAE0E,SAAiByB,EAAO,CAAE3E,WAAUhB,cAAaC,aAAYrB,YAAWkE,eAE1FxD,UAAS,iBAAwB,OAAbyD,QAAa,IAAbA,OAAA,EAAAA,EAAezC,QAAS,OAAS,OAA5C,6CAETtB,QAAS,kBAAM2G,EAAO,CACpB3E,WAAUhB,cACVC,aAAYrB,YAAWkE,YAAW8C,gBAGpC,uBAAGtG,UAAU,8BAVf,cAWU4H,EAXV,aAWsB8B,YAAQhC,GAAsBgC,YAAQhC,GAAsBA,EAXlF,YAWwGjI,EAAMA,EAAIa,cAAgB,IAXlI,OAWuIoH,EAAqB,EAAI,IAAM,GAXtK,e,+DCuCK4C,EArMS,SAAC,GASlB,IAAD,MA8CgB,IAtDlB7J,EAQE,EARFA,aACAD,EAOE,EAPFA,YACA+J,EAME,EANFA,eACAjL,EAKE,EALFA,UACAoB,EAIE,EAJFA,YACAC,EAGE,EAHFA,WACA6J,EAEE,EAFFA,YACA5J,EACE,EADFA,eAEMc,EAAWC,cADf,EA6Ba8I,YAAkB,CAAE/J,cAAapB,YAAWoC,aAzBvDgJ,EAJF,EAIEA,UACAC,EALF,EAKEA,iBACAC,EANF,EAMEA,oBACAC,EAPF,EAOEA,aACAC,EARF,EAQEA,aACAC,EATF,EASEA,gBACAC,EAVF,EAUEA,QACAC,EAXF,EAWEA,WACAC,EAZF,EAYEA,QACAC,EAbF,EAaEA,WACAC,EAdF,EAcEA,OACAC,EAfF,EAeEA,UACAC,EAhBF,EAgBEA,WACAC,EAjBF,EAiBEA,cACA/J,EAlBF,EAkBEA,YACAC,EAnBF,EAmBEA,eACAkB,EApBF,EAoBEA,gBACA6I,EArBF,EAqBEA,YACA5L,EAtBF,EAsBEA,OACA6L,EAvBF,EAuBEA,SACAhJ,EAxBF,EAwBEA,QACApD,EAzBF,EAyBEA,UACAqH,EA1BF,EA0BEA,OACAzD,EA3BF,EA2BEA,UACAyI,GA5BF,EA4BEA,UACAC,GA7BF,EA6BEA,OA7BF,GA+B2DC,YAAgB,CAAElL,cAAapB,YAAWoC,WAAUf,eAAzGkL,GA/BN,GA+BMA,iBAAkBC,GA/BxB,GA+BwBA,MAAOzH,GA/B/B,GA+B+BA,KAAM0H,GA/BrC,GA+BqCA,QAASnI,GA/B9C,GA+B8CA,SA/B9C,GAiCgDoI,YAAkBH,IAA5D5K,GAjCN,GAiCMA,UAAWI,GAjCjB,GAiCiBA,OAAQ4K,GAjCzB,GAiCyBA,UAAWC,GAjCpC,GAiCoCA,QAGhCC,GAAWlL,IAAa,IACxBwG,GAAWjG,EAAc,SAAW,KACpC4K,GAAWZ,EAAc,EAAI,IAAM,GACnCa,GAAeX,GAAY,EAAI,IAAM,GACrCY,GAAW1M,EAAS,WAAa,cACjC2M,GAAaV,GAAmB,KAAO,SACvCW,GAAqBL,GAAW,IAAM,IAExCM,GAAiB7I,GACjB8I,IAAe,GACnB,OAAIrI,SAAJ,IAAIA,QAAJ,EAAIA,GAAMrD,UACiB,QAAnB,UAAAqD,GAAK,UAAL,eAASK,SAAgB+H,GAAiB,KAC9C,UAAIpI,GAAK,UAAT,aAAI,EAASK,SAAOgI,IAAe,IAEvC,OAAKhG,EAAO1F,OASR,yBAAKe,MAAO,CAAE4K,YAAa1L,IAAa,IAAM,EAAI,IAAMjB,UAAU,4BAC9D,kBAAC,IAAD,CACIgL,QAASA,EACT4B,OAAQ,YACRlM,YAAaA,EACbmM,MAAO,kBAAM5B,GAAW,IACxB6B,aAAc,SAAC7E,GAAD,OAAQ8E,YAAkB,CAAE9E,KAAItH,aAAYe,gBAE9D,kBAACsL,EAAA,EAAD,CACIxC,YAAaA,EACb5J,eAAgBA,EAChB+K,OAAQA,GACRjL,YAAaA,EACbuM,OAAQ,wBAAMvL,GAAQ,GAAGoF,KAAM,oBAAT,wBAAiCnG,EAAjC,aAAyD,MAAzD,wBAAmEA,EAAnE,eAA6F,MAA7F,KACtBmK,aAAcA,EACdC,gBAAiBA,EACjBG,QAASA,EACTE,OAAQA,EACRD,WAAYA,EACZxK,WAAYA,EACZuM,SAAQ,OAAExM,QAAF,IAAEA,GAAF,UAAEA,EAAaI,eAAf,aAAE,EAAsBC,KAAKC,SAGzC,kBAACmM,EAAA,EAAD,CACI7B,WAAYA,EACZsB,OAAQlM,EACRiK,iBAAkBA,EAClBY,cAAeA,EACfX,oBAAqBA,EACrBjK,WAAYA,EACZuM,SAAQ,OAAExM,QAAF,IAAEA,GAAF,UAAEA,EAAaI,eAAf,aAAE,EAAsBC,KAAKC,OACrCiM,OAAQ,kBAAMlC,EAAgB,CAAEjG,MAAM,EAAMK,KAAM,cAEtD,kBAAC,IAAD,CACIxE,WAAYA,EACZ+J,UAAWA,EACXhK,YAAaA,EACboK,aAAcA,EACdC,gBAAiBA,EACjBqC,UAAW3B,EACXJ,UAAWA,EACXD,OAAQA,EACRiC,KAAM,kBAAMC,YAAa,CAAEnI,KAAM,OAAQzE,cAAaC,aAAYe,WAAUmJ,eAAciB,YAC1FmB,OAAQ,kBAAMK,YAAa,CAAEnI,KAAM,SAAUzE,cAAaC,aAAYe,WAAUmJ,eAAciB,SAAOyB,qBAAkB9M,oBAE3H,yBAAKT,UAAU,8BACX,yBAAKA,UAAS,kIAA6HuM,IAAcxK,MAAO,CAAEQ,UAAW,cAAeiL,UAAWhB,GAAoBiB,SAAU,WACjO,yBAAKzN,UAAS,mEACV,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,iBAAf,yBACA,yBAAKA,UAAU,iEACf,yBAAKA,UAAU,uBAAuB0N,YAAS,CAAEC,KAAM,IAAIC,KAAQC,QAAQ,EAAMC,QAAQ,EAAMC,SAAS,MAE5G,kBAAClJ,EAAA,EAAD,CACI6H,aAAcA,GACd1M,UAAU,qBACVgO,gBAAgB,SAChBC,SAAS,EAAMC,UAAU,WACzB5I,QAASmH,GACTxH,cAAeZ,GACfd,iBAAkB,SAAC2B,GAAD,OAAc6G,GAAQ7G,IACxCJ,MAAM,EACNS,MAAO4G,GAAW,QAAU,UAC5B9G,YAAY,OACZD,MAAO,OACPrD,MAAO,CAAEoM,YAAa,GACtBC,gBAAgB,KAExB,kBAACC,EAAA,EAAD,CACIC,WAAY,QACZtO,UAAS,UAAKmM,GAAW,uBAAyB,gBAAzC,KACToC,OAAQ,CAAEC,MAAO,MAAOC,UAAW,QAASlJ,MAAO,OAAQmJ,SAAS7C,IAA2B,QAC/FlM,KAAI,OAAEmM,SAAF,IAAEA,QAAF,EAAEA,GAAOnM,KACbgP,QAAO,OAAE7C,SAAF,IAAEA,QAAF,EAAEA,GAAO6C,WAExB,4BAAK5M,MAAO,CAAEV,YAAd,sBAA+B,CAAEW,QAAS,KAA1C,8JACI,yBAAKhC,UAAU,uBAAuBN,QAAS,kBAAMyM,GAAW1K,GAAgBD,GAAe,OAC3F,yBAAKxB,UAAS,UAAKQ,EAAc,yBAA2B,wBAA9C,sCAA2Gd,QAAS,kBAAM6K,GAAgB/J,MACxJ,yBAAKR,UAAU,6DAAf,gBACA,yBAAKA,UAAU,yDACf,yBAAKA,UAAU,sDAAf,UAAwEyC,EAAxE,aAAoFpD,EAApF,QAIR,yBAAK0C,MAAO,CAAEV,OAAQ8K,GAAW9K,GAAU4K,GAAY,GAAKuB,UAAWrB,GAAW9K,GAAU4K,GAAY,IAAOjM,UAAS,mGAA8FyH,KAAtN,OAEQf,QAFR,IAEQA,OAFR,EAEQA,EAAQlE,KAAI,SAAC2E,EAAQ3H,GACjB,OAAO,kBAAC,EAAD,CACHyD,UAAWA,EACXE,WAAW,cACX7D,UAAWA,EACXkE,UAAWhE,EACX2H,OAAQA,EACRzG,YAAaA,EACbC,WAAYA,QAM5B,yBAAKX,UAAU,+GAcX,yBAAKA,UAAU,6BACX,2CAAgB,0BAAMA,UAAU,mBAAhB,UAAsC0L,GAAtC,IAAmD,QAAnD,OAA4DW,MAC5E,yBAAKrM,UAAU,8BAA8B+B,MAAO,CAAEwD,MAAO,EAAGlE,OAAQ,KACxE,6CAAkB,0BAAMrB,UAAU,cAAhB,UAAiCwL,EAAjC,mBAAgD7I,QAAhD,IAAgDA,OAAhD,EAAgDA,EAAiBrC,eAAjE,OAAiF8L,SAI/G,yBAAKpM,UAAU,sDACX,yBAAKqC,SAAS,IAAI3C,QAAS,kBAAMuL,GAAW,IAAOjL,UAAU,mDAAkD,uBAAGA,UAAU,qBAA5H,YACA,4BAAQqC,SAAS,IAAI3C,QAAS,kBAAME,EAAS2N,YAAiB,CAAE9M,eAAcC,cAAaC,aAAYe,WAAUqJ,kBAAiBQ,gBAAeX,wBAAyB,MAAM5K,UAAS,4CAAuCsM,GAAvC,uBAAsEvK,MAAO,CAAEV,OAAQ,2BAAhR,YAnIR,yBAAKU,MAAO,CAAE4K,YAAaR,GAAW,EAAI,IAAMnM,UAAU,sIACtD,yBAAKA,UAAU,gGAAgG+B,MAAO,CAAEyL,UAAWvB,GAAW1J,UAAW0J,KACrJ,yBAAKjM,UAAU,UAAUI,IAAK8L,GAAS7L,IAAI,eCzB5CyC,UA5CK,WAChB,IAAM8L,EAAkB/M,aAAY,SAAAC,GAAK,OAAIA,EAAM8M,mBAC7ClN,EAAWC,cAFK,EAGgBJ,oBAAS,GAHzB,mBAGff,EAHe,KAGF+J,EAHE,OAIYhJ,mBAAS,GAJrB,mBAIfjC,EAJe,KAIJmB,EAJI,OAKgBc,qBALhB,mBAKfiJ,EALe,KAKF5J,EALE,KAMlBS,EAASH,SAASC,gBAAgBG,aAClCF,EAAcF,SAASC,gBAAgBC,YACvC6K,EAAY5K,EAAS,IAQzB,OALA0G,qBAAU,SAAA8G,IACa,OAAfD,QAAe,IAAfA,OAAA,EAAAA,EAAiB9N,QAAQC,KAAKC,QAAS,GAAG8N,YAAY,CAAEpN,WAAUf,WAHvD,SAGmED,YAAakO,EAAiBtP,gBACjH,CAACA,IAGCsP,GAA4D,KAA1B,OAAfA,QAAe,IAAfA,OAAA,EAAAA,EAAiB9N,QAAQC,KAAKC,QAKlD,yBAAKe,MAAO,CAAEV,OAAQD,GAAe,IAAMC,EAAS4K,GAAajM,UAAU,wDACvE,kBAAC,EAAD,CACIQ,YAAaA,EACblB,UAAWA,EACXmB,aAAcA,EACdE,WAjBO,SAkBPD,YAAakO,EACbhO,eAAgBA,IAEpB,kBAAC,EAAD,CACIH,aAAcA,EACd8J,eAAgBA,EAChB/J,YAAaA,EACbG,WAzBO,SA0BPD,YAAakO,EACbtP,UAAWA,EACXsB,eAAgBA,EAChB4J,YAAaA,KApBjB,yBAAKxK,UAAU,+EAA8E,kBAAC,IAAD,CAAUsC,GAAG,8BAAb,mC,uFCkF1FuC,IAxGE,SAAC,GAmBX,IAAD,IAlBF/E,EAkBE,EAlBFA,QACAsF,EAiBE,EAjBFA,MACAC,EAgBE,EAhBFA,YACAC,EAeE,EAfFA,QACAL,EAcE,EAdFA,cACA7B,EAaE,EAbFA,UACAmC,EAYE,EAZFA,MACAvF,EAWE,EAXFA,UACA+C,EAUE,EAVFA,aACAQ,EASE,EATFA,iBACAuB,EAQE,EARFA,KACAtB,EAOE,EAPFA,UACAuL,EAME,EANFA,WACAhN,EAKE,EALFA,MACAqM,EAIE,EAJFA,eACAF,EAGE,EAHFA,UACAD,EAEE,EAFFA,QACAvB,EACE,EADFA,aACE,EAK0BnL,qBAL1B,mBAKKyN,EALL,KAKaC,EALb,KAMFlH,qBAAU,WACgB,UAAlB9C,GAA2BgK,GAAU,KAC1C,CAAChK,EAAenF,IACnB,IAAMoP,IAAepP,GAAU,SAAEyO,GAC7B,OAAO,2BACAA,GADP,IAEIY,OAAQ,oBACR,SAAU,CAAEA,OAAQ,gCACpB,UAAW,CAAEA,OAAQ,mCAKvBC,EAAI,UAAGlO,gBAAH,aAAG,EAAUkH,eAAV,kBAAoCrF,GAApC,OAAmDS,IAC5D6L,EAAQ,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAME,wBAErBvH,qBAAU,WACNsH,EAAQ,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAME,0BAClB,CAACN,IAEJ,IAAM/N,EAAYC,SAASC,gBAAgBC,YACvCmO,EAAe,CAAC,CAAEvL,MAAM,IAAD,OAAMkK,GAAwB9I,EAA9B,KAAwCV,MAAO,OACtEY,IAASiK,EAAY,sBAAOA,GAAP,YAAwBjK,KAC7CoH,IAAc6C,EAAeA,EAAahL,QAAO,SAAAiL,GAAG,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAK9K,UACjE,IACsB,EADlB+K,GAAwB,QAAR,EAAAJ,SAAA,eAAUK,QAAS,IAAM,MAAQ,SACjDzO,GAAa,MACbwO,GAAwB,QAAR,EAAAJ,SAAA,eAAUK,QAAS,IAAM,MAAQ,SACnC,eAAVtK,IAAwBqK,EAAgB,QAEhD,OACI,yBAAK1N,MAAOA,EAAO/B,UAAS,eAAU+B,EAAQ,KAAO,UAAzB,YAAsCqM,EAAiB,KAAO,OAA9D,YAAwE7I,EAAxE,YAAiFvF,EAAjF,YAA8F8E,EAAO,KAAO,WACpI,yBAAK9E,UAAS,yBAAoBoD,EAAY,KAAO,WAAagC,GAClE,kBAAC,IAAD,CACIuK,QAAO,UAAKvK,EAAL,YAAc5B,EAAd,YAA2BT,GAClCkL,QAASA,EACT2B,eAAc3O,EAAY,KAC1B8N,WAAYA,IAA0B,EACtC9G,GAAE,kBAAalF,GAAb,OAA4BS,GAC9BkB,QAAoB,OAAbO,QAAa,IAAbA,OAAA,EAAAA,EAAeP,WAAsC,OAAbO,QAAa,IAAbA,OAAA,EAAAA,EAAejE,UAAhCiE,EAC9B4K,WAAYb,EACZc,YAAU,EACVzK,YAAa6I,GAAwB7I,EACrCC,QAASiK,EACTQ,WAAY,kBAAMd,GAAU,IAC5Be,YAAa,kBAAMf,GAAU,IAC7B3L,SAlDY,SAAC4B,GACrB3B,EAAiB2B,GACjB+J,GAAU,IAiDFgB,iBAAkB/O,SAASgP,KAC3BC,cAAe,IACfV,cAAa,UAAKA,GAElBlB,OAAQ,CACJuB,WAAY,SAAAM,GAAI,kCAAUA,GAAV,IAAgBC,OAAQ,QACxCC,QAASpB,EACTqB,OAAQ,SAAChC,EAAD,GAC2B,IAA7BiC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACb,OAAO,2BACAlC,GADP,IAEImC,gBAAiBD,EAAa,wBAA0BD,EAAY,qBAAuB,KAC3FhC,MAAOiC,EAAa,QAAU,UAC9BE,OAAQ,UACRC,WAAYH,EAAa,OAAS,KAClC,UAAW,CACPC,gBAAiB,gCACjBlC,MAAO,WAEX,SAAU,CACNA,MAAQiC,EAAyB,KAAZ,eAKrCI,MAAO,SAACA,GAAD,mBAAC,eACDA,GADA,IAEHC,aAAc,U,iCCrGlC,oBA8BejL,IA7BD,SAAC,GAaR,IAZH/F,EAYE,EAZFA,QACAiD,EAWE,EAXFA,aACAS,EAUE,EAVFA,UAEA/D,GAQE,EATFuD,eASE,EARFvD,KACA0D,EAOE,EAPFA,WACAwC,EAME,EANFA,OACArC,EAKE,EALFA,SACAF,EAIE,EAJFA,UAEAgC,GAEE,EAHFrB,MAGE,EAFFqB,OACAD,EACE,EADFA,KAEML,EAAe,SAARrF,GAA0B,OAARA,EAI/B,OACI,yBAAKO,UAAS,WAAMmD,EAAN,sBAA8B2B,EAAO,KAAO,WACtD,yBAAK9E,UAAS,yBAAoBoD,EAAY,KAAO,WAAagC,GAClE,yBAAKpF,UAAS,UAAKF,EAAU,aAAe,SAA9B,+FACV,2BAAOmI,GAAE,cAASzE,EAAT,YAAsBT,GAAgBgO,UAAU,KAAKC,aAAa,MAAMlK,KAAK,OAAO9G,UAAU,oBAAoB0E,MAAOiB,EAAQR,KAAMA,GAAc,MAAO7B,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MAC/L,yBAAKF,UAAU,kBAAkBP,EAAMA,EAAIa,cAAgB,Q,iCCxB3E,oBA0Be0F,IAzBF,SAAC,GAaP,IAZHlG,EAYE,EAZFA,QACAiD,EAWE,EAXFA,aAEAtD,GASE,EAVFuD,eAUE,EATFvD,KACA0D,EAQE,EARFA,WACAwC,EAOE,EAPFA,OACArC,EAME,EANFA,SACAF,EAKE,EALFA,UACAW,EAIE,EAJFA,MACAqB,EAGE,EAHFA,MACA6L,EAEE,EAFFA,WACAzN,EACE,EADFA,UAEA,OACI,yBAAKxD,UAAS,WAAMmD,EAAN,sBAAwC,UAAVY,EAAoB,KAAO,WACnE,yBAAK/D,UAAS,yBAAoBoD,EAAY,KAAO,WAAagC,GAClE,yBAAKpF,UAAS,UAAKF,EAAU,aAAe,SAA9B,sGACV,2BAAOmI,GAAE,eAAUzE,EAAV,YAAuBT,GAAgBmO,SAAUD,EAAYD,aAAa,MAAMhR,UAAU,oBAAoB0E,MAAOiB,EAAQR,KAAK,OAAO7B,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MAC5K,yBAAKF,UAAU,kBAAkBP,EAAMA,EAAIa,cAAgB,Q,oBCpB3EsM,EAAOuE,QAAU,IAA0B,yC,6ICOrCC,G,OAAyBC,IAAiBC,MAE1CjD,E,kDACF,WAAYkD,GAAQ,IAAD,8BACf,cAAMA,IAQVC,eAAiB,SAACC,EAAMC,EAAUC,GAU9B,OAAoB,GATDC,KAAKC,IAAL,MAAAD,KAAI,YAChBH,EAAKjP,KAAI,SAAAsP,GACR,IAAIpN,EAAQ,GAEZ,MAAqB,kBADrBA,EAAQgN,EAASI,IACqBpN,EAAMqN,WAAW/Q,QAC/C0D,GAAS,IAAI1D,WALN,QAOnB2Q,EAAW3Q,WAjBA,EAsBnBgR,WAAa,SAACrS,EAAMsS,EAAQ3D,GACxB,IAAI4D,EAAa,GAwBjB,GAvBAD,GAAUA,EAAOzP,KAAI,SAAC2P,EAAGC,GACrB,GAAK9D,EAAW8D,GAkBZ,OAAOF,EAAU,YAAOA,GAjBxB,IAIIG,EAAM,CACNC,OALY,8BACXH,EAAEG,OADS,IACD,uBAAGtS,UAAU,cAAb,MAKXuS,KAAMJ,EAAEI,KACRb,SAAUS,EAAET,SACZc,UAAyB,IAAfL,EAAEK,SACZC,UAAWN,EAAEM,YAAa,EAC1BzS,UAAWmS,EAAEnS,WAAa,KAC1B0S,gBAAiBP,EAAEO,iBAAmB,KACtC3Q,MAAOoQ,EAAEpQ,OAAS,KAClBwD,MAAO4M,EAAE5M,OAAS,MAEtB,OAAO2M,EAAU,sBAAOA,GAAP,CAAmBG,OAMd,UAA1B,EAAKd,MAAMjD,WAAwB,CACnC,IAGI+D,EAAM,CACNC,OAHA,uBAAGtS,UAAU,gCAIb0R,SAAU,UACVnM,MAAO,GACPxD,MAAO,CAAE0M,UAAW,WAExByD,EAAU,sBAAOA,GAAP,CAAmBG,IAGjC,OAAOH,GA1DP,EAAKpQ,MAAQ,CACT6Q,WAAW,EACXrM,UAAW,IACXsM,eAAgB,IALL,E,qDA+DT,IACEA,EAAmBC,KAAK/Q,MAAxB8Q,eADH,EAE4DC,KAAKtB,MAAhE5C,EAFD,EAECA,QAAShP,EAFV,EAEUA,KAAMD,EAFhB,EAEgBA,QAAS6O,EAFzB,EAEyBA,OAAQuE,EAFjC,EAEiCA,YAAa9S,EAF9C,EAE8CA,UAC/CgS,EAAaa,KAAKb,WAAWrS,EAAMgP,EAASiE,GAChD,OAEI,kBAAC,IAAMG,SAAP,KACI,kBAAC3B,EAAD,CACIpR,UAAWA,EACX2O,QAASqD,EACTrS,KAAMA,EACNqT,gBAAgB,EAChBjR,MAAOwM,EACP0E,WAA2B,UAAfH,EAA0B,cAAgB,iBACtDI,QAAQ,IACRT,WAAW,EACXU,WAAY,SAACrR,EAAOsR,EAASC,EAAQC,GACjC,MAAO,CACH5T,QAAS,SAACQ,EAAGqT,GACP7T,GACEA,EAAQ0T,EAAQI,SAAU1R,EAAOuR,EAAQnT,EAAGoT,IAEpDvR,MAAO,CACHV,OAAQ,OACRsP,SAAUjR,GAAW,UACrB+O,UAAW9G,MAAK,OAACyL,QAAD,IAACA,OAAD,EAACA,EAASI,SAASH,EAAOpL,KACpC,OACA,WAIlBwL,gBAAiB,U,GA/FXC,IAAMC,WAuGjBtF,O,uDChHf,6BAkCeuF,IAhCF,SAAC,GAeP,IAdH9T,EAcE,EAdFA,QAGAL,GAWE,EAbFsD,aAaE,EAZFC,eAYE,EAXFvD,KACA0D,EAUE,EAVFA,WAGAC,GAOE,EATFuC,OASE,EARFrC,SAQE,EAPFF,WAGAgC,GAIE,EANFC,YAME,EALFtB,MAKE,EAJFqB,OACApF,EAGE,EAHFA,UACAwF,EAEE,EAFFA,cACAY,EACE,EADFA,YAEMtB,EAAe,SAARrF,GAA0B,OAARA,EAC/B,OACI,yBAAKO,UAAS,UAAKmD,EAAL,sBAA6BnD,EAA7B,YAA0C8E,EAAO,KAAO,WAClE,yBAAK9E,UAAS,qCAAgCoD,EAAY,KAAO,WAAagC,GAC9E,yBAAKpF,UAAS,WAAMF,EAAU,iBAAmB,kBAAnC,4DACV,yBAAKE,UAAS,mBAAcmD,EAAd,YAA4BrD,EAAU,MAAQ,UAA5D,UAA2E0F,IAAkBmC,MAAMvD,SAASoB,IAAjC,UAAsDkE,YAAQlE,IAA9D,OAA+EY,EAAc,GAAK,KAASA,EAAc,IAAM,OAC1M,0BAAMpG,UAAS,UAAKF,EAAU,cAAgB,WAC1C,0BAAMiC,MAAO,CAAE6O,WAAY,MAA3B,mBACA,6BACA,6FAA+DpL,EAA/D,W,iCC3BpB,oBA6BeoO,IA5BF,SAAC,GAeP,IAdH9T,EAcE,EAdFA,QACAiD,EAaE,EAbFA,aACAS,EAYE,EAZFA,UAEA/D,GAUE,EAXFuD,eAWE,EAVFvD,KACA0D,EASE,EATFA,WACAwC,EAQE,EARFA,OACArC,EAOE,EAPFA,SACAF,EAME,EANFA,UACAiC,EAKE,EALFA,YAEAD,GAGE,EAJFrB,MAIE,EAHFqB,OACApF,EAEE,EAFFA,UAGM8E,GADJ,EADFU,cAEqB,SAAR/F,GAA0B,OAARA,GAC/B,OACI,yBAAKO,UAAS,WAAMmD,EAAN,sBAA8BnD,EAA9B,YAA2C8E,EAAO,KAAO,WACnE,yBAAK9E,UAAS,yBAAoBoD,EAAY,KAAO,WAAagC,GAClE,yBAAKpF,UAAS,UAAKF,EAAU,aAAe,SAA9B,+FACV,2BAAOmI,GAAE,eAAUzE,EAAV,YAAuBT,GAAgBgO,UAAU,KAAKC,aAAa,MAAMlK,KAAK,OAAO9G,UAAU,oBAAoB0E,MAAOiB,EAAQR,KAAK,OAAOE,YAAaA,EAAa/B,SAAU,SAACpD,GAAD,OAAOoD,EAASpD,MAC3M,yBAAKF,UAAU,kBAAkBP,O,wOCfpCoU,EAAS,uCAAG,gDAAAC,EAAA,iBAAAA,EAAA,6DACrBtU,EADqB,EACrBA,IACAuU,EAFqB,EAErBA,QACArS,EAHqB,EAGrBA,SACAsS,EAJqB,EAIrBA,kBACArT,EALqB,EAKrBA,WACAsT,EANqB,EAMrBA,cACAvT,EAPqB,EAOrBA,YACAwT,EARqB,EAQrBA,cACAC,EATqB,EASrBA,OACAC,EAVqB,EAUrBA,kBAVqB,SAYbC,EAZa,YAYUJ,GACP,GACpBI,EAAiB7U,GAAKuU,QAAUA,EAChCrS,EAAS,aAAEoF,KAAMwN,KAAT,UAAoC3T,EAApC,eAA8D0T,IAEhEE,EAjBW,OAiBIF,QAjBJ,IAiBIA,OAjBJ,EAiBIA,EAAkB9P,QAAO,SAAAiQ,GAC1C,GAAIA,EAAMT,QAAS,OAAOS,KAE1BC,EAAa,GACb/T,GACAA,EAAYI,QAAQC,KAAKyB,KAAI,SAAA7C,GACzB,IAAM+U,EAA4B,CAAElO,QAAY7G,EAA7B6G,SACfkO,EAAOlO,SACPiO,EAAW5N,KAAK6N,EAAOlO,YAI/BmO,EAAM,GACJb,EAAIS,EAAa/R,IAAb,uCAAiB,WAAOzB,EAAM6T,GAAb,mBAAAd,EAAA,yDACLW,EAAWhQ,SAAS1D,EAAKyF,SADpB,iCAGCqO,YAAkB,CAAEC,MAAO/T,EAAKyF,UAHjC,cAGbzC,EAHa,OAInBhD,EAAI,UAAgBgD,EAJD,SAKAgR,YAAe,CAAED,MAAO/T,EAAKyF,QAASwO,YAAad,EAAezU,IAAKsB,EAAK4B,kBAL5E,QAKbhD,EALa,UAOTsV,EAAY,CACd,CACIxO,SAAU,GACVyO,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,YAAa,KACb7O,QAASzF,EAAKyF,QACd/G,IAAKsB,EAAK4B,gBACVyG,SAAUrI,EAAKqI,SACf1F,SAAU3C,EAAK2C,SACf0D,cAAejD,OAAOmR,UAAP,OAAiB3V,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMA,KAAK6L,aAAepH,SAAQ,OAACzE,QAAD,IAACA,OAAD,EAACA,EAAMA,KAAK6L,aAAe+J,WAAU,OAAC5V,QAAD,IAACA,OAAD,EAACA,EAAMA,KAAK6L,aACnH/H,cAAa,OAAE9D,QAAF,IAAEA,OAAF,EAAEA,EAAMA,KAAK8D,gBAGlC1C,EAAI,OAAakU,EACjBN,EAAI9N,KAAK9F,IAvBM,4CAAjB,yDA9BO,UA0DAyU,QAAQC,IAAI3B,GA1DZ,eA2Db4B,EAAQ,GACRhV,IACAgV,EAAQhV,EAAYI,QAAQC,KAAK4U,OAAOhB,IAEvCjU,IAAagV,EAAQf,IAEpBiB,EAAevB,EAAiB7U,IACpBuU,UACd2B,EAAQA,EAAMnR,QAAO,SAAA5E,GAAU,OAAOA,EAAK6G,UAAYoP,EAAapP,YAGlEyB,EAtEW,OAsENvH,QAtEM,IAsENA,GAtEM,UAsENA,EAAaI,eAtEP,aAsEN,EAAsBmH,GAC3B4N,EAAW,CACb/U,QAAS,CACLmH,GAAIA,GAAU,EACd6N,gBAAiB5B,EACjB6B,qBAAsB7B,EACtB8B,WAAY5R,SAAQ,OAAC+P,QAAD,IAACA,OAAD,EAACA,EAAQzP,OAC7BmD,SAAQ,OAAEsM,QAAF,IAAEA,OAAF,EAAEA,EAAQnQ,MAClBiS,gBAAiB7R,SAAQ,OAACgQ,QAAD,IAACA,OAAD,EAACA,EAAmB1P,OAC7CwR,oBAAmB,OAAE9B,QAAF,IAAEA,OAAF,EAAEA,EAAmBpQ,MACxCjD,KAAM2U,EAAMS,MAAK,SAAUrC,EAAGsC,GAAK,OAAOC,YAAgBvC,EAAGsC,QAGhD,IAAjBV,EAAM1U,QAAcU,EAAS,aAAEoF,KAAMC,KAAT,UAA+BpG,EAA/B,aAAuD,OACvFqT,EAAkB6B,GApFD,kDAuFjB7O,QAAQC,IAAR,MAvFiB,0DAAH,sDA4FTqP,EAAS,uCAAG,sCAAAxC,EAAA,aAAAA,EAAA,6DACrBtU,EADqB,EACrBA,IACAuU,EAFqB,EAErBA,QAFqB,EAGrBrS,SAHqB,EAIrBf,WACAsT,EALqB,EAKrBA,cACAvT,EANqB,EAMrBA,YACAwT,EAPqB,EAOrBA,cAPqB,EAQrBC,OACAoC,EATqB,EASrBA,cATqB,UAWblC,EAXa,YAWUJ,IACVzU,GAAKuU,QAAUA,EAE1BQ,EAdW,OAcIF,QAdJ,IAcIA,OAdJ,EAcIA,EAAkB9P,QAAO,SAAAiQ,GAC1C,GAAIA,EAAMT,QAAS,OAAOS,KAE1BC,EAAa,GACb/T,GACAA,EAAY8B,KAAI,SAAA7C,GACZ,IAAM+U,EAA4B,CAAElO,QAAY7G,EAA7B6G,SACfkO,EAAOlO,SACPiO,EAAW5N,KAAK6N,EAAOlO,YAI/BmO,EAAM,GACJb,EAAIS,EAAa/R,IAAb,uCAAiB,WAAOzB,EAAM6T,GAAb,mBAAAd,EAAA,yDACLW,EAAWhQ,SAAS1D,EAAKyF,SADpB,iCAGCqO,YAAkB,CAAEC,MAAO/T,EAAKyF,UAHjC,cAGbzC,EAHa,OAInBhD,EAAI,UAAgBgD,EAJD,SAKAgR,YAAe,CAAED,MAAO/T,EAAKyF,QAASwO,YAAad,EAAezU,IAAKsB,EAAK4B,kBAL5E,QAKbhD,EALa,UAOTsV,EAAY,CACd,CACIxO,SAAU,GACVyO,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,YAAa,KACb7O,QAASzF,EAAKyF,QACd/G,IAAKsB,EAAK4B,gBACVyG,SAAUrI,EAAKqI,SACf1F,SAAU3C,EAAK2C,SACf0D,cAAesC,YAAO,OAAC/J,QAAD,IAACA,OAAD,EAACA,EAAMA,KAAK6L,aAAe9B,YAAO,OAAC/J,QAAD,IAACA,OAAD,EAACA,EAAMA,KAAK6L,aAArD,OAAoE7L,QAApE,IAAoEA,OAApE,EAAoEA,EAAMA,KAAK6L,YAC9F/H,cAAa,OAAE9D,QAAF,IAAEA,OAAF,EAAEA,EAAMA,KAAK8D,gBAGlC1C,EAAI,OAAakU,EACjBlU,EAAK7B,WAAY,EACjByV,EAAI9N,KAAK9F,IAxBM,4CAAjB,yDA3BO,UAwDAyU,QAAQC,IAAI3B,GAxDZ,eAyDb4B,EAAQ,GACRhV,IACAgV,EAAQhV,EAAYiV,OAAOhB,IAE1BjU,IAAagV,EAAQf,IAEpBiB,EAAevB,EAAiB7U,IACpBuU,UACd2B,EAAQA,EAAMnR,QAAO,SAAA5E,GAAU,OAAOA,EAAK6G,UAAYoP,EAAapP,YAExE+P,EAAcb,GAnEG,kDAsEjB1O,QAAQC,IAAR,MAtEiB,0DAAH,sDA2ETsG,EAAmB,SAAC,GAA8G,IAA5G9M,EAA2G,EAA3GA,aAAcC,EAA6F,EAA7FA,YAAaC,EAAgF,EAAhFA,WAAYoK,EAAoE,EAApEA,gBAAiBrJ,EAAmD,EAAnDA,SAAU6J,EAAyC,EAAzCA,cAAeX,EAA0B,EAA1BA,oBAC5G4L,EAAU,GACVjQ,EAAE,eAAQ7F,GACViK,EAAmB,GACjB8L,EAAM/V,EAAYI,QAAQC,KAAKyB,KAAI,SAAA7C,GACrC,IAAIuJ,EAAcvJ,EAAKwJ,YA8DvB,OA7DAxJ,EAAK+G,OAAOlE,KAAI,SAAAkU,GACZ,IAAMC,EAAW9M,YAAyB,CAAEC,WAAY4M,EAAGjQ,WACnD2C,EAA4BsN,EAA5BtN,SAAU3F,EAAkBiT,EAAlBjT,cACmB,OAAbA,QAAa,IAAbA,KAAezC,OAwDvC,OAvDA0V,EAAGjQ,SAASjE,KAAI,SAAAa,GAAS,IAUhB,IATG0C,EAAiC1C,EAAjC0C,IAAKhC,EAA4BV,EAA5BU,MAAO6B,EAAqBvC,EAArBuC,KAAMM,EAAe7C,EAAf6C,KAAe7C,EAATgB,KAEhC,GAAY,GAAP0B,IAAY4B,MAAM5B,IAA0B,QAAZ,OAALhC,QAAK,IAALA,OAAA,EAAAA,EAAOW,OAQnC,GAA2B,WAAnB,OAAJrB,QAAI,IAAJA,GAAA,UAAAA,EAAMU,aAAN,eAAaC,QAA4C,gBAAnB,OAAJX,QAAI,IAAJA,GAAA,UAAAA,EAAMU,aAAN,eAAaC,OAC/C2D,MAAM5B,IAAe,GAAPA,GAAoB,KAARA,GAAsB,OAARA,EAAe1C,EAAKyC,YAAa,EAAOzC,EAAKyC,YAAa,GAClG,OAAC/B,QAAD,IAACA,OAAD,EAACA,EAAOW,OAAmCrB,EAAK0B,cAAe,EAA/C1B,EAAK0B,cAAe,EACnB,WAAZ,OAALhB,QAAK,IAALA,OAAA,EAAAA,EAAOC,QAAsBkC,EAAiC7C,EAAK4C,aAAc,EAA7C5C,EAAK4C,aAAc,MAEtD,CACD,IACIoD,EADM1J,EAAKsD,UAAUsB,QAAO,SAAA+E,GAAG,OAAIA,EAAI5E,QAAUX,EAAMW,SAC3C,GAAG6E,WACfC,EAA+C,SAAnB,OAAXN,QAAW,IAAXA,OAAA,EAAAA,EAAavE,eAA0ByE,EAAW,IAAOA,EAC1EK,EAAc1D,EAAMH,EACxB6D,GAA6BD,EAAiBH,EAC9CI,GAA6BD,EAAiBH,GAC9CI,GAA4B,MACT,IAAMA,IAAgB,IACrCpG,EAAKqC,sBAAuB,EAC5BiF,EAAiB9D,MAAK,KAGtBxD,EAAKqC,sBAAuB,EAC5BiF,EAAiB9D,MAAK,IAE1BxD,EAAKmC,cAAgBkE,YAAQD,GAC7B9B,MAAM5B,IAAe,GAAPA,GAAoB,KAARA,GAAsB,OAARA,EAAe1C,EAAKyC,YAAa,EAAOzC,EAAKyC,YAAa,EAClG6B,MAAM/B,IAAiB,GAARA,GAAsB,KAATA,GAAwB,OAATA,EAAgBvC,EAAKoC,aAAc,EAAOpC,EAAKoC,aAAc,GACxG,OAAC1B,QAAD,IAACA,OAAD,EAACA,EAAOW,OAAmCrB,EAAK0B,cAAe,EAA/C1B,EAAK0B,cAAe,EACnB,WAAZ,OAALhB,QAAK,IAALA,OAAA,EAAAA,EAAOC,QAAsBkC,EAAiC7C,EAAK4C,aAAc,EAA7C5C,EAAK4C,aAAc,OAhC3D5C,EAAKyC,YAAa,EAClBzC,EAAK0B,cAAe,EACpB1B,EAAK4C,aAAc,EACnB5C,EAAKoC,aAAc,EACnBpC,EAAKqC,sBAAuB,EA6ChC,OAVKrC,EAAKyC,aACF3B,OAAOwS,GAAYxS,OAAOuS,EAAGtP,eAC7B/D,EAAKyC,YAAa,EAEjBzC,EAAKyC,YAAa,IAGnB,OAAJzC,QAAI,IAAJA,OAAA,EAAAA,EAAMyC,cAAN,OAAoBzC,QAApB,IAAoBA,OAApB,EAAoBA,EAAM0B,eAAgB1B,EAAKoC,cAA/C,OAA8DpC,QAA9D,IAA8DA,OAA9D,EAA8DA,EAAM4C,eAApE,OAAmF5C,QAAnF,IAAmFA,OAAnF,EAAmFA,EAAM4F,uBAAzF,OAAgH5F,QAAhH,IAAgHA,OAAhH,EAAgHA,EAAM4G,aAAauM,EAAQ3P,MAAK,GAC/I2P,EAAQ3P,MAAK,GAEXxD,KAEJqT,KAEJ/W,KAKPiX,GAAQ,EA2BZ,GA1BAH,EAAIjU,KAAI,SAAA7C,GACJA,EAAK+G,OAAOlE,KAAI,SAAAkU,GACZA,EAAGjQ,SAASjE,KAAI,SAAAa,GAERA,EAAK0C,MAAK6Q,GAAQ,YAKlCrQ,EAAGzF,QAAQC,KAAO0V,EAClB/U,EAAS,aAAEoF,KAAMC,KAAT,UAA+BpG,EAA/B,aAAuD4F,KAC1DiQ,EAAQ/R,UAAS,IAAUmS,EACG,oBAAnBrL,GAA+BA,GAAc,GAG1B,oBAAnBA,GAA+BA,GAAc,GAGxDZ,EAAiBlG,UAAS,GAIU,oBAAzBmG,GAAqCA,GAAoB,GAHhC,oBAAzBA,GAAqCA,GAAoB,IAOpE4L,EAAQ/R,UAAS,IAAUmS,EAAO,CACnC,GAAIjM,EAAiBlG,UAAS,GAAO,OACJ,oBAArBsG,GAAiCA,EAAgB,CAAEjG,MAAM,EAAMK,KAAM,eAGhD,oBAArB4F,GAAiCA,EAAgB,CAAEjG,MAAM,EAAOK,KAAM,OAGtF0R,YAAmB,CAAEpW,eAAcC,cAAaC","file":"static/js/30.f957b13d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { getEditedData, checkisEmpty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { onEnter } from 'services'\r\nconst SelectedSKU = ({\r\n    isNewItem,\r\n    img,\r\n    skuDescription,\r\n    skuNumber,\r\n    activeSku,\r\n    uomValue,\r\n    idx,\r\n    uom,\r\n    onClick,\r\n    data\r\n}) => {\r\n    const edited = getEditedData({ data })\r\n    const isEmpty = checkisEmpty(data)\r\n    return (\r\n        <div className={`w-100 sku-item softGreen pl-2 pr-2 pt-2 mb-3 cursor-pointer rounded ${edited ? 'soft-green' : null} ${activeSku === idx ? 'border-green' : (isEmpty ? 'border-red' : 'border')}`}>\r\n            <div className=\" w-100 d-flex justify-content-end\">\r\n                <div className={isNewItem ? 'green-dot' : 'dot'} />\r\n            </div>\r\n            <div onKeyDown={e => onEnter({ e, idx, onClick })} onClick={() => onClick()} className={`w-100 softGreen d-flex justify-content-between pl-2 pr-2 mb-3 cursor-pointer ${edited ? 'soft-green' : null}`}>\r\n                <div className='d-flex align-items-center w-100'>\r\n                    <div className='d-flex align-items-center'>\r\n                        <img src={img} alt='sku image' className='w-5 mr-3 border softGreen rounded' />\r\n                    </div>\r\n                    <div className=\"w-100\">\r\n                        <div className='mr-3 w-100 d-flex'>\r\n                            <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-between'>\r\n                            <div className='text'>{skuNumber}</div>{activeSku}\r\n                            <div className='green LatoBold'>{uomValue} <span>{`${uom ? uom.toUpperCase() : ''}${uomValue > 1 ? 's' : ''}`}</span></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKU","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './index.scss'\r\nimport SelectedSKU from 'Page/StockEntry/Repacking/WeightEntry/SelectedSKUList/SelectedSKU'\r\nimport Reload from 'assets/icons/refreshIcon.svg'\r\nimport { updateEntries } from 'apiServices'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CButton, CTooltip } from '@coreui/react'\r\nconst SelectedSKUList = ({\r\n    hideSKUList,\r\n    setActiveSKU,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    setUpdateEntry,\r\n}) => {\r\n    const selectedSku = moduleEntry.jobPost.list.length\r\n    const dimention = document.documentElement.clientWidth\r\n    let height = document.documentElement.clientHeight\r\n    height = height - 212\r\n    const [hideContent, setHideContent] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const thereAreRequest = useSelector(state => state.thereAreRequest)\r\n    // const { sorted } = useIsNewItem({ setActiveSKU, moduleEntry, selectedSku })\r\n    return (\r\n        <div className={`${hideSKUList ? 'w-0' : 'w-30'}  mt-md-0 rounded-bottom rounded-top`}>\r\n            <div style={{ padding: 10 }} className='w-100 bg-white border-top border-left border-right rounded-top border-soft-green text d-flex align-items-center justify-content-between' onClick={() => dimention <= 500 ? setHideContent(!hideContent) : null}>\r\n                <div className=\"LatoBold\"> Selected SKU <span className='font-green'>{`(${selectedSku} SKU${selectedSku > 1 ? 's' : ''})`}</span></div>\r\n                <div className='d-flex align-items-center justify-content-between'>\r\n                    <CTooltip content={`Click to refresh the stock`} placement={dimention <= 500 ? 'left' : 'right'}>\r\n                        <div>\r\n                            <img className={`${thereAreRequest > 0 ? 'fa-spin-hover' : false} mt-1 pointer`} src={Reload} onClick={() => updateEntries({ moduleEntry, moduleName, dispatch, setUpdateEntry })} />\r\n                        </div>\r\n                    </CTooltip>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/repacking/weight-entry/remove-sku'>\r\n                        <div className=\"fontSizeTitle px-3 emptyTextField iconU-remove\" />\r\n                    </Link>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/repacking/weight-entry/add-sku'>\r\n                        <div className='fontSizeTitle emptyTextField text-bold iconU-entryAdd' ></div>\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n            <div style={{ height: dimention <= 500 ? false : height, maxHeight: height }} className={` overflow-y w-100 bg-white mr-0 border rounded-bottom border-soft-green pl-3 pr-0 pt-3 ${hideContent ? 'd-none' : null}`}>\r\n                {\r\n                    moduleEntry?.jobPost?.list?.map((data, idx) =>\r\n                        <SelectedSKU\r\n                            isNewItem={data?.isNewItem}\r\n                            data={data}\r\n                            idx={idx}\r\n                            activeSku={activeSku}\r\n                            skuDescription={data?.skuName}\r\n                            skuNumber={data?.skuNumber}\r\n                            uomLabel={data?.unitOfMeassures}\r\n                            uomValue={data?.totalQty}\r\n                            uom={data?.unitOfMeassures}\r\n                            img={data?.photo}\r\n                            onClick={() => setActiveSKU(idx)}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKUList","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Dropdown from 'Component/Dropdown/index'\r\nimport Decimal from 'Component/Input/decimal'\r\nimport Inputs from 'Component/Input'\r\nimport Input from 'Component/Input/Pack'\r\nimport Note from 'Component/Input/Note'\r\nimport Excess from 'Component/Input/Excess'\r\n\r\n\r\nconst WeightEntry = ({\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    gradeList,\r\n    ripeness,\r\n    inputWidth,\r\n    showTitle,\r\n    item,\r\n    onChange,\r\n    onChangeDropdown,\r\n    uom,\r\n    poListIdx,\r\n    category,\r\n    showSlot,\r\n    targetRepacks,\r\n    onEnter\r\n}) => {\r\n    const ripenessLevel = useSelector(state => state.ripenessLevel)\r\n    const slotList = useSelector(state => state.slotList)\r\n    const wasteSemiWaste = item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? true : false\r\n\r\n    const targetRepackList = targetRepacks?.map(t => Number.parseInt(t.slot))\r\n    const filteredSlotList = slotList?.filter(s => targetRepackList?.includes(Number.parseInt(s.value)))\r\n\r\n    const unitOfMeasuress = item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? uom : (item?.grade?.uom?.toLowerCase() === 'gram' ? 'kg' : item?.grade?.uom)\r\n    return (\r\n        <div className='d-flex w-100 we-m' onKeyDown={e => e.keyCode === 13 ? onEnter() : false}>\r\n            {/* <Dropdown\r\n                show={showSlot}\r\n                isEmpty={item.slotIsEmpty}\r\n                poListIdx={poListIdx}\r\n                selectedValue={item?.slot}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'slot' })}\r\n                title='Slot'\r\n                placeholder='Select Slot'\r\n                options={filteredSlotList}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : null} /> */}\r\n            <Dropdown\r\n                show={true}\r\n                isEmpty={item.gradeIsEmpty}\r\n                ddType={'grade'}\r\n                poListIdx={poListIdx}\r\n                selectedValue={item?.grade}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'grade' })}\r\n                title='Grade'\r\n                placeholder='Select Grade'\r\n                options={gradeList}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={null} />\r\n            <Input\r\n                packThreshold={item.packThreshold}\r\n                className={wasteSemiWaste ? 'd-none' : null}\r\n                isEmpty={item.packIsEmpty || item.packThresholdIsEmpty}\r\n                entryListIdx={entryListIdx}\r\n                poListIdx={poListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={'PACK'}\r\n                inputWidth={inputWidth}\r\n                values={item?.pack}\r\n                showTitle={showTitle}\r\n                title={'Input Pack'}\r\n                onChange={(e) => onChange(e)} />\r\n            <Inputs\r\n                isEmpty={item.qtyIsEmpty}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={unitOfMeasuress}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                showTitle={showTitle}\r\n                title={'Input Quantity'}\r\n                onChange={(e) => onChange(e)} />\r\n            <Decimal\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={unitOfMeasuress}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            {/* 30-12-2020 */}\r\n            {/* <Decimal\r\n                toCompare={true}\r\n                isEmpty={item.qtyToCompareIsEmpty}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom !== 'kg' ? null : unitOfMeasuress === 'kg' ? null : 'KG'}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qtyToCompare}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} /> */}\r\n            {/* <Dropdown\r\n                // isDisabled={entryListIdx === 0 ? true : false}\r\n                isEmpty={item.ripenessIsEmpty}\r\n                selectedValue={item?.ripeness}\r\n                grade={item.grade?.label}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={true}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'ripeness' })}\r\n                title='Ripeness'\r\n                placeholder='Select Ripeness'\r\n                options={ripenessLevel}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : (category === 'Fruits' ? null : 'd-none')} /> */}\r\n            <Note\r\n                isEmpty={item.noteIsEmpty}\r\n                grade={item.grade?.label}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                ripeness={ripeness}\r\n                inputWidth={'w-50'}\r\n                values={item?.note}\r\n                showTitle={showTitle}\r\n                title={'Note'}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            <Excess\r\n                hidePercent={true}\r\n                className={wasteSemiWaste ? 'd-none' : null}\r\n                packThreshold={item?.qty / item?.pack}\r\n                isEmpty={false}\r\n                inputWidth={inputWidth}\r\n                showTitle={showTitle}\r\n                title={'Average Pack'} />\r\n\r\n            <Excess\r\n                className={wasteSemiWaste ? 'd-none' : null}\r\n                packThreshold={item.packThreshold}\r\n                isEmpty={item.packThresholdIsEmpty}\r\n                inputWidth={inputWidth}\r\n                showTitle={showTitle}\r\n                title={'Excess'} />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default WeightEntry","import { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { isFloat } from 'services'\r\n\r\nexport const addRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    activeTab\r\n}) => {\r\n    try {\r\n        let js = { ...moduleEntry }\r\n        const grade = js.jobPost.list[activeSku].gradeList?.filter(grade => { return grade?.value === js.jobPost.list[activeSku].skuUuid })\r\n        const itemList = js.jobPost.list[activeSku].poList[poListIdx].itemList\r\n        const lastSelected = itemList[itemList?.length - 1]\r\n        const gradeSelected = lastSelected ? lastSelected.grade : (grade?.length ? grade[0] : {})\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList.push({\r\n            qty: '',\r\n            pack: '',\r\n            grade: gradeSelected,\r\n            slot: activeTab || activeTab === 0 ? { label: `Slot ${Number.parseInt(activeTab)}`, value: Number.parseInt(activeTab) } : null\r\n        })\r\n        dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const updateJSWeightLine = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e\r\n}) => {\r\n    const name = e?.target?.name\r\n    let value = e?.target?.value\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n\r\n    if (name === 'weight' || name === 'weightToCompare') {\r\n        // js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = parseInt(value)\r\n        let regex = /^[0-9\\.\\x0]+$/\r\n        console.clear()\r\n        if ((regex.test(value) === true && value !== \"\")) {\r\n            let newValue = 0;\r\n            let arr = value?.split('.')\r\n            let number = arr[0];\r\n            if (number >= 0) number = parseInt(number)\r\n            let commaNumber = arr[1];\r\n\r\n            if ((commaNumber !== null && commaNumber !== undefined)) {\r\n                if (commaNumber.length > 2) {\r\n                    //jika dibelakang koma ada lebih dari 2 angka\r\n                    var sliceNumber = commaNumber.slice(0, 2);\r\n                    newValue = `${number}.${sliceNumber}`\r\n                } else {\r\n                    newValue = `${number}.${commaNumber}`\r\n                }\r\n            } else {\r\n                newValue = parseInt(number)\r\n            }\r\n\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompareIsEmpty = false\r\n            }\r\n\r\n        }\r\n        else {\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = ''\r\n            }\r\n        }\r\n    }\r\n    else if (name === 'qty') {\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = value ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n    }\r\n\r\n    if (name === 'note') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    if (name === 'pack') {\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].pack = value > 0 ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packIsEmpty = false\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThresholdIsEmpty = false\r\n    }\r\n    let description = js.jobPost.list[activeSku].originalUom\r\n    const { packSize, uom } = js.jobPost.list[activeSku].poList[poListIdx]\r\n    const { qty, grade, pack, note } = js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx]\r\n\r\n    if (grade, packSize, uom) {\r\n        let grd = js.jobPost.list[activeSku].gradeList.filter(grd => grd.value === grade?.value)\r\n        let ratio = grd[0]?.multiplier\r\n        // description = description.split(' ')\r\n        // description = description[description.length-1]\r\n        let standardWeight = description?.toLowerCase() == 'gram' ? packSize / 1000 : packSize\r\n        let inputWeight = qty / pack\r\n        inputWeight = inputWeight - (standardWeight / ratio)\r\n        inputWeight = inputWeight / (standardWeight / ratio)\r\n        inputWeight = inputWeight * 100\r\n        if (inputWeight >= 51 || inputWeight <= -20) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThresholdIsEmpty = true\r\n        }\r\n        else {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThresholdIsEmpty = false\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThreshold = isFloat(inputWeight)\r\n    }\r\n\r\n    const initialWeight = js.jobPost.list[activeSku].poList[poListIdx].inboundQty\r\n    let initialWeightUpdate = initialWeight\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        if (data.qty || data.pack) js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        initialWeightUpdate = initialWeightUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = initialWeightUpdate\r\n        if (initialWeightUpdate < 0) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n            js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = 0\r\n        }\r\n        else {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList.filter(item => { return item.qtyIsEmpty = false })\r\n        }\r\n    })\r\n\r\n    //initial weight from it self\r\n    const initialWeightScreen = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n    let initialWeightScreenUpdate = initialWeightScreen\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        initialWeightScreenUpdate = initialWeightScreenUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = initialWeightScreenUpdate\r\n    })\r\n    //end of initial weight from it self\r\n\r\n    const over = totalListItemWeightCount({ moduleList: js.jobPost.list[activeSku].poList[poListIdx].itemList })\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightOver = over > initialWeight ? over : 0\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLineDropdown = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    selected,\r\n    name\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n    if (name === 'grade') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].pack = ''\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packIsEmpty = ''\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThreshold = 0\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packThresholdIsEmpty = false\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].uom = selected?.uom === 'gram' ? 'kg' : selected?.uom\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = null\r\n\r\n    }\r\n    if (name === 'ripeness') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    }\r\n\r\n    if (name === 'slot') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].slot = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    }\r\n\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].gradeIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].slotIsEmpty = false\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabs,\r\n} from '@coreui/react'\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport WeightEntry from \"Page/StockEntry/Repacking/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry\";\r\nimport \"./index.scss\";\r\nimport {\r\n  addRow,\r\n  updateJSWeightLine,\r\n  updateJSWeightLineDropdown\r\n} from \"Page/StockEntry/Repacking/WeightEntry/services\";\r\nimport { deleteRow, countQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { isFloat } from 'services';\r\n\r\nconst WeightEntryCard = ({\r\n  inputWidth,\r\n  activeSku,\r\n  poListIdx,\r\n  poItem,\r\n  moduleEntry,\r\n  moduleName,\r\n  gradeList,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    initialWeight,\r\n    inboundQty,\r\n    initialWeightUpdate,\r\n    initialWeightScreenUpdate,\r\n    uom,\r\n    edited,\r\n    category,\r\n    codeGrade,\r\n    isHidden,\r\n    targetRepacks\r\n  } = poItem;\r\n  const total = !isNaN(initialWeightUpdate) ? initialWeightUpdate : inboundQty;\r\n  const initialWeightTotal = !isNaN(initialWeightScreenUpdate) ? initialWeightScreenUpdate : initialWeight\r\n  const uomType = uom === \"kg\" || uom === \"gram\" ? \"Weight\" : \"Quantity\";\r\n  const grade = moduleEntry.jobPost.list[activeSku].gradeList?.filter(grade => { return grade?.value === codeGrade })\r\n  const area = moduleEntry.jobPost.areaName\r\n\r\n\r\n  //filter item by active slot\r\n\r\n  const [activeTab, setActiveTab] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (targetRepacks?.length) {\r\n      setActiveTab(targetRepacks[0]?.slot)\r\n    }\r\n  }, [activeSku])\r\n  const filtered = poItem.itemList?.filter(data => Number.parseInt(data?.slot?.value) === Number.parseInt(activeTab) || !data?.slot)\r\n\r\n  return (\r\n    <div className='target-repack'>\r\n      <CTabs>\r\n        <CNav variant=\"tabs\">\r\n          <CNavItem className='d-flex'>\r\n            {targetRepacks?.map(data => <CNavLink onClick={() => setActiveTab(data?.slot)}>{`Slot ${data?.slot}`}</CNavLink>)}\r\n          </CNavItem>\r\n        </CNav>\r\n      </CTabs>\r\n      <div\r\n        // onKeyDown={e => e.keyCode === 13 ? addRow({dispatch, moduleEntry,moduleName, activeSku, poListIdx}) : false}\r\n        id={`sku_item_${activeSku}_${poListIdx}`}\r\n        // tabIndex='0'\r\n        className={`${isHidden ? 'd-none' : null} d-flex flex-column sku-item justify-content-between w-100 mb-3 align-items-center border rounded-bottom border-soft-green ${edited ? \"soft-green\" : null\r\n          }`}\r\n      >\r\n        {/* new logic */}\r\n        <div className='w-100'>\r\n          <div className=\"w-100 border-soft-green mt-3 d-flex align-items-start px-3 border-bottom border-soft-green mb-3\">\r\n            <div className=\"w-100 d-flex justify-content-between align-items-center LatoBold cardheader-m\">\r\n              <div className=\"d-flex align-items-center cardheader-m\">\r\n                <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n                  {`Combined PO SKU`}\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center mb-3\">\r\n                {`Initial ${uomType}`}\r\n                <span className=\"ml-2 font-green\">\r\n                  {` ${initialWeight} ${uom?.toUpperCase()}${initialWeight > 1 ? \"s\" : \"\"}`}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"d-flex flex-column justify-content-between w-100 align-items-center px-3\">\r\n            {poItem.itemList?.map((item, entryListIdx) => {\r\n              return (\r\n                <div className={`d-flex w-100 align-items-center justify-content-between ${targetRepacks?.length ? (item?.slot?.value != activeTab ? 'd-none' : null) : null}`}>\r\n                  <div className=\"w-100 d-flex\">\r\n                    <div style={{ width: '10px' }} className={`input-height d-flex align-items-center mb-3 mr-3 pt-4 mt-2 ${targetRepacks?.length ? 'd-none' : null}`}>{`${entryListIdx + 1}.`}</div>\r\n                    <div className=\"w-100\">\r\n                      <WeightEntry\r\n                        poListIdx={poListIdx}\r\n                        onEnter={() => {\r\n                          addRow({\r\n                            dispatch, moduleEntry,\r\n                            moduleName, activeSku, poListIdx, activeTab\r\n                          })\r\n                          setTimeout(() => {\r\n                            const focus = document.getElementById(`pack_${poListIdx}_${entryListIdx + 1}`)\r\n                            if (focus) focus.focus()\r\n                          }, 10);\r\n\r\n                        }}\r\n                        showSlot={targetRepacks?.length ? true : false}\r\n                        targetRepacks={targetRepacks}\r\n                        category={category}\r\n                        entryListIdx={entryListIdx}\r\n                        wmsPoSkuInfoId={item.wmsPoSkuInfoId}\r\n                        showTitle={true}\r\n                        gradeList={gradeList}\r\n                        onChange={(e) =>\r\n                          updateJSWeightLine({\r\n                            dispatch,\r\n                            moduleEntry,\r\n                            moduleName,\r\n                            activeSku,\r\n                            poListIdx,\r\n                            entryListIdx,\r\n                            e,\r\n                          })\r\n                        }\r\n                        onChangeDropdown={({ selected, name }) =>\r\n                          updateJSWeightLineDropdown({\r\n                            dispatch,\r\n                            moduleEntry,\r\n                            moduleName,\r\n                            activeSku,\r\n                            poListIdx,\r\n                            entryListIdx,\r\n                            selected,\r\n                            name,\r\n                          })\r\n                        }\r\n                        uom={uom}\r\n                        inputWidth={inputWidth}\r\n                        item={item}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex w-25 align-items-center justify-content-end input-height mb-0 p-0\">\r\n                    <img\r\n                      src={Trash}\r\n                      alt=\"delete icon\"\r\n                      className=\"w-1 cursor-pointer\"\r\n                      onClick={(e) =>\r\n                        deleteRow({\r\n                          dispatch,\r\n                          moduleEntry,\r\n                          moduleName,\r\n                          activeSku,\r\n                          poListIdx,\r\n                          entryListIdx,\r\n                          e,\r\n                          countQty\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            onKeyDown={e => e.keyCode === 13 ? addRow({ dispatch, moduleEntry, moduleName, activeSku, poListIdx }) : false}\r\n            // className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer ${total === 0 ? 'd-none' : null}`}\r\n            className={`w-100 ${targetRepacks?.length ? 'pl-3' : 'ml-5'} font-green mb-3 LatoBold cursor-pointer `}\r\n            // tabIndex='0'\r\n            onClick={() => addRow({\r\n              dispatch, moduleEntry,\r\n              moduleName, activeSku, poListIdx, activeTab\r\n            })}\r\n          >\r\n            <i className=\"green iconU-entryAdd pr-2\"></i>\r\n            {`Add ${uomType} (${isFloat(initialWeightTotal) ? isFloat(initialWeightTotal) : initialWeightTotal} ${uom ? uom.toUpperCase() : ''}${initialWeightTotal > 1 ? \"s\" : \"\"} left)`}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\nexport default WeightEntryCard;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport WeightEntryCard from 'Page/StockEntry/Repacking/WeightEntry/WeightEntryList/WeightEntryCard'\r\nimport { removeEntryModule, saveJobSheet } from 'apiServices'\r\nimport { submitValidation } from 'Page/StockEntry/Repacking/services'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\";\r\nimport PopUpRequired from \"Component/Modal/PopUpRequired\";\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport { useEntryDimention, useRepackingEntry, useTargetRepack } from 'Page/StockEntry/GeneralServices'\r\nimport CustomTable from 'Component/CustomTable'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport { dateFull } from 'services'\r\n\r\nconst WeightEntryList = ({\r\n    setActiveSKU,\r\n    hideSKUList,\r\n    setHideSKUList,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    updateEntry,\r\n    setUpdateEntry\r\n}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const {\r\n        isLoading,\r\n        invalidThreshold,\r\n        setInvalidThreshold,\r\n        setIsSuccess,\r\n        confirmation,\r\n        setConfirmation,\r\n        discard,\r\n        setDiscard,\r\n        isSaved,\r\n        setIsSaved,\r\n        action,\r\n        setAction,\r\n        isRequired,\r\n        setIsRequired,\r\n        hideContent,\r\n        setHideContent,\r\n        unitOfMeassures,\r\n        totalWeight,\r\n        edited,\r\n        postInfo,\r\n        skuName,\r\n        skuNumber,\r\n        poList,\r\n        gradeList,\r\n        totalPack,\r\n        status } = useRepackingEntry({ moduleEntry, activeSku, dispatch })\r\n\r\n    const { showTargetRepack, table, slot, setSlot, slotList } = useTargetRepack({ moduleEntry, activeSku, dispatch, moduleName })\r\n\r\n    const { dimention, height, heightAdj, loading } = useEntryDimention(showTargetRepack)\r\n\r\n    //Condition\r\n    const isMobile = dimention <= 500\r\n    const isHidden = hideContent ? 'd-none' : null\r\n    const isPlural = totalWeight > 1 ? \"s\" : ''\r\n    const isPluralPack = totalPack > 1 ? \"s\" : ''\r\n    const isEdited = edited ? 'bg-green' : 'bg-lineGrey'\r\n    const showTarget = showTargetRepack ? null : 'd-none'\r\n    const targetRepackHeight = isMobile ? 220 : 260\r\n\r\n    let slotListFilter = slotList\r\n    let hideResetOpt = false\r\n    if (slot?.length) {\r\n        if (slot[0]?.value === null) slotListFilter = []\r\n        if (slot[0]?.value) hideResetOpt = true\r\n    }\r\n    if (!poList.length) return (\r\n        <div style={{ paddingLeft: isMobile ? 0 : 10 }} className='bg-white w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green ml-2'>\r\n            <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: heightAdj, maxHeight: heightAdj }}>\r\n                <img className=\"loading\" src={loading} alt=\"loading\" />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div style={{ paddingLeft: dimention <= 500 ? 0 : 10 }} className='w-100 h-100 mt-3 mt-md-0'>\r\n            <Discard\r\n                discard={discard}\r\n                module={'repacking'}\r\n                moduleEntry={moduleEntry}\r\n                close={() => setDiscard(false)}\r\n                discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch })}\r\n            />\r\n            <PopUpSaved\r\n                updateEntry={updateEntry}\r\n                setUpdateEntry={setUpdateEntry}\r\n                status={status}\r\n                moduleEntry={moduleEntry}\r\n                submit={() => dispatch({ type: 'CREATE_JOB_SHEET', [`${moduleName}EntryData`]: null, [`${moduleName}SummaryData`]: null })}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSaved={isSaved}\r\n                action={action}\r\n                setIsSaved={setIsSaved}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <PopUpRequired\r\n                isRequired={isRequired}\r\n                module={moduleEntry}\r\n                invalidThreshold={invalidThreshold}\r\n                setIsRequired={setIsRequired}\r\n                setInvalidThreshold={setInvalidThreshold}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n                submit={() => setConfirmation({ show: true, name: 'submit' })}\r\n            />\r\n            <Confirmation\r\n                moduleName={moduleName}\r\n                isLoading={isLoading}\r\n                moduleEntry={moduleEntry}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSuccess={postInfo}\r\n                setAction={setAction}\r\n                action={action}\r\n                save={() => saveJobSheet({ name: 'save', moduleEntry, moduleName, dispatch, setIsSuccess, table })}\r\n                submit={() => saveJobSheet({ name: 'submit', moduleEntry, moduleName, dispatch, setIsSuccess, table, submitValidation, setActiveSKU })}\r\n            />\r\n            <div className='rounded-bottom rounded-top'>\r\n                <div className={`target-repack mb-2 p-3 bg-white rounded border-top border-left border-right border-bottom rounded-top border-soft-green ${showTarget}`} style={{ maxHeight: 'fit-content', minHeight: targetRepackHeight, overflow: 'hidden' }}>\r\n                    <div className={`d-md-flex justify-content-between mb-3 align-items-center w-100`}>\r\n                        <div className='d-flex mb-md-0 mb-3'>\r\n                            <div className='LatoBold mr-3'>Target Repack Summary</div>\r\n                            <div className='mr-3 iconU-sideBarDot d-flex align-items-center m-0 p-0 text' />\r\n                            <div className='LatoBold font-green'>{dateFull({ date: new Date(), noTime: true, addDay: true, withDay: true })}</div>\r\n                        </div>\r\n                        <Dropdown\r\n                            hideResetOpt={hideResetOpt}\r\n                            className=\"basic-multi-select\"\r\n                            classNamePrefix=\"select\"\r\n                            isMulti={true} resetName='All Slot'\r\n                            options={slotListFilter}\r\n                            selectedValue={slot}\r\n                            onChangeDropdown={(selected) => setSlot(selected)}\r\n                            show={true}\r\n                            width={isMobile ? 'w-100' : 'w-md-25'}\r\n                            placeholder='Slot'\r\n                            title={'Slot'}\r\n                            style={{ marginRight: 0 }}\r\n                            noMarginBottom={true} />\r\n                    </div>\r\n                    <CustomTable\r\n                        editColumn={'false'}\r\n                        className={`${isMobile ? 'target-repack-mobile' : 'target-repack'} `}\r\n                        styles={{ color: 'red', textAlign: 'right', width: '100%', display: showTargetRepack ? false : 'none' }}\r\n                        data={table?.data}\r\n                        columns={table?.columns} />\r\n                </div>\r\n                <div style={{ height }} style={{ padding: 10 }} className={`bg-white w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green`}>\r\n                    <div className='d-flex w-100 m-0 p-0' onClick={() => isMobile ? setHideContent(!hideContent) : null}>\r\n                        <div className={`${hideSKUList ? 'iconU-sideBarHideRight' : 'iconU-sideBarHideLeft'} emptyTextField fontSizeTitle mr-3`} onClick={() => setHideSKUList(!hideSKUList)} />\r\n                        <div className='mr-3 pr-1 d-flex align-items-center m-0 p-0 LatoBold text'>Weight Entry</div>\r\n                        <div className='mr-3 iconU-sideBarDot d-flex align-items-center text' />\r\n                        <div className='mr-3 d-flex align-items-center font-green LatoBold'>{`${skuName} (${skuNumber})`}</div>\r\n                    </div>\r\n                    {/* <Sort moduleEntry = {moduleEntry} moduleName = {moduleName} activeSku = {activeSku} dispatch = {dispatch}/> */}\r\n                </div>\r\n                <div style={{ height: isMobile ? height : (heightAdj + 22), minHeight: isMobile ? height : (heightAdj + 22) }} className={`w-100 bg-white overflow-y mr-0 border-left border-right border-soft-green pl-3 pr-2 pt-3 ${isHidden}`}>\r\n                    {\r\n                        poList?.map((poItem, idx) => {\r\n                            return <WeightEntryCard\r\n                                gradeList={gradeList}\r\n                                inputWidth='input-w-100'\r\n                                activeSku={activeSku}\r\n                                poListIdx={idx}\r\n                                poItem={poItem}\r\n                                moduleEntry={moduleEntry}\r\n                                moduleName={moduleName}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <div className='w-100 d-flex align-items-center p-3 border-left border-right border-bottom rounded-bottom LatoBold bg-white'>\r\n                    {/* <button\r\n                        type=\"button\"\r\n                        className={`btn ${isEdited}  text-white px-5 mr-3 LatoBold`}\r\n                        onClick={() => edited ? setConfirmation({ show: true, name: 'save' }) : null}>\r\n                        Save\r\n                    </button> */}\r\n\r\n                    {/* <button\r\n                        tabIndex='0'\r\n                        type=\"button\"\r\n                        className={`btn bg-lineGrey sku-item text-white px-5 mr-3 LatoBold`}>\r\n                        Save\r\n                    </button> */}\r\n                    <div className='d-flex align-items-center'>\r\n                        <div>Total Pack <span className='font-green mr-3'>{`${totalPack} ${'PACK'}${isPluralPack}`}</span></div>\r\n                        <div className='rounded-circle bg-dark mr-3' style={{ width: 5, height: 5 }}></div>\r\n                        <div>Total Weight <span className='font-green'>{`${totalWeight} ${unitOfMeassures?.toUpperCase()}${isPlural}`}</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end mt-3\">\r\n                <div tabIndex='0' onClick={() => setDiscard(true)} className='red pr-3 sku-item fontSizeButton cursor-pointer'><i className='iconU-entryTrash'></i> Discard</div>\r\n                <button tabIndex='0' onClick={() => edited ? submitValidation({ setActiveSKU, moduleEntry, moduleName, dispatch, setConfirmation, setIsRequired, setInvalidThreshold }) : null} className={`btn px-5 sku-item py-2 text-white ${isEdited} LatoBold no-shadow`} style={{ height: \"fit-content !important\" }} >Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntryList","import React, { useState, useEffect } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SelectedSKUList from 'Page/StockEntry/Repacking/WeightEntry/SelectedSKUList'\r\nimport WeightEntryList from 'Page/StockEntry/Repacking/WeightEntry/WeightEntryList'\r\nimport { getPoList, getPoRepack } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst WeightEntry = () => {\r\n    const repackEntryData = useSelector(state => state.repackEntryData)\r\n    const dispatch = useDispatch()\r\n    const [hideSKUList, setHideSKUList] = useState(false)\r\n    const [activeSku, setActiveSKU] = useState(0)\r\n    const [updateEntry, setUpdateEntry] = useState()\r\n    let height = document.documentElement.clientHeight\r\n    let clientWidth = document.documentElement.clientWidth\r\n    let heightAdj = height - 150\r\n    const moduleName = 'repack'\r\n\r\n    useEffect(_ => {\r\n        if (repackEntryData?.jobPost.list.length > 0) getPoRepack({ dispatch, moduleName, moduleEntry: repackEntryData, activeSku })\r\n    }, [activeSku])\r\n\r\n\r\n    if (!repackEntryData || repackEntryData?.jobPost.list.length === 0) {\r\n        return (\r\n            <div className='d-flex align-items-center justify-content-center text-center w-100 h-screen'><Redirect to='/inventory-entry/repacking'>Please Select At Least 1 SKU</Redirect></div >)\r\n    }\r\n    return (\r\n        <div style={{ height: clientWidth <= 500 ? height : heightAdj }} className='w-100 d-md-flex justify-content-between scroll-y z-0'>\r\n            <SelectedSKUList\r\n                hideSKUList={hideSKUList}\r\n                activeSku={activeSku}\r\n                setActiveSKU={setActiveSKU}\r\n                moduleName={moduleName}\r\n                moduleEntry={repackEntryData}\r\n                setUpdateEntry={setUpdateEntry}\r\n            />\r\n            <WeightEntryList\r\n                setActiveSKU={setActiveSKU}\r\n                setHideSKUList={setHideSKUList}\r\n                hideSKUList={hideSKUList}\r\n                moduleName={moduleName}\r\n                moduleEntry={repackEntryData}\r\n                activeSku={activeSku}\r\n                setUpdateEntry={setUpdateEntry}\r\n                updateEntry={updateEntry}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntry","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom,\r\n    resetName,\r\n    isMulti,\r\n    hideResetOpt\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? ( styles ) => {\r\n        return {\r\n            ...styles,\r\n            border: 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{ label: `-${resetName ? resetName : title}-`, value: null }]\r\n    if (options) defaultvalue = [...defaultvalue, ...options]\r\n    if (hideResetOpt) defaultvalue = defaultvalue.filter(val => val?.value)\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if (dimention <= 500) {\r\n        menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n        if (title === 'Categories') menuPlacement = 'top'\r\n    }\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                inputId={`${title}_${poListIdx}_${entryListIdx}`}\r\n                isMulti={isMulti}\r\n                isSearchable={dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : (selectedValue?.length ? selectedValue : false)}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={resetName ? resetName : placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={150}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#a8b1be',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    name\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n\r\n    // const input = document.getElementById(`qty_${poListIdx}_${entryListIdx}`)\r\n    // if (isEmpty && input) input.focus()\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nconst Note = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    isReadOnly,\r\n    poListIdx\r\n}) => {\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${grade === 'Waste' ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} border rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`note_${poListIdx}_${entryListIdx}`} readOnly={isReadOnly} autoComplete='off' className='w-100 plain-input' value={values} name='note' onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","module.exports = __webpack_public_path__ + \"static/media/refreshIcon.20a8ff95.svg\";","import ReactTable from 'react-table-v6'\r\nimport 'react-table-v6/react-table.css'\r\nimport './CustomTable.scss'\r\nimport React from 'react'\r\n\r\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\r\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\r\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\r\n\r\nclass CustomTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            activeTab: '1',\r\n            editColumnTemp: {},\r\n        }\r\n    }\r\n\r\n    getColumnWidth = (rows, accessor, headerText) => {\r\n        const cellLength = Math.max(\r\n            ...rows.map(row => {\r\n                let value = '';\r\n                value = accessor(row);\r\n                if (typeof value === 'number') return value.toString().length;\r\n                return (value || '').length;\r\n            }),\r\n            headerText.length\r\n        );\r\n        return cellLength * 12\r\n    }\r\n\r\n    headerIcon = (data, header, editColumn) => {\r\n        let listHeader = []\r\n        header && header.map((h, index) => {\r\n            if (!editColumn[index]) {\r\n                let withIcon = (<span>\r\n                    {h.Header} <i className=\"iconU-sort\"> </i>\r\n                </span>\r\n                )\r\n                let obj = {\r\n                    Header: withIcon,\r\n                    Cell: h.Cell,\r\n                    accessor: h.accessor,\r\n                    sortable: h.sortable === false ? false : true,\r\n                    resizable: h.resizable || false,\r\n                    className: h.className || null,\r\n                    headerClassName: h.headerClassName || null,\r\n                    style: h.style || null,\r\n                    width: h.width || null,\r\n                }\r\n                return listHeader = [...listHeader, obj]\r\n            } else {\r\n                return listHeader = [...listHeader]\r\n            }\r\n        })\r\n\r\n        if (this.props.editColumn !== 'false') {\r\n            let editBtn = (\r\n                <i className='iconU-tableEdit pencilTable' />\r\n            )\r\n            let obj = {\r\n                Header: editBtn,\r\n                accessor: 'editBtn',\r\n                width: 50,\r\n                style: { textAlign: 'center' },\r\n            };\r\n            listHeader = [...listHeader, obj];\r\n        }\r\n\r\n        return listHeader;\r\n    };\r\n\r\n    render() {\r\n        const { editColumnTemp } = this.state\r\n        let { columns, data, onClick, styles, tableStatus, className } = this.props\r\n        let headerIcon = this.headerIcon(data, columns, editColumnTemp);\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <ReactTableFixedColumns\r\n                    className={className}\r\n                    columns={headerIcon}\r\n                    data={data}\r\n                    showPagination={false}\r\n                    style={styles}\r\n                    noDataText={tableStatus == \"noData\" ? 'Please Wait' : 'No  Data Found'}\r\n                    minRows='0'\r\n                    resizable={false}\r\n                    getTdProps={(state, rowInfo, column, instance) => {\r\n                        return {\r\n                            onClick: (e, handleOriginal) => {\r\n                                !!onClick &&\r\n                                    onClick(rowInfo.original, state, column, e, instance);\r\n                            },\r\n                            style: {\r\n                                height: \"3rem\",\r\n                                cursor: !!onClick && 'pointer',\r\n                                textAlign: isNaN(rowInfo?.original[column.id])\r\n                                    ? 'left'\r\n                                    : 'right',\r\n                            },\r\n                        };\r\n                    }}\r\n                    defaultPageSize={50}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CustomTable","import React from 'react'\r\nimport { isFloat } from 'services'\r\nconst Pack = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    placeholder,\r\n    grade,\r\n    title,\r\n    className,\r\n    packThreshold,\r\n    hidePercent\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={`${inputWidth} mb-3 mr-3 ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold text-nowrap ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={` ${isEmpty ? 'tooltip-custom' : 'tooltip-custom1'} w-100 d-flex align-items-center input-height px-2 mr-3`}>\r\n                <div className={`LatoBold ${inputWidth} ${isEmpty ? 'red' : 'green'}`}>{`${packThreshold && !isNaN(parseInt(packThreshold)) ? `${isFloat(packThreshold)}${hidePercent ? '' : '%'}` : (hidePercent ? '0' : '0%')}`}</div>\r\n                <span className={`${isEmpty ? 'tooltiptext' : 'd-none'}`}>\r\n                    <span style={{ fontWeight: 600 }}>Threshold Error</span>\r\n                    <br />\r\n                    <span>{`Cannot be larger than 50%. Your current threshold is ${packThreshold}%`}</span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pack","import React from 'react'\r\nconst Pack = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    placeholder,\r\n    grade,\r\n    title,\r\n    className,\r\n    packThreshold\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`pack_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name='pack' placeholder={placeholder} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pack","import { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { getPORepacking } from 'apiServices'\r\nimport { getGradeRepacking } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { checkIsSkuRequired, filterBySkuName, totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    areaDestinationId }) => {\r\n    try {\r\n        let moduleSummaryNew = [...moduleSummary]\r\n        let targetRepacks = []\r\n        moduleSummaryNew[idx].checked = checked\r\n        dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n        const selectedData = moduleSummaryNew?.filter(ldata => {\r\n            if (ldata.checked) return ldata\r\n        })\r\n        let jsSelector = []\r\n        if (moduleEntry) {\r\n            moduleEntry.jobPost.list.map(data => {\r\n                const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n                if (jsList.skuUuid) {\r\n                    jsSelector.push(jsList.skuUuid)\r\n                }\r\n            })\r\n        }\r\n        let jsD = []\r\n        const a = selectedData.map(async (list, sI) => {\r\n            const isInclude = jsSelector.includes(list.skuUuid)\r\n            if (!isInclude) {\r\n                const grade = await getGradeRepacking({ skuId: list.skuUuid })\r\n                list['gradeList'] = grade\r\n                const data = await getPORepacking({ skuId: list.skuUuid, warehouseId: warehouseUuid, uom: list.unitOfMeassures })\r\n                if (data) {\r\n                    const addPoItem = [\r\n                        {\r\n                            itemList: [],\r\n                            expiryMs: null,\r\n                            inBoundyMs: null,\r\n                            expiryDate: null,\r\n                            inboundDate: null,\r\n                            skuUuid: list.skuUuid,\r\n                            uom: list.unitOfMeassures,\r\n                            packSize: list.packSize,\r\n                            category: list.category,\r\n                            initialWeight: Number.isInteger(data?.data.totalWeight) ? parseInt(data?.data.totalWeight) : parseFloat(data?.data.totalWeight),\r\n                            targetRepacks: data?.data.targetRepacks\r\n                        }\r\n                    ]\r\n                    list['poList'] = addPoItem\r\n                    jsD.push(list)\r\n                }\r\n\r\n            }\r\n        })\r\n        const aF = await Promise.all(a)\r\n        let newJs = []\r\n        if (moduleEntry) {\r\n            newJs = moduleEntry.jobPost.list.concat(jsD)\r\n        }\r\n        if (!moduleEntry) newJs = jsD\r\n\r\n        const uncheckedSku = moduleSummaryNew[idx]\r\n        if (!uncheckedSku.checked) {\r\n            newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n        }\r\n\r\n        const id = moduleEntry?.jobPost?.id\r\n        const jobSheet = {\r\n            jobPost: {\r\n                id: id ? id : 0,\r\n                warehouseSource: warehouseUuid,\r\n                warehouseDestination: warehouseUuid,\r\n                areaSource: parseInt(areaId?.value),\r\n                areaName: areaId?.label,\r\n                areaDestination: parseInt(areaDestinationId?.value),\r\n                areaDestinationName: areaDestinationId?.label,\r\n                list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\r\n            }\r\n        }\r\n        if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n        setLocalEntryData(jobSheet)\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    try {\r\n        let moduleSummaryNew = [...moduleSummary]\r\n        moduleSummaryNew[idx].checked = checked\r\n\r\n        const selectedData = moduleSummaryNew?.filter(ldata => {\r\n            if (ldata.checked) return ldata\r\n        })\r\n        let jsSelector = []\r\n        if (moduleEntry) {\r\n            moduleEntry.map(data => {\r\n                const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n                if (jsList.skuUuid) {\r\n                    jsSelector.push(jsList.skuUuid)\r\n                }\r\n            })\r\n        }\r\n        let jsD = []\r\n        const a = selectedData.map(async (list, sI) => {\r\n            const isInclude = jsSelector.includes(list.skuUuid)\r\n            if (!isInclude) {\r\n                const grade = await getGradeRepacking({ skuId: list.skuUuid })\r\n                list['gradeList'] = grade\r\n                const data = await getPORepacking({ skuId: list.skuUuid, warehouseId: warehouseUuid, uom: list.unitOfMeassures })\r\n                if (data) {\r\n                    const addPoItem = [\r\n                        {\r\n                            itemList: [],\r\n                            expiryMs: null,\r\n                            inBoundyMs: null,\r\n                            expiryDate: null,\r\n                            inboundDate: null,\r\n                            skuUuid: list.skuUuid,\r\n                            uom: list.unitOfMeassures,\r\n                            packSize: list.packSize,\r\n                            category: list.category,\r\n                            initialWeight: isFloat(data?.data.totalWeight) ? isFloat(data?.data.totalWeight) : data?.data.totalWeight,\r\n                            targetRepacks: data?.data.targetRepacks\r\n                        }\r\n                    ]\r\n                    list['poList'] = addPoItem\r\n                    list.isNewItem = true\r\n                    jsD.push(list)\r\n                }\r\n\r\n            }\r\n        })\r\n        const aF = await Promise.all(a)\r\n        let newJs = []\r\n        if (moduleEntry) {\r\n            newJs = moduleEntry.concat(jsD)\r\n        }\r\n        if (!moduleEntry) newJs = jsD\r\n\r\n        const uncheckedSku = moduleSummaryNew[idx]\r\n        if (!uncheckedSku.checked) {\r\n            newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n        }\r\n        preAddHandler(newJs);\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired, setInvalidThreshold }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    let invalidThreshold = []\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        let description = data.originalUom\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            const { packSize, targetRepacks } = po\r\n            const isTargetRepacks = targetRepacks?.length ? true : false\r\n            po.itemList.map(item => {\r\n                const { qty, grade, pack, note, slot } = item\r\n\r\n                if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                    item.qtyIsEmpty = false\r\n                    item.gradeIsEmpty = false\r\n                    item.noteIsEmpty = false\r\n                    item.packIsEmpty = false\r\n                    item.packThresholdIsEmpty = false\r\n                }\r\n                else {\r\n                    if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        let grd = data.gradeList.filter(grd => grd.value === grade.value)\r\n                        let ratio = grd[0].multiplier\r\n                        let standardWeight = description?.toLowerCase() == 'gram' ? packSize / 1000 : packSize\r\n                        let inputWeight = qty / pack\r\n                        inputWeight = inputWeight - (standardWeight / ratio)\r\n                        inputWeight = inputWeight / (standardWeight / ratio)\r\n                        inputWeight = inputWeight * 100\r\n                        if (inputWeight >= 51 || inputWeight <= -20) {\r\n                            item.packThresholdIsEmpty = true\r\n                            invalidThreshold.push(true)\r\n                        }\r\n                        else {\r\n                            item.packThresholdIsEmpty = false\r\n                            invalidThreshold.push(false)\r\n                        }\r\n                        item.packThreshold = isFloat(inputWeight)\r\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        isNaN(pack) || pack == 0 || pack === \"\" || pack === null ? item.packIsEmpty = true : item.packIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        if (isTargetRepacks) {\r\n                            // !slot?.value && slot?.value?.toString() !== '0' ? item.slotIsEmpty = true : item.slotIsEmpty = false\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item.packIsEmpty || item?.noteIsEmpty || item?.qtyToCompareIsEmpty || item?.slotIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(false)\r\n    }\r\n    else {\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    if (!invalidThreshold.includes(true)) {\r\n        if (typeof (setInvalidThreshold) === 'function') setInvalidThreshold(false)\r\n    }\r\n    else {\r\n        if (typeof (setInvalidThreshold) === 'function') setInvalidThreshold(true)\r\n    }\r\n\r\n    // if (!isClear.includes(false) && valid && !invalidThreshold.includes(true)) {\r\n    if (!isClear.includes(false) && valid) {\r\n        if (invalidThreshold.includes(true)) return\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}"],"sourceRoot":""}