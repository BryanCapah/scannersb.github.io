{"version":3,"sources":["assets/icons/loading/LOADING-MLS-GRAY.gif","Page/StockEntry/GeneralServices/index.js"],"names":["module","exports","useDimension","hValue","wValue","dimention","document","documentElement","clientHeight","width","clientWidth","height","emptyItem","isMobile","useEntryDimention","showTargetRepack","heightAdj","loading","useStockTake","dispatch","zeroQuantity","useSelector","state","thereAreRequest","moduleFirstLoad","stockTakeFirstLoad","warehouseUuid","user","status","isLoading","stockTakeEntryData","useState","summary","setSummary","localEntryData","setLocalEntryData","search","setSearch","area","setArea","label","value","areaId","setAreaId","discard","setDiscard","useEffect","a","getRipenessLevel","ripeness","getWarehouseArea","areaList","getUnfinishedEntries","moduleName","isExist","getData","useStockTakeEntry","moduleEntry","activeSku","success","name","isSuccess","setIsSuccess","show","confirmation","setConfirmation","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","hideContent","setHideContent","allowPage","setAllowPage","jobPost","list","skuName","skuNumber","poList","gradeList","totalQty","unitOfMeassures","totalWeight","totalWeightCount","edited","jobSheetChecker","postInfo","useStockMovement","stockMovementFirstLoad","stockMovementDropdown","areaIdDesposition","areaMovement","stockMovementEntryData","wasteReasonList","isCheckedBefore","setIsCheckedBefore","areaMatched","setAreaMatched","isCheckedTotal","selectedSkuCheck","added","entryIsReady","length","stockMovementTargetRepack","getWasteReason","_","getStockTakeSummary","desc","setModule","useStockMovementEntry","useStockTransferEntry","useWaste","wasteFirstLoad","wasteEntryData","getWasteWarehouseArea","useWasteEntry","useAdditionalOutbound","outboundFirstLoad","outboundEntryData","warehouseArea","outboundAddSku","next","setNext","useAdditionalOutboundEntry","outboundTypeList","useRepacking","repackFirstLoad","repackEntryData","targetRepack","areaDestinationId","setAreaDestinationId","aId","filter","adId","setTargetRepack","type","IS_LOADING","useRepackingEntry","invalidThreshold","setInvalidThreshold","totalPack","totalPackCount","useSingleView","category","createPo","setCreatePo","singleViewData","setSingleViewData","fromBarcode","setFromBarcode","moveAll","setMoveAll","updateList","props","props2","setTimeout","singleView","useScanner","showScanner","setShowScanner","showSkuList","setShowSkuList","useTargetRepack","targetRepacks","slotList","slot","setSlot","tgtRpck","table","filterTargetRepack","setShowTargetRepack","data","updateTargetRepack","useTargetMovement","targetMovements"],"mappings":"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","file":"static/js/5.0ec7743d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LOADING-MLS-GRAY.903088aa.gif\";","import { useState, useEffect } from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUnfinishedEntries, getWasteWarehouseArea, getStockTakeSummary } from \"apiServices\";\r\nimport { getWarehouseArea, getRipenessLevel, getWasteReason } from \"apiServices/dropdown\";\r\nimport { CREATE_JOB_SHEET, IS_LOADING } from 'apiServices/action'\r\nimport { jobSheetChecker, totalWeightCount, selectedSkuCheck, totalPackCount, filterTargetRepack, updateTargetRepack, setTargetRepack, addSlot, filterBySkuName, filterCheckedSku } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\n//dimension\r\nexport const useDimension = (hValue, wValue) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const width = document.documentElement.clientWidth\r\n  const height = dimention - hValue\r\n  const emptyItem = dimention - hValue\r\n  const isMobile = width <= 500 ? true : false\r\n  return { dimention, height, emptyItem, width, isMobile }\r\n}\r\n\r\nexport const useEntryDimention = (showTargetRepack) => {\r\n  const dimention = document.documentElement.clientWidth\r\n  let height = document.documentElement.clientHeight\r\n  let heightAdj = height - (showTargetRepack ? 535 : 290)\r\n  height = dimention <= 500 ? (showTargetRepack ? (heightAdj + 100) : heightAdj) : height\r\n\r\n  return { height, heightAdj, dimention, loading }\r\n}\r\n\r\n// Stock Take\r\nexport const useStockTake = ({ dispatch }) => {\r\n  const moduleName = 'stockTake'\r\n  const zeroQuantity = useSelector(state => state.zeroQuantity)\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTakeFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockTakeEntryData = useSelector((state) => state.stockTakeEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState({ label: \"Storage Ambient\", value: 1 })\r\n  const [discard, setDiscard] = useState()\r\n\r\n  // use Effect\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockTakeEntryData ? true : false, ripeness })\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    stockTakeEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    discard,\r\n    setDiscard,\r\n    zeroQuantity\r\n  }\r\n}\r\n\r\n// Stock Take Entry\r\nexport const useStockTakeEntry = ({ moduleEntry, activeSku }) => {\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/stock-take/weight-entry',\r\n    '/inventory-entry/stock-take/weight-entry/remove-sku',\r\n    '/inventory-entry/stock-take/weight-entry/add-sku',\r\n  ])\r\n\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    status\r\n  }\r\n}\r\n\r\n// Stock Movement\r\nexport const useStockMovement = ({ dispatch }) => {\r\n  const moduleName = 'stockMovement'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockMovementFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const stockMovementDropdown = useSelector(state => state.stockMovementDropdown)\r\n  const areaId = useSelector(state => state.areaId)\r\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockMovementEntryData = useSelector((state) => state.stockMovementEntryData);\r\n  const wasteReasonList = useSelector(state => state.wasteReasonList)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState('')\r\n  const [area, setArea] = useState()\r\n  const [areaMatched, setAreaMatched] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  // const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n\r\n\r\n  const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockMovementEntryData ? true : false, ripeness })\r\n      if (!wasteReasonList?.length) {\r\n        getWasteReason({ dispatch })\r\n      }\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(_ => {\r\n    if (areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value) setAreaMatched(true)\r\n    else setAreaMatched(false)\r\n  }, [areaId, areaIdDesposition, added])\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId, areaIdDesposition])\r\n\r\n  useEffect(_ => {\r\n    if (stockMovementTargetRepack) {\r\n      const isMatchedDropdown = areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value\r\n      if (isMatchedDropdown) {\r\n        setSummary()\r\n        getStockTakeSummary({\r\n          moduleName,\r\n          stockMovementTargetRepack,\r\n          dispatch,\r\n          desc: search,\r\n          warehouseUuid,\r\n          areaId,\r\n          areaIdDesposition,\r\n          setModule: setSummary,\r\n          module: localEntryData\r\n        })\r\n        setSearch(search)\r\n      }\r\n    }\r\n    if (!stockMovementTargetRepack) setSummary()\r\n  }, [stockMovementTargetRepack])\r\n\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    stockMovementDropdown,\r\n    areaId,\r\n    areaIdDesposition,\r\n    areaMovement,\r\n    status,\r\n    isLoading,\r\n    stockMovementEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area, setArea,\r\n    areaMatched, setAreaMatched,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    entryIsReady,\r\n    stockMovementTargetRepack\r\n  }\r\n}\r\n\r\n// Stock Movement Entry\r\nexport const useStockMovementEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/movement/weight-entry',\r\n    '/inventory-entry/movement/weight-entry/remove-sku',\r\n    '/inventory-entry/movement/weight-entry/add-sku',\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    areaMovement,\r\n    status\r\n  }\r\n}\r\n\r\n// Stock Transfer\r\nexport const useStockTransfer = ({ dispatch }) => {\r\n  const moduleName = 'stockTransfer'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTransferFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const stockTransferDropdown = useSelector(state => state.stockTransferDropdown)\r\n  const areaId = useSelector(state => state.areaId)\r\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockTransferEntryData = useSelector((state) => state.stockTransferEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaMatched, setAreaMatched] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockTransferEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(_ => {\r\n    if (areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value) setAreaMatched(true)\r\n    else setAreaMatched(false)\r\n  }, [areaId, areaIdDesposition, added])\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId, areaIdDesposition])\r\n\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    stockTransferDropdown,\r\n    areaId,\r\n    areaIdDesposition,\r\n    areaMovement,\r\n    status,\r\n    isLoading,\r\n    stockTransferEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area, setArea,\r\n    areaMatched, setAreaMatched,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    entryIsReady\r\n  }\r\n}\r\n\r\n// Stock Transfer Entry\r\nexport const useStockTransferEntry = ({ moduleEntry, activeSku }) => {\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/stock-transfer/weight-entry',\r\n    '/inventory-entry/stock-transfer/weight-entry/remove-sku',\r\n    '/inventory-entry/stock-transfer/weight-entry/add-sku',\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    areaMovement,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n// Waste\r\nexport const useWaste = ({ dispatch }) => {\r\n  const moduleName = 'waste'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.wasteFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const wasteEntryData = useSelector((state) => state.wasteEntryData);\r\n\r\n  const [areaId, setAreaId] = useState()\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const b = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      const areaId = await getWasteWarehouseArea({ warehouseUuid, setAreaId })\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: wasteEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    wasteEntryData,\r\n    areaId,\r\n    setAreaId,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal\r\n  }\r\n}\r\n\r\n// Waste Entry\r\nexport const useWasteEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/waste/weight-entry',\r\n    '/inventory-entry/waste/weight-entry/remove-sku',\r\n    '/inventory-entry/waste/weight-entry/add-sku',\r\n  ])\r\n\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    status\r\n  }\r\n}\r\n\r\n// Additional Outbound\r\nexport const useAdditionalOutbound = ({ dispatch }) => {\r\n  const moduleName = 'outbound'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.outboundFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const outboundEntryData = useSelector((state) => state.outboundEntryData);\r\n  const warehouseArea = useSelector(state => state.warehouseArea);\r\n  const outboundAddSku = useSelector(state => state.outboundAddSku)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [next, setNext] = useState(false)\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState()\r\n  const [search, setSearch] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: outboundEntryData ? true : false })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    outboundEntryData,\r\n    warehouseArea,\r\n    outboundAddSku,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    next,\r\n    setNext,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added\r\n  }\r\n}\r\n\r\n// Additional Outbound Entry\r\nexport const useAdditionalOutboundEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const { skuName, skuNumber, poList, outboundTypeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/additional-outbound/weight-entry',\r\n    '/inventory-entry/additional-outbound/remove-sku',\r\n    '/inventory-entry/additional-outbound/add-sku',\r\n  ])\r\n\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    outboundTypeList,\r\n    status\r\n  }\r\n}\r\n\r\n// Repacking\r\nexport const useRepacking = ({ dispatch }) => {\r\n  const moduleName = 'repack'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.repackFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const repackEntryData = useSelector((state) => state.repackEntryData);\r\n  const warehouseArea = useSelector(state => state.warehouseArea);\r\n  const targetRepack = useSelector(state => state.targetRepack)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState('')\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState()\r\n  const [areaDestinationId, setAreaDestinationId] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n\r\n  const setTargetRepack = (value) => {\r\n    dispatch({ type: IS_LOADING, targetRepack: value })\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const aId = areaList?.filter(area => area.label === 'Production')\r\n      const adId = areaList?.filter(area => area.label === 'Staging')\r\n      if (aId?.length) setAreaId(aId[0])\r\n      if (adId?.length) setAreaDestinationId(adId[0])\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: repackEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  useEffect(_ => {\r\n    if (targetRepack) {\r\n      setSummary()\r\n      if (areaId) getStockTakeSummary({\r\n        moduleName,\r\n        targetRepack,\r\n        dispatch,\r\n        desc: '',\r\n        warehouseUuid,\r\n        areaId,\r\n        areaIdDesposition: areaDestinationId,\r\n        setModule: setSummary,\r\n        module: localEntryData\r\n      })\r\n    }\r\n    if (!targetRepack) setSummary()\r\n  }, [targetRepack, areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    repackEntryData,\r\n    warehouseArea,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    areaDestinationId,\r\n    setAreaDestinationId,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    targetRepack,\r\n    setTargetRepack\r\n  }\r\n}\r\n\r\n// Repacking Entry\r\nexport const useRepackingEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const [invalidThreshold, setInvalidThreshold] = useState()\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/repacking/weight-entry',\r\n    '/inventory-entry/repacking/weight-entry/remove-sku',\r\n    '/inventory-entry/repacking/weight-entry/add-sku',\r\n  ])\r\n\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const totalPack = totalPackCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isLoading,\r\n    invalidThreshold,\r\n    setInvalidThreshold,\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    totalPack,\r\n    status\r\n  }\r\n}\r\n\r\n// Single view\r\nexport const useSingleView = ({ category, dispatch, setLocalEntryData, setSummary, setSearch, getStockTakeSummary, search, warehouseUuid, areaId, localEntryData, moduleName, stockMovementTargetRepack }) => {\r\n\r\n  //submit\r\n  const [action, setAction] = useState()\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: 'submit' })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [isSaved, setIsSaved] = useState()\r\n\r\n  // create po single view\r\n  const [createPo, setCreatePo] = useState()\r\n  const [singleViewData, setSingleViewData] = useState()\r\n  const [fromBarcode, setFromBarcode] = useState()\r\n\r\n\r\n  //condition move all\r\n  const [moveAll, setMoveAll] = useState()\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  // end of submit\r\n\r\n  //singleview\r\n  const updateList = (props, props2, moduleName) => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n    if (search === 'barcode') return\r\n\r\n    dispatch({ type: IS_LOADING, isLoading: true })\r\n    setTimeout(() => {\r\n      getStockTakeSummary({\r\n        category,\r\n        moduleName,\r\n        stockMovementTargetRepack: props2,\r\n        zeroQuantity: props,\r\n        singleView: true,\r\n        dispatch,\r\n        desc: search,\r\n        warehouseUuid,\r\n        areaId,\r\n        setModule: setSummary,\r\n        module: localEntryData\r\n      },\r\n        setSearch(search))\r\n    }, 10);\r\n  }\r\n\r\n  return { fromBarcode, setFromBarcode, updateList, action, setAction, confirmation, setConfirmation, isSuccess, setIsSuccess, isSaved, setIsSaved, createPo, setCreatePo, singleViewData, setSingleViewData, postInfo, moveAll, setMoveAll }\r\n}\r\n\r\n// Scanner\r\nexport const useScanner = () => {\r\n  const [showScanner, setShowScanner] = useState()\r\n  const [showSkuList, setShowSkuList] = useState()\r\n  return { showScanner, setShowScanner, showSkuList, setShowSkuList }\r\n}\r\n\r\nexport const useTargetRepack = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\r\n  const targetRepacks = useSelector(state => state.targetRepacks)\r\n  const slotList = useSelector(state => state.slotList)\r\n\r\n  const [slot, setSlot] = useState()\r\n\r\n  const { gradeList } = moduleEntry?.jobPost?.list[activeSku]\r\n  const tgtRpck = moduleEntry?.jobPost?.list[activeSku]?.poList[0]?.targetRepacks || []\r\n  const table = filterTargetRepack(tgtRpck, gradeList, activeSku, moduleEntry, slot)\r\n\r\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\r\n\r\n\r\n  //set Target Repack\r\n\r\n  useEffect(_ => {\r\n    setTargetRepack({ moduleEntry, dispatch })\r\n  }, [])\r\n\r\n  useEffect(_ => {\r\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\r\n    if (table?.data?.length) setShowTargetRepack(true)\r\n    updateTargetRepack({ data: table?.data, targetRepacks, activeSku, dispatch })\r\n  }, [table])\r\n\r\n  return { showTargetRepack, table, slot, setSlot, slotList }\r\n}\r\n\r\n//use target movement\r\nexport const useTargetMovement = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\r\n  const targetRepacks = moduleEntry.jobPost.list[activeSku].poList[0]?.targetMovements\r\n  const slotList = useSelector(state => state.slotList)\r\n\r\n  const [slot, setSlot] = useState()\r\n\r\n  const { gradeList } = moduleEntry.jobPost.list[activeSku]\r\n  const table = filterTargetRepack(targetRepacks, gradeList, activeSku, moduleEntry, slot, true)\r\n\r\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\r\n\r\n  useEffect(_ => {\r\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\r\n    if (table?.data?.length) setShowTargetRepack(true)\r\n    updateTargetRepack({ data: table?.data, targetRepacks, activeSku, dispatch })\r\n  }, [table])\r\n\r\n  return { showTargetRepack, table, slot, setSlot, slotList }\r\n}\r\n\r\n//use filter new item to active\r\nexport const useIsNewItem = ({ setActiveSKU, moduleEntry, selectedSku, dispatch, moduleName }) => {\r\n  const sorted = null\r\n  useEffect(() => {\r\n    let skuName = null\r\n    const newSkuList = moduleEntry?.jobPost?.list?.filter(data => data.isNewItem)\r\n    const length = newSkuList?.length\r\n    if (length) skuName = newSkuList[length - 1]?.skuName\r\n    const idx = moduleEntry?.jobPost?.list?.findIndex(data => data.skuName === skuName)\r\n    if (idx >= 0) setActiveSKU(idx)\r\n\r\n  }, [selectedSku]);\r\n  return { sorted }\r\n}\r\n"],"sourceRoot":""}