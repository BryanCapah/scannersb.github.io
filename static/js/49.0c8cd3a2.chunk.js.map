{"version":3,"sources":["Page/StockEntry/AdditionalInbound/Upload/services.js","Page/StockEntry/AdditionalInbound/Upload/Review.jsx","Component/Modal/ModalConfirmation/services.js","Component/Modal/ModalConfirmation/index.jsx","Component/BootstrapTable/index.jsx","Page/ConfigModules/Settings/services.js"],"names":["getSKU","csvData","return_data","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","map","data","index","push","isSuccess","skuUuid","warehouseId","warehouseDestinationUuid","unitOfMeassures","uom","qty","photo","poSku","wmsPoSkuCode","expiryDate","moment","expiryDateCol","toDate","getTime","inboundDate","errorMessage","category","skuNumber","skuDescription","warehouseCode","warehouseDestination","setResult","result","tmp_arr","indexHeader","isStatus","format","uploadStatus","uploadStatusReason","submit","a","csvField","dispatch","selectorStatus","setIsShowModal","setIsSubmitText","setSubmitStatus","console","clear","header","source","codeTransaction","list","skuList","submitCsvInbound","dataCsv","execute","log","type","STOK_TAKE_UPLOAD_JSON","csvDataResult","newSchema","dataField","text","sort","csvFieldResult","withRouter","props","useDispatch","selectorCsvFileName","useSelector","state","csvFileName","selectorCsvData","selectorCsvField","selectorWarehouseArea","warehouseAreaCsv","status","warehousesData","warehouseData","React","useState","isShowModal","isHiddenRows","setIsHiddenRows","isShowErrorOnly","setIsShowErrorOnly","isValidate","setIsValidate","modalShow","setModalShow","checkingCsv","setCheckingCsv","submitStatus","title","setTitle","msg1","setMsg1","msg2","setMsg2","cancelButtonTitle","setCancelButtonTitle","actionButtonTitle","setActionButtonTitle","isSubmitText","cancelButtonClass","actionButtonClass","setActionButtonClass","colourTitle","setColourTitle","newCsvData","setNewCsvData","rowDouble","setRowDouble","useEffect","undefined","stats","indexField","checking_error","skuNumberArray","skuData","csvDataValidated","idx","includes","objName","dataArraySku","pushData","d","i","id","warehouseDestinationStatus","skuNumberStatus","wmsPoSkuCodeStatus","skuDescriptionStatus","categoryStatus","expiryDateColStatus","qtyStatus","warehouseDestinationReason","skuNumberReason","wmsPoSkuCodeReason","skuDescriptionReason","categoryReason","expiryDateColReason","qtyReason","tmp","validasiDouble","message","history","setCsvDataTmp","param","setCsvData","className","globalData","columns","tableClass","hiddenRows","warehouseArea","transaction","dataDoubleRow","style","backgroundColor","onClick","tmp_arr_false","tmp_arr_true","stat","dataColumn","indexColumn","key","ret","filter","x","length","showErrorsOnly","new_arr","deleteErrorsField","lineHeight","goBack","class","PopUp","onCloseFunction","statusDisplay","colorText","refreshOnCancel","actionButtonEvent","submitText","show","next","e","isCaptcha","setIsValidated","setIsType","isType","isValidated","type_","document","getElementById","parseInt","focus","value","setSelectionRange","toUpperCase","split","ModalsConfirmation","moduleEntry","confirmation","setConfirmation","save","isLoading","moveAll","setAction","moduleName","noSkuChecking","singleViewData","height","documentElement","clientHeight","buttonName","name","window","onkeydown","keyCode","module","areaDestinationName","jobPost","warehouseDestinationName","areaName","skuListUpdate","newModule","poList","po","itemList","item","grade","_qty","isInteger","parseFloat","_sku","skuName","wasteType","label","_toWaste","_uom","newSku","sku","wqty","swqty","isExist","findIndex","s","forEach","skuListUpdateCheck","closeOnBackdrop","tabIndex","onKeyDown","minHeight","maxHeight","overflow","border","borderBottom","color","textAlign","maxWidth","totalQty","ModalsCaptcha","characters","charactersLength","text_split","r","charAt","Math","floor","random","isCaptchaText","onClose","size","autocomplete","onKeyUp","textTransform","maxLength","placeholder","TableEditable","changeWarehouseUuid","column","columnName","row","warehouseCodeList","warehouseUuidList","warehouseNameList","tmpdata","obj","indexOf","setTimeout","validatePOSKU","idColumn","elem","elemspan","innerHTML","axios","method","url","then","response","supplierName","supplierUuid","photos","classList","remove","add","validateOutbountReason","tmp_data","datax","validateOutbountType","validateSKUNumber","imageMd","newGradeUom","validateStatus","validateResult","rowCount","keyy","this","outboundType","editable","code","wh_area_label","wh_area_value","wh_outboundtype_label","wh_outboundtype_value","newFormat","validator","newValue","done","keyStatus","keyReason","reason","arr_grade","checkType","isNaN","match","valid","formatter","cell","txt","sortOption","sortFunc","sortCaret","order","keyField","classes","cellEdit","cellEditFactory","mode","blurToSave","nonEditableRows","bordered","Component","TableResult","activeStockTableHeader","width","Header","accessor","display","justifyContent","headerClassName","activeStockTableHeaderDetail"],"mappings":"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","file":"static/js/49.0c8cd3a2.chunk.js","sourcesContent":["//other\r\nimport { STOK_TAKE_UPLOAD_JSON } from \"apiServices/action\";\r\nimport { submitCsvInbound } from \"apiServices\";\r\nimport moment from \"moment\";\r\nimport { data } from \"Page/ConfigModules/Settings/services\";\r\n\r\nexport const showErrorsOnly = ({\r\n  csvData,\r\n  csvField,\r\n  isShowErrorOnly,\r\n  setIsShowErrorOnly,\r\n  setIsHiddenRows,\r\n  setCheckingCsv,\r\n}) => {\r\n  // ;\r\n  let tmp_arr_false = [];\r\n  let tmp_arr_true = [];\r\n  csvData.map((data, index) => {\r\n    let stat = true;\r\n    let i = index + 1;\r\n    csvField.map((dataColumn, indexColumn) => {\r\n      let key = dataColumn.dataField + \"Status\";\r\n      if (data[key] === false) {\r\n        stat = false;\r\n      }\r\n    });\r\n\r\n    if (stat === false) {\r\n      if (!tmp_arr_false.includes(i)) {\r\n        tmp_arr_false.push(i);\r\n      }\r\n    } else {\r\n      if (!tmp_arr_true.includes(i)) {\r\n        tmp_arr_true.push(i);\r\n      }\r\n    }\r\n  });\r\n\r\n  //return array\r\n  let ret = [];\r\n  if (isShowErrorOnly === true) {\r\n    //true = delete all row\r\n    ret = tmp_arr_true.filter((x) => !tmp_arr_false.includes(x));\r\n    if (ret.length == csvData.length) {\r\n      return 0;\r\n    }\r\n  } else {\r\n    ret = [];\r\n  }\r\n  setIsHiddenRows(ret);\r\n  setIsShowErrorOnly(!isShowErrorOnly); //untuk button show all atau error only\r\n  setCheckingCsv(true);\r\n};\r\n\r\nexport const deleteErrorsField = ({\r\n  csvData,\r\n  csvField,\r\n  dispatch,\r\n  setCheckingCsv,\r\n}) => {\r\n  let new_arr = [];\r\n  let tmp = null;\r\n  csvData.map((data, index) => {\r\n    let stat = true;\r\n    csvField.map((dataColumn, indexColumn) => {\r\n      let key = dataColumn.dataField + \"Status\";\r\n      let i = index + 1;\r\n      if (data[key] === false) {\r\n        stat = false;\r\n      }\r\n    });\r\n    if (stat === true) {\r\n      new_arr.push(data);\r\n    }\r\n  });\r\n\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: new_arr });\r\n  setCheckingCsv(true);\r\n};\r\n\r\nexport const setCsvData = ({ param, dispatch, setCheckingCsv }) => {\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: param });\r\n  setCheckingCsv(true);\r\n};\r\n\r\nexport const checking_error = ({\r\n  csvData,\r\n  csvField,\r\n  setIsValidate,\r\n  setCheckingCsv,\r\n}) => {\r\n  if (csvData === undefined) {\r\n    return 0;\r\n  }\r\n  let stats = true;\r\n  csvData.map((data, index) => {\r\n    csvField.map((dataField, indexField) => {\r\n      let status = data[dataField.dataField + \"Status\"];\r\n      if (status === false) {\r\n        stats = false;\r\n      }\r\n    });\r\n  });\r\n  if (stats === false) {\r\n    setIsValidate(false);\r\n  } else {\r\n    setIsValidate(true);\r\n  }\r\n  setCheckingCsv(false);\r\n};\r\n\r\nconst setHeader = (csvData) => {\r\n  //get time - created at\r\n  let time = new Date().getTime();\r\n  let d = new Date(time);\r\n  let n = d.getMilliseconds();\r\n  let list_area = [];\r\n  let return_data = [];\r\n  let warehouse_source = csvData[0].warehouseSource || \"\";\r\n\r\n  csvData.map((data, index) => {\r\n    //in outbound csv upload only check area source\r\n    if (!list_area.includes(data.areaSource)) {\r\n      return_data.push({\r\n        id: index,\r\n        warehouseSource: warehouse_source,\r\n        warehouseDestination: warehouse_source,\r\n        areaSource: data.areaSource,\r\n        areaDestination: data.areaSource,\r\n        list: [],\r\n        createdAt: n,\r\n      });\r\n      list_area.push(data.areaSource);\r\n    }\r\n  });\r\n  return return_data;\r\n};\r\n\r\nconst getSKU = (csvData) => {\r\n  let return_data = []; \r\n  let today = new Date();\r\n  let dd = String(today.getDate()).padStart(2, '0');\r\n  let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n  let yyyy = today.getFullYear();\r\n  today = dd + '-' + mm + '-' + yyyy;\r\n\r\n  csvData.map((data, index) => {\r\n    let available = false;\r\n    return_data.push(\r\n    {\r\n      isSuccess: true,\r\n      skuUuid: data.skuUuid,\r\n      warehouseId: data.warehouseDestinationUuid,\r\n      unitOfMeassures: data.uom,\r\n      qty: data.qty || 0,\r\n      photo: data.photo,\r\n      poSku: data.wmsPoSkuCode,\r\n      expiryDate: moment(data.expiryDateCol, \"DD-MM-YYYY\").toDate().getTime() || \"\",\r\n      inboundDate: moment(today, \"DD-MM-YYYY\").toDate().getTime() || \"\",\r\n      errorMessage: \"\",\r\n      category: data.category,\r\n      skuNumber: data.skuNumber,\r\n      skuDescription: data.skuDescription,\r\n      warehouseCode: data.warehouseDestination\r\n    } \r\n    );\r\n  });\r\n  return return_data;\r\n};\r\n \r\n \r\n\r\nconst setResult = (result) => { \r\n  let i = 1;\r\n  \r\n  let arrayResult = {\r\n    source : \"upload\",\r\n    codeTransaction : \"inbound\",\r\n    list: []\r\n  }\r\n  let tmp_arr = []\r\n\r\n  result.data.map((data, indexHeader) => { \r\n    let isStatus = \"Failed\";\r\n    if (data.isSuccess) {\r\n      isStatus = \"Success\";\r\n    }\r\n    \r\n    tmp_arr.push({\r\n      warehouseDestination: \"\",\r\n      wmsPoSkuCode:data.poSku,\r\n      qty:data.qty,\r\n      expiryDateCol: moment(data.expiryDate).format(\"DD-MM-YYYY\"),\r\n      category:\"\",\r\n      skuDescription:\"\",\r\n      skuNumber:\"\",\r\n      uploadStatus: isStatus || \"\", \r\n      uploadStatusReason: data.errorMessage || \"\",\r\n      category: data.category,\r\n      skuNumber: data.skuNumber,\r\n      skuDescription: data.skuDescription,\r\n      warehouseDestination: data.warehouseCode\r\n    })\r\n  }); \r\n  return tmp_arr;\r\n};\r\n\r\nexport const submit = async ({\r\n  csvData,\r\n  csvField,\r\n  dispatch,\r\n  selectorStatus,\r\n  setIsShowModal,\r\n  setIsSubmitText,\r\n  setSubmitStatus,\r\n}) => {\r\n  setIsSubmitText(\"Loading...\");\r\n  console.clear();\r\n\r\n  //set header\r\n  let header = {\r\n    source : \"upload\",\r\n    codeTransaction : \"inbound\",\r\n    list: []\r\n  }\r\n\r\n  //get list sku\r\n  let skuList = await getSKU(csvData);\r\n\r\n  header.list = skuList; \r\n\r\n  //submit\r\n  let execute = await submitCsvInbound({\r\n    dataCsv: header,\r\n    setSubmitStatus,\r\n    dispatch\r\n  });\r\n  if (execute == \"error\") {\r\n    return 0;\r\n  }\r\n\r\n  // set result\r\n  let result = await setResult(execute);\r\n  console.log(result);\r\n  await dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvDataResult: result });\r\n\r\n  //renew schema for result\r\n  let newSchema = [];\r\n  newSchema.push({\r\n    dataField: \"uploadStatus\",\r\n    text: \"Upload Status\",\r\n    type: \"string\",\r\n    sort: true,\r\n  });\r\n  csvField.map((data, index) => {\r\n    newSchema.push(data);\r\n  });\r\n  await dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFieldResult: newSchema });\r\n\r\n  setIsShowModal(false);\r\n  setIsSubmitText(\"Submit\");\r\n  setSubmitStatus(true);\r\n};\r\n\r\n\r\nexport const validasiDouble = ({\r\n  selectorCsvData,\r\n  setNewCsvData,\r\n  setRowDouble,\r\n  dispatch,\r\n}) => {\r\n  let skuNumberArray = [];\r\n  let skuData = {};\r\n  let csvDataValidated = [];\r\n  let rowDouble = [];\r\n  const y = selectorCsvData?.map((data, idx) => {\r\n    if (!skuNumberArray.includes(data.skuNumber)) {\r\n      skuNumberArray.push(data.skuNumber);\r\n    }\r\n\r\n    let objName = \"sku_\" + data.skuNumber;\r\n    if (!skuData[objName]) {\r\n      let tmp = {\r\n        warehouseDestination: data.warehouseDestination, \r\n        skuNumber: data.skuNumber\r\n      };\r\n      skuData[objName] = [tmp];\r\n    } else {\r\n      let dataArraySku = skuData[objName];\r\n      let pushData = true;\r\n      dataArraySku.map((d, i) => {\r\n        if ( \r\n          d.skuNumber == data.skuNumber && \r\n          d.warehouseDestination == data.warehouseDestination\r\n        ) {\r\n          //data sama, tidak di push\r\n          pushData = false;\r\n          rowDouble.push(data.id);\r\n\r\n          //set to red\r\n          data.warehouseDestinationStatus = false; \r\n          data.skuNumberStatus = false;\r\n          data.wmsPoSkuCodeStatus = false;\r\n          data.skuDescriptionStatus = false;\r\n          data.categoryStatus = false;\r\n          data.expiryDateColStatus = false;\r\n          data.qtyStatus = false;\r\n          data.warehouseDestinationReason = \"Data Duplicated\";  \r\n          data.skuNumberReason = \"Data Duplicated\";\r\n          data.wmsPoSkuCodeReason = \"Data Duplicated\";\r\n          data.skuDescriptionReason = \"Data Duplicated\";\r\n          data.categoryReason = \"Data Duplicated\";\r\n          data.expiryDateColReason = \"Data Duplicated\";\r\n          data.qtyReason = \"Data Duplicated\";\r\n        }\r\n      });\r\n      if (pushData) {\r\n        let tmp = {\r\n          warehouseDestination: data.warehouseDestination, \r\n          skuNumber: data.skuNumber, \r\n        };\r\n        skuData[objName].push(tmp);\r\n      }\r\n    }\r\n\r\n    console.log(\"data\", data);\r\n    csvDataValidated.push(data);\r\n  });\r\n\r\n  console.log(csvDataValidated);\r\n  // setRowDouble([3]);\r\n  // dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: csvDataValidated });\r\n  // return { data: csvDataValidated, doubleRow: rowDouble };\r\n  setNewCsvData(csvDataValidated);\r\n  setRowDouble(rowDouble);\r\n};","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport FileUploader from \"Component/FileUploader\";\r\nimport { TableEditable } from \"Component/BootstrapTable\";\r\nimport { ModalsCaptcha } from \"Component/Modal/ModalConfirmation\";\r\nimport \"../index.scss\";\r\nimport {\r\n  showErrorsOnly,\r\n  deleteErrorsField,\r\n  setCsvData,\r\n  submit,\r\n  checking_error,\r\n  validasiDouble\r\n} from \"./services.js\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\n\r\nconst Upload = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  //selector\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const selectorCsvData = useSelector((state) => state.csvData);\r\n  const selectorCsvField = useSelector((state) => state.csvField);\r\n  const selectorWarehouseArea = useSelector((state) => state.warehouseAreaCsv);\r\n  const selectorStatus = useSelector((state) => state.status);\r\n  const warehousesData = useSelector((state) => state.warehouseData);\r\n\r\n  //state\r\n  const [isShowModal, setIsShowModal] = React.useState(false);\r\n  const [isHiddenRows, setIsHiddenRows] = React.useState(null);\r\n  const [isShowErrorOnly, setIsShowErrorOnly] = React.useState(true);\r\n  const [isValidate, setIsValidate] = React.useState(false);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [checkingCsv, setCheckingCsv] = React.useState(true);\r\n  const [submitStatus, setSubmitStatus] = React.useState(false);\r\n\r\n  const [title, setTitle] = React.useState(null);\r\n  const [msg1, setMsg1] = React.useState(null);\r\n  const [msg2, setMsg2] = React.useState(null);\r\n  const [cancelButtonTitle, setCancelButtonTitle] = React.useState(null);\r\n  const [actionButtonTitle, setActionButtonTitle] = React.useState(null);\r\n  const [isSubmitText, setIsSubmitText] = React.useState(\"Submit\");\r\n  const [cancelButtonClass, setCancelButtonClass] = React.useState(null);\r\n  const [actionButtonClass, setActionButtonClass] = React.useState(null);\r\n  const [colourTitle, setColourTitle] = React.useState(null);\r\n  const [newCsvData, setNewCsvData] = React.useState([]);\r\n  const [rowDouble, setRowDouble] = React.useState([]);\r\n\r\n  // console.log(selectorWarehouseArea);\r\n  // console.log(selectorCsvField);\r\n  // console.log(selectorCsvData);\r\n\r\n  useEffect(() => {\r\n    setCheckingCsv(false);\r\n    checking_error({\r\n      csvData: selectorCsvData,\r\n      csvField: selectorCsvField,\r\n      setIsValidate,\r\n      setCheckingCsv\r\n    });\r\n  }, [checkingCsv]);\r\n\r\n  useEffect(() => { }, [selectorCsvData]);\r\n\r\n  useEffect(() => {\r\n    validasiDouble({\r\n      selectorCsvData,\r\n      dispatch,\r\n      setNewCsvData,\r\n      setRowDouble,\r\n    });\r\n  }, [selectorCsvData]);\r\n  \r\n  useEffect(() => {\r\n    if (submitStatus === 'success') {\r\n      setActionButtonTitle('Done');\r\n      setCancelButtonTitle('');\r\n      setMsg1(selectorCsvFileName + ' upload successfull. ');\r\n      setMsg2('Would you import another file?');\r\n      setTitle('Success');\r\n      setActionButtonClass('bg-green background ml-0');\r\n      setColourTitle('green');\r\n      setModalShow(true);\r\n    } else if (submitStatus === 'failed') {\r\n      setActionButtonTitle('Retry');\r\n      setCancelButtonTitle('Cancel');\r\n      setMsg1(selectorStatus?.message);\r\n      setMsg2('do you want to retry?');\r\n      setTitle('Failed!');\r\n      setActionButtonClass('bg-red background ml-0');\r\n      setColourTitle('red');\r\n      setModalShow(true);\r\n    }\r\n  }, [submitStatus]);\r\n\r\n  useEffect(() => {\r\n    if (submitStatus === true) {\r\n      props.history.push(\"/inventory-entry/additional-inbound/CSV-upload/result\");\r\n    }\r\n  }, [submitStatus]);\r\n\r\n  if (selectorCsvData === undefined || selectorCsvData === null) {\r\n    props.history.push(\"/inventory-entry/additional-inbound/CSV-upload\");\r\n    return 0;\r\n  }\r\n\r\n  const setCsvDataTmp = (param) => {\r\n    setCsvData({ param, dispatch, setCheckingCsv });\r\n  };\r\n   \r\n  return (\r\n    <div className=\"w-100 d-flex flex-column stock-take-summary\">\r\n      <TableEditable\r\n        globalData={newCsvData} //Required\r\n        columns={selectorCsvField} //Required\r\n        tableClass=\"reviewTable\"\r\n        hiddenRows={isHiddenRows}\r\n        warehouseArea={selectorWarehouseArea}\r\n        setCsvDataTmp={(param) => setCsvDataTmp(param)}\r\n        setIsValidate={(param) => setIsValidate(param)}\r\n        dispatch={dispatch}\r\n        setCheckingCsv={setCheckingCsv}\r\n        warehousesData={warehousesData}\r\n        transaction={\"additional_inbound\"}\r\n        dataDoubleRow={rowDouble}\r\n      />\r\n\r\n      <div className=\"row pt-3\">\r\n        <div className=\"col-4\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn px-3 mr-3 text no-shadow\"\r\n            style={{ backgroundColor: \"#fff\" }}\r\n            onClick={() =>\r\n              showErrorsOnly({\r\n                csvData: selectorCsvData,\r\n                csvField: selectorCsvField,\r\n                isShowErrorOnly,\r\n                setIsShowErrorOnly,\r\n                setIsHiddenRows,\r\n                setCheckingCsv\r\n              })\r\n            }\r\n          >\r\n            Show {isShowErrorOnly ? \"Errors Only\" : \"All\"}\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn px-3 mr-3  text no-shadow\"\r\n            style={{ backgroundColor: \"#fff\" }}\r\n            onClick={() =>\r\n              deleteErrorsField({\r\n                csvData: selectorCsvData,\r\n                csvField: selectorCsvField,\r\n                dispatch,\r\n                setCheckingCsv\r\n              })\r\n            }\r\n          >\r\n            Delete Errors Field\r\n          </button>\r\n        </div>\r\n        <div className=\"col-4\" style={{ lineHeight: \"40px\" }}>\r\n          Review your imported file: {selectorCsvFileName} (\r\n          {selectorCsvData.length || 0} Lines)\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn px-5 bg-red text-white no-shadow float-right\"\r\n            onClick={() => props.history.goBack()}\r\n          >\r\n            Discard\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            class={\r\n              \"btn px-5 mr-3 text-white no-shadow float-right \"\r\n              + (isValidate === true && selectorCsvData?.length > 0 ? \"bg-green\" : \"bg-primaryGrey disabled\")\r\n            }\r\n            onClick={() => setIsShowModal(!isShowModal)}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <PopUp\r\n        status={selectorStatus}\r\n        onCloseFunction={() => {\r\n          setModalShow(false);\r\n          setSubmitStatus(false)\r\n        }}\r\n        statusDisplay={modalShow}\r\n        title={title}\r\n        cancelButtonTitle={cancelButtonTitle}\r\n        actionButtonTitle={actionButtonTitle}\r\n        colorText={colourTitle}\r\n        refreshOnCancel={false}\r\n        msg1={msg1}\r\n        msg2={msg2}\r\n        cancelButtonClass={cancelButtonClass}\r\n        actionButtonClass={actionButtonClass + \" ml-0\"}\r\n        actionButtonEvent={() => props.history.push(\"/inventory-entry/additional-inbound/CSV-upload\")}\r\n      />\r\n      <ModalsCaptcha\r\n        submit={() =>\r\n          submit({\r\n            dispatch,\r\n            csvData: selectorCsvData,\r\n            setIsShowModal,\r\n            setIsSubmitText,\r\n            setSubmitStatus,\r\n            csvField: selectorCsvField,\r\n          })\r\n        }\r\n        submitText={isSubmitText}\r\n        show={isShowModal}\r\n        setIsShowModal={setIsShowModal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Upload);\r\n","import { isInteger } from \"formik\";\r\n\r\nexport const next = ({\r\n  e,\r\n  state,\r\n  isCaptcha,\r\n  setIsValidated,\r\n  setIsType,\r\n  isType,\r\n  isValidated,\r\n  submit\r\n}) => {\r\n  const key = e.key; // const {key} = event; ES6+\r\n  let type = [...isType];\r\n\r\n  //if press enter\r\n  if (key === \"Enter\"){\r\n    if(isValidated){\r\n      submit();\r\n    }else{\r\n      return;\r\n    }\r\n  }\r\n\r\n  let arr_tmp = [\"ArrowUp\", \"ArrowDown\", \"Tab\",\"Delete\"];\r\n  if (arr_tmp.includes(key)) {\r\n    return 0;\r\n  } else if (key === \"Backspace\") {\r\n    let type_ = [...isType];\r\n    let state_ = type_[state];\r\n    if (state_ == \"\" && state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).value = \"\";\r\n      type_[state - 1] = \"\";\r\n      type[state - 1] = \"\";\r\n    }\r\n    console.log(type_);\r\n  } else if (key === \"ArrowLeft\") {\r\n    if (state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) - 1))\r\n        .setSelectionRange(-1, -1);\r\n\r\n      return 0;\r\n    }\r\n  } else if (key === \"ArrowRight\") {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) + 1))\r\n        .setSelectionRange(-1, -1);\r\n      return 0;\r\n    }\r\n  } else {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n    }\r\n  }\r\n\r\n  if (key === \"Backspace\") {\r\n    type[state] = \"\";\r\n  } else {\r\n    type[state] = key.toUpperCase();\r\n  }\r\n  let char = \"QWERTYUIOPLKJHGFDSAZXCVBNM1234567890\";\r\n  let allowedChar = char.split(\"\");\r\n  if (allowedChar.includes(key.toUpperCase()) || type[state] == \"\") {\r\n    document.getElementById(\"t\" + parseInt(state)).value = type[state];\r\n    setIsType(type);\r\n  } else {\r\n    return 0;\r\n  }\r\n\r\n  let stat = true;\r\n  isCaptcha.map((data, index) => {\r\n    // if (index == 0) {\r\n    //   return;\r\n    // }\r\n    if (!(type[index + 1] == isCaptcha[index])) {\r\n      stat = false;\r\n    }\r\n    console.log(type[index + 1], isCaptcha[index], stat)\r\n  });\r\n  setIsValidated(stat);\r\n};\r\n\r\nexport const skuListUpdateCheck = (module, noSkuChecking, moduleName) => {\r\n  if (module?.length) {\r\n    let newModule = [];\r\n    module.map((list) => {\r\n      list.poList.map((po) => {\r\n        po.itemList.map((item) => {\r\n          const { qty, grade } = item;\r\n          const _qty = isInteger(qty)\r\n            ? parseInt(qty)\r\n            : !qty\r\n              ? 0\r\n              : parseFloat(qty);\r\n          const _sku = noSkuChecking\r\n            ? list.skuName\r\n            : moduleName === \"waste\"\r\n              ? item.wasteType?.label\r\n                ? item.wasteType?.label\r\n                : list.skuName\r\n              : grade?.label;\r\n          const _toWaste =\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\" ||\r\n                item.wasteType?.label === \"Waste\"\r\n                ? true\r\n                : false\r\n              : grade?.label === \"Waste\" || grade?.label === \"Semi Waste\"\r\n                ? true\r\n                : false;\r\n          const _uom = noSkuChecking\r\n            ? list.unitOfMeassures\r\n            : grade?.uom === \"gram\"\r\n              ? \"kg\"\r\n              : grade?.uom;\r\n          let newSku = {\r\n            sku: _sku,\r\n            qty: _qty,\r\n            uom: _uom,\r\n            wqty: 0,\r\n            swqty: 0,\r\n          };\r\n          if (_toWaste) {\r\n            newSku.qty = 0;\r\n            newSku.sku = list.skuName;\r\n          }\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Waste\"\r\n              : grade?.label === \"Waste\"\r\n          )\r\n            newSku.wqty = _qty;\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\"\r\n              : grade?.label === \"Semi Waste\"\r\n          )\r\n            newSku.swqty = _qty;\r\n          const isExist = newModule.findIndex(\r\n            (sku) => sku?.sku === (_toWaste ? list.skuName : _sku)\r\n          );\r\n\r\n          if (moduleName !== \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (grade?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (grade?.label === \"Waste\") newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n\r\n          if (moduleName === \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (item.wasteType?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (item.wasteType?.label === \"Waste\")\r\n                newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n    const skuName = module.length ? module[0].skuName : \"No SKU\";\r\n    const i = newModule.findIndex((s) => s.sku === skuName);\r\n    newModule.forEach((sku) => {\r\n      if (i !== -1) {\r\n        if (sku.sku === \"Waste\") newModule[i].wqty = sku.qty;\r\n        if (sku.sku === \"Semi Waste\") newModule[i].swqty = sku.qty;\r\n      }\r\n    });\r\n    return newModule;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { next, skuListUpdateCheck } from \"./services.js\";\r\nimport { totalQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst ModalsConfirmation = ({ moduleEntry, confirmation, setConfirmation, save, submit, isSuccess, isLoading, moveAll, setAction, moduleName, noSkuChecking, singleViewData }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 300\r\n\r\n  let buttonName = 'Submit'\r\n\r\n  if (confirmation.name === 'save') buttonName = 'Save'\r\n  useEffect(() => {\r\n    if (isSuccess) setConfirmation({ show: false, name: null })\r\n  }, [isSuccess])\r\n  window.onkeydown = e => e.keyCode === 27 ? setConfirmation({ show: false, name: null }) : null\r\n\r\n  useEffect(() => {\r\n    setAction(confirmation.name)\r\n  }, [confirmation])\r\n\r\n  let module = singleViewData && !moveAll ? singleViewData : moduleEntry\r\n\r\n  const areaDestinationName = module?.jobPost?.areaDestinationName\r\n  const warehouseDestinationName = module?.jobPost?.warehouseDestinationName\r\n  const areaName = module?.jobPost?.areaName\r\n\r\n  const skuListUpdate = skuListUpdateCheck(module?.jobPost.list, noSkuChecking, moduleName)\r\n  return (\r\n    <CRow className={confirmation.show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={confirmation.show}\r\n          closeOnBackdrop={false}\r\n        >\r\n          <CModalHeader className=\"px-4 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation <span><i className=\"em em-pray\"></i></span></CModalTitle>\r\n            <label tabIndex='0' onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false} onClick={() => setConfirmation({ show: false, name: null })} className='sku-item iconU-modalClose' />\r\n\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-4 py-0\" style={{ minHeight: height }}>\r\n            <p className=\"text mb-2\">\r\n              <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n              <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n              <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n              <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n              <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${moduleName === 'stockTransfer' ? warehouseDestinationName : (areaDestinationName ? areaDestinationName : areaName)} `}</span>\r\n            </p>\r\n            <p className=\"text\">\r\n              Please double check this list, this record will store to database.\r\n            </p>\r\n            <div\r\n              style={{\r\n                minHeight: height,\r\n                maxHeight: height,\r\n                overflow: \"auto\",\r\n                border: \"1px solid var(--lineGrey)\",\r\n              }}\r\n            >\r\n              <table>\r\n                <thead>\r\n                  <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                    <th style={{ color: \"var(--emptyTextField)\" }}>SKU List</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Weight</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Semi Waste</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Waste</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {skuListUpdate?.map((data) => (\r\n                    <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                      <td style={{ maxWidth: '160px' }}>{data.sku}</td>\r\n                      <td className=\"text-right py-3\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.qty)}`}\r\n                      </td>\r\n                      <td className=\"text-right text-nowrap\" style={{ textAlign: \"right\" }}>\r\n                        <span className='text-nowrap'>{`${totalQty(data?.swqty)} `}</span>\r\n                      </td>\r\n                      <td className=\"text-right\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.wqty)}`}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"px-0 pb-5 pt-0 justify-content-start border-none\">\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false}\r\n                className=\"bg-background sku-item text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n                onClick={() => setConfirmation({ show: false, name: null })}\r\n              >\r\n                Cancel\r\n            </CButton>\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? (isLoading ? null : (confirmation.name === 'save' ? save() : submit())) : false}\r\n                className={`${isLoading ? 'bg-softGreen text' : 'bg-green text-white'} no-shadow px-5 mt-4 sku-item mb-0 ml-3 mr-0`}\r\n                onClick={() => isLoading ? null : (confirmation.name === 'save' ? save() : submit())}\r\n              >\r\n                {isLoading ? 'Processing...' : buttonName}\r\n              </CButton>{\" \"}\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst ModalsCaptcha = ({\r\n  show = false,\r\n  setIsShowModal,\r\n  submit,\r\n  submitText = \"Submit\",\r\n}) => {\r\n  //random text\r\n  var text = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  var text_split = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    let r = characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    text += r;\r\n    text_split.push(r);\r\n  }\r\n\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const [isCaptcha, setIsCaptcha] = React.useState(text_split);\r\n  const [isCaptchaText, setIsCaptchaText] = React.useState(text);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n  const [isType, setIsType] = React.useState([]);\r\n\r\n  //reset if visible = false \r\n  useEffect(() => {\r\n    if (show === true) {\r\n      document.getElementById('t1').value = '';\r\n      document.getElementById('t2').value = '';\r\n      document.getElementById('t3').value = '';\r\n    }\r\n  }, [show]);\r\n\r\n  return (\r\n    <CRow className={show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          onClose={() => {\r\n            setIsShowModal(false);\r\n          }}\r\n          size=\"lg\"\r\n          style={{ height: \"400px\" }}\r\n        >\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">\r\n              Are you sure want to upload <span className=\"green\">Edited</span>{\" \"}\r\n              {selectorCsvFileName}?\r\n            </p>\r\n            <p className=\"text\">\r\n              Once uploaded this record will store to databases.\r\n            </p>\r\n            <p className=\"text mb-2\">\r\n              Please type ‘{isCaptchaText}’ on the Box to confirm upload file.\r\n            </p>\r\n\r\n            <div className=\"captcha-box\">\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 1,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                    isValidated,\r\n                    submit\r\n                  });\r\n                }}\r\n                id=\"t1\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[0]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 2,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                    isValidated,\r\n                    submit\r\n                  });\r\n                }}\r\n                id=\"t2\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input ml-0 mr-0\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[1]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 3,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                    isValidated,\r\n                    submit\r\n                  });\r\n                }}\r\n                id=\"t3\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[2]}\r\n              />\r\n            </div>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            <CButton\r\n              className=\"bg-background text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n              onClick={() => {\r\n                setIsShowModal(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </CButton>\r\n            <CButton\r\n              className={\r\n                (isValidated ? \"bg-green\" : \"bg-emptyTextField disabled\") +\r\n                \" no-shadow px-5 mt-4 mb-0 ml-3 mr-0\"\r\n              }\r\n              onClick={() => {\r\n                submit();\r\n                setIsValidated(false);\r\n              }}\r\n            >\r\n              {submitText}\r\n            </CButton>{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport { ModalsConfirmation, ModalsCaptcha };\r\n","import React from \"react\";\r\nimport { CCard } from \"@coreui/react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"./bootstrapTable-style.scss\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport axios from \"axios\";\r\n\r\n//cell editable\r\n//doc : https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Cell%20Editing&selectedStory=Click%20to%20Edit&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\r\n\r\nclass TableEditable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validateStatus: false,\r\n      validateResult: \"Please Wait...\",\r\n      // globalData: this.props.globalData,\r\n      rowCount: 0,\r\n      keyy: 0,\r\n    };\r\n  }\r\n\r\n  changeWarehouseUuid = (\r\n    value,\r\n    column,\r\n    columnName,\r\n    row,\r\n    warehouseCodeList,\r\n    warehouseUuidList,\r\n    warehouseNameList\r\n  ) => {\r\n    const { setCsvDataTmp, globalData } = this.props;\r\n    let tmpdata = globalData;\r\n    var index = tmpdata.findIndex((obj) => obj.id == row);\r\n    let i = warehouseCodeList.indexOf(value);\r\n    tmpdata[index][column] = warehouseUuidList[i];\r\n    tmpdata[index][columnName] = warehouseNameList[i];\r\n\r\n    console.clear()\r\n    console.log(value,warehouseCodeList)\r\n    console.log(tmpdata)\r\n    setTimeout(async () => {\r\n      setCsvDataTmp(tmpdata);\r\n    }, 400);\r\n  };\r\n\r\n  validatePOSKU = async (id, row, idColumn) => {\r\n    const { setCsvDataTmp, globalData, setIsValidate, transaction } = this.props;\r\n    if(transaction==\"additional_inbound\"){\r\n      return;\r\n    }\r\n\r\n    let tmpdata = globalData;\r\n    try {\r\n      setIsValidate(false);\r\n      const url = \"/stocktake/rowValidationUpload\";\r\n      let elem = null;\r\n      let elemspan = null;\r\n      setTimeout(async () => {\r\n        elem = document.getElementById(`${idColumn}`);\r\n        elemspan = document.getElementById(`${idColumn}span`);\r\n        if (elem === null || elem === undefined) {\r\n          return 0;\r\n        }\r\n        elemspan.innerHTML = \"Validating\";\r\n        await axios({\r\n          method: \"post\",\r\n          url: url,\r\n          data: { data: [id] },\r\n        }).then(function (response) {\r\n          let data = response?.data?.data;\r\n          var index = tmpdata.findIndex((obj) => obj.id == row);\r\n          if (data[0] && data[0].isExist === true) {\r\n            tmpdata[index].wmsPoSkuCode = data[0].wmsPoSkuCode;\r\n            tmpdata[index].wmsPoSkuCodeStatus = true;\r\n            tmpdata[index].wmsPoSkuCodeReason = \"PO SKU Code Not Found\";\r\n            tmpdata[index].expiryDate = data[0].expiryDate;\r\n            tmpdata[index].inboundDate = data[0].inboundDate;\r\n            tmpdata[index].supplierName = data[0].supplierName;\r\n            tmpdata[index].supplierUuid = data[0].supplierUuid;\r\n            tmpdata[index].uom = data[0].uom;\r\n            tmpdata[index].photos = data[0].photos;\r\n            elem.classList.remove(\"red\");\r\n            elem.classList.add(\"hiddenTooltip\");\r\n          } else {\r\n            tmpdata[index].wmsPoSkuCodeStatus = false;\r\n            tmpdata[index].wmsPoSkuCodeReason = \"PO SKU Code Not Found\";\r\n            tmpdata[index].expiryDate = \"\";\r\n            tmpdata[index].inboundDate = \"\";\r\n            tmpdata[index].supplierName = \"\";\r\n            tmpdata[index].supplierUuid = \"\";\r\n            elem.classList.add(\"red\");\r\n            elem.classList.remove(\"hiddenTooltip\");\r\n            elemspan.innerHTML = \"PO SKU Code Not Found\";\r\n          }\r\n          setCsvDataTmp(tmpdata);\r\n        });\r\n      }, 400);\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  validateOutbountReason = (value, row, idColumn) => {\r\n    const { globalData } = this.props;\r\n    let tmp_data = globalData;\r\n    var index = tmp_data.findIndex((obj) => obj.id == row);\r\n    let datax = tmp_data[index];\r\n    if (value == \"\" && datax[\"outboundType\"].toUpperCase() == \"LAINNYA\") {\r\n      setTimeout(() => {\r\n        let elem = document.getElementById(`row${row}-outboundReason`);\r\n        elem.classList.add(\"red\", \"tooltip-custom\");\r\n        elem.innerHTML = `Outbound Reason Can't be empty<span class=\"tooltiptext\">Outbound Reason Can't be empty if Outbound type = 'Lainnya'</span>`;\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  validateOutbountType = (value, row, idColumn) => {\r\n    const { globalData, setIsValidate } = this.props;\r\n    let tmp_data = globalData;\r\n    setIsValidate(false);\r\n    if (value.toUpperCase() !== \"LAINNYA\") {\r\n      setIsValidate(true);\r\n      return 0;\r\n    }\r\n\r\n    var index = tmp_data.findIndex((obj) => obj.id == row);\r\n    let datax = tmp_data[index];\r\n    if (datax[\"outboundReason\"] == \"\") {\r\n      setTimeout(() => {\r\n        let elem = document.getElementById(`row${row}-outboundReason`);\r\n        elem.classList.add(\"red\", \"tooltip-custom\");\r\n        elem.innerHTML = `Outbound Reason Can't be empty<span class=\"tooltiptext\">Outbound Reason Can't be empty if Outbound type = 'Lainnya'</span>`;\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  validateSKUNumber = async (id, row, idColumn, key) => {\r\n    const { globalData, setCsvDataTmp, setIsValidate,transaction } = this.props;\r\n    let tmp_data = globalData;\r\n    try {\r\n      setIsValidate(false);\r\n      const url = \"/oss/skuByNumbers\";\r\n      let elem = null;\r\n      let elemspan = null;\r\n      setTimeout(async () => {\r\n        elem = document.getElementById(`${idColumn}`);\r\n        elemspan = document.getElementById(`${idColumn}span`);\r\n        if (elem === null || elem === undefined) {\r\n          return 0;\r\n        }\r\n        elemspan.innerHTML = \"Validating\";\r\n        await axios({\r\n          method: \"post\",\r\n          url: url,\r\n          data: { skuList: [id] },\r\n        }).then(function (response) {\r\n          let data = response?.data?.data;\r\n          let isSuccess = response.data.isSuccess;\r\n          var index = tmp_data.findIndex((obj) => obj.id == row);\r\n          if (isSuccess === true && data.length > 0) {\r\n            tmp_data[index][key] = data[0].skuNumber;\r\n            tmp_data[index][key + \"Reason\"] = data[0].skuDescription;\r\n            tmp_data[index][key + \"Status\"] = true;\r\n            tmp_data[index][key + \"Uuid\"] = data[0].id;\r\n            elem.classList.remove(\"red\");\r\n            elem.classList.add(\"hiddenTooltip\");\r\n\r\n            //custom\r\n            if (key == \"skuNumber\") {\r\n              tmp_data[index].skuUuid = data[0].id;\r\n              tmp_data[index].photo = data[0].imageMd;\r\n            }\r\n\r\n            if (key == \"newGrade\") {\r\n              tmp_data[index].newGradeUom = data[0].uom;\r\n            }\r\n            \r\n            if(transaction==\"additional_inbound\"){\r\n              tmp_data[index].uom = data[0].uom;\r\n            }\r\n\r\n          } else {\r\n            tmp_data[index][key] = id;\r\n            tmp_data[index][key + \"Reason\"] = \"SKU Number Not Found\";\r\n            tmp_data[index][key + \"Status\"] = false;\r\n            tmp_data[index][key + \"Uuid\"] = null;\r\n            elem.classList.add(\"red\");\r\n            elem.classList.remove(\"hiddenTooltip\");\r\n            elemspan.innerHTML = \"SKU Number Not Found\";\r\n\r\n            if (key == \"skuNumber\") {\r\n              tmp_data[index].skuUuid = \"\";\r\n              tmp_data[index].photo = \"\";\r\n            }\r\n            if (key == \"newGrade\") {\r\n              tmp_data[index].newGradeUom = null;\r\n            }\r\n            if(transaction==\"additional_inbound\"){\r\n              tmp_data[index].uom = \"\";\r\n            }\r\n          }\r\n          setCsvDataTmp(tmp_data);\r\n        });\r\n      }, 400);\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      columns,\r\n      hiddenRows,\r\n      tableClass,\r\n      warehouseArea,\r\n      outboundType,\r\n      setCheckingCsv,\r\n      globalData,\r\n      editable = true,\r\n      warehousesData = [],\r\n    } = this.props;\r\n    let { validateStatus,  keyy } = this.state;\r\n\r\n    //wh\r\n    let warehouseCodeList = [];\r\n    let warehouseUuidList = [];\r\n    let warehouseNameList = [];\r\n    if (warehousesData) {\r\n      let tmp = warehousesData?.data?.map((d) => {\r\n        warehouseCodeList.push(d.code);\r\n        warehouseUuidList.push(d.id);\r\n        warehouseNameList.push(d.name);\r\n      });\r\n    }\r\n\r\n    //wh area\r\n    let wh_area_label =\r\n      warehouseArea.map((data) => data.label.toUpperCase()) || [];\r\n    let wh_area_value = warehouseArea.map((data) => data.value) || [];\r\n    let wh_outboundtype_label = !outboundType\r\n      ? []\r\n      : outboundType.map((data) => data.label.toUpperCase());\r\n    let wh_outboundtype_value = !outboundType\r\n      ? []\r\n      : outboundType.map((data) => data.value);\r\n    const newFormat = columns.map((data, index) => {\r\n      data.validator = (newValue, row, column, done) => {\r\n        let key = data.dataField;\r\n        let keyStatus = key + \"Status\";\r\n        let keyReason = key + \"Reason\";\r\n        let stat = null;\r\n        let reason = null;\r\n        let idColumn = \"row\" + row[\"id\"] + \"-\" + key;\r\n        if (key == \"wmsPoSkuCode\") {\r\n          this.validatePOSKU(newValue, row.id, idColumn, key);\r\n          stat = true;\r\n        }\r\n\r\n        if (key == \"skuNumber\") {\r\n          this.validateSKUNumber(newValue, row.id, idColumn, key);\r\n          stat = true;\r\n        }\r\n\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\"];\r\n        if (key == \"newGrade\" && this.props.transaction == \"waste\") {\r\n          if (!arr_grade.includes(newValue.toUpperCase())) {\r\n            reason = \"Waste Type not found\";\r\n            checkType = false;\r\n            stat = false;\r\n          } else {\r\n            row[\"newGradeUuid\"] = newValue;\r\n            row[\"newGradeUom\"] = null;\r\n          }\r\n        } else if (key == \"newGrade\") {\r\n          if (!arr_grade.includes(newValue.toUpperCase())) {\r\n            //if not waste or semi waste\r\n            if (parseInt(newValue)) {\r\n              //if number\r\n              stat = true;\r\n              this.validateSKUNumber(newValue, row.id, idColumn, key);\r\n            } else if (newValue == \"\") {\r\n              row[\"newGradeUuid\"] = null;\r\n              row[\"newGradeUom\"] = null;\r\n              stat = true;\r\n            } else {\r\n              //if not number => undefined\r\n              reason = \"Grade Undefined\";\r\n              checkType = false;\r\n              stat = false;\r\n            }\r\n          } else {\r\n            row[\"newGradeUuid\"] = newValue;\r\n            row[\"newGradeUom\"] = null;\r\n          }\r\n        }\r\n\r\n        if (key == \"outboundType\" && wh_outboundtype_value.length > 0) {\r\n          if (!wh_outboundtype_label.includes(newValue.toUpperCase())) {\r\n            stat = false;\r\n            reason = `Outbound Type Not Found`;\r\n          } else {\r\n            let i = wh_outboundtype_label.indexOf(newValue.toUpperCase());\r\n            row[\"outboundTypeCode\"] = wh_outboundtype_value[i];\r\n            stat = true;\r\n            this.validateOutbountType(newValue, row.id, idColumn);\r\n          }\r\n        }\r\n\r\n        if (key == \"outboundReason\") {\r\n          this.validateOutbountReason(newValue, row.id, idColumn);\r\n        }\r\n\r\n        if (key == \"warehouse\") {\r\n          if (!warehouseCodeList.includes(newValue)) {\r\n            stat = false;\r\n            reason = `Warehouse Not Found`;\r\n          } else {\r\n            stat = true;\r\n            this.changeWarehouseUuid(\r\n              newValue,\r\n              \"warehouseUuid\",\r\n              \"warehouseName\",\r\n              row.id,\r\n              warehouseCodeList,\r\n              warehouseUuidList,\r\n              warehouseNameList\r\n            );\r\n          }\r\n        }\r\n        if (key == \"warehouseDestination\") {\r\n          if (!warehouseCodeList.includes(newValue)) {\r\n            stat = false;\r\n            reason = `Warehouse Not Found`;\r\n          } else {\r\n            stat = true;\r\n            this.changeWarehouseUuid(\r\n              newValue,\r\n              \"warehouseDestinationUuid\",\r\n              \"warehouseDestinationName\",\r\n              row.id,\r\n              warehouseCodeList,\r\n              warehouseUuidList,\r\n              warehouseNameList\r\n            );\r\n          }\r\n          console.log(stat)\r\n        }\r\n\r\n        if (key == \"areaName\" || key == \"areaNameDestination\") {\r\n          if (!wh_area_label.includes(newValue.toUpperCase())) {\r\n            stat = false;\r\n            reason = `Warehouse Area Not Found`;\r\n          } else {\r\n            let i = wh_area_label.indexOf(newValue.toUpperCase());\r\n            if (key == \"areaNameDestination\") {\r\n              row[\"areaDestination\"] = wh_area_value[i];\r\n            } else {\r\n              row[\"areaSource\"] = wh_area_value[i];\r\n            }\r\n            stat = true;\r\n          }\r\n        }\r\n\r\n        if (key == \"newPack\") {\r\n          let checkTypenewPack = isNaN(newValue) ? false : true;\r\n          if (!checkTypenewPack) {\r\n            stat = false;\r\n            reason = `Pack Should be a number`;\r\n          } else {\r\n            stat = true;\r\n          }\r\n        }\r\n\r\n        let checkType = null;\r\n        if (data.type == \"number\") {\r\n          checkType = isNaN(newValue) ? false : true;\r\n        } else {\r\n          checkType = true;\r\n        }\r\n        if (checkType === false) {\r\n          reason = `${data.text} Should be a ${data.type}`;\r\n        }\r\n\r\n        //some field can null\r\n        let canNull = [\r\n          \"grade\",\r\n          \"outboundReason\",\r\n          \"ripenessLevel\",\r\n          \"newRipeness\",\r\n          \"reason\",\r\n          \"expiryDate\",\r\n        ];\r\n        if (canNull.includes(key) && newValue === \"\") {\r\n          reason = \"\";\r\n          checkType = true;\r\n          stat = true;\r\n        } else if (key == \"grade\") {\r\n          if (!arr_grade.includes(newValue.toUpperCase())) {\r\n            reason = \"Waste Type Not Found\";\r\n            checkType = false;\r\n            stat = false;\r\n          }\r\n        }\r\n\r\n        //check ripenesslevel\r\n        if (key == \"ripenessLevel\" || key == \"newRipeness\") {\r\n          let allowedRipenessLevel = [0, 1, 2, 3];\r\n          if (\r\n            allowedRipenessLevel.includes(parseInt(newValue)) ||\r\n            newValue == \"\"\r\n          ) {\r\n            checkType = true;\r\n            stat = true;\r\n            reason = \"\";\r\n            if (newValue == \"\") {\r\n              newValue = \"\";\r\n            }\r\n          } else {\r\n            checkType = false;\r\n            stat = false;\r\n            reason = \"Undefined Ripeness Level\";\r\n          }\r\n        }\r\n\r\n        //check date\r\n        if (data.type == \"date_indo\") {\r\n          //checking date\r\n          let regex_date = /(0[1-9]|[12][0-9]|3[01])[-.](0[1-9]|1[012])[-.](19|20)\\d\\d/;\r\n          if (newValue.match(regex_date)) {\r\n            checkType = true;\r\n            stat = true;\r\n          } else if (newValue == \"\") {\r\n            checkType = true;\r\n            stat = true;\r\n          } else {\r\n            reason = `Date format must be 'dd-mm-yyyy'`;\r\n            checkType = false;\r\n            stat = false;\r\n          }\r\n        }\r\n\r\n        //set notif\r\n        row[keyReason] = reason;\r\n        if (stat && checkType) {\r\n          let specialKey = [\"wmsPoSkuCode\", \"skuNumber\"];\r\n          if (!specialKey.includes(key)) {\r\n            //some key have their own checking, so if not in array do checking error\r\n            row[keyStatus] = true;\r\n            setCheckingCsv();\r\n          }\r\n        }\r\n        return {\r\n          valid: stat && checkType ? true : false,\r\n          message: reason,\r\n        };\r\n      };\r\n\r\n      data.formatter = (cell, row, index) => {\r\n        let key = data.dataField;\r\n        let keyStatus = key + \"Status\";\r\n        let keyReason = key + \"Reason\";\r\n        let stat = true;\r\n        let idColumn = \"row\" + row[\"id\"] + \"-\" + key;\r\n        let txt = row[keyReason];\r\n\r\n        if (row[keyStatus] === false) {\r\n          validateStatus = false;\r\n          stat = false;\r\n          return (\r\n            <div id={idColumn} className=\"tooltip-custom red\">\r\n              {cell}\r\n              <span id={idColumn + \"span\"} className=\"tooltiptext\">\r\n                {txt}\r\n              </span>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <div id={idColumn} className=\"tooltip-custom hiddenTooltip\">\r\n            {cell}\r\n            <span id={idColumn + \"span\"} className=\"tooltiptext\">\r\n              {txt}\r\n            </span>\r\n          </div>\r\n        );\r\n      };\r\n      return data;\r\n    });\r\n\r\n    const sortOption = {\r\n      // No need to configure sortFunc per column\r\n      sortFunc: this.sortFunc,\r\n      // No need to configure sortCaret per column\r\n      sortCaret: (order, column) => {\r\n        if (!order) return <i className=\"iconU-tableSortingNull ml-2\"></i>;\r\n        else if (order === \"asc\")\r\n          return <i className=\"iconU-tableSortingTop ml-2\"></i>;\r\n        else if (order === \"desc\")\r\n          return <i className=\"iconU-tableSortingBottom ml-2\"></i>;\r\n        return null;\r\n      },\r\n    };\r\n    // console.clear(); \r\n    console.log(globalData);\r\n    return (\r\n      <CCard className=\"table-responsive\">\r\n        <BootstrapTable\r\n          keyField=\"id\"\r\n          data={globalData}\r\n          columns={newFormat}\r\n          sort={sortOption}\r\n          classes={tableClass || null}\r\n          cellEdit={\r\n            editable === true\r\n              ? cellEditFactory({\r\n                  mode: \"click\",\r\n                  blurToSave: true,\r\n                  nonEditableRows: () => this.props.dataDoubleRow || [],\r\n                })\r\n              : null\r\n          }\r\n          bordered={false}\r\n          hiddenRows={hiddenRows}\r\n          key={keyy}\r\n        />\r\n      </CCard>\r\n    );\r\n  }\r\n}\r\n\r\nclass TableResult extends React.Component {\r\n  render() {\r\n    const { columns, tableClass, data } = this.props;\r\n\r\n    const newFormat = columns.map((data, index) => {\r\n      data.formatter = (cell, row, index) => {\r\n        let key = data.dataField;\r\n        if (key == \"uploadStatus\" && row[\"uploadStatus\"] === \"Failed\") {\r\n          return (\r\n            <div className=\"tooltip-custom red\">\r\n              {cell}\r\n              <span className=\"tooltiptext\">{row[\"uploadStatusReason\"]}</span>\r\n            </div>\r\n          );\r\n        } else if (key == \"uploadStatus\" && row[\"uploadStatus\"] === \"Success\") {\r\n          return (\r\n            <div className=\"green\">\r\n              {cell}\r\n              <span></span>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <div>\r\n            {cell}\r\n            <span></span>\r\n          </div>\r\n        );\r\n      };\r\n      return data;\r\n    });\r\n\r\n    const sortOption = {\r\n      // No need to configure sortFunc per column\r\n      sortFunc: this.sortFunc,\r\n      // No need to configure sortCaret per column\r\n      sortCaret: (order, column) => {\r\n        if (!order) return <i className=\"iconU-tableSortingNull ml-2\"></i>;\r\n        else if (order === \"asc\")\r\n          return <i className=\"iconU-tableSortingTop ml-2\"></i>;\r\n        else if (order === \"desc\")\r\n          return <i className=\"iconU-tableSortingBottom ml-2\"></i>;\r\n        return null;\r\n      },\r\n    };\r\n\r\n    return (\r\n      <CCard className=\"table-responsive\">\r\n        <BootstrapTable\r\n          keyField=\"id\"\r\n          data={data}\r\n          columns={newFormat}\r\n          sort={sortOption}\r\n          classes={tableClass || null}\r\n          bordered={false}\r\n        />\r\n      </CCard>\r\n    );\r\n  }\r\n}\r\n\r\nexport { TableResult, TableEditable };\r\n","export const activeStockTableHeader = [\r\n    { width: '100%', Header: 'SYNC DATE', placeholder: 'Sync Date', accessor: 'updatedAt', style: { textAlign: 'left', display: 'start', justifyContent: 'flex-start' } },\r\n    { width: '100%', Header: 'USER', placeholder: 'User', accessor: 'createdBy' },\r\n    { width: '100%', Header: 'MODULE', placeholder: 'Module', accessor: 'module', style: { textAlign: 'right', display: 'flex', justifyContent: 'flex-start' }, },\r\n    { width: '100%', Header: 'MESSAGE RESPONSE', placeholder: 'Message Response', accessor: 'responseMessage', style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-start' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\r\n]\r\n\r\nexport const activeStockTableHeaderDetail = [\r\n    { width: '100%', Header: 'SKU DESCRIPTION', placeholder: 'Sku Description', accessor: 'skuDescription', style: { textAlign: 'left', display: 'start', justifyContent: 'flex-start' } },\r\n    { width: '100%', Header: 'SKU NUMBER', placeholder: 'Sku Number', accessor: 'skuNumber' },\r\n    { width: '100%', Header: 'REASON', placeholder: 'Reason', accessor: 'reason', style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-start' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\r\n]\r\n\r\nexport const data = [\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n]"],"sourceRoot":""}