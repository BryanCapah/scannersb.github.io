{"version":3,"sources":["Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/FileUploader/services.js","Component/FileUploadProgress/index.jsx","Component/FileUploader/index.jsx"],"names":["PopUp","refresh","status","icon","statusDisplay","title","cancelButtonTitle","actionButtonTitle","cancelButtonClass","actionButtonClass","actionButtonEvent","colorText","msg1","msg2","onCloseFunction","refreshOnCancel","setIsSuccess","dispatch","useDispatch","code","message","useState","show","setShow","useEffect","window","onkeydown","e","keyCode","className","closeOnBackdrop","onClose","success","name","type","STATUS","size","style","minHeight","bodyOpenClassName","onClick","location","reload","refreshPage","parentOncCloseFunction","templateDownload","document","getElementById","click","csvReader","fieldArray","setIsProgressPercent","Promise","resolve","reject","i","jsonArray","reader","FileReader","onload","csv","parse","result","err","data","length","map","obj","index","newObject","toString","split","csvObj","csvIndex","push","percentage","Math","ceil","setTimeout","readAsBinaryString","xlsReader","setIsJsonArray","a","evt","bstr","target","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","putCsvFieldJson","STOK_TAKE_UPLOAD_JSON","csvField","validateColumn","field","fileName","warehouseArea","warehouseUuid","outboundType","setIsCheckingSchema","warehousesData","warehouseCodeList","warehouseUuidList","warehouseNameList","d","id","wh_area_label","label","toUpperCase","wh_area_value","value","wh_outboundtype_label","wh_outboundtype_value","csv_schema","text","replace","distinctPOSKUInfoId","distinctSKUNumber","schemaRow","key","keys","includes","console","clear","log","shift","emptyRow","fieldData","fieldIndex","undefined","dataField","indexOf","parseInt","tmp_data","stat","isNaN","match","csvData","csvFileName","csvDistinctPOSKUInfoId","csvDistinctSKUNumber","cleaningData","poSkuInfoValidated","poSkuNumberValidated","transaction","setIsProgressStatus","nextPage","wmsPoSkuCode","wmsPoSkuUom","uom","skuNumberArray","skuUuidArray","skuPhotosArray","skuUomArray","skuNumber","imageMd","cleanData","areaSource","areaDestination","warehouseDestination","warehouseSource","indexId","skuValidatedData","isExist","inboundDate","wmsPoSkuCodeStatus","wmsPoSkuCodeReason","tmp_grade","newGrade","arr_grade","idx","newGradeStatus","newGradeUuid","newGradeReason","tmp_sku_number","skuUuid","photo","skuNumberStatus","skuNumberReason","tmp_new_grade","newGradeUom","resetCsvResist","resetStatus","setIsResetCsvPersist","VALIDATE_PO_SKU_INFO_ID","skuCodeValidated","FileUploadProgress","progressPercent","display","cancelHandler","cancelButton","lineHeight","cursor","class","role","width","aria-valuemin","aria-valuemax","baseStyle","flex","flexDirection","alignItems","paddingTop","paddingBottom","paddingLeft","paddingRight","outline","transition","height","parentStyle","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","activeStyle","acceptStyle","rejectStyle","FileUploader","React","isProgressDisplay","setIsProgressDisplay","isProgressStatus","isProgressPercent","isProgressFileName","setIsProgressFileName","isWarehouseArea","setIsWarehouseArea","isAdditionalOutbound","setIsAdditionalOutbound","isUploadStatus","setIsUploadStatus","isCheckingSchema","isResetCsvPersist","modalShow","setModalShow","modalShow2","setModalShow2","selectorWarehouseArea","useSelector","state","warehouseAreaCsv","selectorOutboundType","outboundTypeCsv","selectorStatus","selectorDistinctPOSKUInfoId","uploadStatus","selectorDistinctSKUNumber","selectorSkuCodeValidated","selectorSkuNumberValidated","skuNumberValidated","selectorCsvData","warehouseData","user","getWarehouseArea","getOutboundType","onDropAccepted","file","fileArr","fileType","useDropzone","noClick","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","open","acceptedFiles","useMemo","validatePoSkuInfoId","skuData","validateSkuNumber","skuNumberData","bulk","fontSize"],"mappings":"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","file":"static/js/8.afb54188.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { onClose, refreshPage } from \"./services.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { STATUS } from \"apiServices/action\";\r\n\r\nconst PopUp = ({\r\n  refresh,\r\n  status,\r\n  icon,\r\n  statusDisplay = false,\r\n  title = \"\",\r\n  cancelButtonTitle = \"Cancel\",\r\n  actionButtonTitle = \"Submit\",\r\n  cancelButtonClass = \"bg-background\",\r\n  actionButtonClass = \"bg-background\",\r\n  actionButtonEvent = null,\r\n  colorText = \"red\",\r\n  msg1 = null,\r\n  msg2 = null,\r\n  onCloseFunction = null,\r\n  refreshOnCancel = true,\r\n  setIsSuccess\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  if (status?.code === 500 && statusDisplay == false) {\r\n    icon = \"em-pensive\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 408 && statusDisplay == false) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Request Timeout\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 400 && statusDisplay == false) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n  if (status?.code === 404) {\r\n    title = \"Something wrong with the application\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n\r\n  const [show, setShow] = useState(statusDisplay);\r\n\r\n  useEffect(() => {\r\n    //from outside change\r\n    setShow(statusDisplay);\r\n  }, [statusDisplay]);\r\n\r\n  useEffect(() => {\r\n  }, [show]);\r\n\r\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\r\n  return (\r\n    <CRow className={`${show ? null : \"d-none\"}`}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          closeOnBackdrop={false}\r\n          onClose={() => {\r\n            setShow(false)\r\n            if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n            dispatch({ type: STATUS, status: null });\r\n            if (onCloseFunction) {\r\n              onCloseFunction()\r\n            }\r\n          }}\r\n          size=\"lg\"\r\n          style={{ minHeight: \"280px\" }}\r\n          bodyOpenClassName=\"p-3\"\r\n        >\r\n          {/* <div className='d-flex flex-row-reverse'>\r\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-3 border-none\">\r\n              <CModalTitle className={`text LatoBold ${colorText}`}>\r\n                {title}\r\n              </CModalTitle> */}\r\n\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <i\r\n              className=\"pr-3 pt-3 iconU-modalClose\"\r\n              onClick={() => {\r\n                setShow(false)\r\n                if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n                dispatch({ type: STATUS, status: null });\r\n                if (onCloseFunction) {\r\n                  onCloseFunction()\r\n                }\r\n              }}\r\n            ></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className={`text LatoBold ${colorText}`}>\r\n              {title} <span><i className={`em ${icon}`}></i></span>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">{msg1}</p>\r\n            <p className=\"text\">{msg2}</p>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            {cancelButtonTitle ? (\r\n              <CButton\r\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\r\n                onClick={() => {\r\n                  if (refreshOnCancel) {\r\n                    if (typeof (refresh) === 'function') refresh()\r\n                    else refreshPage({ refresh: true });\r\n                  } else {\r\n                    onClose({\r\n                      setShow,\r\n                      parentOncCloseFunction: onCloseFunction,\r\n                    });\r\n                  }\r\n                  dispatch({ type: STATUS, status: null });\r\n                }}\r\n              >\r\n                {cancelButtonTitle}\r\n              </CButton>\r\n            ) : null}\r\n            {actionButtonTitle ? (\r\n              <CButton\r\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\r\n                onClick={() => {\r\n                  if (actionButtonEvent) {\r\n                    actionButtonEvent();\r\n                    setShow(false);\r\n                  } else {\r\n                    setShow(false)\r\n                  }\r\n                }\r\n                }\r\n              >\r\n                {actionButtonTitle}\r\n              </CButton>\r\n            ) : null}{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\r\n  setShow(false);\r\n  if (parentOncCloseFunction) {\r\n    parentOncCloseFunction();\r\n  }\r\n\r\n};\r\n\r\nexport const refreshPage = ({ refresh = true }) => {\r\n  if (refresh === true) {\r\n    window.location.reload(false);\r\n  }\r\n};\r\n","/* eslint-disable array-callback-return */\r\nimport csv from \"csv\";\r\nimport * as XLSX from \"xlsx\";\r\nimport {\r\n  STOK_TAKE_UPLOAD_JSON,\r\n  VALIDATE_PO_SKU_INFO_ID,\r\n  STATUS,\r\n} from \"apiServices/action\";\r\n\r\nexport const templateDownload = () => {\r\n  document.getElementById(\"download-template-xls\").click();\r\n};\r\nexport const csvReader = (e, fieldArray, setIsProgressPercent) => {\r\n  return new Promise((resolve, reject) => {\r\n    let i = 0;\r\n    let jsonArray = [];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      csv.parse(reader.result, (err, data) => {\r\n        if (data.length > 2001) {\r\n          //why 2001? , because line 1 is header\r\n          setIsProgressPercent(0);\r\n          resolve(false);\r\n        }\r\n        data.map((obj, index) => {\r\n          if (index === 0) {\r\n            i++;\r\n            return false; // skip\r\n          }\r\n\r\n          let newObject = {};\r\n          newObject[\"id\"] = index;\r\n\r\n          let csvArray = data[i].toString().split(\";\");\r\n          csvArray.map((csvObj, csvIndex) => {\r\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\r\n          });\r\n          i++;\r\n          jsonArray.push(newObject);\r\n\r\n          //count percent\r\n          let percentage = ((index + 1) * 25) / data.length;\r\n          setIsProgressPercent(Math.ceil(percentage));\r\n        });\r\n      });\r\n    };\r\n\r\n    //checking\r\n    setTimeout(() => {\r\n      resolve(jsonArray);\r\n    }, 200);\r\n    reader.readAsBinaryString(e[0]);\r\n  });\r\n};\r\n\r\nexport const xlsReader = async (\r\n  e,\r\n  fieldArray,\r\n  setIsProgressPercent,\r\n  setIsJsonArray,\r\n  dispatch\r\n) => {\r\n  let i = 0;\r\n  let jsonArray = [];\r\n  const reader = new FileReader();\r\n  let data = null;\r\n  let error = false;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    var fr = new FileReader();\r\n    reader.onload = async (evt) => {\r\n      /* Parse data */\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n      /* Update state */\r\n\r\n      await csv.parse(data, (err, data) => {\r\n        if (data.length > 2001) {\r\n          //why 2001? , because line 1 is header\r\n          setIsProgressPercent(0);\r\n          resolve(false);\r\n        }\r\n        data.map((obj, index) => {\r\n          let newObject = {};\r\n          newObject[\"id\"] = index;\r\n\r\n          let csvArray = data[i].toString().split(\",\");\r\n          csvArray.map((csvObj, csvIndex) => {\r\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\r\n          });\r\n          i++;\r\n          jsonArray.push(newObject);\r\n\r\n          //count percent\r\n          let percentage = ((index + 1) * 25) / data.length;\r\n          setIsProgressPercent(Math.ceil(percentage));\r\n        });\r\n      });\r\n\r\n      //checking\r\n      setTimeout(() => {\r\n        resolve(jsonArray);\r\n      }, 200);\r\n    };\r\n\r\n    reader.readAsBinaryString(e[0]);\r\n  });\r\n};\r\n\r\nexport const putCsvFieldJson = ({ dispatch, jsonArray }) => {\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvField: jsonArray });\r\n};\r\n\r\nexport const validateColumn = async ({\r\n  field,\r\n  jsonArray,\r\n  setIsProgressPercent,\r\n  fileName,\r\n  dispatch,\r\n  warehouseArea,\r\n  warehouseUuid,\r\n  outboundType,\r\n  setIsCheckingSchema,\r\n  warehousesData,\r\n}) => {\r\n  //warehouse\r\n  let warehouseCodeList = [];\r\n  let warehouseUuidList = [];\r\n  let warehouseNameList = [];\r\n  if (warehousesData) {\r\n    warehousesData.data.map((d) => {\r\n      warehouseCodeList.push(d.code);\r\n      warehouseUuidList.push(d.id);\r\n      warehouseNameList.push(d.name);\r\n    });\r\n  }\r\n\r\n  //warehouse area\r\n  let wh_area_label = !warehouseArea\r\n    ? []\r\n    : warehouseArea.map((data) => data.label.toUpperCase());\r\n  let wh_area_value = !warehouseArea\r\n    ? []\r\n    : warehouseArea.map((data) => data.value);\r\n  let wh_outboundtype_label = !outboundType\r\n    ? []\r\n    : outboundType.map((data) => data.label.toUpperCase());\r\n  let wh_outboundtype_value = !outboundType\r\n    ? []\r\n    : outboundType.map((data) => data.value);\r\n  let csv_schema = !field\r\n    ? []\r\n    : field.map((data) => data.text.toUpperCase().replace(/\\s/g, \"\"));\r\n  let distinctPOSKUInfoId = [];\r\n  let distinctSKUNumber = [];\r\n\r\n  // check schema\r\n  let checkSchema = true;\r\n  let i = 0;\r\n  const schemaRow = jsonArray[0];\r\n  for (var key in schemaRow) {\r\n    if (key == \"id\") {\r\n      continue;\r\n    }\r\n    let keys = schemaRow[key].toUpperCase().replace(/\\s/g, \"\");\r\n    if (\r\n      key !== \"undefined\" &&\r\n      (csv_schema[i + 1] !== keys || !csv_schema.includes(keys))\r\n    ) {\r\n      console.clear();\r\n      console.log(\"--Schema Not Same--\");\r\n      console.log(\"Schema \\t\\t: \", csv_schema[i + 1]);\r\n      console.log(\"File SChema : \", keys);\r\n      checkSchema = false;\r\n      setIsCheckingSchema(false);\r\n      return 0;\r\n    }\r\n    i++;\r\n  }\r\n\r\n  jsonArray.shift();\r\n  await jsonArray.map((data, index) => {\r\n    let emptyRow = true; // if empty row dont show\r\n    field.map((fieldData, fieldIndex) => {\r\n      //if null then return\r\n      if (fieldData === undefined || fieldData === null) {\r\n        return;\r\n      }\r\n\r\n      if (fieldData.dataField !== \"id\" && data[fieldData.dataField] == \"\") {\r\n        return;\r\n      } else if (fieldData.dataField == \"id\") {\r\n      } else {\r\n        emptyRow = false;\r\n      }\r\n      // end checking empty\r\n\r\n      //set warehouse id\r\n      data[\"warehouseSource\"] = warehouseUuid;\r\n\r\n      //checking warehouse\r\n      if (warehouseCodeList && fieldData.dataField == \"warehouse\") {\r\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`;\r\n          data[\"warehouseUuid\"] = \"\";\r\n          data[\"warehouseName\"] = \"\";\r\n          return;\r\n        } else {\r\n          let i = warehouseCodeList.indexOf(data[fieldData.dataField]);\r\n          data[\"warehouseUuid\"] = warehouseUuidList[i];\r\n          data[\"warehouseName\"] = warehouseNameList[i];\r\n        }\r\n      }\r\n\r\n      //checing warehouse Destination\r\n      if (warehouseCodeList && fieldData.dataField == \"warehouseDestination\") {\r\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`;\r\n          data[\"warehouseDestinationUuid\"] = \"\";\r\n          data[\"warehouseDestinationName\"] = \"\";\r\n          return;\r\n        } else {\r\n          let i = warehouseCodeList.indexOf(data[fieldData.dataField]);\r\n          data[\"warehouseDestinationUuid\"] = warehouseUuidList[i];\r\n          data[\"warehouseDestinationName\"] = warehouseNameList[i];\r\n        }\r\n      }\r\n\r\n      //checking warehouse area\r\n      if (fieldData.dataField == \"areaName\") {\r\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\r\n          data[\"areaSource\"] = null;\r\n          return;\r\n        } else {\r\n          let i = wh_area_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"areaSource\"] = wh_area_value[i];\r\n        }\r\n      }\r\n\r\n      if (fieldData.dataField == \"areaNameDestination\") {\r\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\r\n          data[\"areaDestination\"] = null;\r\n          return;\r\n        } else {\r\n          let i = wh_area_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"areaDestination\"] = wh_area_value[i];\r\n        }\r\n      }\r\n\r\n      //checking outbound type\r\n      if (\r\n        wh_outboundtype_value.length > 0 &&\r\n        fieldData.dataField == \"outboundType\"\r\n      ) {\r\n        if (\r\n          !wh_outboundtype_label.includes(\r\n            data[fieldData.dataField].toUpperCase()\r\n          )\r\n        ) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Outbound Type Not Found`;\r\n          data[\"outboundTypeCode\"] = null;\r\n          return;\r\n        } else {\r\n          let i = wh_outboundtype_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"outboundTypeCode\"] = wh_outboundtype_value[i];\r\n        }\r\n      }\r\n\r\n      //newgrade\r\n      if (fieldData.dataField == \"newGrade\") {\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n        if (\r\n          data[fieldData.dataField] &&\r\n          !arr_grade.includes(data[fieldData.dataField].toUpperCase())\r\n        ) {\r\n          //if not waste or semi waste\r\n          if (parseInt(data[fieldData.dataField])) {\r\n            //if number, check sku number\r\n            if (!distinctSKUNumber.includes(data[fieldData.dataField])) {\r\n              distinctSKUNumber.push(data[fieldData.dataField]);\r\n            }\r\n            data[fieldData.dataField + \"Status\"] = true;\r\n          } else if (data[fieldData.dataField] == \"\") {\r\n            //if null\r\n            data[fieldData.dataField + \"Status\"] = true;\r\n          } else {\r\n            //if not number => undefined\r\n            data[fieldData.dataField + \"Status\"] = false;\r\n            data[fieldData.dataField + \"Reason\"] = `Grade Undefined`;\r\n          }\r\n        } else {\r\n          data[\"newGradeUuid\"] = data[fieldData.dataField];\r\n        }\r\n      }\r\n\r\n      //set ripeness\r\n      let ripeness = null;\r\n      if (\r\n        (fieldData.dataField == \"ripenessLevel\" ||\r\n          fieldData.dataField == \"newRipeness\") &&\r\n        data[fieldData.dataField] !== undefined\r\n      ) {\r\n        let ripeness_ = data[fieldData.dataField].split(\" \");\r\n        ripeness = ripeness_[1];\r\n      }\r\n\r\n      //checking type\r\n      let tmp_data = data[fieldData.dataField];\r\n      let stat = null;\r\n      if (fieldData.type == \"number\") {\r\n        if (isNaN(tmp_data)) {\r\n          stat = false;\r\n        } else {\r\n          stat = true;\r\n\r\n          if (fieldData.dataField == \"wmsPoSkuCode\") {\r\n            if (!distinctPOSKUInfoId.includes(tmp_data)) {\r\n              distinctPOSKUInfoId.push(tmp_data);\r\n            }\r\n          }\r\n\r\n          //distinct sku angka maka push ke array buat di cek\r\n          if (fieldData.dataField == \"skuNumber\") {\r\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\r\n              distinctSKUNumber.push(tmp_data);\r\n            }\r\n          }\r\n        }\r\n      } else if (fieldData.type == \"date_indo\") {\r\n        //checking date\r\n        let regex_date = /(0[1-9]|[12][0-9]|3[01])[-.](0[1-9]|1[012])[-.](19|20)\\d\\d/;\r\n        if (tmp_data.match(regex_date)) {\r\n          stat = true;\r\n        } else {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[\r\n            fieldData.dataField + \"Reason\"\r\n          ] = `Date format must be 'dd-mm-yyyy'`;\r\n          return;\r\n        }\r\n        // console.log('stat date', stat)\r\n        // console.log(`${fieldData.dataField}Reason`, data[fieldData.dataField + \"Reason\"])\r\n      } else {\r\n        stat = true;\r\n      }\r\n\r\n      //grade can null\r\n      let canNull = [\r\n        \"grade\",\r\n        \"outboundReason\",\r\n        \"ripenessLevel\",\r\n        \"newRipeness\",\r\n        \"newGrade\",\r\n      ];\r\n      if (canNull.includes(fieldData.dataField) && tmp_data == \"\") {\r\n        stat = true;\r\n      }\r\n\r\n      //check newGrade, jika angka maka cek ke distinct sku\r\n      if (fieldData.dataField == \"newGrade\") {\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n        if (!arr_grade.includes(tmp_data.toUpperCase())) {\r\n          //if not waste or semi waste\r\n          if (parseInt(tmp_data)) {\r\n            //if number\r\n            stat = true;\r\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\r\n              distinctSKUNumber.push(tmp_data);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      data[fieldData.dataField + \"Status\"] = stat;\r\n      if (!stat) {\r\n        data[\r\n          fieldData.dataField + \"Reason\"\r\n        ] = `Invalid ${fieldData.text} \\nShould be a ${fieldData.type}`;\r\n      } else {\r\n        data[fieldData.dataField + \"Reason\"] = \"\";\r\n      }\r\n\r\n      let percentage =\r\n        ((index + 1 + parseInt(jsonArray.length)) * 50) /\r\n        (parseInt(jsonArray.length) * 2);\r\n      setIsProgressPercent(Math.ceil(percentage));\r\n    });\r\n    data[\"emptyRow\"] = emptyRow;\r\n  });\r\n\r\n  //end checking type\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: jsonArray });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: fileName });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctPOSKUInfoId: distinctPOSKUInfoId,\r\n  });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctSKUNumber: distinctSKUNumber,\r\n  });\r\n};\r\n\r\nexport const cleaningData = async ({\r\n  poSkuInfoValidated,\r\n  poSkuNumberValidated,\r\n  csvData,\r\n  setIsProgressPercent,\r\n  dispatch,\r\n  status,\r\n  transaction,\r\n  setIsProgressStatus,\r\n  nextPage,\r\n}) => {\r\n  //checking\r\n  if (status === false || status === null) {\r\n    return 0;\r\n  }\r\n  if (\r\n    csvData === undefined ||\r\n    csvData === null ||\r\n    poSkuInfoValidated === null ||\r\n    poSkuInfoValidated === undefined ||\r\n    poSkuNumberValidated === null ||\r\n    poSkuNumberValidated === undefined\r\n  ) {\r\n    console.clear();\r\n    return 0;\r\n  }\r\n\r\n  //split data and id po sku code\r\n  const wmsPoSkuCode = [];\r\n  const wmsPoSkuUom = [];\r\n  poSkuInfoValidated.map((data) => {\r\n    wmsPoSkuCode.push(data.wmsPoSkuCode);\r\n    wmsPoSkuUom.push(data.uom);\r\n  });\r\n\r\n  //split sku number and skuUUid sku number\r\n  let skuNumberArray = [];\r\n  let skuUuidArray = [];\r\n  let skuPhotosArray = [];\r\n  let skuUomArray = [];\r\n  poSkuNumberValidated.map((data) => {\r\n    skuNumberArray.push(data.skuNumber);\r\n    skuUuidArray.push(data.id);\r\n    skuPhotosArray.push(data.imageMd);\r\n    skuUomArray.push(data.uom);\r\n  });\r\n\r\n  //cleaning data\r\n  let cleanData = [];\r\n  csvData.map((data, index) => {\r\n    //if empty row then skip\r\n    if (data.emptyRow === true) {\r\n      return 0;\r\n    }\r\n\r\n    //format fixing\r\n    data.areaSource = parseInt(data.areaSource);\r\n    data.areaDestination = parseInt(data.areaDestination);\r\n\r\n    //if transaction stocktake then source and destination is same\r\n    if (\r\n      transaction == \"stock_take\" ||\r\n      transaction == \"repacking\" ||\r\n      transaction == \"outbound\"\r\n    ) {\r\n      data.areaDestination = parseInt(data.areaSource);\r\n      data.warehouseDestination = parseInt(data.warehouseSource);\r\n    }\r\n    //get index dari poskucode\r\n    let indexId = wmsPoSkuCode.indexOf(data.wmsPoSkuCode);\r\n\r\n    //get validated data\r\n    let skuValidatedData = poSkuInfoValidated[indexId];\r\n\r\n    if (\r\n      !skuValidatedData ||\r\n      skuValidatedData.isExist === undefined ||\r\n      skuValidatedData.isExist === false ||\r\n      skuValidatedData.isExist === null\r\n    ) {\r\n      data.wmsPoSkuCodeStatus = false;\r\n      data.wmsPoSkuCodeReason = \"PO SKU Code Not Found\";\r\n    } else {\r\n      // skuValidatedData.expiryDate = skuValidatedData.expiryDate\r\n      data.inboundDate = skuValidatedData.inboundDate;\r\n      data.uom = wmsPoSkuUom[indexId];\r\n    }\r\n\r\n    //check grade\r\n    let tmp_grade = data.newGrade;\r\n    let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n    if (\r\n      tmp_grade !== undefined &&\r\n      !arr_grade.includes(tmp_grade.toUpperCase())\r\n    ) {\r\n      //if not waste or semi waste\r\n      if (skuNumberArray.includes(tmp_grade)) {\r\n        let idx = skuNumberArray.indexOf(tmp_grade);\r\n        data.newGradeStatus = true;\r\n        data.newGradeUuid = skuUuidArray[idx];\r\n      } else if (tmp_grade == \"\") {\r\n        data.newGradeUuid = \"\";\r\n        data.newGradeStatus = true;\r\n      } else {\r\n        //if not number => undefined\r\n        data.newGradeReason = \"Grade Undefined\";\r\n        data.newGradeStatus = false;\r\n      }\r\n    }\r\n\r\n    //check Sku Number\r\n    let tmp_sku_number = data.skuNumber;\r\n    if (!skuNumberArray.includes(tmp_sku_number)) {\r\n      data.skuNumberStatus = false;\r\n      data.skuNumberReason = \"SKU Number Not Found\";\r\n      data.skuUuid = \"\";\r\n    } else {\r\n      let idx = skuNumberArray.indexOf(tmp_sku_number);\r\n      data.skuUuid = skuUuidArray[idx];\r\n      data.photo = skuPhotosArray[idx];\r\n    }\r\n\r\n    //check New Grade\r\n    let tmp_new_grade = data.newGrade;\r\n    console.log(\"tmp_new_grade\", tmp_new_grade);\r\n    if (\r\n      (tmp_new_grade && arr_grade.includes(tmp_new_grade.toUpperCase())) ||\r\n      tmp_new_grade == \"\"\r\n    ) {\r\n      data.newGradeReason = \"\";\r\n      data.newGradeStatus = true;\r\n      data.newGradeUuid = null;\r\n      data.newGradeUom = null;\r\n    } else {\r\n      if (skuNumberArray.includes(tmp_new_grade)) {\r\n        let idx = skuNumberArray.indexOf(tmp_new_grade);\r\n        data.newGradeReason = \"\";\r\n        data.newGradeStatus = true;\r\n        data.newGradeUuid = skuUuidArray[idx];\r\n        data.newGradeUom = skuUomArray[idx];\r\n      } else {\r\n        data.newGradeReason = \"SKU Number Not Found\";\r\n        data.newGradeStatus = false;\r\n        data.newGradeUuid = null;\r\n        data.newGradeUom = null;\r\n      }\r\n    }\r\n\r\n    //merging_array\r\n    cleanData.push({ ...data, ...skuValidatedData });\r\n  });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: cleanData });\r\n  setIsProgressPercent(Math.ceil(100));\r\n  setTimeout(() => {\r\n    nextPage();\r\n  }, 200);\r\n};\r\n\r\nexport const resetCsvResist = async ({\r\n  dispatch,\r\n  resetStatus,\r\n  setIsResetCsvPersist,\r\n}) => {\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: null });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: null });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctPOSKUInfoId: null,\r\n  });\r\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\r\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\r\n  dispatch({ type: STATUS, status: null });\r\n  setIsResetCsvPersist(true);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./index.scss\";\r\n\r\nconst FileUploadProgress = ({\r\n  status,\r\n  progressPercent,\r\n  fileName,\r\n  display = false,\r\n  cancelButton = null,\r\n  cancelHandler,\r\n}) => {\r\n  useEffect(() => {\r\n  }, [progressPercent, status]);\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-100 d-flex flex-column progressBar \" +\r\n        (!display ? \"hiddenProgress\" : null)\r\n      }\r\n    >\r\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white border-all radius-all mb-3 mt-0\">\r\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n          <div className=\"uploadStatus w-100\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-7\">\r\n                <i className=\"iconU-sideBarInventoryEntry green\"></i> File\r\n                {fileName}\r\n              </div>\r\n              <div className=\"col-md-5\">\r\n                <p className=\"float-right\" style={{ lineHeight: \"30px\", cursor: \"pointer\" }} onClick={() => { cancelHandler() }}>\r\n                  Cancel\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"progress\">\r\n              <div\r\n                class=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                style={{ width: progressPercent + \"%\" }}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n              ></div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <div className=\"emptyTextField inline\">{status}</div>\r\n              <div className=\"text inline font-weight-bold\">\r\n                {\"  \"}\r\n                {progressPercent}%\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadProgress;\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./FileUploader.scss\";\r\nimport {\r\n  templateDownload,\r\n  csvReader,\r\n  putCsvFieldJson,\r\n  validateColumn,\r\n  xlsReader,\r\n  cleaningData,\r\n  resetCsvResist,\r\n} from \"./services.js\";\r\nimport FileUploadProgress from \"Component/FileUploadProgress\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport { validatePoSkuInfoId, validateSkuNumber } from \"apiServices\";\r\nimport { getWarehouseArea, getOutboundType } from \"apiServices/dropdown\";\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  paddingTop: \"20px\",\r\n  paddingBottom: \"20px\",\r\n  paddingLeft: \"20px\",\r\n  paddingRight: \"20px\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n  height: \"400px\",\r\n};\r\n\r\nconst parentStyle = {\r\n  paddingTop: \"20px\",\r\n  paddingBottom: \"10px\",\r\n  paddingLeft: \"20px\",\r\n  paddingRight: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fff\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n  height: \"600px\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nconst FileUploader = ({ field, transaction, nextPage = null, type = null }) => {\r\n  const [isProgressDisplay, setIsProgressDisplay] = React.useState(false);\r\n  const [isProgressStatus, setIsProgressStatus] = React.useState();\r\n  const [isProgressPercent, setIsProgressPercent] = React.useState(0);\r\n  const [isProgressFileName, setIsProgressFileName] = React.useState(null);\r\n  const [isWarehouseArea, setIsWarehouseArea] = React.useState(null);\r\n  const [isAdditionalOutbound, setIsAdditionalOutbound] = React.useState(null);\r\n  const [isJsonArray, setIsJsonArray] = React.useState(null);\r\n  const [isUploadStatus, setIsUploadStatus] = React.useState(null);\r\n  const [isCheckingSchema, setIsCheckingSchema] = React.useState(null);\r\n  const [isResetCsvPersist, setIsResetCsvPersist] = React.useState(false);\r\n  const [defaultValues, setDefaultValues] = React.useState(0);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [modalShow2, setModalShow2] = React.useState(false);\r\n\r\n  //declare redux\r\n  const dispatch = useDispatch();\r\n  const selectorWarehouseArea = useSelector((state) => state.warehouseAreaCsv);\r\n  const selectorOutboundType = useSelector((state) => state.outboundTypeCsv);\r\n  const selectorStatus = useSelector((state) => state.status);\r\n  const uploadStatus = useSelector((state) => state.uploadStatus);\r\n  const selectorDistinctPOSKUInfoId = useSelector(\r\n    (state) => state.csvDistinctPOSKUInfoId\r\n  );\r\n  const selectorDistinctSKUNumber = useSelector(\r\n    (state) => state.csvDistinctSKUNumber\r\n  );\r\n  const selectorSkuCodeValidated = useSelector(\r\n    (state) => state.skuCodeValidated\r\n  );\r\n  const selectorSkuNumberValidated = useSelector(\r\n    (state) => state.skuNumberValidated\r\n  );\r\n  const selectorCsvData = useSelector((state) => state.csvData); \r\n  const warehousesData =  useSelector(state => state.warehouseData);\r\n\r\n  //reset csv persist\r\n  if (isResetCsvPersist !== true) {\r\n    resetCsvResist({\r\n      dispatch,\r\n      resetStatus: isResetCsvPersist,\r\n      setIsResetCsvPersist,\r\n    });\r\n  }\r\n\r\n  //get warehouse & warehouse area data\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  if (isWarehouseArea === null) {\r\n    getWarehouseArea({\r\n      warehouseUuid: warehouseUuid,\r\n      dispatch,\r\n      type: \"csvValidator\",\r\n    });\r\n    setIsWarehouseArea(1);\r\n  }\r\n\r\n  //get additional outbound type\r\n  if (isAdditionalOutbound === null && type == \"additionalOutbound\") {\r\n    getOutboundType({\r\n      dispatch,\r\n      type: \"csvValidator\",\r\n    });\r\n    setIsAdditionalOutbound(1);\r\n  }\r\n\r\n  //when file droped or selected\r\n  const onDropAccepted = async (e) => {\r\n    //reset percent\r\n    setIsProgressPercent(0);\r\n    setIsUploadStatus(true);\r\n\r\n    //get file type\r\n    const file = e[0].name;\r\n    const fileArr = file.split(\".\");\r\n    const fileType = fileArr[1];\r\n\r\n    //read file\r\n    let fieldArray = field.map((obj) => obj.dataField);\r\n    putCsvFieldJson({ dispatch, jsonArray: field });\r\n\r\n    let jsonArray = null;\r\n    let cleanArray = [];\r\n    await setIsProgressStatus(\"Reading...\");\r\n    await setIsProgressFileName(file);\r\n    await setIsProgressDisplay(true);\r\n    if (fileType == \"csv\") {\r\n      jsonArray = await csvReader(\r\n        e,\r\n        fieldArray,\r\n        setIsProgressPercent,\r\n        setIsProgressStatus\r\n      );\r\n      //console.log(\"csv\", jsonArray);\r\n    } else {\r\n      jsonArray = await xlsReader(\r\n        e,\r\n        fieldArray,\r\n        setIsProgressPercent,\r\n        setIsProgressStatus,\r\n        setIsJsonArray,\r\n        dispatch\r\n      );\r\n      // console.log(\"xls\", jsonArray);\r\n    }\r\n    console.log(jsonArray);\r\n    if (jsonArray === false) {\r\n      // resetCsvResist({ dispatch, resetStatus: 1, setIsResetCsvPersist });\r\n      setModalShow(true);\r\n      return 0;\r\n    }\r\n\r\n    await setIsProgressStatus(\"Validating Column Type...\");\r\n    await validateColumn({\r\n      field,\r\n      jsonArray,\r\n      setIsProgressPercent,\r\n      fileName: file,\r\n      dispatch,\r\n      warehouseArea: selectorWarehouseArea,\r\n      warehouseUuid,\r\n      outboundType: selectorOutboundType,\r\n      setIsCheckingSchema,\r\n      warehousesData\r\n    });\r\n    await setIsProgressStatus(\"Validating PO SKU Code. . .\");\r\n  };\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    acceptedFiles,\r\n    open,\r\n  } = useDropzone({\r\n    noClick: true,\r\n    onDropAccepted,\r\n    accept:\r\n      //accept csv, xls, and xlsx\r\n      \"text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n  });\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept]\r\n  );\r\n\r\n  const cancelCsv = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  // Use Effect\r\n  useEffect(() => {\r\n    //setelah validasi kolom\r\n    // validasi PO SKU Code\r\n    // console.clear();\r\n    validatePoSkuInfoId({\r\n      dispatch,\r\n      skuData: selectorDistinctPOSKUInfoId,\r\n      status: isUploadStatus,\r\n    });\r\n  }, [selectorDistinctPOSKUInfoId]);\r\n\r\n  useEffect(() => {\r\n    //setelah validasi PO SKU Code\r\n    //validasi SKU Number\r\n    // console.clear();\r\n    setIsProgressPercent(70);\r\n    setIsProgressStatus(\"Validating SKU Numbers\");\r\n    validateSkuNumber({\r\n      dispatch,\r\n      skuNumberData: selectorDistinctSKUNumber,\r\n      bulk: true,\r\n      status: isUploadStatus,\r\n    });\r\n  }, [selectorSkuCodeValidated]);\r\n\r\n  useEffect(() => {\r\n    //setelah validasi sku number\r\n    //re arrange data yang akan digunakan di table\r\n    // console.clear();\r\n    setIsProgressPercent(90);\r\n    setIsProgressStatus(\"rearrange data. . .\");\r\n    cleaningData({\r\n      poSkuInfoValidated: selectorSkuCodeValidated,\r\n      poSkuNumberValidated: selectorSkuNumberValidated,\r\n      csvData: selectorCsvData,\r\n      transaction: transaction,\r\n      setIsProgressPercent,\r\n      dispatch,\r\n      status: isUploadStatus,\r\n      setIsProgressStatus,\r\n      nextPage,\r\n    });\r\n  }, [selectorSkuNumberValidated]);\r\n\r\n  useEffect(() => {\r\n    if (isCheckingSchema === false) {\r\n      console.log(isCheckingSchema);\r\n      setModalShow2(true);\r\n      setIsCheckingSchema(null);\r\n    }\r\n  }, [isCheckingSchema]);\r\n\r\n  return (\r\n    <div>\r\n      <PopUp\r\n        status={selectorStatus}\r\n        onCloseFunction={() => {\r\n          setModalShow(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        statusDisplay={modalShow}\r\n        title=\"Upload File Failed\"\r\n        cancelButtonTitle=\"Try Another File\"\r\n        actionButtonTitle={null}\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div>\r\n              Upload failed because your file has more than 2000 lines.{\" \"}\r\n            </div>\r\n            <div> Please make it less than 2000 lines. </div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to try another file?\"\r\n        cancelButtonClass=\"bg-red background\"\r\n        actionButtonClass=\" \"\r\n      />\r\n\r\n      <PopUp\r\n        status={200}\r\n        onCloseFunction={() => {\r\n          setModalShow2(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        actionButtonEvent={() => templateDownload()}\r\n        statusDisplay={modalShow2}\r\n        title=\"Different File Template\"\r\n        cancelButtonTitle=\"Cancel\"\r\n        actionButtonTitle=\"Download latest template\"\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div> Your uploaded file has a different template.</div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to download the latest file template ?\"\r\n        actionButtonClass=\"bg-green background\"\r\n        cancelButtonClass=\"\"\r\n      />\r\n\r\n      <div className=\"w-100 d-flex flex-column p-3 mb-3 bg-white\">\r\n        <div\r\n          className=\"d-flex flex-column justify-content-between\"\r\n          style={parentStyle}\r\n        >\r\n          <div className=\"FileUploader\">\r\n            <div\r\n              className=\"d-flex flex-column justify-content-end\"\r\n              {...getRootProps({ style })}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <i\r\n                style={{ fontSize: \"90px\" }}\r\n                className=\"lineGrey iconU-upload\"\r\n              ></i>\r\n              <b className=\"mt-2\">Drag and Drop files here</b>\r\n              <p className=\"mt-2 mb-2 emptyTextField\"> Or </p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={open}\r\n                className=\"btn px-5 py-2 text-white bg-green LatoBold no-shadow\"\r\n              >\r\n                Browse File\r\n              </button>\r\n\r\n              <div className=\"emptyTextField LatoBold mt-3 \">\r\n                Support only CSV, XLS, XLSX file\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"downloadTemplate w-100 align-right\">\r\n            <span onClick={() => templateDownload()} className=\"float-right\">\r\n              Download the File Template\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <FileUploadProgress\r\n        status={isProgressStatus}\r\n        progressPercent={isProgressPercent}\r\n        fileName={isProgressFileName}\r\n        display={isProgressDisplay}\r\n        cancelHandler={cancelCsv}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n"],"sourceRoot":""}