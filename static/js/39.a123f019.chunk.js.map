{"version":3,"sources":["Page/StockEntry/StockTransfer/WeightEntry/index.jsx","Component/Dropdown/index.jsx","Component/Modal/ModalConfirmation/services.js","Component/Modal/ModalConfirmation/index.jsx","Component/Input/decimal.jsx","assets/icons/trash.png","Component/Modal/PopUpSaved/services.js","Component/Modal/PopUpSaved/index.jsx","Component/Input/index.jsx","Component/Input/Note.jsx","Component/Modal/PopUpRequired/services.js","Component/Modal/PopUpRequired/index.jsx","assets/icons/asc.svg","assets/icons/desc.svg","Component/DatePickerNew/index.jsx","Component/DatePickerNew/services.js","Component/Sort/index.jsx","Page/StockEntry/Movement/services.js","Page/StockEntry/Movement/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry/index.jsx","Page/StockEntry/Movement/WeightEntry/services.js","Page/StockEntry/Movement/WeightEntry/WeightEntryList/WeightEntryCard/index.jsx","Page/StockEntry/Movement/WeightEntry/WeightEntryList/index.jsx","Page/StockEntry/Movement/WeightEntry/SelectedSKUList/SelectedSKU/index.jsx","Page/StockEntry/Movement/WeightEntry/SelectedSKUList/index.jsx"],"names":["WeightEntry","stockMovementEntryData","useSelector","state","useState","hideSKUList","setHideSKUList","activeSku","setActiveSKU","jobPost","list","length","className","moduleName","moduleEntry","to","Dropdown","isEmpty","title","placeholder","options","selectedValue","showTitle","width","entryListIdx","onChangeDropdown","show","poListIdx","isDisabled","style","noMarginBottom","isOpen","setIsOpen","useEffect","isEmptyStyle","styles","border","elem","document","getElementById","position","getBoundingClientRect","dimention","documentElement","clientWidth","defaultvalue","label","value","menuPlacement","bottom","isSearchable","id","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","onChange","selected","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","color","cursor","fontWeight","theme","borderRadius","next","e","isCaptcha","setIsValidated","setIsType","isType","key","includes","parseInt","focus","type","toUpperCase","split","stat","map","data","index","ModalsConfirmation","confirmation","setConfirmation","save","submit","isSuccess","isLoading","moveAll","setAction","noSkuChecking","singleViewData","height","clientHeight","buttonName","name","window","onkeydown","keyCode","module","areaDestinationName","areaName","skuListUpdate","newModule","poList","po","itemList","item","qty","grade","_qty","isInteger","parseFloat","_sku","skuName","wasteType","_toWaste","_uom","unitOfMeassures","uom","newSku","sku","wqty","swqty","isExist","findIndex","push","i","s","skuListUpdateCheck","closeOnBackdrop","tabIndex","onKeyDown","onClick","minHeight","overflow","borderBottom","textAlign","maxWidth","totalQty","ModalsCaptcha","setIsShowModal","submitText","text","characters","charactersLength","text_split","r","charAt","Math","floor","random","useDispatch","selectorCsvFileName","csvFileName","React","isCaptchaText","isValidated","onClose","size","autocomplete","onKeyUp","textTransform","maxLength","Input","wmsPoSkuInfoId","inputWidth","ripeness","values","toCompare","autoComplete","exports","submitAction","setIsSaved","setLocalEntryData","PopUpSaved","isSaved","totalSku","action","complete","saved","success","header","headerIcon","textColor","date","dateFull","status","button","buttonText","failed","bodyOpenClassName","message","handleFailed","Note","defaults","threshold","initialWeight","isRequired","setIsRequired","invalidThreshold","setInvalidThreshold","isLessThanInitWeight","SKUDatePicker","showDate","selectDate","setShowDate","startDate","Date","endDate","dateRange","setDateRange","setDate","mode","setMode","singleDate","multipleDate","wrapperRef","useRef","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","useOutside","ref","ranges","newdate","dt","selection","setDates","Sort","dateShow","dispatch","sortBy","setSortBy","resetFilter","setResetFilter","dateDMY","datePicker","sortByInboundDate","_","filterByDate","minWidth","d","src","desc","asc","selectSku","a","idx","checked","moduleSummary","warehouseUuid","areaId","areaIdDesposition","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","filter","ldata","jsSelector","jsList","skuUuid","jsD","sI","getGrade","skuId","getPoBySkuId","addPoItem","expiryMs","expiryDate","moment","valueOf","inBoundyMs","inboundDate","category","Number","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","areaSource","areaDestination","CREATE_JOB_SHEET","preAddSku","preAddHandler","isFloat","selectArea","source","destination","area","setAreaId","setAreaIdDesposition","setAreaMovement","ar","areaMovement","submitValidation","isClear","js","jsR","qtyCount","totalListItemWeightCount","moduleList","note","isNaN","qtyIsEmpty","gradeIsEmpty","noteIsEmpty","ripenessIsEmpty","valid","moveAllStockMovement","localEntryData","Object","assign","JSON","parse","stringify","updateData","ls","gradeList","ripenessLevel","rip","w","sw","addRow","WeightEntryCard","poItem","inboundQty","initialWeightUpdate","initialWeightScreenUpdate","supplierName","poUuid","supplierId","edited","wmsPoSkuCode","codeGrade","isHidden","initialWeightTotal","uomType","opacity","noTime","console","clear","test","newValue","arr","number","commaNumber","undefined","sliceNumber","slice","qtyToCompare","qtyToCompareIsEmpty","minus","over","initialWeightOver","updateJSWeightLine","updateJSWeightLineDropdown","Trash","alt","deleteRow","countQty","WeightEntryList","useEntryDimention","heightAdj","useStockMovementEntry","setIsSuccess","discard","setDiscard","hideContent","setHideContent","skuNumber","totalWeight","postInfo","isMobile","isPlural","isEdited","paddingLeft","close","discardEntry","removeEntryModule","PopUpRequired","saveJobSheet","padding","SelectedSKU","img","skuDescription","uomValue","getEditedData","checkisEmpty","onEnter","SelectedSKUList","selectedSku","maxHeight","uomLabel","photo"],"mappings":"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","file":"static/js/39.a123f019.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport SelectedSKUList from 'Page/StockEntry/Movement/WeightEntry/SelectedSKUList'\r\nimport WeightEntryList from 'Page/StockEntry/Movement/WeightEntry/WeightEntryList'\r\n\r\nconst WeightEntry = () => {\r\n    const stockMovementEntryData = useSelector(state => state.stockMovementEntryData)\r\n    const [hideSKUList, setHideSKUList] = useState(false)\r\n    const [activeSku, setActiveSKU] = useState(0)\r\n    const moduleName = 'stockMovement'\r\n    if (!stockMovementEntryData || stockMovementEntryData?.jobPost.list.length === 0) {\r\n        return (\r\n            <div className='d-flex align-items-center justify-content-center text-center w-100 h-screen'><Redirect to='/inventory-entry/movement'>Please Select At Least 1 SKU</Redirect></div >)\r\n    }\r\n    return (\r\n\r\n        <div className='w-100'>\r\n            <div className='w-100 d-md-flex justify-content-between scroll-y z-0'>\r\n                <SelectedSKUList\r\n                    hideSKUList={hideSKUList}\r\n                    activeSku={activeSku}\r\n                    setActiveSKU={setActiveSKU}\r\n                    moduleName={moduleName}\r\n                    moduleEntry={stockMovementEntryData}\r\n                />\r\n                <WeightEntryList\r\n                    setHideSKUList={setHideSKUList}\r\n                    hideSKUList={hideSKUList}\r\n                    moduleName={moduleName}\r\n                    moduleEntry={stockMovementEntryData}\r\n                    activeSku={activeSku}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntry","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? (styles, { isOpen }) => {\r\n        return {\r\n            ...styles,\r\n            border: isOpen ? 'solid #eb5c5c 1px' : 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{label:`-${title}-`, value:null}]\r\n    if(options) defaultvalue=[...defaultvalue, ...options]\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if(dimention <= 500) menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                isSearchable= {dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : false}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={200}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected, isOpen }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#a8b1be',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import { isInteger } from \"formik\";\r\n\r\nexport const next = ({\r\n  e,\r\n  state,\r\n  isCaptcha,\r\n  setIsValidated,\r\n  setIsType,\r\n  isType,\r\n}) => {\r\n  const key = e.key; // const {key} = event; ES6+\r\n  // console.log(key, state, isType[state]);\r\n  let arr_tmp = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown', 'Tab']\r\n  if (arr_tmp.includes(key)) {\r\n    return 0;\r\n  } else if (key === \"Backspace\") {\r\n    if (state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n    }\r\n  } else {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n    }\r\n  }\r\n\r\n  let type = [...isType];\r\n  if (key === \"Backspace\") {\r\n    type[state] = '';\r\n  } else {\r\n    type[state] = key.toUpperCase();\r\n  }\r\n  let char = \"QWERTYUIOPLKJHGFDSAZXCVBNM1234567890\"\r\n  let allowedChar = char.split('')\r\n  if (allowedChar.includes(key.toUpperCase()) || type[state] == '') {\r\n    document.getElementById(\"t\" + (parseInt(state))).value = type[state];\r\n    setIsType(type);\r\n  } else {\r\n    return 0;\r\n  }\r\n\r\n  let stat = true;\r\n  isCaptcha.map((data, index) => {\r\n    if (index == 0) {\r\n      return;\r\n    }\r\n    if (!(type[index + 1] == isCaptcha[index])) {\r\n      stat = false;\r\n    }\r\n  });\r\n  // console.log(isCaptcha);\r\n  // console.log(type);\r\n  setIsValidated(stat);\r\n};\r\n\r\nexport const skuListUpdateCheck = (module, noSkuChecking, moduleName) => {\r\n  if(module?.length){\r\n    let newModule = []\r\n    module.map(list => {\r\n      list.poList.map(po => {\r\n        po.itemList.map(item => {\r\n          const {qty, grade} = item\r\n          const _qty = isInteger(qty) ? parseInt(qty) : (!qty ? 0 : parseFloat(qty))\r\n          const _sku = noSkuChecking ? list.skuName : moduleName === 'waste' ? (item.wasteType?.label ? item.wasteType?.label : list.skuName) : grade?.label\r\n          const _toWaste = moduleName === 'waste' ?( item.wasteType?.label ==='Semi Waste' || item.wasteType?.label ==='Waste' ? true :false) : grade?.label ==='Waste' || grade?.label === 'Semi Waste' ? true : false\r\n          const _uom = noSkuChecking ? list.unitOfMeassures : grade?.uom  === 'gram' ? 'kg' : grade?.uom\r\n          let newSku = {\r\n            sku:_sku,\r\n            qty:_qty,\r\n            uom:_uom,\r\n            wqty:0,\r\n            swqty:0\r\n          }\r\n          if(_toWaste){\r\n            newSku.qty = 0\r\n            newSku.sku = list.skuName\r\n          }\r\n          if( moduleName === 'waste' ? item.wasteType?.label === 'Waste' : grade?.label === 'Waste') newSku.wqty = _qty\r\n          if( moduleName === 'waste' ? item.wasteType?.label === 'Semi Waste' : grade?.label === 'Semi Waste') newSku.swqty = _qty\r\n          const isExist = newModule.findIndex(sku => sku?.sku === (_toWaste ? list.skuName : _sku))\r\n          \r\n          if(moduleName !== 'waste'){\r\n            if(isExist === -1) newModule.push(newSku)\r\n            if(isExist !== -1){\r\n              if(!_toWaste) newModule[isExist].qty += _qty\r\n              if(grade?.label ==='Semi Waste')newModule[isExist].swqty += _qty\r\n              if(grade?.label ==='Waste')newModule[isExist].wqty += _qty\r\n            }\r\n          }\r\n\r\n          if(moduleName === 'waste'){\r\n            if(isExist === -1) newModule.push(newSku)\r\n            if(isExist !== -1){\r\n              if(!_toWaste) newModule[isExist].qty += _qty\r\n              if(item.wasteType?.label ==='Semi Waste')newModule[isExist].swqty += _qty\r\n              if(item.wasteType?.label ==='Waste')newModule[isExist].wqty += _qty\r\n            }\r\n          }\r\n          \r\n        })\r\n      })\r\n    })\r\n    const skuName = module.length ? module[0].skuName : 'No SKU'\r\n    const i = newModule.findIndex(s => s.sku === skuName)\r\n    newModule.map(sku => {\r\n      if(i !== -1){\r\n        if(sku.sku === 'Waste') newModule[i].wqty = sku.qty\r\n        if(sku.sku === 'Semi Waste') newModule[i].swqty = sku.qty\r\n      }\r\n    })\r\n    return newModule\r\n  }\r\n}","import React, { useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { next,skuListUpdateCheck } from \"./services.js\";\r\nimport { totalQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst ModalsConfirmation = ({ moduleEntry, confirmation, setConfirmation, save, submit, isSuccess, isLoading, moveAll, setAction, moduleName,noSkuChecking, singleViewData }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 300\r\n\r\n  let buttonName = 'Submit'\r\n\r\n  if (confirmation.name === 'save') buttonName = 'Save'\r\n  useEffect(() => {\r\n    if (isSuccess) setConfirmation({ show: false, name: null })\r\n  }, [isSuccess])\r\n  window.onkeydown = e => e.keyCode === 27 ? setConfirmation({ show: false, name: null }) : null\r\n\r\n  useEffect(() => {\r\n    setAction(confirmation.name)\r\n  }, [confirmation])\r\n\r\n  let module = singleViewData && !moveAll ? singleViewData : moduleEntry\r\n\r\n  const areaDestinationName = module?.jobPost?.areaDestinationName\r\n  const areaName = module?.jobPost?.areaName\r\n\r\n  const skuListUpdate = skuListUpdateCheck(module?.jobPost.list,noSkuChecking,moduleName)\r\n  return (\r\n    <CRow className={confirmation.show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={confirmation.show}\r\n          closeOnBackdrop={false}\r\n        >\r\n          <CModalHeader className=\"px-4 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation <span><i className=\"em em-pray\"></i></span></CModalTitle>\r\n            <label tabIndex='0' onKeyDown={e => e.keyCode === 13 ?  setConfirmation({ show: false, name: null }) : false} onClick={() => setConfirmation({ show: false, name: null })} className='sku-item iconU-modalClose' />\r\n\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-4 py-0\" style={{ minHeight: height }}>\r\n            <p className=\"text mb-2\">\r\n              <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n              <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n              <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n              <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n              <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${areaDestinationName ? areaDestinationName : areaName}?`}</span>\r\n            </p>\r\n            <p className=\"text\">\r\n              Please double check this list, this record will store to database.\r\n            </p>\r\n            <div\r\n              style={{\r\n                minHeight: height,\r\n                overflow: \"auto\",\r\n                border: \"1px solid var(--lineGrey)\",\r\n              }}\r\n            >\r\n              <table>\r\n                <thead>\r\n                  <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                    <th style={{ color: \"var(--emptyTextField)\" }}>SKU List</th>\r\n                    <th style={{textAlign: \"right\",color: \"var(--emptyTextField)\",}}>Weight</th>\r\n                    <th style={{textAlign: \"right\",color: \"var(--emptyTextField)\",}}>Semi Waste</th>\r\n                    <th style={{textAlign: \"right\",color: \"var(--emptyTextField)\",}}>Waste</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {skuListUpdate?.map((data) => (\r\n                    <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                      <td style={{maxWidth:'160px'}}>{data.sku}</td>\r\n                      <td className=\"text-right py-3\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.qty)}`}\r\n                      </td>\r\n                      <td className=\"text-right text-nowrap\" style={{ textAlign: \"right\" }}>\r\n                        <span className='text-nowrap'>{`${totalQty(data?.swqty)} `}</span>\r\n                      </td>\r\n                      <td className=\"text-right\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.wqty)}`}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"px-0 pb-5 pt-0 justify-content-start border-none\">\r\n              <CButton\r\n              tabIndex='0'\r\n              onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false}\r\n                className=\"bg-background sku-item text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n                onClick={() => setConfirmation({ show: false, name: null })}\r\n              >\r\n                Cancel\r\n            </CButton>\r\n              <CButton\r\n              tabIndex='0'\r\n              onKeyDown={e => e.keyCode === 13 ? (isLoading ? null : (confirmation.name === 'save' ? save() : submit())) : false}\r\n                className={`${isLoading ? 'bg-softGreen text' : 'bg-green text-white'} no-shadow px-5 mt-4 sku-item mb-0 ml-3 mr-0`}\r\n                onClick={() => isLoading ? null : (confirmation.name === 'save' ? save() : submit())}\r\n              >\r\n                {isLoading ? 'Processing...' : buttonName}\r\n              </CButton>{\" \"}\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst ModalsCaptcha = ({\r\n  show = false,\r\n  setIsShowModal,\r\n  submit,\r\n  submitText = \"Submit\",\r\n}) => {\r\n  //random text\r\n  var text = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  var text_split = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    let r = characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    text += r;\r\n    text_split.push(r);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const [isCaptcha, setIsCaptcha] = React.useState(text_split);\r\n  const [isCaptchaText, setIsCaptchaText] = React.useState(text);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n  const [isButtonSubmit, setIsButtonSubmit] = React.useState(\"Submit\");\r\n  const [isType, setIsType] = React.useState([]);\r\n\r\n  //reset if visible = false \r\n  useEffect(() => {\r\n    if (show === true) {\r\n      document.getElementById('t1').value = '';\r\n      document.getElementById('t2').value = '';\r\n      document.getElementById('t3').value = '';\r\n    }\r\n  }, [show]);\r\n\r\n  return (\r\n    <CRow className={show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          onClose={() => {\r\n            setIsShowModal(false);\r\n          }}\r\n          size=\"lg\"\r\n          style={{ height: \"400px\" }}\r\n        >\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">\r\n              Are you sure want to upload <span className=\"green\">Edited</span>{\" \"}\r\n              {selectorCsvFileName}?\r\n            </p>\r\n            <p className=\"text\">\r\n              Once uploaded this record will store to databases.\r\n            </p>\r\n            <p className=\"text mb-2\">\r\n              Please type ‘{isCaptchaText}’ on the Box to confirm upload file.\r\n            </p>\r\n\r\n            <div className=\"captcha-box\">\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 1,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t1\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[0]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 2,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t2\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input ml-0 mr-0\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[1]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 3,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t3\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[2]}\r\n              />\r\n            </div>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            <CButton\r\n              className=\"bg-background text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n              onClick={() => {\r\n                setIsShowModal(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </CButton>\r\n            <CButton\r\n              className={\r\n                (isValidated ? \"bg-green\" : \"bg-emptyTextField disabled\") +\r\n                \" no-shadow px-5 mt-4 mb-0 ml-3 mr-0\"\r\n              }\r\n              onClick={() => {\r\n                submit();\r\n                setIsValidated(false);\r\n              }}\r\n            >\r\n              {submitText}\r\n            </CButton>{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport { ModalsConfirmation, ModalsCaptcha };\r\n","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    ripeness,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title,\r\n    toCompare\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' || uom === 'KG' ? true : false\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`wgt_${poListIdx}_${entryListIdx}`} maxLength='12' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={toCompare ? 'weightToCompare' : 'weight'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","module.exports = __webpack_public_path__ + \"static/media/trash.121a7b10.png\";","export const submitAction = ({ confirmation, setIsSaved, submit, setLocalEntryData,moveAll}) => {\r\n    if (confirmation.name === 'submit') {\r\n        if(moveAll)  setLocalEntryData()\r\n        submit()\r\n        setIsSaved()\r\n        \r\n    }\r\n    else {\r\n        setIsSaved()\r\n    }\r\n}\r\n\r\nexport const message = ({moduleEntry, complete}) => {\r\n    if(moduleEntry?.jobPost){\r\n        let message = null\r\n        const {areaDestinationName, areaName} = moduleEntry?.jobPost\r\n        if(areaDestinationName) message = ` ${areaName} reefer ${areaDestinationName} - `\r\n        else message = ` ${areaName} - `\r\n        return message\r\n    }\r\n}\r\n\r\nexport const handleFailed = ({setIsSaved,setConfirmation,action, setLocalEntryData}) => {\r\n    setIsSaved()\r\n    setConfirmation({ show: true, name: action })\r\n}","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { dateFull } from 'services'\r\nimport { submitAction, message,handleFailed } from './services'\r\n\r\nconst PopUpSaved = ({ isSaved, moduleName, totalSku, setIsSaved, confirmation, setConfirmation, submit, action, moduleEntry, complete,setLocalEntryData,moveAll }) => {\r\n    const saved = {\r\n        success: {\r\n            header: confirmation.name === 'submit' ? 'Success ! ' : 'Saved !',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: `${confirmation.name === 'submit' ? 'Submitted' : 'Saved'} successfully`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        failed: {\r\n            header: `${confirmation.name === 'submit' ? 'Submit' : 'Save'} Failed`,\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            date: dateFull({}),\r\n            sku: 'Sorry.',\r\n            module: `${moduleName} `,\r\n            status: 'item not recorded.',\r\n            button: 'bg-red',\r\n            buttonText: 'Try Again'\r\n        }\r\n    }\r\n    const data = isSaved ? saved.success : saved.failed\r\n\r\n\r\n    const show = isSaved === true || isSaved === false ? true : false\r\n\r\n    const focus = document.getElementById('btn_is_saved')\r\n    if(focus) focus.focus()\r\n    return (\r\n        <CRow className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={show}\r\n\r\n                    onClose={() => {\r\n                        setIsSaved()\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit }) : setIsSaved()} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${data.textColor} LatoBold mr-2 h5 mb-3`}>{data.header}</label> <span><i className={`${data.headerIcon}`}></i></span>\r\n                        <div className='mr-1 h5 mb-3'>{`Entries ${data.status}`}</div>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100 border rounded px-3 pt-4 pb-3 mb-4'>\r\n                            <div className={`h5 mb-3 ${isSaved ? null : 'd-none'}`}>{data.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className='mr-1 h5 green'>{`${message({ moduleEntry, complete })} ${data.sku}`}</label>\r\n                                <div className={`mr-1 h5 mt-2 ${isSaved ? 'd-none' : null}`}>{`Would you select another item again?`}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`mb-2 h5 ${confirmation.name === 'submit' ? 'd-none' : null}`}>Please continue your work</div>\r\n                        <CButton onClick={() => setIsSaved()} className={`text no-shadow px-5 mt-4 mr-4 mb-5 ${`bg-softGreen ${isSaved ? 'd-none' : null}`}`}>\r\n                            Cancel\r\n                </CButton>\r\n                        <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit, setLocalEntryData,moveAll }) : handleFailed({setIsSaved,setConfirmation,action})} className={`text-white sku-item no-shadow px-5 mt-4 mb-5 ${data.button}`}>\r\n                            {data.buttonText}\r\n                        </CButton>\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    name\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nconst Note = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${grade === 'Waste' ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} border rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input autoComplete='off' className='w-100 plain-input' value={values} name='note' onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","export let defaults = {\r\n    header: 'Complete All !',\r\n    headerIcon: 'em em-anger',\r\n    textColor: 'red',\r\n    date: 'You are  required to update all entries on the list.',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Check several entries left.',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const threshold = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'The threshold calculation ratio should be between -20% until 50%',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const initialWeight = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'Add Weight should not exceed Initial Weight',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}","import React from \"react\";\r\nimport {isLessThanInitWeight} from 'services'\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n    CModalFooter\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport {threshold, initialWeight, defaults} from './services'\r\n\r\nconst PopUpSaved = ({ isRequired, setIsRequired, moduleName, module,totalSku, invalidThreshold, setInvalidThreshold }) => {\r\n    let saved = defaults;\r\n    let isTrue\r\n    if ((!isRequired && invalidThreshold) || (isRequired && invalidThreshold)) {\r\n        saved = threshold\r\n    }\r\n\r\n    if(moduleName !== 'stockTake'){\r\n        isTrue = isLessThanInitWeight(module)\r\n        if(isTrue) saved = initialWeight\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_required')\r\n    if(focus) focus.focus()\r\n    return (\r\n        <CRow className={isRequired || invalidThreshold ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={isRequired || invalidThreshold}\r\n                    onClose={() => {\r\n                        setIsRequired(false)\r\n                        if (invalidThreshold) setInvalidThreshold(false)\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${saved?.textColor} LatoBold mr-2 mb-5 h5`}>{saved?.header}</label> <span><i className={`${saved?.headerIcon}`}></i></span>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100 border rounded px-3 pt-4 pb-3 mb-4'>\r\n                            <div className={`h5 mb-3 ${isRequired || invalidThreshold ? null : 'd-none'}`}>{saved?.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className='mr-1 h5'>{`${saved?.status}`}</label>\r\n                            </div>\r\n                        </div>\r\n                    </CModalBody>\r\n                    <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none d-flex mt-2\">\r\n                        <CButton onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} className={`text no-shadow ${`bg-softGreen ${isRequired ? 'd-none' : null}`}`}>\r\n                            Cancel\r\n                        </CButton>\r\n                        <CButton \r\n                            id={'btn_is_required'}\r\n                            tabIndex='0'\r\n                            onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} className={`text-white no-shadow ${saved?.button}`}>\r\n                            {saved?.buttonText}\r\n                        </CButton>\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","module.exports = __webpack_public_path__ + \"static/media/asc.9b60817e.svg\";","module.exports = __webpack_public_path__ + \"static/media/desc.bec03077.svg\";","import React, {useEffect,useState,useRef } from 'react'\r\nimport {Calendar,DateRangePicker } from 'react-date-range'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport './index.scss'\r\nimport {setDates} from './services'\r\n\r\nfunction useOutside({wrapperRef,showDate,setShowDate,selectDate}) {\r\n  useEffect(() => {\r\n      /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n      function handleClickOutside(event) {\r\n          if (showDate && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n              setShowDate(!showDate)\r\n              selectDate()\r\n          }\r\n      }\r\n\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n          // Unbind the event listener on clean up\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n  }, [wrapperRef,showDate]);\r\n}\r\n\r\nconst SKUDatePicker = ({ showDate, selectDate, setShowDate }) => {\r\n  let dimention = document.documentElement.clientWidth\r\n  dimention = dimention - 1555\r\n  const [dateRange, setDateRange] = useState({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n  const [date,setDate] = useState(new Date())\r\n  const [mode, setMode] = useState()\r\n\r\n  const singleDate = mode ? 'text' : 'bg-green text-white'\r\n  const multipleDate = mode ? 'bg-green text-white' : 'text'\r\n\r\n  const wrapperRef = useRef(null);\r\n  useOutside({wrapperRef,showDate,setShowDate,selectDate});\r\n\r\n  useEffect(() => {\r\n    setDateRange({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n    setDate(new Date())\r\n  },[mode])\r\n\r\n  const setDateValue = () => {\r\n    if(showDate){\r\n      mode ? selectDate(dateRange) : selectDate(date)\r\n      setShowDate()\r\n    } \r\n  }\r\n\r\n  return (\r\n    <div ref={wrapperRef} style={{ width: '350px' }} className={` mt-5 position-fixed bg-white border border-soft-green rounded z-100 d-flex flex-column justify-content-center ${showDate ? null : 'd-none'}`}>\r\n      <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <div className=' border border-soft-green d-flex rounded justify-content-between w-100 cursor-pointer'>\r\n        <span onClick={() => setMode(!mode)} className={` ${singleDate} w-50  ${mode ? 'rounded-left' : 'rounded'} text-center p-2`}>Single Date</span>\r\n        <span onClick={() => setMode(!mode)} className={` ${multipleDate} w-50 ${!mode ? 'rounded-right' : 'rounded'} text-center p-2`}>Ranged Date</span>\r\n        </div>\r\n      </div>\r\n    <DateRangePicker\r\n      className={mode ? null : 'd-none'}\r\n      ranges={[dateRange]}\r\n      onChange={newdate => setDates({newdate,dateRange,setDateRange})}\r\n      />\r\n    <Calendar\r\n    className={mode ? 'd-none' : null}\r\n      date={date}\r\n      onChange = {dt => setDate(dt)}\r\n    />\r\n    <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <span onClick={() => setDateValue()} className={` bg-green text-white w-100 border border-soft-green rounded text-center p-2`}>Confirm</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SKUDatePicker","export const setDates = ({newdate, dateRange,setDateRange}) => {\r\n    let dt = {...dateRange}\r\n    dt.startDate = newdate.selection.startDate\r\n    dt.endDate = newdate.selection.endDate\r\n    setDateRange(dt)\r\n  }","import React,{useState,useEffect} from 'react'\r\nimport { sortByInboundDate, filterByDate, dateDMY } from 'services'\r\nimport DatePicker from 'Component/DatePickerNew'\r\nimport asc from 'assets/icons/asc.svg'\r\nimport desc from 'assets/icons/desc.svg'\r\n\r\nconst Sort = ({ moduleEntry, moduleName, activeSku, dispatch }) => {\r\n    const [sortBy, setSortBy] = useState()\r\n    const [date, setDate] = useState()\r\n    const [showDate, setShowDate] = useState()\r\n    const [resetFilter, setResetFilter] = useState()\r\n    let dateShow;\r\n    const dimention = document.documentElement.clientWidth\r\n    dateShow = dateDMY({date,datePicker:true})\r\n    if(dateShow?.startDate) dateShow = `${dateShow.startDate} - ${dateShow.endDate}`\r\n    else dateShow = dateShow\r\n\r\n    useEffect(() => {\r\n        sortByInboundDate({ moduleEntry, moduleName, activeSku, dispatch, sortBy })\r\n    }, [sortBy])\r\n\r\n    useEffect(_ => {\r\n        if(!showDate)filterByDate({ moduleEntry, moduleName, activeSku, dispatch, date })\r\n    }, [date,showDate])\r\n\r\n    useEffect(_ => {\r\n        setSortBy()\r\n        setDate()\r\n    }, [resetFilter])\r\n    return(\r\n        <div className='w-25 d-flex justify-content-end'>\r\n            {/* <div className='iconU-modalClose red border-soft-green border emptyTextField rounded px-2 pt-2 mr-3 cursor-pointer' onClick={() => setResetFilter(d => !d)} /> */}\r\n            <div style={{height:40}} className={`${moduleName === 'repack' ? 'd-none' : null} border-soft-green border-top border-bottom border-left m-0 rounded-left green h6 d-flex align-items-center justify-content-center px-2 text-nowrap ${dimention > 500  ? (date ? null : 'd-none') : 'd-none'}`}>{dateShow}</div>\r\n            <div style={{height:40, minWidth:40}} \r\n                className={`${date ? 'iconU-modalClose red' : 'iconU-filterDate emptyTextField'} border-soft-green border ${date ? 'rounded-right' : 'rounded'} ${moduleName === 'repack' ? 'd-none' : null} d-flex align-items-center justify-content-center mr-3 cursor-pointer`} \r\n                onClick={() => date ? setResetFilter(d => !d) : setShowDate(d => !d)}/>\r\n            <DatePicker showDate={showDate} selectDate={(date) => setDate(date)} setShowDate={(d) => setShowDate(d)} />\r\n            <img style={{height:40, minWidth:40}} src={sortBy ? desc : asc} onClick={() => setSortBy(!sortBy)} className='p-2 border rounded border-soft-green cursor-pointer' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sort","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { getPoBySkuId, removeEntryModule } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport {totalListItemWeightCount} from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    areaIdDesposition }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaIdDesposition?.value),\r\n            areaDestinationName: areaIdDesposition?.label,\r\n            list: newJs\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    setLocalEntryData(jobSheet)\r\n    // dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.category = list.category\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const setAreaIdDesposition = ({ dispatch, selected }) => {\r\n    if (selected) dispatch({ type: SET_AREA, areaIdDesposition: selected })\r\n}\r\n\r\nexport const selectArea = ({selected,area,setAreaId,setAreaIdDesposition,setAreaMovement,dispatch}) => {\r\n    const value = selected?.value\r\n    let source;\r\n    let destination;\r\n\r\n    switch(value){\r\n        case 1 :\r\n            source = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if(source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Production')\r\n            if(destination.length) destination = destination[0]\r\n            break\r\n        case 2 :\r\n            source = area.filter(ar => ar?.label == 'Production')\r\n            if(source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if(destination.length) destination = destination[0]\r\n            break\r\n        case 3 :\r\n            source = area.filter(ar => ar?.label == 'Staging')\r\n            if(source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if(destination.length) destination = destination[0]\r\n            break\r\n        case 4 :\r\n            source = area.filter(ar => ar?.label == 'Staging')\r\n            if(source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Quarantine')\r\n            if(destination.length) destination = destination[0]\r\n            break\r\n        case 5 :\r\n            source = area.filter(ar => ar?.label == 'Quarantine')\r\n            if(source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Staging')\r\n            if(destination.length) destination = destination[0]\r\n            break\r\n        case 6 :\r\n            source = area.filter(ar => ar?.label == 'Staging')\r\n            if(source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Waste')\r\n            if(destination.length) destination = destination[0]\r\n            break\r\n        case 7 :\r\n            source = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if(source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Staging')\r\n            if(destination.length) destination = destination[0]\r\n            break\r\n        case 0 :\r\n            source = null\r\n            destination = null\r\n            break\r\n    }\r\n    // setAreaId(source)\r\n    // setAreaIdDesposition(destination)\r\n    // setAreaMovement(selected)\r\n    dispatch({type:CREATE_JOB_SHEET, areaId:source,areaIdDesposition:destination, areaMovement:selected})\r\n}\r\n\r\n\r\n\r\n\r\n//remove sku\r\nexport const removeSku = async ({ dispatch, moduleEntry, moduleName }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n    const list = moduleEntry.jobPost.list.filter(data => { if (data.checked) return data })\r\n    jobSheet.jobPost.list = list\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n    if (list.length === 0) removeEntryModule({ id: jobSheet.jobPost.id, moduleName, dispatch })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const submitValidation = ({ moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({moduleList:po.itemList})\r\n            po.itemList.map(item => {\r\n                const { qty, grade, ripeness, note } = item\r\n                // if (po.uom === 'kg') {\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        if (item?.grade?.label === 'Waste') {\r\n                            isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = false : item.gradeIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                        else {\r\n                            isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = false : item.gradeIsEmpty = false\r\n                            !ripeness?.value ? item.ripenessIsEmpty = false : item.ripenessIsEmpty = false\r\n                        }\r\n                    }\r\n                // }\r\n                // else {\r\n                //     isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                // }\r\n\r\n                if(!item.qtyIsEmpty){\r\n                    if(qtyCount > po.initialWeight){\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n                \r\n                // if(!item.qtyIsEmpty) po.initialWeightOver > po.initialWeight ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        setConfirmation({ show: false, name: null })\r\n        setIsRequired(true)\r\n    }\r\n}\r\n\r\nexport const moveAllStockMovement = ({localEntryData,setLocalEntryData}) => {\r\n    if(localEntryData){\r\n        let data = Object.assign({}, JSON.parse(JSON.stringify(localEntryData)))\r\n        const updateData = data?.jobPost?.list?.map(ls => {\r\n            ls.poList.map(po => {\r\n                po.itemList = [{ qty: po.initialWeight, expiryDate:po.expiryDate}]\r\n                return po\r\n            })\r\n            return ls\r\n        })\r\n        data.jobPost.list = updateData\r\n        setLocalEntryData(data)\r\n    }\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport Decimal from 'Component/Input/decimal'\r\nimport Input from 'Component/Input'\r\nimport Note from 'Component/Input/Note'\r\nimport { useEffect } from 'react'\r\n\r\n\r\nconst WeightEntry = ({\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    gradeList,\r\n    ripeness,\r\n    inputWidth,\r\n    showTitle,\r\n    item,\r\n    onChange,\r\n    onChangeDropdown,\r\n    uom,\r\n    poListIdx,\r\n    category\r\n}) => {\r\n    let ripenessLevel = useSelector(state => state.ripenessLevel)\r\n    let areaMovement = useSelector(state => state.areaMovement)\r\n    let rip = []\r\n    \r\n    useEffect(() => {\r\n        const w = ripenessLevel.findIndex(r => r.value === 'waste')\r\n        const sw = ripenessLevel.findIndex(r => r.value === 'semi_waste')\r\n        if(w === -1 && areaMovement?.value === 3) ripenessLevel.push({label: \"Waste\", value: \"waste\"})\r\n        if(sw === -1 && areaMovement?.value === 3) ripenessLevel.push({label: \"Semi Waste\", value: \"semi_waste\"})\r\n    },[])\r\n    if(category !== 'Fruits') rip = ripenessLevel.filter( r => r?.value === 'waste' || r?.value === 'semi_waste')\r\n    if(category === 'Fruits') rip = ripenessLevel\r\n    return (\r\n        <div className='d-flex w-100 we-m'>\r\n\r\n            <Decimal\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            <Input\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Quantity'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n            <Dropdown\r\n                // isDisabled={entryListIdx === 0 ? true : false}\r\n                isEmpty={item.ripenessIsEmpty}\r\n                selectedValue={item?.ripeness}\r\n                grade={item.grade?.label}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={true}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'ripeness' })}\r\n                title='Select Ripeness'\r\n                placeholder='Select Ripeness'\r\n                options={rip}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={areaMovement?.value === 3 ? null : 'd-none'} />\r\n            <Note\r\n                isEmpty={item.noteIsEmpty}\r\n                grade={'Waste'}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                ripeness={ripeness}\r\n                inputWidth={`w-50 ${item.grade?.label === 'Semi Waste' || item.grade?.label === 'Waste' ? null : 'd-none'}`}\r\n                values={item?.note}\r\n                showTitle={showTitle}\r\n                title={'Note'}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default WeightEntry","import { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport {totalListItemWeightCount} from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n\r\nexport const addRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.push({\r\n        qty: '',\r\n        expiryDate:js.jobPost.list[activeSku].poList[poListIdx].expiryDate\r\n    })\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLine = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e\r\n}) => {\r\n    const name = e?.target?.name\r\n    let value = e?.target?.value\r\n    let js = { ...moduleEntry }\r\n\r\n    if (name === 'weight' || name === 'weightToCompare') {\r\n        // js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = parseInt(value)\r\n        let regex = /^[0-9\\.\\x0]+$/\r\n        console.clear()\r\n        if ((regex.test(value) === true && value !== \"\")) {\r\n            let newValue = 0;\r\n        let arr = value?.split('.')\r\n        let number = arr[0];\r\n        if(number >= 0) number = parseInt(number)\r\n        let commaNumber = arr[1];\r\n        \r\n        if ((commaNumber !== null && commaNumber !== undefined)) {\r\n            if (commaNumber.length > 2) {\r\n                //jika dibelakang koma ada lebih dari 2 angka\r\n                var sliceNumber = commaNumber.slice(0, 2);\r\n                newValue = `${number}.${sliceNumber}`\r\n            } else {\r\n                newValue = `${number}.${commaNumber}`\r\n            }\r\n        } else {\r\n            newValue = parseInt(number)\r\n        }\r\n        \r\n            //fill weight qty\r\n            if(name === 'weight'){\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n            }\r\n            if(name === 'weightToCompare'){\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompareIsEmpty = false\r\n            }\r\n\r\n        }\r\n        else{\r\n            //fill weight qty\r\n            if(name === 'weight'){\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n            }\r\n            if(name === 'weightToCompare'){\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = ''\r\n            }   \r\n        }\r\n    }\r\n    else if (name === 'qty'){\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = value ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n    }\r\n\r\n    else if (name === 'note'){\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    const initialWeight = js.jobPost.list[activeSku].poList[poListIdx].inboundQty\r\n    let initialWeightUpdate = initialWeight\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        if (data.qty) js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        initialWeightUpdate = initialWeightUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = initialWeightUpdate\r\n        if (initialWeightUpdate < 0) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n            js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = 0\r\n        }\r\n        else{\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList.filter(item => {return item.qtyIsEmpty=false})\r\n        }\r\n    })\r\n\r\n    //initial weight from it self\r\n    const initialWeightScreen = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n    let initialWeightScreenUpdate = initialWeightScreen\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        initialWeightScreenUpdate = initialWeightScreenUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = initialWeightScreenUpdate\r\n    })\r\n    //end of initial weight from it self\r\n\r\n    const over = totalListItemWeightCount({moduleList:js.jobPost.list[activeSku].poList[poListIdx].itemList})\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightOver = over > initialWeight ? over : 0\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLineDropdown = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    selected,\r\n    name\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    // if (name === 'grade') {\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].gradeIsEmpty = false\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = { label: null, value: null }\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = null\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    // }\r\n    if (name === 'ripeness') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = selected\r\n        if(selected?.value === 'waste' || selected?.value === 'semi_waste') js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n        else js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = {label:'',value:''}\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = null\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const countQty = ({ dispatch, activeSku, moduleEntry, poListIdx,entryListIdx }) => {\r\n    let number = parseInt(0)\r\n    const list = moduleEntry.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    list.map((item, idx) => { \r\n        if(idx !== entryListIdx) number += Number.isInteger(item?.qty) ? item?.qty : parseFloat(item?.qty)\r\n    })\r\n    \r\n    return number\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dateFull, isFloat } from 'services';\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport WeightEntry from \"Page/StockEntry/Movement/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry\";\r\nimport \"./index.scss\";\r\nimport {\r\n  addRow,\r\n  updateJSWeightLine,\r\n  updateJSWeightLineDropdown\r\n} from \"Page/StockEntry/Movement/WeightEntry/services\";\r\nimport {deleteRow,countQty} from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst WeightEntryCard = ({\r\n  inputWidth,\r\n  activeSku,\r\n  poListIdx,\r\n  poItem,\r\n  moduleEntry,\r\n  moduleName,\r\n  gradeList\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    expiryDate,\r\n    inboundDate,\r\n    initialWeight,\r\n    inboundQty,\r\n    initialWeightUpdate,\r\n    initialWeightScreenUpdate,\r\n    poUuid,\r\n    skuUuid,\r\n    supplierId,\r\n    supplierName,\r\n    uom,\r\n    ripeness,\r\n    ripenessLevel,\r\n    edited,\r\n    wmsPoSkuCode,\r\n    category,\r\n    codeGrade,\r\n    isHidden\r\n  } = poItem;\r\n  const total = !isNaN(initialWeightUpdate) ? initialWeightUpdate : inboundQty;\r\n  const initialWeightTotal = !isNaN(initialWeightScreenUpdate) ? initialWeightScreenUpdate : initialWeight\r\n  const uomType = uom === \"kg\" || uom === \"gram\" ? \"Weight\" : \"Quantity\";\r\n  const grade = moduleEntry.jobPost.list[activeSku].gradeList.filter(grade => { return grade?.value === codeGrade })\r\n  const area = moduleEntry.jobPost.areaName\r\n  \r\n  return (\r\n    <div \r\n        // onKeyDown={e => e.keyCode === 13 ? addRow({dispatch, moduleEntry,moduleName, activeSku, poListIdx}) : false}\r\n        onKeyDown={e => e.keyCode === 13 ? false : false}\r\n        id={`sku_item_${activeSku}_${poListIdx}`}\r\n         tabIndex='0' \r\n         className={`${isHidden ? 'd-none' : null} z-0 d-flex flex-column sku-item justify-content-between w-100 mb-3 align-items-center border rounded border-soft-green ${edited ? \"soft-green\" : null\r\n      }`}\r\n    >\r\n      {/* Line 1 */}\r\n      <div className=\"w-100 border-soft-green mt-3 d-flex align-items-start px-3\">\r\n        <div className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex justify-content-between align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Inbound Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {inboundDate ? dateFull({ date: inboundDate }) : '-'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex align-items-center mb-3\">\r\n            {`Initial ${uomType}`}\r\n            <span className=\"ml-2 font-green\">\r\n              {` ${initialWeight} ${uom?.toUpperCase()}${initialWeight > 1 ? \"s\" : \"\"}`}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 2 */}\r\n\r\n      <div className=\"w-100 border-soft-green d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`PO Code`}\r\n              <span className=\"ml-2 font-green\">{` ${wmsPoSkuCode ? wmsPoSkuCode : '-'}`}</span>\r\n            </div>\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Supplier Name`}\r\n              <span className=\"ml-2 font-green\">{` ${supplierName}`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 3 */}\r\n      <div className=\"w-100 border-bottom border-soft-green mb-3 d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Expiry Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {expiryDate ? dateFull({ date: expiryDate, noTime: true }) : '-'}\r\n              </span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-3 ${area === 'Waste' || area === 'Semi Waste' ? null : 'd-none'}`}>\r\n              {`Grade`}\r\n              <span className=\"ml-2 font-green\">{` ${grade.length ? grade[0].label : '-'}`}</span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`Inbound Quantity`}\r\n              <span className=\"ml-2 font-green\">{` ${inboundQty ? inboundQty : '-'}`}</span>\r\n            </div>\r\n            {/* <div className={`d-flex align-items-center mb-3 mr-5 ${area === 'Waste' || area === 'Semi Waste' ? 'd-none' : (category === 'Fruits' || category === 'Vegetables' ? null : 'd-none')}`}>\r\n              {`Ripeness Level`}\r\n              <span className=\"ml-2 font-green\">{` ${ripenessLevel}`}</span>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex flex-column justify-content-between w-100 align-items-center px-3 z-0\">\r\n        {poItem.itemList?.map((item, entryListIdx) => {\r\n          return (\r\n            <div className=\"d-flex w-100 align-items-center justify-content-between\">\r\n              <div className=\"w-100 d-flex\">\r\n                <div style={{width:'10px'}} className=\"input-height d-flex align-items-center mb-3 mr-3 pt-4 mt-2\">{`${entryListIdx + 1}.`}</div>\r\n                <div className=\"w-100\">\r\n                  <WeightEntry\r\n                    category={category}\r\n                    entryListIdx={entryListIdx}\r\n                    wmsPoSkuInfoId={item.wmsPoSkuInfoId}\r\n                    showTitle={true}\r\n                    gradeList={gradeList}\r\n                    onChange={(e) =>\r\n                      updateJSWeightLine({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        e,\r\n                      })\r\n                    }\r\n                    onChangeDropdown={({ selected, name }) =>\r\n                      updateJSWeightLineDropdown({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        selected,\r\n                        name,\r\n                      })\r\n                    }\r\n                    uom={uom}\r\n                    ripeness={ripeness}\r\n                    inputWidth={inputWidth}\r\n                    item={item}\r\n                    className={!ripeness ? \"d-none\" : null}\r\n                    poListIdx={poListIdx}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex w-25 align-items-center justify-content-end input-height mb-0 p-0\">\r\n                <img\r\n                  src={Trash}\r\n                  alt=\"delete icon\"\r\n                  className=\"w-1 cursor-pointer\"\r\n                  onClick={(e) =>\r\n                    deleteRow({\r\n                      dispatch,\r\n                      moduleEntry,\r\n                      moduleName,\r\n                      activeSku,\r\n                      poListIdx,\r\n                      entryListIdx,\r\n                      e,\r\n                      countQty\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        onKeyDown={e => e.keyCode === 13 ? addRow({dispatch, moduleEntry,moduleName, activeSku, poListIdx}) : false}\r\n        // className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer ${total === 0 ? 'd-none' : null}`}\r\n        className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer sku-item`}\r\n        tabIndex='0'\r\n        onClick={() => addRow({\r\n          dispatch, moduleEntry,\r\n          moduleName, activeSku, poListIdx\r\n        })}\r\n      >\r\n        <i className=\"green iconU-entryAdd pr-2\"></i>\r\n        {`Add ${uomType} (${isFloat(initialWeightTotal) ? isFloat(initialWeightTotal) : initialWeightTotal} ${uom ? uom.toUpperCase() : ''}${initialWeightTotal > 1 ? \"s\" : \"\"} left)`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WeightEntryCard;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport WeightEntryCard from 'Page/StockEntry/Movement/WeightEntry/WeightEntryList/WeightEntryCard'\r\nimport { removeEntryModule, saveJobSheet } from 'apiServices'\r\nimport { submitValidation } from 'Page/StockEntry/Movement/services'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\";\r\nimport PopUpRequired from \"Component/Modal/PopUpRequired\";\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport Sort from 'Component/Sort'\r\nimport { Prompt } from 'react-router'\r\nimport { useEntryDimention, useStockMovementEntry } from 'Page/StockEntry/GeneralServices'\r\n\r\nconst WeightEntryList = ({\r\n    hideSKUList,\r\n    setHideSKUList,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName\r\n}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const {height, heightAdj, dimention} = useEntryDimention()\r\n\r\n    const {\r\n        setIsSuccess,\r\n        confirmation,\r\n        setConfirmation,\r\n        discard,\r\n        setDiscard,\r\n        isSaved,\r\n        setIsSaved,\r\n        action,\r\n        setAction,\r\n        isRequired,\r\n        setIsRequired,\r\n        hideContent,\r\n        setHideContent,\r\n        isLoading,\r\n        skuName,\r\n        skuNumber,\r\n        poList,\r\n        gradeList,\r\n        unitOfMeassures,\r\n        totalWeight,\r\n        edited,\r\n        postInfo\r\n      } = useStockMovementEntry({moduleEntry,activeSku})\r\n\r\n      //Condition\r\n    const isMobile = dimention <= 500\r\n    const isHidden = hideContent ? 'd-none' : null\r\n    const isPlural = totalWeight > 1 ? \"s\" : ''\r\n    const isEdited = edited ? 'bg-green' : 'bg-lineGrey'\r\n\r\n    return (\r\n        <div style={{paddingLeft:isMobile ? 0 : 10}} className='w-100 h-100 mt-3 mt-md-0'>\r\n            {/* <Prompt\r\n                when={true}\r\n                message={location => {\r\n                    let pathname = location.pathname\r\n                    if (!allowPage.includes(pathname)) {\r\n                        setDiscard(true)\r\n                        return false\r\n                    }\r\n                }}\r\n            /> */}\r\n            <Discard\r\n                discard={discard}\r\n                module={'Inventory Entry - Stock Movement'}\r\n                moduleEntry={moduleEntry}\r\n                close={() => setDiscard(false)}\r\n                discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch })}\r\n            />\r\n            <PopUpSaved\r\n                moduleEntry={moduleEntry}\r\n                submit={() => dispatch({ type: 'CREATE_JOB_SHEET', [`${moduleName}EntryData`]: null, [`${moduleName}SummaryData`]: null })}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSaved={isSaved}\r\n                action={action}\r\n                setIsSaved={setIsSaved}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <PopUpRequired\r\n                isRequired={isRequired}\r\n                module={moduleEntry}\r\n                setIsRequired={setIsRequired}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <Confirmation\r\n                noSkuChecking={true}\r\n                isLoading={isLoading}\r\n                moduleEntry={moduleEntry}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSuccess={postInfo}\r\n                setAction={setAction}\r\n                action={action}\r\n                save={() => saveJobSheet({ name: 'save', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n                submit={() => saveJobSheet({ name: 'submit', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n            />\r\n            <div className='mb-3 bg-white rounded-bottom rounded-top'>\r\n                <div style={{height}} style={{padding:10}} className='w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green'>\r\n                    <div className='d-flex w-100 m-0 p-0' onClick={() => isMobile ? setHideContent(!hideContent) : null}>\r\n                        <div className={`${hideSKUList ? 'iconU-sideBarHideRight' : 'iconU-sideBarHideLeft'} emptyTextField fontSizeTitle mr-3`} onClick={() => setHideSKUList(!hideSKUList)} />\r\n                        <div className='mr-3 pr-1 d-flex align-items-center m-0 p-0 LatoBold'>Weight Entry</div>\r\n                        <div className='mr-3 iconU-sideBarDot d-flex align-items-center' />\r\n                        <div className='mr-3 d-flex align-items-center font-green LatoBold'>{`${skuName} (${skuNumber})`}</div>\r\n                    </div>\r\n                    <Sort moduleEntry = {moduleEntry} moduleName = {moduleName} activeSku = {activeSku} dispatch = {dispatch}/>\r\n                </div>\r\n                <div style={{height:isMobile ? height : heightAdj, minHeight:isMobile ? height : heightAdj}} className={`w-100 overflow-y mr-0 border-left border-right border-soft-green pl-3 pr-2 pt-3 ${isHidden}`}>\r\n                    {\r\n                        poList?.map((poItem, idx) => {\r\n                            return <WeightEntryCard\r\n                                activeSku={activeSku}\r\n                                gradeList={gradeList}\r\n                                inputWidth='input-w-100'\r\n                                activeSku={activeSku}\r\n                                poListIdx={idx}\r\n                                poItem={poItem}\r\n                                moduleEntry={moduleEntry}\r\n                                moduleName={moduleName}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <div className='w-100 d-flex align-items-center p-3 border-left border-right border-bottom rounded-bottom LatoBold'>\r\n                    <button\r\n                        tabIndex='0'\r\n                        type=\"button\"\r\n                        className={`btn sku-item ${isEdited}  text-white px-5 mr-3 LatoBold`}\r\n                        onClick={() => edited ? setConfirmation({ show: true, name: 'save' }) : null}>\r\n                        Save\r\n                    </button>\r\n                    <div>Total Weight <span className='font-green'>{`${totalWeight} ${unitOfMeassures?.toUpperCase()}${isPlural}`}</span></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end\">\r\n                <div tabIndex='0' onClick={() => setDiscard(true)} className='red pr-3 sku-item fontSizeButton cursor-pointer'><i className='iconU-entryTrash'></i> Discard</div>\r\n                <button tabIndex='0' onClick={() => edited ? submitValidation({ moduleEntry, moduleName, dispatch, setConfirmation, setIsRequired }) : null} className={`btn sku-item px-5 py-2 text-white ${isEdited} LatoBold no-shadow`} style={{ height: \"fit-content !important\" }} >Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntryList","import React from 'react'\r\nimport { getEditedData,checkisEmpty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport {onEnter} from 'services'\r\nconst SelectedSKU = ({\r\n    img,\r\n    skuDescription,\r\n    skuNumber,\r\n    activeSku,\r\n    uomValue,\r\n    idx,\r\n    uom,\r\n    onClick,\r\n    data\r\n}) => {\r\n    const edited = getEditedData({ data })\r\n    const isEmpty = checkisEmpty(data)\r\n    return (\r\n        <div tabIndex='0' onKeyDown={e => onEnter({e, idx, onClick})} onClick={() => onClick()} className={`w-100 sku-item softGreen d-flex justify-content-between pl-2 pr-3 py-2 mb-3 cursor-pointer rounded ${edited ? 'soft-green' : null} ${activeSku === idx ? 'border-green' : (isEmpty ? 'border-red' : 'border')}`}>\r\n            <div className='d-flex align-items-center w-100'>\r\n                <div className='d-flex align-items-center'>\r\n                    <img src={img} alt='sku image' className='w-5 mr-3 border softGreen rounded' />\r\n                </div>\r\n                <div className=\"w-100\">\r\n                    <div className='mr-3'>\r\n                        <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div className='text'>{skuNumber}</div>{activeSku}\r\n                        <div className='green LatoBold'>{uomValue} <span>{`${uom ? uom.toUpperCase() : ''}${uomValue > 1 ? 's' : ''}`}</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKU","import React,{useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { ADD_SKU } from 'apiServices/action'\r\nimport './index.scss'\r\nimport SelectedSKU from 'Page/StockEntry/Movement/WeightEntry/SelectedSKUList/SelectedSKU'\r\nconst SelectedSKUList = ({\r\n    hideSKUList,\r\n    setActiveSKU,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName\r\n}) => {\r\n    const selectedSku = moduleEntry.jobPost.list.length\r\n    const dimention = document.documentElement.clientWidth\r\n    let height = document.documentElement.clientHeight\r\n    height = height-212\r\n    const [hideContent, setHideContent] = useState(false)\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className={`${hideSKUList ? 'w-0' : 'w-30'} overflow-hidden  mt-md-0 rounded-bottom rounded-top`}>\r\n            <div style={{padding:17}} className='w-100 bg-white border-top border-left border-right rounded-top border-soft-green text d-flex align-items-center justify-content-between' onClick={() => dimention <= 500 ? setHideContent(!hideContent) : null}>\r\n                <div className=\"LatoBold\"> Selected SKU <span className='font-green'>{`(${selectedSku} SKU${selectedSku > 1 ? 's' : ''})`}</span></div>\r\n                <div className='d-flex align-items-center justify-content-between'>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/movement/weight-entry/remove-sku'>\r\n                        <div className=\"fontSizeTitle px-3 emptyTextField iconU-remove\" />\r\n                    </Link>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/movement/weight-entry/add-sku'>\r\n                        <div className='fontSizeTitle emptyTextField text-bold iconU-entryAdd' ></div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div style={{height: dimention <= 500 ? false : height, maxHeight:height}} className={` overflow-y w-100 bg-white mr-0 border rounded-bottom border-soft-green pl-3 pr-0 pt-3 ${hideContent ? 'd-none' : null}`}>\r\n                {\r\n                    moduleEntry?.jobPost.list.map((data, idx) =>\r\n                        <SelectedSKU\r\n                            data={data}\r\n                            idx={idx}\r\n                            activeSku={activeSku}\r\n                            skuDescription={data?.skuName}\r\n                            skuNumber={data?.skuNumber}\r\n                            uomLabel={data?.unitOfMeassures}\r\n                            uomValue={data?.totalQty}\r\n                            uom={data?.unitOfMeassures}\r\n                            img={data?.photo}\r\n                            onClick={() => setActiveSKU(idx)}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKUList"],"sourceRoot":""}