{"version":3,"sources":["Component/Modal/PopUpDiscard/index.jsx","Page/StockEntry/GeneralServices/index.js"],"names":["PopUpDiscard","discard","moduleEntry","close","discardEntry","module","document","documentElement","clientHeight","className","show","size","closeOnBackdrop","onClick","jobPost","list","length","id","useDimension","hValue","wValue","dimention","width","clientWidth","height","emptyItem","isMobile","useEntryDimention","showTargetRepack","heightAdj","useStockTake","dispatch","zeroQuantity","useSelector","state","thereAreRequest","moduleFirstLoad","stockTakeFirstLoad","warehouseUuid","user","status","isLoading","stockTakeEntryData","useState","summary","setSummary","localEntryData","setLocalEntryData","search","setSearch","area","setArea","label","value","areaId","setAreaId","setDiscard","useEffect","a","getRipenessLevel","ripeness","getWarehouseArea","areaList","getUnfinishedEntries","moduleName","isExist","getData","useStockTakeEntry","activeSku","success","name","isSuccess","setIsSuccess","confirmation","setConfirmation","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","hideContent","setHideContent","allowPage","setAllowPage","skuName","skuNumber","poList","gradeList","totalQty","unitOfMeassures","totalWeight","totalWeightCount","edited","jobSheetChecker","postInfo","useStockMovement","stockMovementFirstLoad","stockMovementDropdown","areaIdDesposition","areaMovement","stockMovementEntryData","isCheckedBefore","setIsCheckedBefore","areaMatched","setAreaMatched","isCheckedTotal","selectedSkuCheck","added","entryIsReady","stockMovementTargetRepack","_","useStockMovementEntry","useStockTransferEntry","useWaste","wasteFirstLoad","wasteEntryData","getWasteWarehouseArea","useWasteEntry","useAdditionalOutbound","outboundFirstLoad","outboundEntryData","warehouseArea","outboundAddSku","next","setNext","useAdditionalOutboundEntry","outboundTypeList","useRepacking","repackFirstLoad","repackEntryData","areaDestinationId","setAreaDestinationId","aId","filter","adId","useRepackingEntry","invalidThreshold","setInvalidThreshold","totalPack","totalPackCount","useSingleView","getStockTakeSummary","createPo","setCreatePo","singleViewData","setSingleViewData","moveAll","setMoveAll","updateList","props","props2","type","IS_LOADING","setTimeout","singleView","desc","setModule","useScanner","showScanner","setShowScanner","showSkuList","setShowSkuList","useTargetRepack","targetRepacks","slotList","slot","setSlot","tgtRpck","table","filterTargetRepack","setShowTargetRepack","setTargetRepack","data","updateTargetRepack","useTargetMovement","targetMovements"],"mappings":"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","file":"static/js/7.8b68dc21.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    return (\r\n        <CRow className={discard ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                             from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-5 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","import { useState, useEffect } from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUnfinishedEntries, getWasteWarehouseArea } from \"apiServices\";\r\nimport { getWarehouseArea, getRipenessLevel } from \"apiServices/dropdown\";\r\nimport { IS_LOADING } from 'apiServices/action'\r\nimport { jobSheetChecker, totalWeightCount, selectedSkuCheck, totalPackCount, filterTargetRepack, updateTargetRepack, setTargetRepack, addSlot } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n//dimension\r\nexport const useDimension = (hValue, wValue) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const width = document.documentElement.clientWidth\r\n  const height = dimention - hValue\r\n  const emptyItem = dimention - hValue\r\n  const isMobile = width <= 500 ? true : false\r\n  return { dimention, height, emptyItem, width, isMobile }\r\n}\r\n\r\nexport const useEntryDimention = (showTargetRepack) => {\r\n  const dimention = document.documentElement.clientWidth\r\n  let height = document.documentElement.clientHeight\r\n  let heightAdj = height - (showTargetRepack ? 580 : 290)\r\n  height = dimention <= 500 ? (showTargetRepack ? (heightAdj + 100) : heightAdj) : height\r\n\r\n  return { height, heightAdj, dimention }\r\n}\r\n\r\n// Stock Take\r\nexport const useStockTake = ({ dispatch }) => {\r\n  const moduleName = 'stockTake'\r\n  const zeroQuantity = useSelector(state => state.zeroQuantity)\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTakeFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockTakeEntryData = useSelector((state) => state.stockTakeEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState({ label: \"Storage Ambient\", value: 1 })\r\n  const [discard, setDiscard] = useState()\r\n\r\n  // use Effect\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockTakeEntryData ? true : false, ripeness })\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    stockTakeEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    discard,\r\n    setDiscard,\r\n    zeroQuantity\r\n  }\r\n}\r\n\r\n// Stock Take Entry\r\nexport const useStockTakeEntry = ({ moduleEntry, activeSku }) => {\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/stock-take/weight-entry',\r\n    '/inventory-entry/stock-take/weight-entry/remove-sku',\r\n    '/inventory-entry/stock-take/weight-entry/add-sku',\r\n  ])\r\n\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo\r\n  }\r\n}\r\n\r\n// Stock Movement\r\nexport const useStockMovement = ({ dispatch }) => {\r\n  const moduleName = 'stockMovement'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockMovementFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const stockMovementDropdown = useSelector(state => state.stockMovementDropdown)\r\n  const areaId = useSelector(state => state.areaId)\r\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockMovementEntryData = useSelector((state) => state.stockMovementEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaMatched, setAreaMatched] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n\r\n  const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockMovementEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(_ => {\r\n    if (areaId && areaIdDesposition && areaId !== areaIdDesposition) setAreaMatched(true)\r\n    else setAreaMatched(false)\r\n  }, [areaId, areaIdDesposition, added])\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId, areaIdDesposition])\r\n\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    stockMovementDropdown,\r\n    areaId,\r\n    areaIdDesposition,\r\n    areaMovement,\r\n    status,\r\n    isLoading,\r\n    stockMovementEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area, setArea,\r\n    areaMatched, setAreaMatched,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    entryIsReady,\r\n    stockMovementTargetRepack\r\n  }\r\n}\r\n\r\n// Stock Movement Entry\r\nexport const useStockMovementEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/movement/weight-entry',\r\n    '/inventory-entry/movement/weight-entry/remove-sku',\r\n    '/inventory-entry/movement/weight-entry/add-sku',\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    areaMovement\r\n  }\r\n}\r\n\r\n// Stock Transfer\r\nexport const useStockTransfer = ({ dispatch }) => {\r\n  const moduleName = 'stockTransfer'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTransferFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const stockTransferDropdown = useSelector(state => state.stockTransferDropdown)\r\n  const areaId = useSelector(state => state.areaId)\r\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockTransferEntryData = useSelector((state) => state.stockTransferEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaMatched, setAreaMatched] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockTransferEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(_ => {\r\n    if (areaId && areaIdDesposition && areaId !== areaIdDesposition) setAreaMatched(true)\r\n    else setAreaMatched(false)\r\n  }, [areaId, areaIdDesposition, added])\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId, areaIdDesposition])\r\n\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    stockTransferDropdown,\r\n    areaId,\r\n    areaIdDesposition,\r\n    areaMovement,\r\n    status,\r\n    isLoading,\r\n    stockTransferEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area, setArea,\r\n    areaMatched, setAreaMatched,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    entryIsReady\r\n  }\r\n}\r\n\r\n// Stock Transfer Entry\r\nexport const useStockTransferEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/stock-transfer/weight-entry',\r\n    '/inventory-entry/stock-transfer/weight-entry/remove-sku',\r\n    '/inventory-entry/stock-transfer/weight-entry/add-sku',\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    areaMovement\r\n  }\r\n}\r\n\r\n\r\n// Waste\r\nexport const useWaste = ({ dispatch }) => {\r\n  const moduleName = 'waste'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.wasteFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const wasteEntryData = useSelector((state) => state.wasteEntryData);\r\n\r\n  const [areaId, setAreaId] = useState()\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const b = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      const areaId = await getWasteWarehouseArea({ warehouseUuid, setAreaId })\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: wasteEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    wasteEntryData,\r\n    areaId,\r\n    setAreaId,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal\r\n  }\r\n}\r\n\r\n// Waste Entry\r\nexport const useWasteEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/waste/weight-entry',\r\n    '/inventory-entry/waste/weight-entry/remove-sku',\r\n    '/inventory-entry/waste/weight-entry/add-sku',\r\n  ])\r\n\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo\r\n  }\r\n}\r\n\r\n// Additional Outbound\r\nexport const useAdditionalOutbound = ({ dispatch }) => {\r\n  const moduleName = 'outbound'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.outboundFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const outboundEntryData = useSelector((state) => state.outboundEntryData);\r\n  const warehouseArea = useSelector(state => state.warehouseArea);\r\n  const outboundAddSku = useSelector(state => state.outboundAddSku)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [next, setNext] = useState(false)\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState()\r\n  const [search, setSearch] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: outboundEntryData ? true : false })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    outboundEntryData,\r\n    warehouseArea,\r\n    outboundAddSku,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    next,\r\n    setNext,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added\r\n  }\r\n}\r\n\r\n// Additional Outbound Entry\r\nexport const useAdditionalOutboundEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const { skuName, skuNumber, poList, outboundTypeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/additional-outbound/weight-entry',\r\n    '/inventory-entry/additional-outbound/remove-sku',\r\n    '/inventory-entry/additional-outbound/add-sku',\r\n  ])\r\n\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    outboundTypeList\r\n  }\r\n}\r\n\r\n// Repacking\r\nexport const useRepacking = ({ dispatch }) => {\r\n  const moduleName = 'repack'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.repackFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const repackEntryData = useSelector((state) => state.repackEntryData);\r\n  const warehouseArea = useSelector(state => state.warehouseArea);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState()\r\n  const [areaDestinationId, setAreaDestinationId] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const aId = areaList?.filter(area => area.value === 4)\r\n      const adId = areaList?.filter(area => area.value === 5)\r\n      if (aId?.length) setAreaId(aId[0])\r\n      if (aId?.length) setAreaDestinationId(adId[0])\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: repackEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    repackEntryData,\r\n    warehouseArea,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    areaDestinationId,\r\n    setAreaDestinationId,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added\r\n  }\r\n}\r\n\r\n// Repacking Entry\r\nexport const useRepackingEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const [invalidThreshold, setInvalidThreshold] = useState()\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/repacking/weight-entry',\r\n    '/inventory-entry/repacking/weight-entry/remove-sku',\r\n    '/inventory-entry/repacking/weight-entry/add-sku',\r\n  ])\r\n\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const totalPack = totalPackCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isLoading,\r\n    invalidThreshold,\r\n    setInvalidThreshold,\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    totalPack,\r\n  }\r\n}\r\n\r\n// Single view\r\nexport const useSingleView = ({ dispatch, setLocalEntryData, setSummary, setSearch, getStockTakeSummary, search, warehouseUuid, areaId, localEntryData, moduleName, stockMovementTargetRepack }) => {\r\n\r\n  //submit\r\n  const [action, setAction] = useState()\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: 'submit' })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [isSaved, setIsSaved] = useState()\r\n\r\n  // create po single view\r\n  const [createPo, setCreatePo] = useState()\r\n  const [singleViewData, setSingleViewData] = useState()\r\n\r\n\r\n  //condition move all\r\n  const [moveAll, setMoveAll] = useState()\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  // end of submit\r\n\r\n  //singleview\r\n  const updateList = (props, props2, moduleName) => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n    dispatch({ type: IS_LOADING, isLoading: true })\r\n    setTimeout(() => {\r\n      getStockTakeSummary({\r\n        moduleName,\r\n        stockMovementTargetRepack: props2,\r\n        zeroQuantity: props,\r\n        singleView: true,\r\n        dispatch,\r\n        desc: search,\r\n        warehouseUuid,\r\n        areaId,\r\n        setModule: setSummary,\r\n        module: localEntryData\r\n      },\r\n        setSearch(search))\r\n    }, 10);\r\n  }\r\n\r\n  return { updateList, action, setAction, confirmation, setConfirmation, isSuccess, setIsSuccess, isSaved, setIsSaved, createPo, setCreatePo, singleViewData, setSingleViewData, postInfo, moveAll, setMoveAll }\r\n}\r\n\r\n// Scanner\r\nexport const useScanner = () => {\r\n  const [showScanner, setShowScanner] = useState()\r\n  const [showSkuList, setShowSkuList] = useState()\r\n  return { showScanner, setShowScanner, showSkuList, setShowSkuList }\r\n}\r\n\r\nexport const useTargetRepack = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\r\n  const targetRepacks = useSelector(state => state.targetRepacks)\r\n  const slotList = useSelector(state => state.slotList)\r\n\r\n  const [slot, setSlot] = useState()\r\n\r\n  const { gradeList } = moduleEntry.jobPost.list[activeSku]\r\n  const tgtRpck = moduleEntry.jobPost.list[activeSku].poList[0].targetRepacks\r\n  const table = filterTargetRepack(tgtRpck, gradeList, activeSku, moduleEntry, slot)\r\n\r\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\r\n\r\n\r\n  //set Target Repack\r\n\r\n  useEffect(_ => {\r\n    setTargetRepack({ moduleEntry, dispatch })\r\n  }, [])\r\n\r\n  useEffect(_ => {\r\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\r\n    if (table?.data?.length) setShowTargetRepack(true)\r\n    updateTargetRepack({ data: table?.data, targetRepacks, activeSku, dispatch })\r\n  }, [table])\r\n\r\n  return { showTargetRepack, table, slot, setSlot, slotList }\r\n}\r\n\r\n//use target movement\r\nexport const useTargetMovement = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\r\n  const targetRepacks = moduleEntry.jobPost.list[activeSku].poList[0].targetMovements\r\n  const slotList = useSelector(state => state.slotList)\r\n\r\n  const [slot, setSlot] = useState()\r\n\r\n  const { gradeList } = moduleEntry.jobPost.list[activeSku]\r\n  const table = filterTargetRepack(targetRepacks, gradeList, activeSku, moduleEntry, slot, true)\r\n\r\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\r\n\r\n  useEffect(_ => {\r\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\r\n    if (table?.data?.length) setShowTargetRepack(true)\r\n    updateTargetRepack({ data: table?.data, targetRepacks, activeSku, dispatch })\r\n  }, [table])\r\n\r\n  return { showTargetRepack, table, slot, setSlot, slotList }\r\n}"],"sourceRoot":""}