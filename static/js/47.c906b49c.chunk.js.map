{"version":3,"sources":["Page/StockEntry/StockTransfer/WeightEntry/SelectedSKUList/SelectedSKU/index.jsx","Page/StockEntry/StockTransfer/WeightEntry/SelectedSKUList/index.jsx","Page/StockEntry/StockTransfer/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry/index.jsx","Page/StockEntry/StockTransfer/WeightEntry/services.js","Page/StockEntry/StockTransfer/WeightEntry/WeightEntryList/WeightEntryCard/index.jsx","Page/StockEntry/StockTransfer/WeightEntry/WeightEntryList/index.jsx","Page/StockEntry/StockTransfer/WeightEntry/index.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Component/Input/index.jsx","Page/StockEntry/StockTransfer/services.js"],"names":["SelectedSKU","img","skuDescription","skuNumber","activeSku","uomValue","idx","uom","onClick","data","edited","getEditedData","isEmpty","checkisEmpty","tabIndex","onKeyDown","e","onEnter","className","src","alt","toUpperCase","SelectedSKUList","hideSKUList","setActiveSKU","moduleEntry","selectedSku","moduleName","jobPost","list","length","dimention","document","documentElement","clientWidth","height","clientHeight","useState","hideContent","setHideContent","useDispatch","style","padding","to","maxHeight","map","skuName","uomLabel","unitOfMeassures","totalQty","photo","WeightEntry","entryListIdx","wmsPoSkuInfoId","gradeList","ripeness","inputWidth","showTitle","item","onChange","poListIdx","category","ripenessLevel","useSelector","state","areaMovement","useEffect","w","findIndex","r","value","sw","push","label","filter","grade","qtyIsEmpty","values","qty","title","Input","addRow","dispatch","js","poList","itemList","expiryDate","type","CREATE_JOB_SHEET","WeightEntryCard","poItem","inboundDate","initialWeight","inboundQty","initialWeightUpdate","initialWeightScreenUpdate","supplierName","poUuid","skuUuid","supplierId","wmsPoSkuCode","codeGrade","isHidden","initialWeightTotal","isNaN","uomType","area","areaName","keyCode","id","dateFull","date","opacity","noTime","width","name","target","console","clear","test","newValue","arr","split","number","parseInt","commaNumber","undefined","sliceNumber","slice","qtyToCompare","qtyToCompareIsEmpty","note","noteIsEmpty","minus","over","totalListItemWeightCount","moduleList","initialWeightOver","updateJSWeightLine","Trash","deleteRow","countQty","isFloat","WeightEntryList","setHideSKUList","useEntryDimention","heightAdj","useStockTransferEntry","setIsSuccess","status","confirmation","setConfirmation","discard","setDiscard","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","isLoading","totalWeight","postInfo","isMobile","isPlural","isEdited","paddingLeft","module","close","discardEntry","removeEntryModule","PopUpSaved","submit","totalSku","PopUpRequired","noSkuChecking","isSuccess","save","saveJobSheet","Sort","minHeight","show","submitValidation","stockTransferEntryData","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","maxLength","autoComplete","selectSku","a","checked","setLocalEntryData","moduleSummary","warehouseUuid","warehouseIdDestination","areaId","areaIdDesposition","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","jsD","sI","includes","getGrade","skuId","getPoBySkuId","addPoItem","expiryMs","moment","valueOf","inBoundyMs","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","warehouseDestinationName","areaSource","areaDestination","areaDestinationName","preAddSku","preAddHandler","isClear","jsR","po","qtyCount","gradeIsEmpty","ripenessIsEmpty","valid"],"mappings":"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","file":"static/js/47.c906b49c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { getEditedData,checkisEmpty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport {onEnter} from 'services'\r\nconst SelectedSKU = ({\r\n    img,\r\n    skuDescription,\r\n    skuNumber,\r\n    activeSku,\r\n    uomValue,\r\n    idx,\r\n    uom,\r\n    onClick,\r\n    data\r\n}) => {\r\n    const edited = getEditedData({ data })\r\n    const isEmpty = checkisEmpty(data)\r\n    return (\r\n        <div tabIndex='0' onKeyDown={e => onEnter({e, idx, onClick})} onClick={() => onClick()} className={`w-100 sku-item softGreen d-flex justify-content-between pl-2 pr-3 py-2 mb-3 cursor-pointer rounded ${edited ? 'soft-green' : null} ${activeSku === idx ? 'border-green' : (isEmpty ? 'border-red' : 'border')}`}>\r\n            <div className='d-flex align-items-center w-100'>\r\n                <div className='d-flex align-items-center'>\r\n                    <img src={img} alt='sku image' className='w-5 mr-3 border softGreen rounded' />\r\n                </div>\r\n                <div className=\"w-100\">\r\n                    <div className='mr-3'>\r\n                        <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div className='text'>{skuNumber}</div>{activeSku}\r\n                        <div className='green LatoBold'>{uomValue} <span>{`${uom ? uom.toUpperCase() : ''}${uomValue > 1 ? 's' : ''}`}</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKU","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { ADD_SKU } from 'apiServices/action'\r\nimport './index.scss'\r\nimport SelectedSKU from 'Page/StockEntry/StockTransfer/WeightEntry/SelectedSKUList/SelectedSKU'\r\nconst SelectedSKUList = ({\r\n    hideSKUList,\r\n    setActiveSKU,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName\r\n}) => {\r\n    const selectedSku = moduleEntry.jobPost.list.length\r\n    const dimention = document.documentElement.clientWidth\r\n    let height = document.documentElement.clientHeight\r\n    height = height - 212\r\n    const [hideContent, setHideContent] = useState(false)\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className={`${hideSKUList ? 'w-0' : 'w-30'}  mt-md-0 rounded-bottom rounded-top`}>\r\n            <div style={{ padding: 17 }} className='w-100 bg-white border-top border-left border-right rounded-top border-soft-green text d-flex align-items-center justify-content-between' onClick={() => dimention <= 500 ? setHideContent(!hideContent) : null}>\r\n                <div className=\"LatoBold\"> Selected SKU <span className='font-green'>{`(${selectedSku} SKU${selectedSku > 1 ? 's' : ''})`}</span></div>\r\n                <div className='d-flex align-items-center justify-content-between'>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/stock-transfer/weight-entry/remove-sku'>\r\n                        <div className=\"fontSizeTitle px-3 emptyTextField iconU-remove\" />\r\n                    </Link>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/stock-transfer/weight-entry/add-sku'>\r\n                        <div className='fontSizeTitle emptyTextField text-bold iconU-entryAdd' ></div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div style={{ height: dimention <= 500 ? false : height, maxHeight: height }} className={` overflow-y w-100 bg-white mr-0 border rounded-bottom border-soft-green pl-3 pr-0 pt-3 ${hideContent ? 'd-none' : null}`}>\r\n                {\r\n                    moduleEntry?.jobPost.list.map((data, idx) =>\r\n                        <SelectedSKU\r\n                            data={data}\r\n                            idx={idx}\r\n                            activeSku={activeSku}\r\n                            skuDescription={data?.skuName}\r\n                            skuNumber={data?.skuNumber}\r\n                            uomLabel={data?.unitOfMeassures}\r\n                            uomValue={data?.totalQty}\r\n                            uom={data?.unitOfMeassures}\r\n                            img={data?.photo}\r\n                            onClick={() => setActiveSKU(idx)}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKUList","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Decimal from 'Component/Input/decimal'\r\nimport Input from 'Component/Input'\r\nimport { useEffect } from 'react'\r\n\r\n\r\nconst WeightEntry = ({\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    gradeList,\r\n    ripeness,\r\n    inputWidth,\r\n    showTitle,\r\n    item,\r\n    onChange,\r\n    uom,\r\n    poListIdx,\r\n    category\r\n}) => {\r\n    let ripenessLevel = useSelector(state => state.ripenessLevel)\r\n    let areaMovement = useSelector(state => state.areaMovement)\r\n    let rip = []\r\n    let filteredGradeList = gradeList\r\n    useEffect(() => {\r\n        const w = ripenessLevel.findIndex(r => r.value === 'waste')\r\n        const sw = ripenessLevel.findIndex(r => r.value === 'semi_waste')\r\n        if (w === -1 && areaMovement?.value === 3) ripenessLevel.push({ label: \"Waste\", value: \"waste\" })\r\n        if (sw === -1 && areaMovement?.value === 3) ripenessLevel.push({ label: \"Semi Waste\", value: \"semi_waste\" })\r\n    }, [])\r\n    if (category !== 'Fruits') rip = ripenessLevel.filter(r => r?.value === 'waste' || r?.value === 'semi_waste')\r\n    if (category === 'Fruits') rip = ripenessLevel\r\n\r\n\r\n    if (areaMovement?.value === 8) filteredGradeList = gradeList?.filter(grade => grade.label === 'Waste' || grade.label === 'Semi Waste')\r\n    return (\r\n        <div className='d-flex w-100 we-m'>\r\n\r\n            <Decimal\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            <Input\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Quantity'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n        </div>\r\n    )\r\n}\r\nexport default WeightEntry","import { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport {totalListItemWeightCount} from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n\r\nexport const addRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.push({\r\n        qty: '',\r\n        expiryDate:js.jobPost.list[activeSku].poList[poListIdx].expiryDate\r\n    })\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLine = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e\r\n}) => {\r\n    const name = e?.target?.name\r\n    let value = e?.target?.value\r\n    let js = { ...moduleEntry }\r\n\r\n    if (name === 'weight' || name === 'weightToCompare') {\r\n        // js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = parseInt(value)\r\n        let regex = /^[0-9\\.\\x0]+$/\r\n        console.clear()\r\n        if ((regex.test(value) === true && value !== \"\")) {\r\n            let newValue = 0;\r\n        let arr = value?.split('.')\r\n        let number = arr[0];\r\n        if(number >= 0) number = parseInt(number)\r\n        let commaNumber = arr[1];\r\n        \r\n        if ((commaNumber !== null && commaNumber !== undefined)) {\r\n            if (commaNumber.length > 2) {\r\n                //jika dibelakang koma ada lebih dari 2 angka\r\n                var sliceNumber = commaNumber.slice(0, 2);\r\n                newValue = `${number}.${sliceNumber}`\r\n            } else {\r\n                newValue = `${number}.${commaNumber}`\r\n            }\r\n        } else {\r\n            newValue = parseInt(number)\r\n        }\r\n        \r\n            //fill weight qty\r\n            if(name === 'weight'){\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n            }\r\n            if(name === 'weightToCompare'){\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompareIsEmpty = false\r\n            }\r\n\r\n        }\r\n        else{\r\n            //fill weight qty\r\n            if(name === 'weight'){\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n            }\r\n            if(name === 'weightToCompare'){\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = ''\r\n            }   \r\n        }\r\n    }\r\n    else if (name === 'qty'){\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = value ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n    }\r\n\r\n    else if (name === 'note'){\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    const initialWeight = js.jobPost.list[activeSku].poList[poListIdx].inboundQty\r\n    let initialWeightUpdate = initialWeight\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        if (data.qty) js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        initialWeightUpdate = initialWeightUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = initialWeightUpdate\r\n        if (initialWeightUpdate < 0) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n            js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = 0\r\n        }\r\n        else{\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList.filter(item => {return item.qtyIsEmpty=false})\r\n        }\r\n    })\r\n\r\n    //initial weight from it self\r\n    const initialWeightScreen = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n    let initialWeightScreenUpdate = initialWeightScreen\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        initialWeightScreenUpdate = initialWeightScreenUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = initialWeightScreenUpdate\r\n    })\r\n    //end of initial weight from it self\r\n\r\n    const over = totalListItemWeightCount({moduleList:js.jobPost.list[activeSku].poList[poListIdx].itemList})\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightOver = over > initialWeight ? over : 0\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLineDropdown = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    selected,\r\n    name\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    // if (name === 'grade') {\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].gradeIsEmpty = false\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = { label: null, value: null }\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = null\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    // }\r\n    if (name === 'ripeness') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = selected\r\n        if(selected?.value === 'waste' || selected?.value === 'semi_waste') js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n        else js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = {label:'',value:''}\r\n    }\r\n    if (name === 'grade') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n    }\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].gradeIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = ''\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const countQty = ({ dispatch, activeSku, moduleEntry, poListIdx,entryListIdx }) => {\r\n    let number = parseInt(0)\r\n    const list = moduleEntry.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    list.map((item, idx) => { \r\n        if(idx !== entryListIdx) number += Number.isInteger(item?.qty) ? item?.qty : parseFloat(item?.qty)\r\n    })\r\n    \r\n    return number\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dateFull, isFloat } from 'services';\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport WeightEntry from \"Page/StockEntry/StockTransfer/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry\";\r\nimport \"./index.scss\";\r\nimport {\r\n  addRow,\r\n  updateJSWeightLine,\r\n  updateJSWeightLineDropdown\r\n} from \"Page/StockEntry/StockTransfer/WeightEntry/services\";\r\nimport { deleteRow, countQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst WeightEntryCard = ({\r\n  inputWidth,\r\n  activeSku,\r\n  poListIdx,\r\n  poItem,\r\n  moduleEntry,\r\n  moduleName,\r\n  gradeList\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    expiryDate,\r\n    inboundDate,\r\n    initialWeight,\r\n    inboundQty,\r\n    initialWeightUpdate,\r\n    initialWeightScreenUpdate,\r\n    poUuid,\r\n    skuUuid,\r\n    supplierId,\r\n    supplierName,\r\n    uom,\r\n    ripeness,\r\n    ripenessLevel,\r\n    edited,\r\n    wmsPoSkuCode,\r\n    category,\r\n    codeGrade,\r\n    isHidden\r\n  } = poItem;\r\n  const total = !isNaN(initialWeightUpdate) ? initialWeightUpdate : inboundQty;\r\n  const initialWeightTotal = !isNaN(initialWeightScreenUpdate) ? initialWeightScreenUpdate : initialWeight\r\n  const uomType = uom === \"kg\" || uom === \"gram\" ? \"Weight\" : \"Quantity\";\r\n  const grade = moduleEntry.jobPost.list[activeSku].gradeList.filter(grade => { return grade?.value === codeGrade })\r\n  const area = moduleEntry.jobPost.areaName\r\n\r\n  return (\r\n    <div\r\n      // onKeyDown={e => e.keyCode === 13 ? addRow({dispatch, moduleEntry,moduleName, activeSku, poListIdx}) : false}\r\n      onKeyDown={e => e.keyCode === 13 ? false : false}\r\n      id={`sku_item_${activeSku}_${poListIdx}`}\r\n      tabIndex='0'\r\n      className={`${isHidden ? 'd-none' : null} z-0 d-flex flex-column sku-item justify-content-between w-100 mb-3 align-items-center border rounded border-soft-green ${edited ? \"soft-green\" : null\r\n        }`}\r\n    >\r\n      {/* Line 1 */}\r\n      <div className=\"w-100 border-soft-green mt-3 d-flex align-items-start px-3\">\r\n        <div className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex justify-content-between align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Inbound Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {inboundDate ? dateFull({ date: inboundDate }) : '-'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex align-items-center mb-3\">\r\n            {`Initial ${uomType}`}\r\n            <span className=\"ml-2 font-green\">\r\n              {` ${initialWeight} ${uom?.toUpperCase()}${initialWeight > 1 ? \"s\" : \"\"}`}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 2 */}\r\n\r\n      <div className=\"w-100 border-soft-green d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`PO Code`}\r\n              <span className=\"ml-2 font-green\">{` ${wmsPoSkuCode ? wmsPoSkuCode : '-'}`}</span>\r\n            </div>\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Supplier Name`}\r\n              <span className=\"ml-2 font-green\">{` ${supplierName}`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 3 */}\r\n      <div className=\"w-100 border-bottom border-soft-green mb-3 d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Expiry Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {expiryDate ? dateFull({ date: expiryDate, noTime: true }) : '-'}\r\n              </span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-3 ${area === 'Waste' || area === 'Semi Waste' ? null : 'd-none'}`}>\r\n              {`Grade`}\r\n              <span className=\"ml-2 font-green\">{` ${grade.length ? grade[0].label : '-'}`}</span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`Inbound Quantity`}\r\n              <span className=\"ml-2 font-green\">{` ${inboundQty ? inboundQty : '-'}`}</span>\r\n            </div>\r\n            {/* <div className={`d-flex align-items-center mb-3 mr-5 ${area === 'Waste' || area === 'Semi Waste' ? 'd-none' : (category === 'Fruits' || category === 'Vegetables' ? null : 'd-none')}`}>\r\n              {`Ripeness Level`}\r\n              <span className=\"ml-2 font-green\">{` ${ripenessLevel}`}</span>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex flex-column justify-content-between w-100 align-items-center px-3 z-0\">\r\n        {poItem.itemList?.map((item, entryListIdx) => {\r\n          return (\r\n            <div className=\"d-flex w-100 align-items-center justify-content-between\">\r\n              <div className=\"w-100 d-flex\">\r\n                <div style={{ width: '10px' }} className=\"input-height d-flex align-items-center mb-3 mr-3 pt-4 mt-2\">{`${entryListIdx + 1}.`}</div>\r\n                <div className=\"w-100\">\r\n                  <WeightEntry\r\n                    category={category}\r\n                    entryListIdx={entryListIdx}\r\n                    wmsPoSkuInfoId={item.wmsPoSkuInfoId}\r\n                    showTitle={true}\r\n                    gradeList={gradeList}\r\n                    onChange={(e) =>\r\n                      updateJSWeightLine({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        e,\r\n                      })\r\n                    }\r\n                    uom={uom}\r\n                    ripeness={ripeness}\r\n                    inputWidth={inputWidth}\r\n                    item={item}\r\n                    className={!ripeness ? \"d-none\" : null}\r\n                    poListIdx={poListIdx}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex w-25 align-items-center justify-content-end input-height mb-0 p-0\">\r\n                <img\r\n                  src={Trash}\r\n                  alt=\"delete icon\"\r\n                  className=\"w-1 cursor-pointer\"\r\n                  onClick={(e) =>\r\n                    deleteRow({\r\n                      dispatch,\r\n                      moduleEntry,\r\n                      moduleName,\r\n                      activeSku,\r\n                      poListIdx,\r\n                      entryListIdx,\r\n                      e,\r\n                      countQty\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        onKeyDown={e => e.keyCode === 13 ? addRow({ dispatch, moduleEntry, moduleName, activeSku, poListIdx }) : false}\r\n        // className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer ${total === 0 ? 'd-none' : null}`}\r\n        className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer `}\r\n        // tabIndex='0'\r\n        onClick={() => addRow({\r\n          dispatch, moduleEntry,\r\n          moduleName, activeSku, poListIdx\r\n        })}\r\n      >\r\n        <i className=\"green iconU-entryAdd pr-2\"></i>\r\n        {`Add ${uomType} (${isFloat(initialWeightTotal) ? isFloat(initialWeightTotal) : initialWeightTotal} ${uom ? uom.toUpperCase() : ''}${initialWeightTotal > 1 ? \"s\" : \"\"} left)`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WeightEntryCard;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport WeightEntryCard from 'Page/StockEntry/StockTransfer/WeightEntry/WeightEntryList/WeightEntryCard'\r\nimport { removeEntryModule, saveJobSheet } from 'apiServices'\r\nimport { submitValidation } from 'Page/StockEntry/StockTransfer/services'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\";\r\nimport PopUpRequired from \"Component/Modal/PopUpRequired\";\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport Sort from 'Component/Sort'\r\nimport { Prompt } from 'react-router'\r\nimport { useEntryDimention, useStockTransferEntry } from 'Page/StockEntry/GeneralServices'\r\n\r\nconst WeightEntryList = ({\r\n    hideSKUList,\r\n    setHideSKUList,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName\r\n}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { height, heightAdj, dimention } = useEntryDimention()\r\n\r\n    const {\r\n        setIsSuccess,\r\n        status,\r\n        confirmation,\r\n        setConfirmation,\r\n        discard,\r\n        setDiscard,\r\n        isSaved,\r\n        setIsSaved,\r\n        action,\r\n        setAction,\r\n        isRequired,\r\n        setIsRequired,\r\n        hideContent,\r\n        setHideContent,\r\n        isLoading,\r\n        skuName,\r\n        skuNumber,\r\n        poList,\r\n        gradeList,\r\n        unitOfMeassures,\r\n        totalWeight,\r\n        edited,\r\n        postInfo,\r\n        areaMovement\r\n    } = useStockTransferEntry({ moduleEntry, activeSku })\r\n\r\n    //Condition\r\n    const isMobile = dimention <= 500\r\n    const isHidden = hideContent ? 'd-none' : null\r\n    const isPlural = totalWeight > 1 ? \"s\" : ''\r\n    const isEdited = edited ? 'bg-green' : 'bg-lineGrey'\r\n\r\n    return (\r\n        <div style={{ paddingLeft: isMobile ? 0 : 10 }} className='w-100 h-100 mt-3 mt-md-0'>\r\n            {/* <Prompt\r\n                when={true}\r\n                message={location => {\r\n                    let pathname = location.pathname\r\n                    if (!allowPage.includes(pathname)) {\r\n                        setDiscard(true)\r\n                        return false\r\n                    }\r\n                }}\r\n            /> */}\r\n            <Discard\r\n                discard={discard}\r\n                module={'Inventory Entry - Stock Movement'}\r\n                moduleEntry={moduleEntry}\r\n                close={() => setDiscard(false)}\r\n                discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch })}\r\n            />\r\n            <PopUpSaved\r\n                status={status}\r\n                moduleEntry={moduleEntry}\r\n                submit={() => dispatch({ type: 'CREATE_JOB_SHEET', [`${moduleName}EntryData`]: null, [`${moduleName}SummaryData`]: null })}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSaved={isSaved}\r\n                action={action}\r\n                setIsSaved={setIsSaved}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <PopUpRequired\r\n                isRequired={isRequired}\r\n                module={moduleEntry}\r\n                setIsRequired={setIsRequired}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <Confirmation\r\n                moduleName={moduleName}\r\n                noSkuChecking={true}\r\n                isLoading={isLoading}\r\n                moduleEntry={moduleEntry}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSuccess={postInfo}\r\n                setAction={setAction}\r\n                action={action}\r\n                save={() => saveJobSheet({ name: 'save', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n                submit={() => saveJobSheet({ name: 'submit', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n            />\r\n            <div className='mb-3 bg-white rounded-bottom rounded-top'>\r\n                <div style={{ height }} style={{ padding: 10 }} className='w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green'>\r\n                    <div className='d-flex w-100 m-0 p-0' onClick={() => isMobile ? setHideContent(!hideContent) : null}>\r\n                        <div className={`${hideSKUList ? 'iconU-sideBarHideRight' : 'iconU-sideBarHideLeft'} emptyTextField fontSizeTitle mr-3`} onClick={() => setHideSKUList(!hideSKUList)} />\r\n                        <div className='mr-3 pr-1 d-flex align-items-center m-0 p-0 LatoBold'>Weight Entry</div>\r\n                        <div className='mr-3 iconU-sideBarDot d-flex align-items-center' />\r\n                        <div className='mr-3 d-flex align-items-center font-green LatoBold'>{`${skuName} (${skuNumber})`}</div>\r\n                    </div>\r\n                    <Sort moduleEntry={moduleEntry} moduleName={moduleName} activeSku={activeSku} dispatch={dispatch} />\r\n                </div>\r\n                <div style={{ height: isMobile ? height : heightAdj, minHeight: isMobile ? height : heightAdj }} className={`w-100 overflow-y mr-0 border-left border-right border-soft-green pl-3 pr-2 pt-3 ${isHidden}`}>\r\n                    {\r\n                        poList?.map((poItem, idx) => {\r\n                            return <WeightEntryCard\r\n                                activeSku={activeSku}\r\n                                gradeList={gradeList}\r\n                                inputWidth='input-w-100'\r\n                                activeSku={activeSku}\r\n                                poListIdx={idx}\r\n                                poItem={poItem}\r\n                                moduleEntry={moduleEntry}\r\n                                moduleName={moduleName}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <div className='w-100 d-flex align-items-center p-3 border-left border-right border-bottom rounded-bottom LatoBold'>\r\n                    <button\r\n                        tabIndex='0'\r\n                        type=\"button\"\r\n                        className={`btn sku-item ${isEdited}  text-white px-5 mr-3 LatoBold`}\r\n                        onClick={() => edited ? setConfirmation({ show: true, name: 'save' }) : null}>\r\n                        Save\r\n                    </button>\r\n                    <div>Total Weight <span className='font-green'>{`${totalWeight} ${unitOfMeassures?.toUpperCase()}${isPlural}`}</span></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end\">\r\n                <div tabIndex='0' onClick={() => setDiscard(true)} className='red pr-3 sku-item fontSizeButton cursor-pointer'><i className='iconU-entryTrash'></i> Discard</div>\r\n                <button tabIndex='0' onClick={() => edited ? submitValidation({ moduleEntry, moduleName, dispatch, setConfirmation, setIsRequired, areaMovement }) : null} className={`btn sku-item px-5 py-2 text-white ${isEdited} LatoBold no-shadow`} style={{ height: \"fit-content !important\" }} >Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntryList","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport SelectedSKUList from 'Page/StockEntry/StockTransfer/WeightEntry/SelectedSKUList'\r\nimport WeightEntryList from 'Page/StockEntry/StockTransfer/WeightEntry/WeightEntryList'\r\n\r\nconst WeightEntry = () => {\r\n    const stockTransferEntryData = useSelector(state => state.stockTransferEntryData)\r\n    const [hideSKUList, setHideSKUList] = useState(false)\r\n    const [activeSku, setActiveSKU] = useState(0)\r\n    let height = document.documentElement.clientHeight\r\n    let clientWidth = document.documentElement.clientWidth\r\n    let heightAdj = height - 150\r\n    const moduleName = 'stockTransfer'\r\n    if (!stockTransferEntryData || stockTransferEntryData?.jobPost.list.length === 0) {\r\n        return (\r\n            <div className='d-flex align-items-center justify-content-center text-center w-100 h-screen'><Redirect to='/inventory-entry/stock-transfer'>Please Select At Least 1 SKU</Redirect></div >)\r\n    }\r\n    return (\r\n        <div style={{height: clientWidth <= 500 ? height : heightAdj }} className='w-100 d-md-flex justify-content-between scroll-y z-0'>\r\n            <SelectedSKUList\r\n                hideSKUList={hideSKUList}\r\n                activeSku={activeSku}\r\n                setActiveSKU={setActiveSKU}\r\n                moduleName={moduleName}\r\n                moduleEntry={stockTransferEntryData}\r\n            />\r\n            <WeightEntryList\r\n                setHideSKUList={setHideSKUList}\r\n                hideSKUList={hideSKUList}\r\n                moduleName={moduleName}\r\n                moduleEntry={stockTransferEntryData}\r\n                activeSku={activeSku}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntry","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    name\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { getPoBySkuId, removeEntryModule } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    warehouseIdDestination,\r\n    areaId,\r\n    areaIdDesposition }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseIdDestination?.value,\r\n            warehouseDestinationName: warehouseIdDestination?.label,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaIdDesposition?.value),\r\n            areaDestinationName: areaIdDesposition?.label,\r\n            list: newJs\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    setLocalEntryData(jobSheet)\r\n    // dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const setAreaIdDesposition = ({ dispatch, selected }) => {\r\n    if (selected) dispatch({ type: SET_AREA, areaIdDesposition: selected })\r\n}\r\n\r\n\r\n\r\n\r\n//remove sku\r\nexport const removeSku = async ({ dispatch, moduleEntry, moduleName }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n    const list = moduleEntry.jobPost.list.filter(data => { if (data.checked) return data })\r\n    jobSheet.jobPost.list = list\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n    if (list.length === 0) removeEntryModule({ id: jobSheet.jobPost.id, moduleName, dispatch })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const submitValidation = ({ moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            po.itemList.map(item => {\r\n                const { qty, grade, ripeness, note } = item\r\n                if (po.uom === 'kg') {\r\n\r\n\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                            isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = false : item.gradeIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = false : item.noteIsEmpty = false\r\n                        }\r\n                        else {\r\n                            isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = false : item.gradeIsEmpty = false\r\n                            !ripeness?.value ? item.ripenessIsEmpty = false : item.ripenessIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = false : item.noteIsEmpty = false\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                }\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (qtyCount > po.initialWeight) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                // if(!item.qtyIsEmpty) po.initialWeightOver > po.initialWeight ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        setConfirmation({ show: false, name: null })\r\n        setIsRequired(true)\r\n    }\r\n}"],"sourceRoot":""}