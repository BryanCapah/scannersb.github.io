{"version":3,"sources":["Page/StockEntry/Movement/WeightEntry/SelectedSKUList/SelectedSKU/index.jsx","Page/StockEntry/Movement/WeightEntry/SelectedSKUList/index.jsx","Page/StockEntry/Movement/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry/index.jsx","Page/StockEntry/Movement/WeightEntry/services.js","Page/StockEntry/Movement/WeightEntry/WeightEntryList/WeightEntryCard/index.jsx","Page/StockEntry/Movement/WeightEntry/WeightEntryList/index.jsx","Page/StockEntry/Movement/WeightEntry/index.jsx","Component/Dropdown/index.jsx","Component/Modal/ModalConfirmation/services.js","Component/Modal/ModalConfirmation/index.jsx","Component/Modal/PopUpDiscard/index.jsx","Component/Input/decimal.jsx","assets/icons/trash.png","Component/Modal/PopUpSaved/services.js","Component/Modal/PopUpSaved/index.jsx","Component/Input/index.jsx","Page/StockEntry/GeneralServices/index.js","Component/Modal/PopUpRequired/services.js","Component/Modal/PopUpRequired/index.jsx","Component/Input/Note.jsx","Component/DatePickerNew/index.jsx","Component/DatePickerNew/services.js","Component/Sort/index.jsx","Component/CustomTable/index.jsx","assets/icons/asc.svg","assets/icons/desc.svg","Page/StockEntry/Movement/services.js"],"names":["SelectedSKU","img","skuDescription","skuNumber","activeSku","uomValue","idx","uom","onClick","data","edited","getEditedData","isEmpty","checkisEmpty","tabIndex","onKeyDown","e","onEnter","className","src","alt","toUpperCase","SelectedSKUList","hideSKUList","setActiveSKU","moduleEntry","selectedSku","moduleName","jobPost","list","length","dimention","document","documentElement","clientWidth","height","clientHeight","useState","hideContent","setHideContent","useDispatch","style","padding","to","maxHeight","map","skuName","uomLabel","unitOfMeassures","totalQty","photo","WeightEntry","entryListIdx","wmsPoSkuInfoId","gradeList","ripeness","inputWidth","showTitle","item","onChange","onChangeDropdown","poListIdx","category","ripenessLevel","useSelector","state","areaMovement","rip","filteredGradeList","useEffect","w","findIndex","r","value","sw","push","label","filter","grade","qtyIsEmpty","values","qty","title","Input","Dropdown","gradeIsEmpty","selectedValue","show","selected","name","placeholder","options","width","ripenessIsEmpty","Note","noteIsEmpty","note","addRow","dispatch","js","skuUuid","itemList","poList","lastSelected","gradeSelected","expiryDate","type","CREATE_JOB_SHEET","WeightEntryCard","poItem","inboundDate","initialWeight","inboundQty","initialWeightUpdate","initialWeightScreenUpdate","supplierName","poUuid","supplierId","wmsPoSkuCode","codeGrade","isHidden","initialWeightTotal","isNaN","uomType","area","areaName","keyCode","id","dateFull","date","opacity","noTime","target","console","clear","test","newValue","arr","split","number","parseInt","commaNumber","undefined","sliceNumber","slice","qtyToCompare","qtyToCompareIsEmpty","minus","over","totalListItemWeightCount","moduleList","initialWeightOver","updateJSWeightLine","updateJSWeightLineDropdown","Trash","deleteRow","countQty","isFloat","WeightEntryList","setHideSKUList","useStockMovementEntry","setIsSuccess","confirmation","setConfirmation","discard","setDiscard","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","isLoading","totalWeight","postInfo","status","useTargetMovement","showTargetRepack","table","slot","setSlot","slotList","useEntryDimention","heightAdj","isMobile","isPlural","isEdited","showTarget","targetRepackHeight","slotListFilter","hideResetOpt","customTableClass","paddingLeft","module","close","discardEntry","removeEntryModule","PopUpSaved","submit","totalSku","PopUpRequired","noSkuChecking","isSuccess","save","saveJobSheet","minHeight","overflow","Date","addDay","withDay","classNamePrefix","isMulti","resetName","marginRight","noMarginBottom","CustomTable","editColumn","styles","color","textAlign","display","columns","Sort","submitValidation","stockMovementEntryData","isDisabled","isOpen","setIsOpen","isEmptyStyle","border","elem","getElementById","position","getBoundingClientRect","defaultvalue","val","menuPlacement","bottom","isSearchable","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","cursor","fontWeight","theme","borderRadius","next","isCaptcha","setIsValidated","setIsType","isType","key","includes","focus","stat","index","ModalsConfirmation","moveAll","singleViewData","buttonName","window","onkeydown","areaDestinationName","warehouseDestinationName","skuListUpdate","newModule","po","_qty","isInteger","parseFloat","_sku","wasteType","_toWaste","_uom","newSku","sku","wqty","swqty","isExist","i","s","skuListUpdateCheck","closeOnBackdrop","borderBottom","maxWidth","ModalsCaptcha","setIsShowModal","submitText","text","characters","charactersLength","text_split","charAt","Math","floor","random","selectorCsvFileName","csvFileName","React","isCaptchaText","isValidated","onClose","size","autocomplete","onKeyUp","textTransform","maxLength","PopUpDiscard","toCompare","autoComplete","exports","submitAction","setLocalEntryData","complete","saved","success","header","headerIcon","textColor","button","buttonText","failed","showErrorMessage","setShowErrorMessage","arrowIcon","errorText","bodyOpenClassName","message","wordWrap","toString","handleFailed","useDimension","hValue","wValue","emptyItem","useStockTake","zeroQuantity","thereAreRequest","moduleFirstLoad","stockTakeFirstLoad","warehouseUuid","user","stockTakeEntryData","summary","setSummary","localEntryData","search","setSearch","setArea","areaId","setAreaId","a","getRipenessLevel","getWarehouseArea","areaList","getUnfinishedEntries","getData","useStockTakeEntry","allowPage","setAllowPage","totalWeightCount","jobSheetChecker","useStockMovement","stockMovementFirstLoad","stockMovementDropdown","areaIdDesposition","isCheckedBefore","setIsCheckedBefore","areaMatched","setAreaMatched","isCheckedTotal","selectedSkuCheck","added","entryIsReady","stockMovementTargetRepack","_","getStockTakeSummary","desc","setModule","useStockTransferEntry","useWaste","wasteFirstLoad","wasteEntryData","getWasteWarehouseArea","useWasteEntry","useAdditionalOutbound","outboundFirstLoad","outboundEntryData","warehouseArea","outboundAddSku","setNext","useAdditionalOutboundEntry","outboundTypeList","useRepacking","repackFirstLoad","repackEntryData","areaDestinationId","setAreaDestinationId","targetRepack","setTargetRepack","aId","adId","useRepackingEntry","invalidThreshold","setInvalidThreshold","totalPack","totalPackCount","useSingleView","createPo","setCreatePo","setSingleViewData","setMoveAll","updateList","props","props2","IS_LOADING","setTimeout","singleView","useScanner","showScanner","setShowScanner","showSkuList","setShowSkuList","useTargetRepack","targetRepacks","tgtRpck","filterTargetRepack","setShowTargetRepack","updateTargetRepack","targetMovements","defaults","threshold","isLessThanInitWeight","SKUDatePicker","showDate","selectDate","setShowDate","startDate","endDate","dateRange","setDateRange","setDate","mode","setMode","singleDate","multipleDate","wrapperRef","useRef","handleClickOutside","event","current","contains","addEventListener","removeEventListener","useOutside","ref","ranges","newdate","dt","selection","setDates","dateShow","sortBy","setSortBy","resetFilter","setResetFilter","dateDMY","datePicker","sortByInboundDate","filterByDate","minWidth","d","asc","ReactTableFixedColumns","withFixedColumns","ReactTable","getColumnWidth","rows","accessor","headerText","max","row","listHeader","h","obj","Header","Cell","sortable","resizable","headerClassName","showModal","activeTab","editColumnTemp","this","fields","tableStatus","Fragment","showPagination","noDataText","minRows","getTdProps","rowInfo","column","instance","handleOriginal","original","defaultPageSize","Component","selectSku","checked","moduleSummary","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","jsD","sI","getGrade","skuId","getPoBySkuId","addPoItem","poItems","expiryMs","moment","valueOf","inBoundyMs","Number","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","areaSource","areaDestination","preAddSku","preAddHandler","selectArea","source","destination","setAreaIdDesposition","setAreaMovement","ar","isClear","jsR","qtyCount","valid","moveAllStockMovement","Object","assign","JSON","parse","stringify","updateData","ls"],"mappings":"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","file":"static/js/19.200187ae.chunk.js","sourcesContent":["import React from 'react'\r\nimport { getEditedData,checkisEmpty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport {onEnter} from 'services'\r\nconst SelectedSKU = ({\r\n    img,\r\n    skuDescription,\r\n    skuNumber,\r\n    activeSku,\r\n    uomValue,\r\n    idx,\r\n    uom,\r\n    onClick,\r\n    data\r\n}) => {\r\n    const edited = getEditedData({ data })\r\n    const isEmpty = checkisEmpty(data)\r\n    return (\r\n        <div tabIndex='0' onKeyDown={e => onEnter({e, idx, onClick})} onClick={() => onClick()} className={`w-100 sku-item softGreen d-flex justify-content-between pl-2 pr-3 py-2 mb-3 cursor-pointer rounded ${edited ? 'soft-green' : null} ${activeSku === idx ? 'border-green' : (isEmpty ? 'border-red' : 'border')}`}>\r\n            <div className='d-flex align-items-center w-100'>\r\n                <div className='d-flex align-items-center'>\r\n                    <img src={img} alt='sku image' className='w-5 mr-3 border softGreen rounded' />\r\n                </div>\r\n                <div className=\"w-100\">\r\n                    <div className='mr-3'>\r\n                        <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div className='text'>{skuNumber}</div>{activeSku}\r\n                        <div className='green LatoBold'>{uomValue} <span>{`${uom ? uom.toUpperCase() : ''}${uomValue > 1 ? 's' : ''}`}</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKU","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { ADD_SKU } from 'apiServices/action'\r\nimport './index.scss'\r\nimport SelectedSKU from 'Page/StockEntry/Movement/WeightEntry/SelectedSKUList/SelectedSKU'\r\nconst SelectedSKUList = ({\r\n    hideSKUList,\r\n    setActiveSKU,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName\r\n}) => {\r\n    const selectedSku = moduleEntry.jobPost.list.length\r\n    const dimention = document.documentElement.clientWidth\r\n    let height = document.documentElement.clientHeight\r\n    height = height - 212\r\n    const [hideContent, setHideContent] = useState(false)\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className={`${hideSKUList ? 'w-0' : 'w-30'}  mt-md-0 rounded-bottom rounded-top`}>\r\n            <div style={{ padding: 17 }} className='w-100 bg-white border-top border-left border-right rounded-top border-soft-green text d-flex align-items-center justify-content-between' onClick={() => dimention <= 500 ? setHideContent(!hideContent) : null}>\r\n                <div className=\"LatoBold\"> Selected SKU <span className='font-green'>{`(${selectedSku} SKU${selectedSku > 1 ? 's' : ''})`}</span></div>\r\n                <div className='d-flex align-items-center justify-content-between'>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/movement/weight-entry/remove-sku'>\r\n                        <div className=\"fontSizeTitle px-3 emptyTextField iconU-remove\" />\r\n                    </Link>\r\n                    <Link tabIndex='0' className='sku-item' to='/inventory-entry/movement/weight-entry/add-sku'>\r\n                        <div className='fontSizeTitle emptyTextField text-bold iconU-entryAdd' ></div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div style={{ height: dimention <= 500 ? false : height, maxHeight: height }} className={` overflow-y w-100 bg-white mr-0 border rounded-bottom border-soft-green pl-3 pr-0 pt-3 ${hideContent ? 'd-none' : null}`}>\r\n                {\r\n                    moduleEntry?.jobPost.list.map((data, idx) =>\r\n                        <SelectedSKU\r\n                            data={data}\r\n                            idx={idx}\r\n                            activeSku={activeSku}\r\n                            skuDescription={data?.skuName}\r\n                            skuNumber={data?.skuNumber}\r\n                            uomLabel={data?.unitOfMeassures}\r\n                            uomValue={data?.totalQty}\r\n                            uom={data?.unitOfMeassures}\r\n                            img={data?.photo}\r\n                            onClick={() => setActiveSKU(idx)}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKUList","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport Decimal from 'Component/Input/decimal'\r\nimport Input from 'Component/Input'\r\nimport Note from 'Component/Input/Note'\r\nimport { useEffect } from 'react'\r\n\r\n\r\nconst WeightEntry = ({\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    gradeList,\r\n    ripeness,\r\n    inputWidth,\r\n    showTitle,\r\n    item,\r\n    onChange,\r\n    onChangeDropdown,\r\n    uom,\r\n    poListIdx,\r\n    category\r\n}) => {\r\n    let ripenessLevel = useSelector(state => state.ripenessLevel)\r\n    let areaMovement = useSelector(state => state.areaMovement)\r\n    let rip = []\r\n    let filteredGradeList = gradeList\r\n    useEffect(() => {\r\n        const w = ripenessLevel.findIndex(r => r.value === 'waste')\r\n        const sw = ripenessLevel.findIndex(r => r.value === 'semi_waste')\r\n        if(w === -1 && areaMovement?.value === 3) ripenessLevel.push({label: \"Waste\", value: \"waste\"})\r\n        if(sw === -1 && areaMovement?.value === 3) ripenessLevel.push({label: \"Semi Waste\", value: \"semi_waste\"})\r\n    },[])\r\n    if(category !== 'Fruits') rip = ripenessLevel.filter( r => r?.value === 'waste' || r?.value === 'semi_waste')\r\n    if(category === 'Fruits') rip = ripenessLevel\r\n\r\n   \r\n    if(areaMovement?.value === 8) filteredGradeList = gradeList?.filter(grade => grade.label === 'Waste' || grade.label === 'Semi Waste')\r\n    return (\r\n        <div className='d-flex w-100 we-m'>\r\n\r\n            <Decimal\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            <Input\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Quantity'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n            <Dropdown\r\n            // isDisabled={entryListIdx === 0 ? true : false}\r\n                isEmpty={item.gradeIsEmpty}\r\n                selectedValue={item?.grade}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={true}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'grade' })}\r\n                title='Grade'\r\n                placeholder='Select Grade'\r\n                options={filteredGradeList}\r\n                width='w-30'\r\n                className={areaMovement?.value === 8 ? null : 'd-none'}\r\n                showTitle={showTitle} />\r\n            <Dropdown\r\n                // isDisabled={entryListIdx === 0 ? true : false}\r\n                isEmpty={item.ripenessIsEmpty}\r\n                selectedValue={item?.ripeness}\r\n                grade={item.grade?.label}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={true}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'ripeness' })}\r\n                title='Select Ripeness'\r\n                placeholder='Select Ripeness'\r\n                options={rip}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={areaMovement?.value === 3 ? null : 'd-none'} />\r\n            <Note\r\n                isEmpty={item.noteIsEmpty}\r\n                grade={'Waste'}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                ripeness={ripeness}\r\n                inputWidth={`w-50 ${item.grade?.label === 'Semi Waste' || item.grade?.label === 'Waste' ? null : 'd-none'}`}\r\n                values={item?.note}\r\n                showTitle={showTitle}\r\n                title={'Note'}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default WeightEntry","import { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n\r\nexport const addRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    const grade = js.jobPost.list[activeSku].gradeList.filter(grade => { return grade?.value === js.jobPost.list[activeSku].skuUuid })\r\n    const itemList = js.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    const lastSelected = itemList[itemList?.length - 1]\r\n    const gradeSelected = lastSelected ? lastSelected.grade : grade[0]\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.push({\r\n        grade: gradeSelected,\r\n        qty: '',\r\n        expiryDate: js.jobPost.list[activeSku].poList[poListIdx].expiryDate\r\n    })\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLine = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e\r\n}) => {\r\n    const name = e?.target?.name\r\n    let value = e?.target?.value\r\n    let js = { ...moduleEntry }\r\n\r\n    if (name === 'weight' || name === 'weightToCompare') {\r\n        // js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = parseInt(value)\r\n        let regex = /^[0-9\\.\\x0]+$/\r\n        console.clear()\r\n        if ((regex.test(value) === true && value !== \"\")) {\r\n            let newValue = 0;\r\n            let arr = value?.split('.')\r\n            let number = arr[0];\r\n            if (number >= 0) number = parseInt(number)\r\n            let commaNumber = arr[1];\r\n\r\n            if ((commaNumber !== null && commaNumber !== undefined)) {\r\n                if (commaNumber.length > 2) {\r\n                    //jika dibelakang koma ada lebih dari 2 angka\r\n                    var sliceNumber = commaNumber.slice(0, 2);\r\n                    newValue = `${number}.${sliceNumber}`\r\n                } else {\r\n                    newValue = `${number}.${commaNumber}`\r\n                }\r\n            } else {\r\n                newValue = parseInt(number)\r\n            }\r\n\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompareIsEmpty = false\r\n            }\r\n\r\n        }\r\n        else {\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = ''\r\n            }\r\n        }\r\n    }\r\n    else if (name === 'qty') {\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = value ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n    }\r\n\r\n    else if (name === 'note') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    const initialWeight = js.jobPost.list[activeSku].poList[poListIdx].inboundQty\r\n    let initialWeightUpdate = initialWeight\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        if (data.qty) js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        initialWeightUpdate = initialWeightUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = initialWeightUpdate\r\n        if (initialWeightUpdate < 0) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n            js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = 0\r\n        }\r\n        else {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList.filter(item => { return item.qtyIsEmpty = false })\r\n        }\r\n    })\r\n\r\n    //initial weight from it self\r\n    const initialWeightScreen = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n    let initialWeightScreenUpdate = initialWeightScreen\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        initialWeightScreenUpdate = initialWeightScreenUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = initialWeightScreenUpdate\r\n    })\r\n    //end of initial weight from it self\r\n\r\n    const over = totalListItemWeightCount({ moduleList: js.jobPost.list[activeSku].poList[poListIdx].itemList })\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightOver = over > initialWeight ? over : 0\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLineDropdown = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    selected,\r\n    name\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    // if (name === 'grade') {\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].gradeIsEmpty = false\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = { label: null, value: null }\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = null\r\n    //     js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    // }\r\n    if (name === 'ripeness') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = selected\r\n        if (selected?.value === 'waste' || selected?.value === 'semi_waste') js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n        else js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = { label: '', value: '' }\r\n    }\r\n    if (name === 'grade') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].grade = selected\r\n    }\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].gradeIsEmpty = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = ''\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const countQty = ({ dispatch, activeSku, moduleEntry, poListIdx, entryListIdx }) => {\r\n    let number = parseInt(0)\r\n    const list = moduleEntry.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    list.map((item, idx) => {\r\n        if (idx !== entryListIdx) number += Number.isInteger(item?.qty) ? item?.qty : parseFloat(item?.qty)\r\n    })\r\n\r\n    return number\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dateFull, isFloat } from 'services';\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport WeightEntry from \"Page/StockEntry/Movement/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry\";\r\nimport \"./index.scss\";\r\nimport {\r\n  addRow,\r\n  updateJSWeightLine,\r\n  updateJSWeightLineDropdown\r\n} from \"Page/StockEntry/Movement/WeightEntry/services\";\r\nimport {deleteRow,countQty} from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst WeightEntryCard = ({\r\n  inputWidth,\r\n  activeSku,\r\n  poListIdx,\r\n  poItem,\r\n  moduleEntry,\r\n  moduleName,\r\n  gradeList\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    expiryDate,\r\n    inboundDate,\r\n    initialWeight,\r\n    inboundQty,\r\n    initialWeightUpdate,\r\n    initialWeightScreenUpdate,\r\n    poUuid,\r\n    skuUuid,\r\n    supplierId,\r\n    supplierName,\r\n    uom,\r\n    ripeness,\r\n    ripenessLevel,\r\n    edited,\r\n    wmsPoSkuCode,\r\n    category,\r\n    codeGrade,\r\n    isHidden\r\n  } = poItem;\r\n  const total = !isNaN(initialWeightUpdate) ? initialWeightUpdate : inboundQty;\r\n  const initialWeightTotal = !isNaN(initialWeightScreenUpdate) ? initialWeightScreenUpdate : initialWeight\r\n  const uomType = uom === \"kg\" || uom === \"gram\" ? \"Weight\" : \"Quantity\";\r\n  const grade = moduleEntry.jobPost.list[activeSku].gradeList.filter(grade => { return grade?.value === codeGrade })\r\n  const area = moduleEntry.jobPost.areaName\r\n  \r\n  return (\r\n    <div \r\n        // onKeyDown={e => e.keyCode === 13 ? addRow({dispatch, moduleEntry,moduleName, activeSku, poListIdx}) : false}\r\n        onKeyDown={e => e.keyCode === 13 ? false : false}\r\n        id={`sku_item_${activeSku}_${poListIdx}`}\r\n         tabIndex='0' \r\n         className={`${isHidden ? 'd-none' : null} z-0 d-flex flex-column sku-item justify-content-between w-100 mb-3 align-items-center border rounded border-soft-green ${edited ? \"soft-green\" : null\r\n      }`}\r\n    >\r\n      {/* Line 1 */}\r\n      <div className=\"w-100 border-soft-green mt-3 d-flex align-items-start px-3\">\r\n        <div className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex justify-content-between align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Inbound Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {inboundDate ? dateFull({ date: inboundDate }) : '-'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex align-items-center mb-3\">\r\n            {`Initial ${uomType}`}\r\n            <span className=\"ml-2 font-green\">\r\n              {` ${initialWeight} ${uom?.toUpperCase()}${initialWeight > 1 ? \"s\" : \"\"}`}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 2 */}\r\n\r\n      <div className=\"w-100 border-soft-green d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`PO Code`}\r\n              <span className=\"ml-2 font-green\">{` ${wmsPoSkuCode ? wmsPoSkuCode : '-'}`}</span>\r\n            </div>\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Supplier Name`}\r\n              <span className=\"ml-2 font-green\">{` ${supplierName}`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 3 */}\r\n      <div className=\"w-100 border-bottom border-soft-green mb-3 d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Expiry Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {expiryDate ? dateFull({ date: expiryDate, noTime: true }) : '-'}\r\n              </span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-3 ${area === 'Waste' || area === 'Semi Waste' ? null : 'd-none'}`}>\r\n              {`Grade`}\r\n              <span className=\"ml-2 font-green\">{` ${grade.length ? grade[0].label : '-'}`}</span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`Inbound Quantity`}\r\n              <span className=\"ml-2 font-green\">{` ${inboundQty ? inboundQty : '-'}`}</span>\r\n            </div>\r\n            {/* <div className={`d-flex align-items-center mb-3 mr-5 ${area === 'Waste' || area === 'Semi Waste' ? 'd-none' : (category === 'Fruits' || category === 'Vegetables' ? null : 'd-none')}`}>\r\n              {`Ripeness Level`}\r\n              <span className=\"ml-2 font-green\">{` ${ripenessLevel}`}</span>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex flex-column justify-content-between w-100 align-items-center px-3 z-0\">\r\n        {poItem.itemList?.map((item, entryListIdx) => {\r\n          return (\r\n            <div className=\"d-flex w-100 align-items-center justify-content-between\">\r\n              <div className=\"w-100 d-flex\">\r\n                <div style={{width:'10px'}} className=\"input-height d-flex align-items-center mb-3 mr-3 pt-4 mt-2\">{`${entryListIdx + 1}.`}</div>\r\n                <div className=\"w-100\">\r\n                  <WeightEntry\r\n                    category={category}\r\n                    entryListIdx={entryListIdx}\r\n                    wmsPoSkuInfoId={item.wmsPoSkuInfoId}\r\n                    showTitle={true}\r\n                    gradeList={gradeList}\r\n                    onChange={(e) =>\r\n                      updateJSWeightLine({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        e,\r\n                      })\r\n                    }\r\n                    onChangeDropdown={({ selected, name }) =>\r\n                      updateJSWeightLineDropdown({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        selected,\r\n                        name,\r\n                      })\r\n                    }\r\n                    uom={uom}\r\n                    ripeness={ripeness}\r\n                    inputWidth={inputWidth}\r\n                    item={item}\r\n                    className={!ripeness ? \"d-none\" : null}\r\n                    poListIdx={poListIdx}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex w-25 align-items-center justify-content-end input-height mb-0 p-0\">\r\n                <img\r\n                  src={Trash}\r\n                  alt=\"delete icon\"\r\n                  className=\"w-1 cursor-pointer\"\r\n                  onClick={(e) =>\r\n                    deleteRow({\r\n                      dispatch,\r\n                      moduleEntry,\r\n                      moduleName,\r\n                      activeSku,\r\n                      poListIdx,\r\n                      entryListIdx,\r\n                      e,\r\n                      countQty\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        onKeyDown={e => e.keyCode === 13 ? addRow({dispatch, moduleEntry,moduleName, activeSku, poListIdx}) : false}\r\n        // className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer ${total === 0 ? 'd-none' : null}`}\r\n        className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer `}\r\n        // tabIndex='0'\r\n        onClick={() => addRow({\r\n          dispatch, moduleEntry,\r\n          moduleName, activeSku, poListIdx\r\n        })}\r\n      >\r\n        <i className=\"green iconU-entryAdd pr-2\"></i>\r\n        {`Add ${uomType} (${isFloat(initialWeightTotal) ? isFloat(initialWeightTotal) : initialWeightTotal} ${uom ? uom.toUpperCase() : ''}${initialWeightTotal > 1 ? \"s\" : \"\"} left)`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WeightEntryCard;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport WeightEntryCard from 'Page/StockEntry/Movement/WeightEntry/WeightEntryList/WeightEntryCard'\r\nimport { removeEntryModule, saveJobSheet } from 'apiServices'\r\nimport { submitValidation } from 'Page/StockEntry/Movement/services'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\";\r\nimport PopUpRequired from \"Component/Modal/PopUpRequired\";\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport Sort from 'Component/Sort'\r\nimport { Prompt } from 'react-router'\r\nimport { useEntryDimention, useStockMovementEntry, useTargetMovement } from 'Page/StockEntry/GeneralServices'\r\nimport CustomTable from 'Component/CustomTable'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport { dateFull } from 'services'\r\n\r\nconst WeightEntryList = ({\r\n    hideSKUList,\r\n    setHideSKUList,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName\r\n}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const {\r\n        setIsSuccess,\r\n        confirmation,\r\n        setConfirmation,\r\n        discard,\r\n        setDiscard,\r\n        isSaved,\r\n        setIsSaved,\r\n        action,\r\n        setAction,\r\n        isRequired,\r\n        setIsRequired,\r\n        hideContent,\r\n        setHideContent,\r\n        isLoading,\r\n        skuName,\r\n        skuNumber,\r\n        poList,\r\n        gradeList,\r\n        unitOfMeassures,\r\n        totalWeight,\r\n        edited,\r\n        postInfo,\r\n        areaMovement,\r\n        status\r\n    } = useStockMovementEntry({ moduleEntry, activeSku })\r\n\r\n    const { showTargetRepack, table, slot, setSlot, slotList } = useTargetMovement({ moduleEntry, activeSku, dispatch, moduleName })\r\n    const { height, heightAdj, dimention } = useEntryDimention(showTargetRepack)\r\n\r\n    //Condition\r\n    const isMobile = dimention <= 500\r\n    const isHidden = hideContent ? 'd-none' : null\r\n    const isPlural = totalWeight > 1 ? \"s\" : ''\r\n    const isEdited = edited ? 'bg-green' : 'bg-lineGrey'\r\n    const showTarget = showTargetRepack ? null : 'd-none'\r\n    const targetRepackHeight = isMobile ? 240 : 280\r\n\r\n    let slotListFilter = slotList\r\n    let hideResetOpt = false\r\n    if (slot?.length) {\r\n        if (slot[0]?.value === null) slotListFilter = []\r\n        if (slot[0]?.value) hideResetOpt = true\r\n    }\r\n\r\n    const customTableClass = isMobile ? (moduleName === 'stockMovement' ? 'target-movement-mobile' : 'target-repack-mobile') : (moduleName === 'stockMovement' ? 'target-movement' : 'target-repack')\r\n\r\n    return (\r\n        <div style={{ paddingLeft: isMobile ? 0 : 10 }} className='w-100 h-100 mt-3 mt-md-0'>\r\n            {/* <Prompt\r\n                when={true}\r\n                message={location => {\r\n                    let pathname = location.pathname\r\n                    if (!allowPage.includes(pathname)) {\r\n                        setDiscard(true)\r\n                        return false\r\n                    }\r\n                }}\r\n            /> */}\r\n            <Discard\r\n                discard={discard}\r\n                module={'Inventory Entry - Stock Movement'}\r\n                moduleEntry={moduleEntry}\r\n                close={() => setDiscard(false)}\r\n                discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch })}\r\n            />\r\n            <PopUpSaved\r\n                status={status}\r\n                moduleEntry={moduleEntry}\r\n                submit={() => dispatch({ type: 'CREATE_JOB_SHEET', [`${moduleName}EntryData`]: null, [`${moduleName}SummaryData`]: null })}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSaved={isSaved}\r\n                action={action}\r\n                setIsSaved={setIsSaved}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <PopUpRequired\r\n                isRequired={isRequired}\r\n                module={moduleEntry}\r\n                setIsRequired={setIsRequired}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <Confirmation\r\n                noSkuChecking={true}\r\n                isLoading={isLoading}\r\n                moduleEntry={moduleEntry}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSuccess={postInfo}\r\n                setAction={setAction}\r\n                action={action}\r\n                save={() => saveJobSheet({ name: 'save', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n                submit={() => saveJobSheet({ name: 'submit', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n            />\r\n            <div className='rounded-bottom rounded-top'>\r\n                <div className={`target-repack mb-2 p-3 bg-white rounded border-top border-left border-right border-bottom rounded-top border-soft-green ${showTarget}`} style={{ maxHeight: targetRepackHeight, minHeight: targetRepackHeight, overflow: 'hidden' }}>\r\n                    <div className={`d-flex justify-content-between mb-3 align-items-center`}>\r\n                        <div className='d-flex'>\r\n                            <div className='LatoBold mr-3'>Target Movement Summary</div>\r\n                            <div className='mr-3 iconU-sideBarDot d-flex align-items-center m-0 p-0 text' />\r\n                            <div className='LatoBold font-green'>{dateFull({ date: new Date(), noTime: true, addDay: true, withDay: true })}</div>\r\n                        </div>\r\n                        <Dropdown hideResetOpt={hideResetOpt} className=\"basic-multi-select\"\r\n                            classNamePrefix=\"select\" isMulti={true} resetName='All Slot' options={slotListFilter} selectedValue={slot} onChangeDropdown={(selected) => setSlot(selected)} show={true} width={'w-25'} placeholder='Slot' title={'Slot'} style={{ marginRight: 0 }} noMarginBottom={true} />\r\n                    </div>\r\n                    <CustomTable\r\n                        editColumn={'false'}\r\n                        className={`${customTableClass} `}\r\n                        styles={{ color: 'red', textAlign: 'right', width: '100%', display: showTargetRepack ? false : 'none' }}\r\n                        data={table?.data}\r\n                        columns={table?.columns} />\r\n                </div>\r\n                <div style={{ height }} style={{ padding: 10 }} className='bg-white w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green'>\r\n                    <div className='d-flex w-100 m-0 p-0' onClick={() => isMobile ? setHideContent(!hideContent) : null}>\r\n                        <div className={`${hideSKUList ? 'iconU-sideBarHideRight' : 'iconU-sideBarHideLeft'} emptyTextField fontSizeTitle mr-3`} onClick={() => setHideSKUList(!hideSKUList)} />\r\n                        <div className='mr-3 pr-1 d-flex align-items-center m-0 p-0 LatoBold text'>Weight Entry</div>\r\n                        <div className='mr-3 iconU-sideBarDot d-flex align-items-center text' />\r\n                        <div className='mr-3 d-flex align-items-center font-green LatoBold'>{`${skuName} (${skuNumber})`}</div>\r\n                    </div>\r\n                    <Sort moduleEntry={moduleEntry} moduleName={moduleName} activeSku={activeSku} dispatch={dispatch} />\r\n                </div>\r\n                <div style={{ height: isMobile ? height : heightAdj, minHeight: isMobile ? height : heightAdj }} className={`w-100 bg-white overflow-y mr-0 border-left border-right border-soft-green pl-3 pr-2 pt-3 ${isHidden}`}>\r\n                    {\r\n                        poList?.map((poItem, idx) => {\r\n                            return <WeightEntryCard\r\n                                activeSku={activeSku}\r\n                                gradeList={gradeList}\r\n                                inputWidth='input-w-100'\r\n                                activeSku={activeSku}\r\n                                poListIdx={idx}\r\n                                poItem={poItem}\r\n                                moduleEntry={moduleEntry}\r\n                                moduleName={moduleName}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <div className='w-100 d-flex align-items-center p-3 border-left border-right border-bottom rounded-bottom LatoBold bg-white'>\r\n                    <button\r\n                        tabIndex='0'\r\n                        type=\"button\"\r\n                        className={`btn sku-item ${isEdited}  text-white px-5 mr-3 LatoBold`}\r\n                        onClick={() => edited ? setConfirmation({ show: true, name: 'save' }) : null}>\r\n                        Save\r\n                    </button>\r\n                    <div>Total Weight <span className='font-green'>{`${totalWeight} ${unitOfMeassures?.toUpperCase()}${isPlural}`}</span></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end mt-3\">\r\n                <div tabIndex='0' onClick={() => setDiscard(true)} className='red pr-3 sku-item fontSizeButton cursor-pointer'><i className='iconU-entryTrash'></i> Discard</div>\r\n                <button tabIndex='0' onClick={() => edited ? submitValidation({ moduleEntry, moduleName, dispatch, setConfirmation, setIsRequired, areaMovement }) : null} className={`btn sku-item px-5 py-2 text-white ${isEdited} LatoBold no-shadow`} style={{ height: \"fit-content !important\" }} >Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntryList","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport SelectedSKUList from 'Page/StockEntry/Movement/WeightEntry/SelectedSKUList'\r\nimport WeightEntryList from 'Page/StockEntry/Movement/WeightEntry/WeightEntryList'\r\n\r\nconst WeightEntry = () => {\r\n    const stockMovementEntryData = useSelector(state => state.stockMovementEntryData)\r\n    const [hideSKUList, setHideSKUList] = useState(false)\r\n    const [activeSku, setActiveSKU] = useState(0)\r\n    let height = document.documentElement.clientHeight\r\n    let clientWidth = document.documentElement.clientWidth\r\n    let heightAdj = height - 150\r\n    const moduleName = 'stockMovement'\r\n    if (!stockMovementEntryData || stockMovementEntryData?.jobPost.list.length === 0) {\r\n        return (\r\n            <div className='d-flex align-items-center justify-content-center text-center w-100 h-screen'><Redirect to='/inventory-entry/movement'>Please Select At Least 1 SKU</Redirect></div >)\r\n    }\r\n    return (\r\n        <div style={{height: clientWidth <= 500 ? height : heightAdj }} className='w-100 d-md-flex justify-content-between scroll-y z-0'>\r\n            <SelectedSKUList\r\n                hideSKUList={hideSKUList}\r\n                activeSku={activeSku}\r\n                setActiveSKU={setActiveSKU}\r\n                moduleName={moduleName}\r\n                moduleEntry={stockMovementEntryData}\r\n            />\r\n            <WeightEntryList\r\n                setHideSKUList={setHideSKUList}\r\n                hideSKUList={hideSKUList}\r\n                moduleName={moduleName}\r\n                moduleEntry={stockMovementEntryData}\r\n                activeSku={activeSku}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntry","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom,\r\n    resetName,\r\n    isMulti,\r\n    hideResetOpt\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? (styles, { isOpen }) => {\r\n        return {\r\n            ...styles,\r\n            border: isOpen ? 'solid #eb5c5c 1px' : 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{label:`-${resetName ? resetName : title}-`, value:null}]\r\n    if(options) defaultvalue=[...defaultvalue, ...options]\r\n    if(hideResetOpt) defaultvalue = defaultvalue.filter(val => val?.value)\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if(dimention <= 500) menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                isMulti={isMulti}\r\n                isSearchable= {dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : (selectedValue?.length ? selectedValue : false)}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={resetName ? resetName : placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={200}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected, isOpen }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#a8b1be',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import { isInteger } from \"formik\";\r\n\r\nexport const next = ({\r\n  e,\r\n  state,\r\n  isCaptcha,\r\n  setIsValidated,\r\n  setIsType,\r\n  isType,\r\n}) => {\r\n  const key = e.key; // const {key} = event; ES6+\r\n  // console.log(key, state, isType[state]);\r\n  let arr_tmp = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown', 'Tab']\r\n  if (arr_tmp.includes(key)) {\r\n    return 0;\r\n  } else if (key === \"Backspace\") {\r\n    if (state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n    }\r\n  } else {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n    }\r\n  }\r\n\r\n  let type = [...isType];\r\n  if (key === \"Backspace\") {\r\n    type[state] = '';\r\n  } else {\r\n    type[state] = key.toUpperCase();\r\n  }\r\n  let char = \"QWERTYUIOPLKJHGFDSAZXCVBNM1234567890\"\r\n  let allowedChar = char.split('')\r\n  if (allowedChar.includes(key.toUpperCase()) || type[state] == '') {\r\n    document.getElementById(\"t\" + (parseInt(state))).value = type[state];\r\n    setIsType(type);\r\n  } else {\r\n    return 0;\r\n  }\r\n\r\n  let stat = true;\r\n  isCaptcha.map((data, index) => {\r\n    if (index == 0) {\r\n      return;\r\n    }\r\n    if (!(type[index + 1] == isCaptcha[index])) {\r\n      stat = false;\r\n    }\r\n  });\r\n  setIsValidated(stat);\r\n};\r\n\r\nexport const skuListUpdateCheck = (module, noSkuChecking, moduleName) => {\r\n  if (module?.length) {\r\n    let newModule = []\r\n    module.map(list => {\r\n      list.poList.map(po => {\r\n        po.itemList.map(item => {\r\n          const { qty, grade } = item\r\n          const _qty = isInteger(qty) ? parseInt(qty) : (!qty ? 0 : parseFloat(qty))\r\n          const _sku = noSkuChecking ? list.skuName : moduleName === 'waste' ? (item.wasteType?.label ? item.wasteType?.label : list.skuName) : grade?.label\r\n          const _toWaste = moduleName === 'waste' ? (item.wasteType?.label === 'Semi Waste' || item.wasteType?.label === 'Waste' ? true : false) : grade?.label === 'Waste' || grade?.label === 'Semi Waste' ? true : false\r\n          const _uom = noSkuChecking ? list.unitOfMeassures : grade?.uom === 'gram' ? 'kg' : grade?.uom\r\n          let newSku = {\r\n            sku: _sku,\r\n            qty: _qty,\r\n            uom: _uom,\r\n            wqty: 0,\r\n            swqty: 0\r\n          }\r\n          if (_toWaste) {\r\n            newSku.qty = 0\r\n            newSku.sku = list.skuName\r\n          }\r\n          if (moduleName === 'waste' ? item.wasteType?.label === 'Waste' : grade?.label === 'Waste') newSku.wqty = _qty\r\n          if (moduleName === 'waste' ? item.wasteType?.label === 'Semi Waste' : grade?.label === 'Semi Waste') newSku.swqty = _qty\r\n          const isExist = newModule.findIndex(sku => sku?.sku === (_toWaste ? list.skuName : _sku))\r\n\r\n          if (moduleName !== 'waste') {\r\n            if (isExist === -1) newModule.push(newSku)\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty\r\n              if (grade?.label === 'Semi Waste') newModule[isExist].swqty += _qty\r\n              if (grade?.label === 'Waste') newModule[isExist].wqty += _qty\r\n            }\r\n          }\r\n\r\n          if (moduleName === 'waste') {\r\n            if (isExist === -1) newModule.push(newSku)\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty\r\n              if (item.wasteType?.label === 'Semi Waste') newModule[isExist].swqty += _qty\r\n              if (item.wasteType?.label === 'Waste') newModule[isExist].wqty += _qty\r\n            }\r\n          }\r\n\r\n        })\r\n      })\r\n    })\r\n    const skuName = module.length ? module[0].skuName : 'No SKU'\r\n    const i = newModule.findIndex(s => s.sku === skuName)\r\n    newModule.map(sku => {\r\n      if (i !== -1) {\r\n        if (sku.sku === 'Waste') newModule[i].wqty = sku.qty\r\n        if (sku.sku === 'Semi Waste') newModule[i].swqty = sku.qty\r\n      }\r\n    })\r\n    return newModule\r\n  }\r\n}","import React, { useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { next, skuListUpdateCheck } from \"./services.js\";\r\nimport { totalQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst ModalsConfirmation = ({ moduleEntry, confirmation, setConfirmation, save, submit, isSuccess, isLoading, moveAll, setAction, moduleName, noSkuChecking, singleViewData }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 300\r\n\r\n  let buttonName = 'Submit'\r\n\r\n  if (confirmation.name === 'save') buttonName = 'Save'\r\n  useEffect(() => {\r\n    if (isSuccess) setConfirmation({ show: false, name: null })\r\n  }, [isSuccess])\r\n  window.onkeydown = e => e.keyCode === 27 ? setConfirmation({ show: false, name: null }) : null\r\n\r\n  useEffect(() => {\r\n    setAction(confirmation.name)\r\n  }, [confirmation])\r\n\r\n  let module = singleViewData && !moveAll ? singleViewData : moduleEntry\r\n\r\n  const areaDestinationName = module?.jobPost?.areaDestinationName\r\n  const warehouseDestinationName = module?.jobPost?.warehouseDestinationName\r\n  const areaName = module?.jobPost?.areaName\r\n\r\n  const skuListUpdate = skuListUpdateCheck(module?.jobPost.list, noSkuChecking, moduleName)\r\n  return (\r\n    <CRow className={confirmation.show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={confirmation.show}\r\n          closeOnBackdrop={false}\r\n        >\r\n          <CModalHeader className=\"px-4 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation <span><i className=\"em em-pray\"></i></span></CModalTitle>\r\n            <label tabIndex='0' onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false} onClick={() => setConfirmation({ show: false, name: null })} className='sku-item iconU-modalClose' />\r\n\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-4 py-0\" style={{ minHeight: height }}>\r\n            <p className=\"text mb-2\">\r\n              <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n              <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n              <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n              <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n              <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${moduleName === 'stockTransfer' ? warehouseDestinationName : (areaDestinationName ? areaDestinationName : areaName)} `}</span>\r\n            </p>\r\n            <p className=\"text\">\r\n              Please double check this list, this record will store to database.\r\n            </p>\r\n            <div\r\n              style={{\r\n                minHeight: height,\r\n                overflow: \"auto\",\r\n                border: \"1px solid var(--lineGrey)\",\r\n              }}\r\n            >\r\n              <table>\r\n                <thead>\r\n                  <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                    <th style={{ color: \"var(--emptyTextField)\" }}>SKU List</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Weight</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Semi Waste</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Waste</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {skuListUpdate?.map((data) => (\r\n                    <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                      <td style={{ maxWidth: '160px' }}>{data.sku}</td>\r\n                      <td className=\"text-right py-3\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.qty)}`}\r\n                      </td>\r\n                      <td className=\"text-right text-nowrap\" style={{ textAlign: \"right\" }}>\r\n                        <span className='text-nowrap'>{`${totalQty(data?.swqty)} `}</span>\r\n                      </td>\r\n                      <td className=\"text-right\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.wqty)}`}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"px-0 pb-5 pt-0 justify-content-start border-none\">\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false}\r\n                className=\"bg-background sku-item text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n                onClick={() => setConfirmation({ show: false, name: null })}\r\n              >\r\n                Cancel\r\n            </CButton>\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? (isLoading ? null : (confirmation.name === 'save' ? save() : submit())) : false}\r\n                className={`${isLoading ? 'bg-softGreen text' : 'bg-green text-white'} no-shadow px-5 mt-4 sku-item mb-0 ml-3 mr-0`}\r\n                onClick={() => isLoading ? null : (confirmation.name === 'save' ? save() : submit())}\r\n              >\r\n                {isLoading ? 'Processing...' : buttonName}\r\n              </CButton>{\" \"}\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst ModalsCaptcha = ({\r\n  show = false,\r\n  setIsShowModal,\r\n  submit,\r\n  submitText = \"Submit\",\r\n}) => {\r\n  //random text\r\n  var text = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  var text_split = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    let r = characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    text += r;\r\n    text_split.push(r);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const [isCaptcha, setIsCaptcha] = React.useState(text_split);\r\n  const [isCaptchaText, setIsCaptchaText] = React.useState(text);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n  const [isButtonSubmit, setIsButtonSubmit] = React.useState(\"Submit\");\r\n  const [isType, setIsType] = React.useState([]);\r\n\r\n  //reset if visible = false \r\n  useEffect(() => {\r\n    if (show === true) {\r\n      document.getElementById('t1').value = '';\r\n      document.getElementById('t2').value = '';\r\n      document.getElementById('t3').value = '';\r\n    }\r\n  }, [show]);\r\n\r\n  return (\r\n    <CRow className={show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          onClose={() => {\r\n            setIsShowModal(false);\r\n          }}\r\n          size=\"lg\"\r\n          style={{ height: \"400px\" }}\r\n        >\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">\r\n              Are you sure want to upload <span className=\"green\">Edited</span>{\" \"}\r\n              {selectorCsvFileName}?\r\n            </p>\r\n            <p className=\"text\">\r\n              Once uploaded this record will store to databases.\r\n            </p>\r\n            <p className=\"text mb-2\">\r\n              Please type ‘{isCaptchaText}’ on the Box to confirm upload file.\r\n            </p>\r\n\r\n            <div className=\"captcha-box\">\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 1,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t1\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[0]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 2,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t2\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input ml-0 mr-0\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[1]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 3,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t3\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[2]}\r\n              />\r\n            </div>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            <CButton\r\n              className=\"bg-background text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n              onClick={() => {\r\n                setIsShowModal(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </CButton>\r\n            <CButton\r\n              className={\r\n                (isValidated ? \"bg-green\" : \"bg-emptyTextField disabled\") +\r\n                \" no-shadow px-5 mt-4 mb-0 ml-3 mr-0\"\r\n              }\r\n              onClick={() => {\r\n                submit();\r\n                setIsValidated(false);\r\n              }}\r\n            >\r\n              {submitText}\r\n            </CButton>{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport { ModalsConfirmation, ModalsCaptcha };\r\n","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    return (\r\n        <CRow className={discard ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                             from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-5 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    ripeness,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title,\r\n    toCompare\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' || uom === 'KG' ? true : false\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`wgt_${poListIdx}_${entryListIdx}`} maxLength='12' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={toCompare ? 'weightToCompare' : 'weight'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","module.exports = __webpack_public_path__ + \"static/media/trash.121a7b10.png\";","export const submitAction = ({ confirmation, setIsSaved, submit, setLocalEntryData,moveAll}) => {\r\n    if (confirmation.name === 'submit') {\r\n        if(moveAll)  setLocalEntryData()\r\n        submit()\r\n        setIsSaved()\r\n        \r\n    }\r\n    else {\r\n        setIsSaved()\r\n    }\r\n}\r\n\r\nexport const message = ({moduleEntry, complete}) => {\r\n    if(moduleEntry?.jobPost){\r\n        let message = null\r\n        const {areaDestinationName, areaName} = moduleEntry?.jobPost\r\n        if(areaDestinationName) message = ` ${areaName} reefer ${areaDestinationName} - `\r\n        else message = ` ${areaName} - `\r\n        return message\r\n    }\r\n}\r\n\r\nexport const handleFailed = ({setIsSaved,setConfirmation,action, setLocalEntryData}) => {\r\n    setIsSaved()\r\n    setConfirmation({ show: true, name: action })\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { dateFull } from 'services'\r\nimport { submitAction, message, handleFailed } from './services'\r\n\r\nconst PopUpSaved = ({ isSaved, moduleName, totalSku, setIsSaved, confirmation, setConfirmation, submit, action, moduleEntry, complete, setLocalEntryData, moveAll, status }) => {\r\n    const saved = {\r\n        success: {\r\n            header: confirmation.name === 'submit' ? 'Success ! ' : 'Saved !',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: `${confirmation.name === 'submit' ? 'Submitted' : 'Saved'} successfully`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        failed: {\r\n            header: `${confirmation.name === 'submit' ? 'Submit' : 'Save'} Failed`,\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            date: dateFull({}),\r\n            sku: '',\r\n            module: `Sorry `,\r\n            status: 'item not recorded.',\r\n            button: 'bg-red',\r\n            buttonText: 'Try Again'\r\n        }\r\n    }\r\n    const data = isSaved ? saved.success : saved.failed\r\n    const [showErrorMessage, setShowErrorMessage] = useState(false)\r\n\r\n    const show = isSaved === true || isSaved === false ? true : false\r\n\r\n    const focus = document.getElementById('btn_is_saved')\r\n    if (focus) focus.focus()\r\n\r\n    const arrowIcon = showErrorMessage ? 'iconU-arrowTop' : 'iconU-arrowBottom'\r\n    const opacity = isSaved ? 1 : (showErrorMessage ? 1 : 0)\r\n    const errorText = showErrorMessage ? 'Hide Message' : 'Show Message'\r\n\r\n    return (\r\n        <CRow className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    className={`${isSaved ? null : 'popup-saved'}`}\r\n                    show={show}\r\n\r\n                    onClose={() => {\r\n                        setIsSaved()\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit }) : setIsSaved()} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${data.textColor} LatoBold mr-2 h5 mb-3`}>{data.header}</label> <span><i className={`${data.headerIcon}`}></i></span>\r\n                        <div className='mr-1 h5 mb-3'>{`Entries ${data.status}`}</div>\r\n                        <div onClick={() => setShowErrorMessage(!showErrorMessage)} className={`d-flex align-items-center mr-1 mb-3 error-message pointer ${isSaved ? 'd-none' : null}`}>\r\n                            <div className={`mr-2 ${arrowIcon}`} />\r\n                            <div className='green'>{errorText}</div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA', opacity: opacity }} className='w-100 border rounded px-3 pt-3 pb-3 mb-3'>\r\n                            <div className={`h5 mb-3 ${isSaved ? null : 'd-none'}`}>{data.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className={`mr-1 ${isSaved ? null : 'd-none'}`}>{`${message({ moduleEntry, complete })} ${data.sku}`}</label>\r\n                                <div className={`mr-1 ${isSaved ? 'd-none' : null}`}>\r\n                                    <div style={{ wordWrap: 'break-word', opacity: opacity, height: showErrorMessage ? false : 0 }} className={`mr-1 `}>\r\n                                        {`${status?.message?.toString()}`}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`mb-2 h5 ${confirmation.name === 'submit' ? 'd-none' : null}`}>Please continue your work</div>\r\n                        <div className='w-100 d-flex '>\r\n                            <CButton onClick={() => setIsSaved()} className={`text no-shadow px-5 mr-4 mb-3 ${`bg-softGreen ${isSaved ? 'd-none' : null}`}`}>\r\n                                Cancel\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) : handleFailed({ setIsSaved, setConfirmation, action })} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    name\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import { useState, useEffect } from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUnfinishedEntries, getWasteWarehouseArea, getStockTakeSummary } from \"apiServices\";\r\nimport { getWarehouseArea, getRipenessLevel } from \"apiServices/dropdown\";\r\nimport { IS_LOADING } from 'apiServices/action'\r\nimport { jobSheetChecker, totalWeightCount, selectedSkuCheck, totalPackCount, filterTargetRepack, updateTargetRepack, setTargetRepack, addSlot } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n//dimension\r\nexport const useDimension = (hValue, wValue) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const width = document.documentElement.clientWidth\r\n  const height = dimention - hValue\r\n  const emptyItem = dimention - hValue\r\n  const isMobile = width <= 500 ? true : false\r\n  return { dimention, height, emptyItem, width, isMobile }\r\n}\r\n\r\nexport const useEntryDimention = (showTargetRepack) => {\r\n  const dimention = document.documentElement.clientWidth\r\n  let height = document.documentElement.clientHeight\r\n  let heightAdj = height - (showTargetRepack ? 580 : 290)\r\n  height = dimention <= 500 ? (showTargetRepack ? (heightAdj + 100) : heightAdj) : height\r\n\r\n  return { height, heightAdj, dimention }\r\n}\r\n\r\n// Stock Take\r\nexport const useStockTake = ({ dispatch }) => {\r\n  const moduleName = 'stockTake'\r\n  const zeroQuantity = useSelector(state => state.zeroQuantity)\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTakeFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockTakeEntryData = useSelector((state) => state.stockTakeEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState({ label: \"Storage Ambient\", value: 1 })\r\n  const [discard, setDiscard] = useState()\r\n\r\n  // use Effect\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockTakeEntryData ? true : false, ripeness })\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    stockTakeEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    discard,\r\n    setDiscard,\r\n    zeroQuantity\r\n  }\r\n}\r\n\r\n// Stock Take Entry\r\nexport const useStockTakeEntry = ({ moduleEntry, activeSku }) => {\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/stock-take/weight-entry',\r\n    '/inventory-entry/stock-take/weight-entry/remove-sku',\r\n    '/inventory-entry/stock-take/weight-entry/add-sku',\r\n  ])\r\n\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    status\r\n  }\r\n}\r\n\r\n// Stock Movement\r\nexport const useStockMovement = ({ dispatch }) => {\r\n  const moduleName = 'stockMovement'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockMovementFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const stockMovementDropdown = useSelector(state => state.stockMovementDropdown)\r\n  const areaId = useSelector(state => state.areaId)\r\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockMovementEntryData = useSelector((state) => state.stockMovementEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState('')\r\n  const [area, setArea] = useState()\r\n  const [areaMatched, setAreaMatched] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n\r\n  const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockMovementEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(_ => {\r\n    if (areaId && areaIdDesposition && areaId !== areaIdDesposition) setAreaMatched(true)\r\n    else setAreaMatched(false)\r\n  }, [areaId, areaIdDesposition, added])\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId, areaIdDesposition])\r\n\r\n  useEffect(_ => {\r\n    if (stockMovementTargetRepack) {\r\n      const isMatchedDropdown = areaId && areaIdDesposition && areaId !== areaIdDesposition\r\n      if (isMatchedDropdown) {\r\n        setSummary()\r\n        getStockTakeSummary({\r\n          moduleName,\r\n          stockMovementTargetRepack,\r\n          dispatch,\r\n          desc: search,\r\n          warehouseUuid,\r\n          areaId,\r\n          areaIdDesposition,\r\n          setModule: setSummary,\r\n          module: localEntryData\r\n        })\r\n        setSearch(search)\r\n      }\r\n    }\r\n    if (!stockMovementTargetRepack) setSummary()\r\n  }, [stockMovementTargetRepack])\r\n\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    stockMovementDropdown,\r\n    areaId,\r\n    areaIdDesposition,\r\n    areaMovement,\r\n    status,\r\n    isLoading,\r\n    stockMovementEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area, setArea,\r\n    areaMatched, setAreaMatched,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    entryIsReady,\r\n    stockMovementTargetRepack\r\n  }\r\n}\r\n\r\n// Stock Movement Entry\r\nexport const useStockMovementEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/movement/weight-entry',\r\n    '/inventory-entry/movement/weight-entry/remove-sku',\r\n    '/inventory-entry/movement/weight-entry/add-sku',\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    areaMovement,\r\n    status\r\n  }\r\n}\r\n\r\n// Stock Transfer\r\nexport const useStockTransfer = ({ dispatch }) => {\r\n  const moduleName = 'stockTransfer'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTransferFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const stockTransferDropdown = useSelector(state => state.stockTransferDropdown)\r\n  const areaId = useSelector(state => state.areaId)\r\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockTransferEntryData = useSelector((state) => state.stockTransferEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaMatched, setAreaMatched] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockTransferEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(_ => {\r\n    if (areaId && areaIdDesposition && areaId !== areaIdDesposition) setAreaMatched(true)\r\n    else setAreaMatched(false)\r\n  }, [areaId, areaIdDesposition, added])\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId, areaIdDesposition])\r\n\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    stockTransferDropdown,\r\n    areaId,\r\n    areaIdDesposition,\r\n    areaMovement,\r\n    status,\r\n    isLoading,\r\n    stockTransferEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area, setArea,\r\n    areaMatched, setAreaMatched,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    entryIsReady\r\n  }\r\n}\r\n\r\n// Stock Transfer Entry\r\nexport const useStockTransferEntry = ({ moduleEntry, activeSku }) => {\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/stock-transfer/weight-entry',\r\n    '/inventory-entry/stock-transfer/weight-entry/remove-sku',\r\n    '/inventory-entry/stock-transfer/weight-entry/add-sku',\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    areaMovement,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n// Waste\r\nexport const useWaste = ({ dispatch }) => {\r\n  const moduleName = 'waste'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.wasteFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const wasteEntryData = useSelector((state) => state.wasteEntryData);\r\n\r\n  const [areaId, setAreaId] = useState()\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const b = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      const areaId = await getWasteWarehouseArea({ warehouseUuid, setAreaId })\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: wasteEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    wasteEntryData,\r\n    areaId,\r\n    setAreaId,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal\r\n  }\r\n}\r\n\r\n// Waste Entry\r\nexport const useWasteEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/waste/weight-entry',\r\n    '/inventory-entry/waste/weight-entry/remove-sku',\r\n    '/inventory-entry/waste/weight-entry/add-sku',\r\n  ])\r\n\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    status\r\n  }\r\n}\r\n\r\n// Additional Outbound\r\nexport const useAdditionalOutbound = ({ dispatch }) => {\r\n  const moduleName = 'outbound'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.outboundFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const outboundEntryData = useSelector((state) => state.outboundEntryData);\r\n  const warehouseArea = useSelector(state => state.warehouseArea);\r\n  const outboundAddSku = useSelector(state => state.outboundAddSku)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [next, setNext] = useState(false)\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState()\r\n  const [search, setSearch] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: outboundEntryData ? true : false })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    outboundEntryData,\r\n    warehouseArea,\r\n    outboundAddSku,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    next,\r\n    setNext,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added\r\n  }\r\n}\r\n\r\n// Additional Outbound Entry\r\nexport const useAdditionalOutboundEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const { skuName, skuNumber, poList, outboundTypeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/additional-outbound/weight-entry',\r\n    '/inventory-entry/additional-outbound/remove-sku',\r\n    '/inventory-entry/additional-outbound/add-sku',\r\n  ])\r\n\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    outboundTypeList,\r\n    status\r\n  }\r\n}\r\n\r\n// Repacking\r\nexport const useRepacking = ({ dispatch }) => {\r\n  const moduleName = 'repack'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.repackFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const repackEntryData = useSelector((state) => state.repackEntryData);\r\n  const warehouseArea = useSelector(state => state.warehouseArea);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState('')\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState()\r\n  const [areaDestinationId, setAreaDestinationId] = useState()\r\n  const [discard, setDiscard] = useState()\r\n  const [targetRepack, setTargetRepack] = useState(false)\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const aId = areaList?.filter(area => area.label === 'Production')\r\n      const adId = areaList?.filter(area => area.label === 'Staging')\r\n      if (aId?.length) setAreaId(aId[0])\r\n      if (adId?.length) setAreaDestinationId(adId[0])\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: repackEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  useEffect(_ => {\r\n    if (targetRepack) {\r\n      setSummary()\r\n      getStockTakeSummary({\r\n        moduleName,\r\n        targetRepack,\r\n        dispatch,\r\n        desc: search,\r\n        warehouseUuid,\r\n        areaId,\r\n        areaIdDesposition: areaDestinationId,\r\n        setModule: setSummary,\r\n        module: localEntryData\r\n      })\r\n    }\r\n    if (!targetRepack) setSummary()\r\n  }, [targetRepack])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    repackEntryData,\r\n    warehouseArea,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    areaDestinationId,\r\n    setAreaDestinationId,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    targetRepack,\r\n    setTargetRepack\r\n  }\r\n}\r\n\r\n// Repacking Entry\r\nexport const useRepackingEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const [invalidThreshold, setInvalidThreshold] = useState()\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/repacking/weight-entry',\r\n    '/inventory-entry/repacking/weight-entry/remove-sku',\r\n    '/inventory-entry/repacking/weight-entry/add-sku',\r\n  ])\r\n\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const totalPack = totalPackCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isLoading,\r\n    invalidThreshold,\r\n    setInvalidThreshold,\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    totalPack,\r\n    status\r\n  }\r\n}\r\n\r\n// Single view\r\nexport const useSingleView = ({ dispatch, setLocalEntryData, setSummary, setSearch, getStockTakeSummary, search, warehouseUuid, areaId, localEntryData, moduleName, stockMovementTargetRepack }) => {\r\n\r\n  //submit\r\n  const [action, setAction] = useState()\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: 'submit' })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [isSaved, setIsSaved] = useState()\r\n\r\n  // create po single view\r\n  const [createPo, setCreatePo] = useState()\r\n  const [singleViewData, setSingleViewData] = useState()\r\n\r\n\r\n  //condition move all\r\n  const [moveAll, setMoveAll] = useState()\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  // end of submit\r\n\r\n  //singleview\r\n  const updateList = (props, props2, moduleName) => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n    if (search === 'barcode') return\r\n\r\n    dispatch({ type: IS_LOADING, isLoading: true })\r\n    setTimeout(() => {\r\n      getStockTakeSummary({\r\n        moduleName,\r\n        stockMovementTargetRepack: props2,\r\n        zeroQuantity: props,\r\n        singleView: true,\r\n        dispatch,\r\n        desc: search,\r\n        warehouseUuid,\r\n        areaId,\r\n        setModule: setSummary,\r\n        module: localEntryData\r\n      },\r\n        setSearch(search))\r\n    }, 10);\r\n  }\r\n\r\n  return { updateList, action, setAction, confirmation, setConfirmation, isSuccess, setIsSuccess, isSaved, setIsSaved, createPo, setCreatePo, singleViewData, setSingleViewData, postInfo, moveAll, setMoveAll }\r\n}\r\n\r\n// Scanner\r\nexport const useScanner = () => {\r\n  const [showScanner, setShowScanner] = useState()\r\n  const [showSkuList, setShowSkuList] = useState()\r\n  return { showScanner, setShowScanner, showSkuList, setShowSkuList }\r\n}\r\n\r\nexport const useTargetRepack = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\r\n  const targetRepacks = useSelector(state => state.targetRepacks)\r\n  const slotList = useSelector(state => state.slotList)\r\n\r\n  const [slot, setSlot] = useState()\r\n\r\n  const { gradeList } = moduleEntry.jobPost.list[activeSku]\r\n  const tgtRpck = moduleEntry.jobPost.list[activeSku].poList[0].targetRepacks\r\n  const table = filterTargetRepack(tgtRpck, gradeList, activeSku, moduleEntry, slot)\r\n\r\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\r\n\r\n\r\n  //set Target Repack\r\n\r\n  useEffect(_ => {\r\n    setTargetRepack({ moduleEntry, dispatch })\r\n  }, [])\r\n\r\n  useEffect(_ => {\r\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\r\n    if (table?.data?.length) setShowTargetRepack(true)\r\n    updateTargetRepack({ data: table?.data, targetRepacks, activeSku, dispatch })\r\n  }, [table])\r\n\r\n  return { showTargetRepack, table, slot, setSlot, slotList }\r\n}\r\n\r\n//use target movement\r\nexport const useTargetMovement = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\r\n  const targetRepacks = moduleEntry.jobPost.list[activeSku].poList[0].targetMovements\r\n  const slotList = useSelector(state => state.slotList)\r\n\r\n  const [slot, setSlot] = useState()\r\n\r\n  const { gradeList } = moduleEntry.jobPost.list[activeSku]\r\n  const table = filterTargetRepack(targetRepacks, gradeList, activeSku, moduleEntry, slot, true)\r\n\r\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\r\n\r\n  useEffect(_ => {\r\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\r\n    if (table?.data?.length) setShowTargetRepack(true)\r\n    updateTargetRepack({ data: table?.data, targetRepacks, activeSku, dispatch })\r\n  }, [table])\r\n\r\n  return { showTargetRepack, table, slot, setSlot, slotList }\r\n}","export let defaults = {\r\n    header: 'Complete All !',\r\n    headerIcon: 'em em-anger',\r\n    textColor: 'red',\r\n    date: 'You are  required to update all entries on the list.',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Check several entries left.',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const threshold = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'The threshold calculation ratio should be between -20% until 50%',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const initialWeight = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'Add Weight should not exceed Initial Weight',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}","import React from \"react\";\r\nimport {isLessThanInitWeight} from 'services'\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n    CModalFooter\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport {threshold, initialWeight, defaults} from './services'\r\n\r\nconst PopUpSaved = ({ isRequired, setIsRequired, moduleName, module,totalSku, invalidThreshold, setInvalidThreshold }) => {\r\n    let saved = defaults;\r\n    let isTrue\r\n    if ((!isRequired && invalidThreshold) || (isRequired && invalidThreshold)) {\r\n        saved = threshold\r\n    }\r\n\r\n    if(moduleName !== 'stockTake'){\r\n        isTrue = isLessThanInitWeight(module)\r\n        if(isTrue) saved = initialWeight\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_required')\r\n    if(focus) focus.focus()\r\n    return (\r\n        <CRow className={isRequired || invalidThreshold ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={isRequired || invalidThreshold}\r\n                    onClose={() => {\r\n                        setIsRequired(false)\r\n                        if (invalidThreshold) setInvalidThreshold(false)\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${saved?.textColor} LatoBold mr-2 mb-5 h5`}>{saved?.header}</label> <span><i className={`${saved?.headerIcon}`}></i></span>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100 border rounded px-3 pt-4 pb-3 mb-4'>\r\n                            <div className={`h5 mb-3 ${isRequired || invalidThreshold ? null : 'd-none'}`}>{saved?.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className='mr-1 h5'>{`${saved?.status}`}</label>\r\n                            </div>\r\n                        </div>\r\n                    </CModalBody>\r\n                    <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none d-flex mt-2\">\r\n                        <CButton onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} className={`text no-shadow ${`bg-softGreen ${isRequired ? 'd-none' : null}`}`}>\r\n                            Cancel\r\n                        </CButton>\r\n                        <CButton \r\n                            id={'btn_is_required'}\r\n                            tabIndex='0'\r\n                            onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} className={`text-white no-shadow ${saved?.button}`}>\r\n                            {saved?.buttonText}\r\n                        </CButton>\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","import React from 'react'\r\nconst Note = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${grade === 'Waste' ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} border rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input autoComplete='off' className='w-100 plain-input' value={values} name='note' onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","import React, {useEffect,useState,useRef } from 'react'\r\nimport {Calendar,DateRangePicker } from 'react-date-range'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport './index.scss'\r\nimport {setDates} from './services'\r\n\r\nfunction useOutside({wrapperRef,showDate,setShowDate,selectDate}) {\r\n  useEffect(() => {\r\n      /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n      function handleClickOutside(event) {\r\n          if (showDate && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n              setShowDate(!showDate)\r\n              selectDate()\r\n          }\r\n      }\r\n\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n          // Unbind the event listener on clean up\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n  }, [wrapperRef,showDate]);\r\n}\r\n\r\nconst SKUDatePicker = ({ showDate, selectDate, setShowDate }) => {\r\n  let dimention = document.documentElement.clientWidth\r\n  dimention = dimention - 1555\r\n  const [dateRange, setDateRange] = useState({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n  const [date,setDate] = useState(new Date())\r\n  const [mode, setMode] = useState()\r\n\r\n  const singleDate = mode ? 'text' : 'bg-green text-white'\r\n  const multipleDate = mode ? 'bg-green text-white' : 'text'\r\n\r\n  const wrapperRef = useRef(null);\r\n  useOutside({wrapperRef,showDate,setShowDate,selectDate});\r\n\r\n  useEffect(() => {\r\n    setDateRange({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n    setDate(new Date())\r\n  },[mode])\r\n\r\n  const setDateValue = () => {\r\n    if(showDate){\r\n      mode ? selectDate(dateRange) : selectDate(date)\r\n      setShowDate()\r\n    } \r\n  }\r\n\r\n  return (\r\n    <div ref={wrapperRef} style={{ width: '350px' }} className={` mt-5 position-fixed bg-white border border-soft-green rounded z-100 d-flex flex-column justify-content-center ${showDate ? null : 'd-none'}`}>\r\n      <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <div className=' border border-soft-green d-flex rounded justify-content-between w-100 cursor-pointer'>\r\n        <span onClick={() => setMode(!mode)} className={` ${singleDate} w-50  ${mode ? 'rounded-left' : 'rounded'} text-center p-2`}>Single Date</span>\r\n        <span onClick={() => setMode(!mode)} className={` ${multipleDate} w-50 ${!mode ? 'rounded-right' : 'rounded'} text-center p-2`}>Ranged Date</span>\r\n        </div>\r\n      </div>\r\n    <DateRangePicker\r\n      className={mode ? null : 'd-none'}\r\n      ranges={[dateRange]}\r\n      onChange={newdate => setDates({newdate,dateRange,setDateRange})}\r\n      />\r\n    <Calendar\r\n    className={mode ? 'd-none' : null}\r\n      date={date}\r\n      onChange = {dt => setDate(dt)}\r\n    />\r\n    <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <span onClick={() => setDateValue()} className={` bg-green text-white w-100 border border-soft-green rounded text-center p-2`}>Confirm</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SKUDatePicker","export const setDates = ({newdate, dateRange,setDateRange}) => {\r\n    let dt = {...dateRange}\r\n    dt.startDate = newdate.selection.startDate\r\n    dt.endDate = newdate.selection.endDate\r\n    setDateRange(dt)\r\n  }","import React,{useState,useEffect} from 'react'\r\nimport { sortByInboundDate, filterByDate, dateDMY } from 'services'\r\nimport DatePicker from 'Component/DatePickerNew'\r\nimport asc from 'assets/icons/asc.svg'\r\nimport desc from 'assets/icons/desc.svg'\r\n\r\nconst Sort = ({ moduleEntry, moduleName, activeSku, dispatch }) => {\r\n    const [sortBy, setSortBy] = useState()\r\n    const [date, setDate] = useState()\r\n    const [showDate, setShowDate] = useState()\r\n    const [resetFilter, setResetFilter] = useState()\r\n    let dateShow;\r\n    const dimention = document.documentElement.clientWidth\r\n    dateShow = dateDMY({date,datePicker:true})\r\n    if(dateShow?.startDate) dateShow = `${dateShow.startDate} - ${dateShow.endDate}`\r\n    else dateShow = dateShow\r\n\r\n    useEffect(() => {\r\n        sortByInboundDate({ moduleEntry, moduleName, activeSku, dispatch, sortBy })\r\n    }, [sortBy])\r\n\r\n    useEffect(_ => {\r\n        if(!showDate)filterByDate({ moduleEntry, moduleName, activeSku, dispatch, date })\r\n    }, [date,showDate])\r\n\r\n    useEffect(_ => {\r\n        setSortBy()\r\n        setDate()\r\n    }, [resetFilter])\r\n    return(\r\n        <div className='w-25 d-flex justify-content-end'>\r\n            {/* <div className='iconU-modalClose red border-soft-green border emptyTextField rounded px-2 pt-2 mr-3 cursor-pointer' onClick={() => setResetFilter(d => !d)} /> */}\r\n            <div style={{height:40}} className={`${moduleName === 'repack' ? 'd-none' : null} border-soft-green border-top border-bottom border-left m-0 rounded-left green h6 d-flex align-items-center justify-content-center px-2 text-nowrap ${dimention > 500  ? (date ? null : 'd-none') : 'd-none'}`}>{dateShow}</div>\r\n            <div style={{height:40, minWidth:40}} \r\n                className={`${date ? 'iconU-modalClose red' : 'iconU-filterDate emptyTextField'} border-soft-green border ${date ? 'rounded-right' : 'rounded'} ${moduleName === 'repack' ? 'd-none' : null} d-flex align-items-center justify-content-center mr-3 cursor-pointer`} \r\n                onClick={() => date ? setResetFilter(d => !d) : setShowDate(d => !d)}/>\r\n            <DatePicker showDate={showDate} selectDate={(date) => setDate(date)} setShowDate={(d) => setShowDate(d)} />\r\n            <img style={{height:40, minWidth:40}} src={sortBy ? desc : asc} onClick={() => setSortBy(!sortBy)} className='p-2 border rounded border-soft-green cursor-pointer' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sort","import ReactTable from 'react-table-v6'\r\nimport 'react-table-v6/react-table.css'\r\nimport './CustomTable.scss'\r\nimport React from 'react'\r\n\r\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\r\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\r\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\r\n\r\nclass CustomTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            activeTab: '1',\r\n            editColumnTemp: {},\r\n        }\r\n    }\r\n\r\n    getColumnWidth = (rows, accessor, headerText) => {\r\n        const cellLength = Math.max(\r\n            ...rows.map(row => {\r\n                let value = '';\r\n                value = accessor(row);\r\n                // if (typeof accessor === 'string') {\r\n                //     value = _.get(row, accessor);\r\n                // } else {\r\n                //     value = accessor(row);\r\n                // }\r\n                if (typeof value === 'number') return value.toString().length;\r\n                return (value || '').length;\r\n            }),\r\n            headerText.length\r\n        );\r\n        return cellLength * 12\r\n    }\r\n\r\n    headerIcon = (data, header, editColumn) => {\r\n        let listHeader = []\r\n        header && header.map((h, index) => {\r\n            if (!editColumn[index]) {\r\n                let withIcon = (<span>\r\n                    {h.Header} <i className=\"iconU-sort\"> </i>\r\n                </span>\r\n                )\r\n                let obj = {\r\n                    Header: withIcon,\r\n                    Cell: h.Cell,\r\n                    accessor: h.accessor,\r\n                    sortable: h.sortable === false ? false : true,\r\n                    resizable: h.resizable || false,\r\n                    className: h.className || null,\r\n                    headerClassName: h.headerClassName || null,\r\n                    style: h.style || null,\r\n                    width: h.width || null,\r\n                }\r\n                return listHeader = [...listHeader, obj]\r\n            } else {\r\n                return listHeader = [...listHeader]\r\n            }\r\n        })\r\n\r\n        if (this.props.editColumn !== 'false') {\r\n            let editBtn = (\r\n                <i className='iconU-tableEdit pencilTable' />\r\n            )\r\n            let obj = {\r\n                Header: editBtn,\r\n                accessor: 'editBtn',\r\n                width: 50,\r\n                style: { textAlign: 'center' },\r\n            };\r\n            listHeader = [...listHeader, obj];\r\n        }\r\n\r\n        return listHeader;\r\n    };\r\n\r\n    render() {\r\n        const { showModal, editColumnTemp, fields } = this.state\r\n        let { columns, data, onClick, styles, tableStatus, className } = this.props\r\n        let headerIcon = this.headerIcon(data, columns, editColumnTemp);\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <ReactTableFixedColumns\r\n                    className={className}\r\n                    columns={headerIcon}\r\n                    data={data}\r\n                    showPagination={false}\r\n                    style={styles}\r\n                    noDataText={tableStatus == \"noData\" ? 'Please Wait' : 'No  Data Found'}\r\n                    minRows='0'\r\n                    resizable={false}\r\n                    getTdProps={(state, rowInfo, column, instance) => {\r\n                        return {\r\n                            onClick: (e, handleOriginal) => {\r\n                                !!onClick &&\r\n                                    onClick(rowInfo.original, state, column, e, instance);\r\n                            },\r\n                            style: {\r\n                                height: \"3rem\",\r\n                                cursor: !!onClick && 'pointer',\r\n                                textAlign: isNaN(rowInfo?.original[column.id])\r\n                                    ? 'left'\r\n                                    : 'right',\r\n                            },\r\n                        };\r\n                    }}\r\n                    defaultPageSize={50}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CustomTable","module.exports = __webpack_public_path__ + \"static/media/asc.9b60817e.svg\";","module.exports = __webpack_public_path__ + \"static/media/desc.bec03077.svg\";","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { getPoBySkuId, removeEntryModule } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    areaIdDesposition }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    let targetMovements = []\r\n\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                targetMovements = data?.targetMovements\r\n                const addPoItem = data?.poItems.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.targetMovements = data?.targetMovements\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaIdDesposition?.value),\r\n            areaDestinationName: areaIdDesposition?.label,\r\n            list: newJs\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    if (newJs.length > 0) dispatch({ type: CREATE_JOB_SHEET, targetMovements })\r\n    setLocalEntryData(jobSheet)\r\n    // dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    let targetMovements = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                targetMovements = data?.targetMovements\r\n                const addPoItem = data?.poItems.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.targetMovements = data?.targetMovements\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const setAreaIdDesposition = ({ dispatch, selected }) => {\r\n    if (selected) dispatch({ type: SET_AREA, areaIdDesposition: selected })\r\n}\r\n\r\nexport const selectArea = ({ selected, area, setAreaId, setAreaIdDesposition, setAreaMovement, dispatch }) => {\r\n    const value = selected?.value\r\n    let source;\r\n    let destination;\r\n\r\n    switch (value) {\r\n        case 1:\r\n            source = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Production')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 2:\r\n            source = area.filter(ar => ar?.label == 'Production')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 3:\r\n            source = area.filter(ar => ar?.label == 'Staging')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 4:\r\n            source = area.filter(ar => ar?.label == 'Staging')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Quarantine')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 5:\r\n            source = area.filter(ar => ar?.label == 'Quarantine')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Staging')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 6:\r\n            source = area.filter(ar => ar?.label == 'Staging')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Waste')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 7:\r\n            source = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Staging')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 8:\r\n            source = area.filter(ar => ar?.label == 'Storage Ambient')\r\n            if (source.length) source = source[0]\r\n            destination = area.filter(ar => ar?.label == 'Waste')\r\n            if (destination.length) destination = destination[0]\r\n            break\r\n        case 0:\r\n            source = null\r\n            destination = null\r\n            break\r\n    }\r\n    // setAreaId(source)\r\n    // setAreaIdDesposition(destination)\r\n    // setAreaMovement(selected)\r\n    dispatch({ type: CREATE_JOB_SHEET, areaId: source, areaIdDesposition: destination, areaMovement: selected })\r\n}\r\n\r\n\r\n\r\n\r\n//remove sku\r\nexport const removeSku = async ({ dispatch, moduleEntry, moduleName }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n    const list = moduleEntry.jobPost.list.filter(data => { if (data.checked) return data })\r\n    jobSheet.jobPost.list = list\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n    if (list.length === 0) removeEntryModule({ id: jobSheet.jobPost.id, moduleName, dispatch })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const submitValidation = ({ moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired, areaMovement }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            po.itemList.map(item => {\r\n                const { qty, grade, ripeness, note } = item\r\n                // if (po.uom === 'kg') {\r\n                if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                    item.qtyIsEmpty = false\r\n                    item.gradeIsEmpty = false\r\n                    item.ripenessIsEmpty = false\r\n                    item.noteIsEmpty = false\r\n                }\r\n                else {\r\n                    if (item?.grade?.label === 'Waste' && areaMovement?.value !== 8) {\r\n                        !grade?.value ? item.gradeIsEmpty = false : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                    }\r\n                    if (areaMovement?.value === 8) {\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        if (item?.grade?.label === 'Waste') {\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                    }\r\n                }\r\n                isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (qtyCount > po.initialWeight) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                // if(!item.qtyIsEmpty) po.initialWeightOver > po.initialWeight ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        setConfirmation({ show: false, name: null })\r\n        setIsRequired(true)\r\n    }\r\n}\r\n\r\nexport const moveAllStockMovement = ({ localEntryData, setLocalEntryData }) => {\r\n    if (localEntryData) {\r\n        let data = Object.assign({}, JSON.parse(JSON.stringify(localEntryData)))\r\n        const updateData = data?.jobPost?.list?.map(ls => {\r\n            ls.poList.map(po => {\r\n                po.itemList = [{ qty: po.initialWeight, expiryDate: po.expiryDate }]\r\n                return po\r\n            })\r\n            return ls\r\n        })\r\n        data.jobPost.list = updateData\r\n        setLocalEntryData(data)\r\n    }\r\n}"],"sourceRoot":""}