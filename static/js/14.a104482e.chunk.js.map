{"version":3,"sources":["Page/StockEntry/GeneralServices/moduleServices.js","apiServices/index.js","apiServices/dropdown/index.js"],"names":["selectedSkuCheck","moduleEntry","count","jobPost","list","map","data","checked","addSku","a","dispatch","moduleSummary","moduleName","jobSheet","push","filtered","sort","b","filterBySkuName","type","CREATE_JOB_SHEET","length","getEditedData","edited","poList","item","totalWeightCount","activeSku","total","po","itemList","qqq","Number","isInteger","qty","parseInt","parseFloat","toFixed","totalPackCount","pack","jobSheetChecker","totalQty","checkisEmpty","isRequired","qtyIsEmpty","noteIsEmpty","outboundTypeIsEmpty","ripenessIsEmpty","gradeIsEmpty","packIsEmpty","responseCheck","isLoading","summaryData","preRemoveSku","idx","totalListItemWeightCount","moduleList","removeSku","filter","removeEntryModule","id","resetSKU","setAreaId","selected","SET_AREA","areaId","countQty","poListIdx","entryListIdx","number","deleteRow","e","js","update","initialWeight","initialWeightScreenUpdate","splice","setSwitch","search","updateList","zeroQuantity","stockMovementTargetRepack","isMovement","filterTargetRepack","targetRepacks","gradeList","slot","targetMovement","colWidth","document","documentElement","clientWidth","value","includes","skuUuid","grade","gr","label","totalPack","totalMove","countPackMovement","countPack","targetUom","targetUos","percent","warehouse","skuName","targetDate","no","undefined","slotList","s","columns","Header","placeholder","accessor","width","style","textAlign","display","justifyContent","className","headerClassName","updateTargetRepack","setTargetRepack","updatedTargetRepacks","ls","concat","nameA","toUpperCase","nameB","getUserData","sessionId","setComplete","GET_USER","status","url","axios","headers","isSuccess","user","message","code","statusMessage","throwErrorStatus","userLogout","email","logout","USER_LOGOUT","window","location","replace","checkSessionId","getPoByPoCode","setModule","poNumber","warehouseUuid","areaName","setSkuList","setLocalEntryData","areaDestination","param","toLowerCase","entryData","wait","ripeness","expiryDate","codeGrade","inboundDate","inboundQty","photo","skuNumber","supplierId","supplierName","uom","wmsPoSkuCode","category","getGrade","skuId","ddGrade","warehouseSource","warehouseDestination","areaSource","areaDestinationName","findIndex","packSize","warehouseId","unitOfMeassures","expiryDateText","dateDMY","date","Promise","all","console","log","getStockTakeSummary","targetRepack","singleView","module","desc","areaIdDestination","transaction","GET_STOCK_TAKE_ACTION","dt","skuList","d","isFloat","isExist","sku","targetMovementProgress","targetRepackProgress","originalUom","getStockTakeSummaryAddSku","selectedSkusNumber","tmp","getUnfinishedEntries","IS_LOADING","savedJs","lists","getOutboundType","outboundTypeList","ripenessLevel","weight","outboundType","outbound","isNaN","initialWeightUpdate","initialWeightOver","STATUS","getPORepacking","setDiscard","getPoBySkuId","poItems","targetMovements","validatePoSkuInfoId","skuData","bulk","method","then","response","VALIDATE_PO_SKU_INFO_ID","skuCodeValidated","validateSkuNumber","skuNumberData","skuNumberValidated","submitCsv","dataCsv","setSubmitStatus","source","submitCsvStockTransfer","catch","error","submitCsvTargetRepack","saveJobSheet","setIsSuccess","name","table","finalModule","Object","assign","JSON","parse","stringify","post","success","moduleEntrywithId","saveImage","file","target","files","options","maxSizeMB","maxWidthOrHeight","useWebWorker","fileType","imageCompression","compressedFile","newFile","File","formData","FormData","append","getWasteWarehouseArea","getWarehouses","getLatestSyncHistories","newData","updatedAt","dateFull","lastSyncHistories","syncAllHistories","setSubmit","getCategories","categoryList","getWarehouseArea","WAREHOUSE_AREA","warehouseAreaCsv","getRipenessLevel","ddList","i","String","RIPENESS_LEVEL","skuDescription","multiplier","parentToChildMultiplier","OUTBOUND_TYPE","outboundTypeCsv","listItem","description","getWarehouse","getWasteReason","dropdown","wasteReasonList"],"mappings":"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","file":"static/js/14.a104482e.chunk.js","sourcesContent":["import { CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { removeEntryModule } from 'apiServices'\r\n\r\n// check selected sku\r\nexport const selectedSkuCheck = ({ moduleEntry }) => {\r\n    let count = 0\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            if (data.checked) count = count + 1\r\n        })\r\n    }\r\n\r\n    return count\r\n}\r\n\r\n//add new SKU\r\nexport const addSku = async ({ dispatch, moduleEntry, moduleSummary, moduleName }) => {\r\n    let jobSheet = { ...moduleSummary }\r\n    moduleEntry.map((data) => {\r\n        jobSheet.jobPost.list.push(data)\r\n    })\r\n    const filtered = jobSheet.jobPost.list?.sort(function (a, b) { return filterBySkuName(a, b) })\r\n    jobSheet.jobPost.list = filtered\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet.jobPost.list.length > 0 ? jobSheet : null });\r\n}\r\n\r\n// get selected sku\r\nexport const getEditedData = ({ data }) => {\r\n    let edited = false;\r\n    const a = data?.poList?.map(item => {\r\n        if (item.edited) edited = true\r\n    })\r\n    return edited\r\n}\r\n\r\nexport const submitValidation = ({ moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const { qty, grade, ripeness, note } = item\r\n\r\n                if (po.category === 'Fruits') {\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                            isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                        else {\r\n                            isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            !ripeness?.value ? item.ripenessIsEmpty = true : item.ripenessIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                    }\r\n                }\r\n\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty || item?.qtyToCompareIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item?.qty >= 0) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        setConfirmation({ show: false, name: null })\r\n        setIsRequired(true)\r\n    }\r\n}\r\n\r\nexport const totalWeightCount = ({ moduleEntry, activeSku }) => {\r\n    let total = 0\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list[activeSku].poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const qqq = Number.isInteger(item.qty) ? parseInt(item.qty) : Number.parseFloat(item.qty ? item.qty : 0)\r\n                total += qqq\r\n            })\r\n        })\r\n    }\r\n    total = Number.isInteger(total) ? total : Number.parseFloat(total).toFixed(2)\r\n    return total\r\n}\r\n\r\nexport const totalPackCount = ({ moduleEntry, activeSku }) => {\r\n    let total = 0\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list[activeSku].poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const qqq = Number.isInteger(item.pack) ? parseInt(item.pack) : Number.parseFloat(item.pack ? item.pack : 0)\r\n                total += qqq\r\n            })\r\n        })\r\n    }\r\n    total = Number.isInteger(total) ? total : Number.parseFloat(total).toFixed(2)\r\n    return total\r\n}\r\n\r\n\r\n\r\nexport const totalListWeightCount = ({ moduleList }) => {\r\n    let total = 0\r\n    if (moduleList) {\r\n        moduleList.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const qqq = Number.isInteger(item.qty) ? parseInt(item.qty) : Number.parseFloat(item.qty ? item.qty : 0)\r\n                total += qqq\r\n            })\r\n        })\r\n    }\r\n    total = Number.isInteger(total) ? total : Number.parseFloat(total).toFixed(2)\r\n    return total\r\n}\r\n\r\n// edited jobsheet checker\r\nexport const jobSheetChecker = ({ moduleEntry }) => {\r\n    let edited = false;\r\n    const a = moduleEntry?.jobPost?.list?.map(item => {\r\n        const check = getEditedData({ data: item })\r\n        if (check) edited = true\r\n    })\r\n    return edited\r\n}\r\n\r\nexport const totalQty = (qty) => {\r\n    if (qty) {\r\n        if (Number.isInteger(qty)) return qty\r\n        else return Number.parseFloat(qty).toFixed(2)\r\n    }\r\n    else return 0\r\n}\r\n\r\nexport const checkisEmpty = (moduleEntry) => {\r\n    let isRequired = false\r\n    moduleEntry.poList.map(po => {\r\n        po.itemList.map(item => {\r\n            if (item.qtyIsEmpty || item.noteIsEmpty || item.outboundTypeIsEmpty || item.ripenessIsEmpty || item.gradeIsEmpty || item.packIsEmpty) isRequired = true\r\n        })\r\n    })\r\n    return isRequired\r\n}\r\n\r\n// check loading\r\nexport const responseCheck = ({ isLoading, summaryData = null }) => {\r\n    if (!summaryData && !isLoading) {\r\n        return true\r\n    }\r\n    if (isLoading) {\r\n        return false\r\n    }\r\n    else {\r\n        return true\r\n    }\r\n}\r\n\r\n//pre remove sku\r\nexport const preRemoveSku = ({ dispatch, moduleEntry, moduleName, idx, checked }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n    jobSheet.jobPost.list[idx].checked = checked\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\nexport const totalListItemWeightCount = ({ moduleList }) => {\r\n    let total = 0\r\n    if (moduleList) {\r\n        moduleList.map(item => {\r\n            const qqq = Number.isInteger(item.qty) ? parseInt(item.qty) : Number.parseFloat(item.qty ? item.qty : 0)\r\n            total += qqq\r\n        })\r\n    }\r\n    total = Number.isInteger(total) ? total : Number.parseFloat(total).toFixed(2)\r\n    return total\r\n}\r\n\r\n//get initial jobsheet\r\nexport const getInitialJs = ({ moduleEntry }) => {\r\n    return moduleEntry.jobPost.list.length\r\n}\r\n\r\n//remove sku\r\nexport const removeSku = async ({ dispatch, moduleEntry, moduleName }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n\r\n    const list = moduleEntry.jobPost.list.filter(data => { if (data.checked) return data })\r\n    jobSheet.jobPost.list = list\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n    if (list.length === 0) removeEntryModule({ id: jobSheet.jobPost.id, moduleName, dispatch })\r\n}\r\n\r\nexport const resetSKU = ({ dispatch, moduleSummary, moduleName }) => {\r\n    let jobSheet = { ...moduleSummary }\r\n    jobSheet.jobPost.list.map(list => {\r\n        list.checked = true\r\n    })\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\nexport const setAreaId = ({ dispatch, selected }) => {\r\n    if (selected) dispatch({ type: SET_AREA, areaId: selected })\r\n}\r\n\r\nexport const countQty = ({ activeSku, moduleEntry, poListIdx, entryListIdx }) => {\r\n    let number = parseInt(0)\r\n    const list = moduleEntry.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    list.map((item, idx) => {\r\n        if (idx !== entryListIdx) number += Number.isInteger(item?.qty) ? item?.qty : parseFloat(item?.qty)\r\n    })\r\n\r\n    return number\r\n}\r\n\r\nexport const deleteRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e,\r\n    countQty\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    const number = countQty({ moduleEntry, activeSku, poListIdx, entryListIdx })\r\n    const update = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = update - number\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.splice(entryListIdx, 1)\r\n\r\n    if (js.jobPost.list[activeSku].poList[poListIdx].itemList.length === 0) js.jobPost.list[activeSku].poList[poListIdx].edited = false\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const setZeroQuantity = ({ dispatch, zeroQuantity }) => {\r\n    dispatch({ type: 'SET_ZERO_QUANTITY', data: !zeroQuantity })\r\n}\r\n\r\nexport const setMovementTargetRepack = ({ dispatch, stockMovementTargetRepack }) => {\r\n    dispatch({ type: 'SET_MOVEMENT_TARGET_REPACK', data: !stockMovementTargetRepack })\r\n}\r\n\r\nexport const setSwitch = ({ moduleName, search, updateList, dispatch, zeroQuantity, stockMovementTargetRepack, isMovement }) => {\r\n    if (!isMovement) setZeroQuantity({ dispatch, zeroQuantity })\r\n    if (isMovement) setMovementTargetRepack({ dispatch, stockMovementTargetRepack })\r\n    if (search) updateList(!zeroQuantity, !stockMovementTargetRepack, moduleName)\r\n}\r\n\r\nexport const countPack = ({ activeSku, moduleEntry, grade, slot }) => {\r\n    let number = 0\r\n    const list = moduleEntry.jobPost.list[activeSku].poList[0].itemList\r\n    list.map((item) => {\r\n        if (item?.pack && item.grade.label === grade && item.slot?.value == slot) number += item?.pack\r\n    })\r\n    return number\r\n}\r\n\r\nexport const countPackMovement = ({ activeSku, moduleEntry, grade, slot }) => {\r\n    let number = 0\r\n    const list = moduleEntry.jobPost.list[activeSku].poList\r\n    list.map(po => {\r\n        po.itemList.map(item => {\r\n            if (item?.qty && item.grade.label === grade) number += item?.qty\r\n        })\r\n    })\r\n    return number\r\n}\r\n\r\n\r\nexport const filterTargetRepack = (targetRepacks, gradeList, activeSku, moduleEntry, slot, targetMovement) => {\r\n    const width = document.documentElement.clientWidth\r\n    const colWidth = width <= 500 ? 100 : 'auto'\r\n    let id = gradeList?.map(data => data.value)\r\n    let data = targetRepacks?.map((data, idx) => {\r\n        if (id.includes(data.skuUuid)) {\r\n\r\n            // set grade\r\n            let grade = null\r\n            gradeList.map(gr => {\r\n                if (gr.value === data.skuUuid) grade = gr.label\r\n            })\r\n\r\n            // set percent\r\n            const totalPack = (targetMovement ? data?.totalMove : data?.totalPack) + (targetMovement ? countPackMovement({ activeSku, moduleEntry, grade, slot: data?.slot }) : countPack({ activeSku, moduleEntry, grade, slot: data?.slot }))\r\n            const targetUom = data.targetUom\r\n            const targetUos = data.targetUos\r\n            const percent = (totalPack / (targetMovement ? targetUos : targetUom)) * 100\r\n\r\n            return {\r\n                warehouse: data.warehouse,\r\n                skuUuid: data.skuUuid,\r\n                skuName: data.skuName,\r\n                targetDate: data.targetDate,\r\n                targetUom: data.targetUom,\r\n                targetUos: data.targetUos,\r\n                slot: data.slot,\r\n                totalPack: totalPack,\r\n                totalMove: data.totalMove,\r\n                no: idx + 1,\r\n                grade: grade,\r\n                [targetMovement ? '%Moved' : '%Repack']: `${percent?.toFixed(2)}%`,\r\n            }\r\n        }\r\n    })\r\n    data = data?.filter(data => data !== undefined)\r\n    if (slot?.length) {\r\n        const slotList = slot.map(s => Number.parseInt(s?.value))\r\n        if (!slotList.includes(null)) data = data.filter(data => {\r\n            return slotList.includes(Number.parseInt(data.slot))\r\n        })\r\n    }\r\n    data = data?.map((data, idx) => {\r\n        data.no = idx + 1\r\n        return data\r\n    })\r\n    if (!data) data = []\r\n    const repack = [\r\n        { Header: 'Slot', placeholder: 'Slot', accessor: 'slot', width: 70, style: { textAlign: 'left', display: 'end', justifyContent: 'flex-end' } },\r\n        { Header: 'Grade', placeholder: 'Grade', accessor: 'grade', width: 300 },\r\n        { Header: 'Total Pack', placeholder: 'Total Pack', accessor: 'totalPack', style: { textAlign: 'right', display: 'flex', justifyContent: 'flex-end' }, width: colWidth, },\r\n        { Header: 'Target Pack', placeholder: 'Target Pack', accessor: 'targetUom', width: colWidth, style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-end' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\r\n        { Header: '%Repack', placeholder: '%Repack', accessor: '%Repack', width: colWidth, style: { textAlign: 'right', display: 'flex', justifyContent: 'flex-end' }, },\r\n    ]\r\n\r\n    const move = [\r\n        // { Header: 'Slot', placeholder: 'Slot', accessor: 'slot', width: 70, style: { textAlign: 'left', display: 'end', justifyContent: 'flex-end' } },\r\n        { Header: 'Grade', placeholder: 'Grade', accessor: 'grade', width: 300 },\r\n        { Header: 'Total Movement', placeholder: 'Total Movement', accessor: 'totalPack', width: colWidth, style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-end' }, className: 'flex-end !important', headerClassName: 'flex-end !important' },\r\n        { Header: 'Target Movement', placeholder: 'Target Movement', accessor: 'targetUos', width: colWidth, style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-end' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\r\n        { Header: '%Moved', placeholder: '%Moved', accessor: '%Moved', width: colWidth, style: { textAlign: 'right', display: 'flex', justifyContent: 'flex-end' }, },\r\n    ]\r\n    let table = { data, columns: targetMovement ? move : repack }\r\n    return table\r\n}\r\n\r\nexport const updateTargetRepack = ({ data, targetRepacks, activeSku, dispatch }) => {\r\n    // let newUpdatedTargetRepacks = []\r\n\r\n    // targetRepacks.map(target => {\r\n    //     data.map(updatedTarget => {\r\n    //             if(updatedTarget.skuName === target.skuName){\r\n    //                 target.totalPack = updatedTarget.totalPack\r\n    //                 newUpdatedTargetRepacks.push(target)\r\n    //             }\r\n    //         })\r\n    // })\r\n\r\n    // console.log(newUpdatedTargetRepacks);\r\n}\r\n\r\nexport const setTargetRepack = ({ moduleEntry, dispatch }) => {\r\n    let updatedTargetRepacks = []\r\n    moduleEntry.jobPost.list.map(ls => {\r\n        if (ls.poList[0].targetRepacks?.length) updatedTargetRepacks = updatedTargetRepacks.concat(ls.poList[0].targetRepacks)\r\n    })\r\n    dispatch({ type: 'IS_LOADING', targetRepacks: updatedTargetRepacks })\r\n}\r\n\r\nexport const addSlot = ({ dispatch, moduleEntry, slot, moduleName }) => {\r\n    let newModuleEntry = { ...moduleEntry }\r\n\r\n    if (slot?.length) {\r\n        newModuleEntry.jobPost.slot = slot.map(s => {\r\n            if (Number.isInteger(s?.value)) return Number.parseInt(s?.value)\r\n            else return 0\r\n        })\r\n        dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: newModuleEntry })\r\n    }\r\n}\r\n\r\nexport const filterBySkuName = (a, b) => {\r\n    var nameA = a.skuName.toUpperCase(); // ignore upper and lowercase\r\n    var nameB = b.skuName.toUpperCase(); // ignore upper and lowercase\r\n    if (nameA < nameB) {\r\n        return -1;\r\n    }\r\n    if (nameA > nameB) {\r\n        return 1;\r\n    }\r\n\r\n    // names must be equal\r\n    return 0;\r\n}","import axios from \"axios\";\r\nimport imageCompression from 'browser-image-compression';\r\nimport { isFloat, throwErrorStatus, dateDMY, dateFull } from 'services'\r\nimport {\r\n  GET_STOCK_TAKE_ACTION,\r\n  GET_USER,\r\n  USER_LOGOUT,\r\n  STATUS,\r\n  VALIDATE_PO_SKU_INFO_ID,\r\n  CREATE_JOB_SHEET,\r\n  IS_LOADING,\r\n} from \"apiServices/action\";\r\nimport { getGrade, getOutboundType } from \"./dropdown\";\r\nimport { totalQty } from \"Page/StockEntry/GeneralServices/moduleServices\";\r\n\r\n//get user credential by email\r\nexport const getUserData = async ({ dispatch, sessionId, setComplete }) => {\r\n  try {\r\n    dispatch({ type: GET_USER, status: null });\r\n    const url = `user/validate?sessionId=${sessionId}`;\r\n    const { data, headers } = await axios(url);\r\n    setComplete(true);\r\n    if (data) {\r\n      data[\"sessionId\"] = headers[\"session-id\"];\r\n\r\n      if (data?.isSuccess)\r\n        dispatch({ type: GET_USER, user: data, status: null });\r\n      else\r\n        dispatch({\r\n          type: GET_USER,\r\n          user: null,\r\n          status: { message: \"Unauthorized\", code: 401 },\r\n          statusMessage: data.message,\r\n        });\r\n    }\r\n    return true;\r\n  } catch (e) {\r\n    const status = throwErrorStatus(e);\r\n    setComplete(true);\r\n    dispatch({\r\n      type: \"STATUS\",\r\n      status,\r\n      user: null,\r\n    });\r\n  }\r\n};\r\n\r\n//logout\r\nexport const userLogout = async ({ dispatch, email }) => {\r\n  try {\r\n    const logout = `/user/signOut?email=${email}`;\r\n    await axios(logout);\r\n    dispatch({ type: USER_LOGOUT, user: null });\r\n    window.location.replace(\"https://dev-wms-web.sayurbox.tech/\");\r\n    return true;\r\n  } catch (error) { }\r\n};\r\n\r\nexport const checkSessionId = async ({ dispatch, sessionId }) => {\r\n  try {\r\n    const url = `/user/checkSession?sessionId=${sessionId}`;\r\n    const data = await axios(url);\r\n    if (data) {\r\n      if (!data?.data?.isSuccess) dispatch({ type: USER_LOGOUT, user: null });\r\n    }\r\n  }\r\n  catch (e) {\r\n    const status = throwErrorStatus(e)\r\n    dispatch({\r\n      type: GET_USER,\r\n      user: null,\r\n      status: { message: \"Unauthorized\", code: 401 },\r\n      statusMessage: status.message,\r\n    });\r\n  }\r\n};\r\n\r\n// get by po sku code\r\n\r\nexport const getPoByPoCode = async ({\r\n  moduleName,\r\n  setModule,\r\n  dispatch,\r\n  poNumber,\r\n  warehouseUuid,\r\n  areaId,\r\n  areaName,\r\n  setSkuList,\r\n  setLocalEntryData,\r\n  areaDestination\r\n}) => {\r\n  try {\r\n    let param = ''\r\n    if (poNumber.length > 0) param = `&wmsPoSkuCode=${poNumber}`;\r\n    if (warehouseUuid) param = param + `&warehouseUuid=${warehouseUuid}`;\r\n    if (areaId) param = param + `&areaId=${areaId?.value}`;\r\n    let url = `/${moduleName?.toLowerCase()}/poByPoSkuCode? ${param}`;\r\n    const { data, status } = await axios(url);\r\n    if (data?.data?.length) {\r\n      let entryData = {}\r\n      entryData.jobPost = {}\r\n      entryData.jobPost.list = []\r\n      const wait = data.data.map(async data => {\r\n        const {\r\n          ripeness,\r\n          expiryDate,\r\n          codeGrade,\r\n          inboundDate,\r\n          inboundQty,\r\n          initialWeight,\r\n          photo,\r\n          skuName,\r\n          skuUuid,\r\n          skuNumber,\r\n          supplierId,\r\n          supplierName,\r\n          totalPack,\r\n          uom,\r\n          wmsPoSkuCode,\r\n          slot,\r\n          category\r\n        } = data\r\n        const grade = await getGrade({ skuId: skuUuid })\r\n        let ddGrade = grade?.filter(data => data.label === skuName)\r\n        ddGrade?.length ? ddGrade = ddGrade[0] : ddGrade = { label: null, value: null }\r\n        entryData.jobPost.id = 0\r\n        entryData.jobPost.warehouseSource = warehouseUuid\r\n        entryData.jobPost.warehouseDestination = warehouseUuid\r\n        entryData.jobPost.areaSource = areaId?.value\r\n        entryData.jobPost.areaName = areaId?.label\r\n        if (moduleName === 'stockMovement') {\r\n          entryData.jobPost.areaDestinationName = areaDestination?.label\r\n          entryData.jobPost.areaDestination = areaDestination?.value\r\n        }\r\n        else entryData.jobPost.areaDestination = areaId?.value\r\n        if (entryData?.jobPost?.list?.length) {\r\n          const idx = entryData?.jobPost.list?.findIndex((data, idx) => data?.skuName === skuName)\r\n          if (idx === -1) {\r\n            entryData.jobPost.list.push(\r\n              {\r\n                category: category,\r\n                packSize: totalPack,\r\n                checked: true,\r\n                gradeList: grade,\r\n                slot: slot,\r\n                skuUuid: skuUuid,\r\n                skuNumber: skuNumber,\r\n                skuName: skuName,\r\n                warehouseId: warehouseUuid,\r\n                unitOfMeassures: uom,\r\n                totalQty: initialWeight,\r\n                photo: photo,\r\n                poList: [\r\n                  {\r\n                    wmsPoSkuCode: wmsPoSkuCode,\r\n                    skuUuid: skuUuid,\r\n                    inboundDate: inboundDate,\r\n                    initialWeight: initialWeight,\r\n                    uom: uom,\r\n                    expiryDate: expiryDate,\r\n                    supplierId: supplierId,\r\n                    supplierName: supplierName,\r\n                    codeGrade: codeGrade,\r\n                    inboundQty: inboundQty,\r\n                    totalPack: totalPack,\r\n                    packSize: totalPack,\r\n                    category: category,\r\n                    itemList: [\r\n                      {\r\n                        qty: initialWeight,\r\n                        grade: ddGrade,\r\n                        ripeness: {\r\n                          label: ripeness,\r\n                          value: ripeness\r\n                        },\r\n                        expiryDate: expiryDate,\r\n                        expiryDateText: dateDMY({ date: expiryDate }),\r\n                      }\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            )\r\n          }\r\n          if (idx >= 0) {\r\n            entryData.jobPost.list[idx].totalQty += initialWeight\r\n            entryData.jobPost.list[idx].poList.push(\r\n              {\r\n                wmsPoSkuCode: wmsPoSkuCode,\r\n                skuUuid: skuUuid,\r\n                inboundDate: inboundDate,\r\n                initialWeight: initialWeight,\r\n                uom: uom,\r\n                expiryDate: expiryDate,\r\n                supplierId: supplierId,\r\n                supplierName: supplierName,\r\n                codeGrade: codeGrade,\r\n                inboundQty: inboundQty,\r\n                totalPack: totalPack,\r\n                category: category,\r\n                itemList: [\r\n                  {\r\n                    qty: initialWeight,\r\n                    grade: ddGrade,\r\n                    ripeness: {\r\n                      label: ripeness,\r\n                      value: ripeness\r\n                    },\r\n                    expiryDate: expiryDate,\r\n                    expiryDateText: dateDMY({ date: expiryDate }),\r\n                  }\r\n                ]\r\n              }\r\n            )\r\n          }\r\n        }\r\n\r\n        if (!entryData?.jobPost?.list?.length) {\r\n          entryData.jobPost.list.push(\r\n            {\r\n              checked: true,\r\n              category: category,\r\n              packSize: totalPack,\r\n              gradeList: grade,\r\n              skuUuid: skuUuid,\r\n              skuNumber: skuNumber,\r\n              skuName: skuName,\r\n              warehouseId: warehouseUuid,\r\n              unitOfMeassures: uom,\r\n              totalQty: initialWeight,\r\n              photo: photo,\r\n              poList: [\r\n                {\r\n                  wmsPoSkuCode: wmsPoSkuCode,\r\n                  skuUuid: skuUuid,\r\n                  inboundDate: inboundDate,\r\n                  initialWeight: initialWeight,\r\n                  uom: uom,\r\n                  expiryDate: expiryDate,\r\n                  supplierId: supplierId,\r\n                  supplierName: supplierName,\r\n                  codeGrade: codeGrade,\r\n                  inboundQty: inboundQty,\r\n                  totalPack: totalPack,\r\n                  category: category,\r\n                  itemList: [\r\n                    {\r\n                      qty: initialWeight,\r\n                      grade: ddGrade,\r\n                      ripeness: {\r\n                        label: ripeness,\r\n                        value: ripeness\r\n                      },\r\n                      expiryDate: expiryDate,\r\n                      expiryDateText: dateDMY({ date: expiryDate }),\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          )\r\n        }\r\n      })\r\n      await Promise.all(wait)\r\n      await setLocalEntryData(entryData)\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n// get stock take summary data\r\nexport const getStockTakeSummary = async ({\r\n  category,\r\n  stockMovementTargetRepack,\r\n  targetRepack,\r\n  moduleName,\r\n  zeroQuantity,\r\n  singleView,\r\n  module,\r\n  setModule,\r\n  dispatch,\r\n  desc,\r\n  warehouseUuid,\r\n  areaId,\r\n  areaIdDestination,\r\n  transaction,\r\n}) => {\r\n  try {\r\n    let param = \"\";\r\n    // let cancelToken = axios.CancelToken.source();\r\n    if (desc.length > 0) param = `&desc=${desc}`;\r\n    if (desc.length === 0) param = `&desc=${''}`;\r\n    if (warehouseUuid) param = param + `&warehouseUuid=${warehouseUuid}`;\r\n    if (areaId) param = param + `&areaId=${areaId?.value}`;\r\n    if (transaction === 'waste') param = param + `&transaction=${transaction}`\r\n    if (areaIdDestination === 'movement') param = param + `&areaId=${areaIdDestination?.value}`\r\n    if (moduleName === 'stockMovement' && stockMovementTargetRepack) param = param + `&haveTargetMovement=${stockMovementTargetRepack}`\r\n    if (moduleName === 'repack' && targetRepack) param = param + `&haveTargetRepack=${targetRepack}`\r\n    if (category?.value) param = param + `&categoryUuid=${category?.value}`\r\n    let url = `oss/skus? ${param}`;\r\n\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, isLoading: true });\r\n    setModule(dt);\r\n    const { data, status } = await axios(url);\r\n    let dt = [];\r\n    // filter selected sku\r\n    const skuList = module?.jobPost?.list\r\n    if (!data?.data) dispatch({ type: GET_STOCK_TAKE_ACTION, isLoading: false });\r\n    let tmp = data?.data.map(d => {\r\n      //if outbound, qty < 0 then skip\r\n      if (isFloat(d.totalQty) < 0.01) { }\r\n      if (isFloat(d.totalQty) <= 0 && zeroQuantity && moduleName === 'stockTake') {\r\n        let isExist = skuList?.filter(sku => sku.skuUuid === d.skuUuid)\r\n        if (singleView) isExist = []\r\n        dt.push({\r\n          targetMovementProgress: d.targetMovementProgress?.length ? d.targetMovementProgress : [],\r\n          targetRepackProgress: d.targetRepackProgress?.length ? d.targetRepackProgress : [],\r\n          checked: isExist?.length > 0 ? true : false,\r\n          gradeList: d.gradeList,\r\n          photo: d.photo,\r\n          poList: d.poList,\r\n          packSize: d.packSize,\r\n          category: d.category,\r\n          skuName: d.skuName,\r\n          skuNumber: parseInt(d.skuNumber),\r\n          skuUuid: d.skuUuid,\r\n          totalQty: isFloat(d.totalQty),\r\n          unitOfMeassures: d.unitOfMeassures,\r\n          warehouseId: d.warehouseId,\r\n          originalUom: d.originalUom,\r\n        });\r\n      }\r\n      if (isFloat(d.totalQty) > 0 && (moduleName === 'stockTake' ? !zeroQuantity : true)) {\r\n        let isExist = skuList?.filter(sku => sku.skuUuid === d.skuUuid)\r\n        if (singleView) isExist = []\r\n        dt.push({\r\n          targetMovementProgress: d.targetMovementProgress?.length ? d.targetMovementProgress : [],\r\n          targetRepackProgress: d.targetRepackProgress?.length ? d.targetRepackProgress : [],\r\n          checked: isExist?.length > 0 ? true : false,\r\n          gradeList: d.gradeList,\r\n          photo: d.photo,\r\n          poList: d.poList,\r\n          packSize: d.packSize,\r\n          category: d.category,\r\n          skuName: d.skuName,\r\n          skuNumber: parseInt(d.skuNumber),\r\n          skuUuid: d.skuUuid,\r\n          totalQty: isFloat(d.totalQty),\r\n          unitOfMeassures: d.unitOfMeassures,\r\n          warehouseId: d.warehouseId,\r\n          originalUom: d.originalUom,\r\n        });\r\n      }\r\n    });\r\n    setModule(dt);\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, isLoading: false });\r\n  } catch (e) { }\r\n};\r\n\r\nexport const getStockTakeSummaryAddSku = async ({\r\n  category,\r\n  zeroQuantity,\r\n  moduleName,\r\n  setModule,\r\n  dispatch,\r\n  desc,\r\n  warehouseUuid,\r\n  areaId,\r\n  selectedSkusNumber,\r\n  transaction,\r\n  stockMovementTargetRepack,\r\n  targetRepack\r\n}) => {\r\n  try {\r\n    let param = \"\";\r\n    if (desc) param = `&desc=${desc}`;\r\n    if (warehouseUuid) param = param + `&warehouseUuid=${warehouseUuid}`;\r\n    if (areaId) param = param + `&areaId=${areaId?.value}`;\r\n    if (transaction === \"waste\") param = param + `&transaction=${transaction}`;\r\n    if (moduleName === 'stockMovement' && stockMovementTargetRepack) param = param + `&haveTargetMovement=${stockMovementTargetRepack}`\r\n    if (moduleName === 'repack' && targetRepack) param = param + `&haveTargetRepack=${targetRepack}`\r\n    if (category?.value) param = param + `&categoryUuid=${category?.value}`\r\n    let url = `oss/skus? ${param}`;\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, isLoading: true });\r\n    setModule(dt);\r\n    const { data, status } = await axios(url);\r\n\r\n    let dt = [];\r\n    let x = data?.data.map((d, idx) => {\r\n      if (selectedSkusNumber.includes(parseInt(d.skuNumber))) {\r\n        return false;\r\n      }\r\n\r\n      if (isFloat(d.totalQty) < 0.01) { }\r\n      if (isFloat(d.totalQty) <= 0 && zeroQuantity && moduleName === 'stockTake') {\r\n        dt.push({\r\n          targetMovement: d.targetMovementProgress?.length ? d.targetMovementProgress : [],\r\n          gradeList: d.gradeList,\r\n          photo: d.photo,\r\n          poList: d.poList,\r\n          packSize: d.packSize,\r\n          category: d.category,\r\n          skuName: d.skuName,\r\n          skuNumber: parseInt(d.skuNumber),\r\n          skuUuid: d.skuUuid,\r\n          totalQty: isFloat(d.totalQty),\r\n          unitOfMeassures: d.unitOfMeassures,\r\n          warehouseId: d.warehouseId,\r\n          originalUom: d.originalUom,\r\n        });\r\n      }\r\n      if (isFloat(d.totalQty) > 0 && (moduleName === 'stockTake' ? !zeroQuantity : true)) {\r\n        let tmp = {\r\n          targetMovement: d.targetMovementProgress?.length ? d.targetMovementProgress : [],\r\n          targetRepackProgress: d.targetRepackProgress?.length ? d.targetRepackProgress : [],\r\n          checked: d.checked,\r\n          gradeList: d.gradeList,\r\n          photo: d.photo,\r\n          poList: d.poList,\r\n          skuName: d.skuName,\r\n          skuNumber: parseInt(d.skuNumber),\r\n          packSize: d.packSize,\r\n          category: d.category,\r\n          skuUuid: d.skuUuid,\r\n          totalQty: isFloat(d.totalQty),\r\n          unitOfMeassures: d.unitOfMeassures,\r\n          warehouseId: d.warehouseId,\r\n          originalUom: d.originalUom,\r\n        };\r\n        dt.push(tmp);\r\n      }\r\n    });\r\n    setModule(dt);\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, isLoading: false });\r\n  } catch (e) {\r\n    // dispatch({ type: STATUS, status: 500, isLoading: false });\r\n  }\r\n};\r\n\r\n// get unfinished entry\r\nexport const getUnfinishedEntries = async ({\r\n  dispatch,\r\n  moduleName,\r\n  isExist,\r\n  ripeness,\r\n}) => {\r\n  if (isExist) return;\r\n  try {\r\n    dispatch({ type: IS_LOADING, isLoading: true });\r\n    const url = `${moduleName.toLowerCase()}/unfinishedEntries`;\r\n    const { data } = await axios(url);\r\n    if (data.data?.length === 0 || !data.data[0].list || data.data[0]?.list?.length === 0) {\r\n      dispatch({ type: IS_LOADING, isLoading: false, [`${moduleName}FirstLoad`]: true })\r\n      return\r\n    }\r\n    let savedJs = { jobPost: { ...data.data[0] } };\r\n    let lists = [];\r\n    if (data) {\r\n      const list = savedJs.jobPost.list.map(async list => {\r\n        list.checked = true\r\n        if (moduleName === 'outbound') list.outboundTypeList = await getOutboundType({ dispatch })\r\n        if (moduleName === 'stockTake') list.gradeList = await getGrade({ skuId: list.skuUuid, dispatch })\r\n        if (moduleName === 'repack') list.gradeList = await getGrade({ skuId: list.skuUuid, dispatch })\r\n        if (moduleName === 'waste') list.gradeList = await getGrade({ skuId: list.skuUuid, dispatch })\r\n        if (moduleName === 'stockMovement') list.gradeList = await getGrade({ skuId: list.skuUuid, dispatch })\r\n        list.poList.map(po => {\r\n          po.category = list.category\r\n          po.skuUuid = list.skuUuid\r\n          po.uom = list.unitOfMeassures\r\n          po.ripenessLevel = 0\r\n          const weight = list.unitOfMeassures === 'gram' || 'kg' ? parseFloat(po.initialWeight) : parseInt(po.initialWeight)\r\n          po.initialWeight = weight\r\n          let number = 0\r\n          po.edited = po.itemList.length > 0 ? true : false\r\n          po.itemList.map(item => {\r\n            item.expiryDate = po?.expiryDate\r\n            item.expiryDateText = dateDMY({ date: po?.expiryDate })\r\n\r\n            if (moduleName === 'stockTake') {\r\n              //restructure ripeness\r\n              item.ripeness = ripeness.filter(\r\n                (ripeness) => ripeness?.value === item?.ripeness?.value\r\n              );\r\n              item.ripeness = item.ripeness[0];\r\n\r\n              //restructure grade\r\n              item.grade = list.gradeList.filter(\r\n                (grade) => grade?.value === item?.grade?.value\r\n              );\r\n              item.grade = item.grade[0];\r\n            }\r\n\r\n            if (moduleName === \"repack\") {\r\n              //restructure grade\r\n              item.grade = list.gradeList.filter(\r\n                (grade) => grade?.value === item?.grade?.value\r\n              );\r\n              item.grade = item.grade[0];\r\n            }\r\n\r\n            if (moduleName === \"outbound\") {\r\n              //resturcture outbound type\r\n              item.outboundType = list.outboundTypeList.filter(\r\n                (outbound) => outbound?.value === item?.outboundType?.value\r\n              );\r\n              item.outboundType = item.outboundType[0];\r\n            }\r\n\r\n            if (\r\n              list.unitOfMeassures !== \"gram\" ||\r\n              list.unitOfMeassures !== \"kg\"\r\n            ) {\r\n              if (!isNaN(item.qty)) number += parseInt(item.qty);\r\n            }\r\n            return item;\r\n          });\r\n          po.initialWeightUpdate =\r\n            po.inboundQty - number <= 0 ? 0 : po.inboundQty - number;\r\n          number >= po.inboundQty\r\n            ? (po.initialWeightOver = number)\r\n            : (po.initialWeightOver = 0);\r\n          return po;\r\n        });\r\n        lists.push(list);\r\n      });\r\n      const wait = await Promise.all(list);\r\n      savedJs.jobPost.list = lists;\r\n      dispatch({\r\n        type: CREATE_JOB_SHEET,\r\n        [`${moduleName}EntryData`]: savedJs,\r\n        isLoading: false,\r\n        [`${moduleName}FirstLoad`]: true,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: STATUS, [`${moduleName}FirstLoad`]: true });\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPORepacking = async ({ skuId, warehouseId, uom }) => {\r\n  const url = `repack/totalWeightBySku?warehouseUuid=${warehouseId}&skuId=${skuId}&uom=${uom}`\r\n  const data = await axios(url)\r\n  if (data.data) return data.data\r\n}\r\n\r\nexport const removeEntryModule = async ({ id, moduleName, dispatch, setDiscard }) => {\r\n  if (id === 0) {\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    if (typeof (setDiscard) === 'function') setDiscard(false)\r\n    return true\r\n  }\r\n  try {\r\n    const url = `${moduleName.toLowerCase()}/discard?jobId=${id}`\r\n    const { data } = await axios(url)\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    if (typeof (setDiscard) === 'function') setDiscard(false)\r\n    return true\r\n  }\r\n  catch (e) {\r\n    return false\r\n  }\r\n};\r\n\r\n//get po by sku id\r\nexport const getPoBySkuId = async ({ skuId, warehouseUuid, areaId, dispatch, moduleName, zeroQuantity }) => {\r\n  try {\r\n    const url = `${moduleName?.toLowerCase()}/poBySkuId?skuId=${skuId}&warehouseUuid=${warehouseUuid}&areaId=${areaId}&zeroQuantity=${zeroQuantity}`;\r\n    const { data } = await axios(url);\r\n    if (!data?.data?.poItems?.length) dispatch({ type: 'STATUS', status: { code: 500, message: 'There is no PO' } })\r\n    if (moduleName === 'stockMovement') return { poItems: data?.data.poItems, targetMovements: data?.data.targetMovements }\r\n    return data?.data?.poItems;\r\n  } catch (error) {\r\n    // const status = throwErrorStatus(error)\r\n    // console.log(error)\r\n    // dispatch({type:'STATUS', status})\r\n    return;\r\n  }\r\n};\r\n\r\n// validate and get data from po sku info id\r\nexport const validatePoSkuInfoId = async ({\r\n  dispatch,\r\n  skuData,\r\n  status,\r\n  bulk = true,\r\n}) => {\r\n  if (\r\n    (status === false || status === null || skuData === null) &&\r\n    bulk === true\r\n  ) {\r\n    return 0;\r\n  }\r\n\r\n  try {\r\n    const url = \"/stocktake/rowValidationUpload\";\r\n    await axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: { data: skuData },\r\n    }).then(function (response) {\r\n      if (bulk === true) {\r\n        dispatch({\r\n          type: VALIDATE_PO_SKU_INFO_ID,\r\n          skuCodeValidated: response?.data.data,\r\n        });\r\n      } else {\r\n        return response?.data.data;\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    // dispatch({ type: STATUS, status: 500 });\r\n  }\r\n};\r\n\r\nexport const validateSkuNumber = async ({\r\n  dispatch,\r\n  skuNumberData,\r\n  bulk = true,\r\n  status,\r\n}) => {\r\n  if (\r\n    (status === false || status === null || skuNumberData === null) &&\r\n    bulk === true\r\n  ) {\r\n    return 0;\r\n  }\r\n\r\n  try {\r\n    const url = \"/oss/skuByNumbers\";\r\n    await axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: { skuList: skuNumberData },\r\n    }).then(function (response) {\r\n      if (bulk === true) {\r\n        dispatch({\r\n          type: VALIDATE_PO_SKU_INFO_ID,\r\n          skuNumberValidated: response?.data.data,\r\n        });\r\n      } else {\r\n        return response?.data.data;\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    // dispatch({ type: STATUS, status: 500 });\r\n  }\r\n};\r\n\r\n//validate and get data from po sku info id\r\nexport const submitCsv = async ({\r\n  dispatch,\r\n  dataCsv,\r\n  setSubmitStatus,\r\n  transaction,\r\n}) => {\r\n  let url = null;\r\n  if (transaction == 'stockTake') { url = \"/stocktake/submit\"; }\r\n  else if (transaction == 'movement') { url = \"/stockmovement/submit\"; }\r\n  else if (transaction == 'additionalOutbound') { url = \"/outbound/submit\"; }\r\n  else if (transaction == 'repacking') { url = \"/repack/submit\"; }\r\n  else if (transaction == 'waste') { url = \"/waste/submit\"; }\r\n\r\n\r\n  try {\r\n    return await axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: {\r\n        source: \"upload\",\r\n        jobPost: dataCsv[0],\r\n      },\r\n    }).then(function (response) {\r\n      if (response?.data?.isSuccess === true) {\r\n        dispatch({ type: STATUS, status: 200 });\r\n        setSubmitStatus(\"success\");\r\n      } else if (response?.data?.isSuccess === false) {\r\n        dispatch({ type: STATUS, status: 200 });\r\n        setSubmitStatus(\"failed\");\r\n      } else {\r\n        setSubmitStatus(false);\r\n      }\r\n      return response?.data\r\n\r\n    });\r\n  } catch (e) {\r\n    setSubmitStatus(false);\r\n    return 'error';\r\n  }\r\n};\r\n\r\nexport const submitCsvStockTransfer = async ({\r\n  dispatch,\r\n  dataCsv,\r\n  setSubmitStatus,\r\n  transaction,\r\n}) => {\r\n  let url = \"/stocktransfer/submit\";\r\n  return await axios({\r\n    method: \"post\",\r\n    url: url,\r\n    data: {\r\n      source: \"upload\",\r\n      jobPost: dataCsv[0],\r\n    },\r\n  })\r\n    .then(response => {\r\n      return response?.data;\r\n    })\r\n    .catch(error => {\r\n      return error?.response?.data;\r\n    });\r\n};\r\n\r\n\r\n//submit csv but for upload target repack \r\nexport const submitCsvTargetRepack = async ({ dispatch, data, setSubmitStatus }) => {\r\n  let url = '/repack/target_repacks/save';\r\n\r\n  try {\r\n    return await axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: {\r\n        data\r\n      },\r\n    }).then(function (response) {\r\n      if (response?.data?.isSuccess === true) {\r\n        dispatch({ type: STATUS, status: 200 });\r\n        setSubmitStatus(\"success\");\r\n      } else if (response?.data?.isSuccess === false) {\r\n        dispatch({ type: STATUS, status: 200 });\r\n        setSubmitStatus(\"failed\");\r\n      } else {\r\n        setSubmitStatus(false);\r\n      }\r\n      return response?.data;\r\n    });\r\n  } catch (e) {\r\n    setSubmitStatus(false);\r\n    return \"error\";\r\n  }\r\n};\r\n\r\n//save jobsheet\r\nexport const saveJobSheet = async ({ moduleEntry, moduleName, setIsSuccess, dispatch, name, table }) => {\r\n  try {\r\n    let finalModule = Object.assign({}, JSON.parse(JSON.stringify(moduleEntry)))\r\n\r\n    // submit & stocktake\r\n    // if(moduleName === 'stockTake' && name === 'submit'){\r\n    //   let list = finalModule.jobPost.list.map(ls => {\r\n    //     ls.poList.map(po => {\r\n    //       po.itemList = po.itemList.filter((item,idx) => {\r\n    //         if(item?.expiryDate !== po?.expiryDate || item.grade?.label !== ls.skuName) return item\r\n    //         if(idx === 0 && po.itemList.length === 1) return item.qty !== po.initialWeight\r\n\r\n    //         else return item\r\n    //       })\r\n    //       return po\r\n    //       })\r\n    //       return ls\r\n    //     })\r\n    //   finalModule.jobPost.list = list\r\n    // }\r\n    dispatch({ type: IS_LOADING, isLoading: true });\r\n    const url = `${moduleName.toLowerCase()}${name === \"submit\" ? \"/submit\" : \"/save\"\r\n      }`;\r\n    const { status, data } = await axios.post(url, finalModule);\r\n    if (data?.length === 0) {\r\n      setIsSuccess({ success: true, name: name, status: 500 })\r\n      dispatch({ type: IS_LOADING, isLoading: false })\r\n    }\r\n\r\n    let moduleEntrywithId = { ...finalModule };\r\n    // moduleEntrywithId.id = data\r\n    if (name === \"submit\") {\r\n      setIsSuccess({ success: true, name: name, status: 200 });\r\n      dispatch({ type: IS_LOADING, isLoading: false });\r\n    } else {\r\n      moduleEntrywithId.jobPost.id = data.data.id;\r\n      dispatch({\r\n        type: CREATE_JOB_SHEET,\r\n        [`${moduleName}EntryData`]: moduleEntrywithId,\r\n      });\r\n      setIsSuccess({ success: true, name: name, status: 200 });\r\n      dispatch({ type: IS_LOADING, isLoading: false });\r\n    }\r\n\r\n    // save updated target Repack\r\n    // if(moduleName === 'repack'){\r\n    //   const repack = await axios.post(`repack/target_repacks/save`, {data:table?.data})\r\n    //   if(repack?.isSuccess) {\r\n    //     setIsSuccess({ success: true, name: name, status: 500 })\r\n    //     dispatch({ type: IS_LOADING, isLoading: false })\r\n    //   }\r\n    // }\r\n\r\n    return true;\r\n  } catch (e) {\r\n    console.log(e);\r\n    const status = throwErrorStatus(e)\r\n    setIsSuccess({ success: true, name: null, status: 500, isLoading: false })\r\n    return false\r\n  }\r\n};\r\n\r\nexport const saveImage = async ({ e, dispatch }) => {\r\n  try {\r\n    dispatch({ type: IS_LOADING, isLoading: true });\r\n\r\n    let file = e.target.files[0];\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: true,\r\n      fileType: \"jpeg\",\r\n    };\r\n    const compressedFile = await imageCompression(file, options);\r\n    const newFile = new File([compressedFile], compressedFile.name);\r\n    let formData = new FormData();\r\n    formData.append(\"files\", newFile);\r\n    const url = `waste/uploadImages`;\r\n    const { data } = await axios.post(url, formData);\r\n    dispatch({ type: IS_LOADING, isLoading: false });\r\n    return data.data[0];\r\n  } catch (e) {\r\n    console.log(e);\r\n    // dispatch({ type: IS_LOADING, isLoading: false, status: 500 })\r\n  }\r\n};\r\n\r\n// Outbound Module\r\n\r\n//get po by sku id\r\nexport const getPoBySkuIdOutbound = async ({ skuId, warehouseUuid }) => {\r\n  try {\r\n    const url = `outbound/poBySkuId?skuId=${skuId}&warehouseUuid=${warehouseUuid}`;\r\n    const { data } = await axios(url);\r\n    return data?.data?.poItems;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\n//get waste area\r\nexport const getWasteWarehouseArea = async ({ warehouseUuid, setAreaId }) => {\r\n  try {\r\n    const url = `inventory/wasteArea?warehouseUuid=${warehouseUuid}`;\r\n    const { data } = await axios(url);\r\n    const areaId = data?.data.map((data) => ({\r\n      label: data.areaName,\r\n      value: data.id,\r\n    }));\r\n    if (areaId) setAreaId(areaId[0]);\r\n    return areaId[0];\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\n//get warehouse\r\nexport const getWarehouses = async ({ dispatch }) => {\r\n  try {\r\n    const url = `/oss/warehouses`;\r\n    const { data } = await axios(url);\r\n    dispatch({ type: 'DATA_WAREHOUSE', data })\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n//get latest sync histories\r\n\r\nexport const getLatestSyncHistories = async ({ dispatch }) => {\r\n  const url = `inventory/getLastHistories`\r\n  const data = await axios(url)\r\n  if (data) {\r\n    let newData = [...data?.data?.data]\r\n    newData = newData?.map(data => {\r\n      data.updatedAt = dateFull({ date: data.updatedAt })\r\n      return data\r\n    })\r\n    dispatch({ type: IS_LOADING, lastSyncHistories: newData })\r\n  }\r\n}\r\n\r\nexport const syncAllHistories = async ({ warehouseUuid, setSubmit }) => {\r\n  const url = `/inventory/syncAllHistories?warehouseUuid=${warehouseUuid}`\r\n\r\n  const data = await axios.post(url)\r\n  setSubmit(data)\r\n\r\n}\r\n\r\nexport const getCategories = async ({ dispatch, categoryList }) => {\r\n  const url = `/oss/categories`\r\n  const data = await axios(url)\r\n  if (data) dispatch({ type: IS_LOADING, categoryList: data?.data?.data?.map(data => ({ value: data?.id, label: data?.name })) })\r\n}","import axios from \"axios\";\r\nimport { WAREHOUSE_AREA, RIPENESS_LEVEL, GRADE, OUTBOUND_TYPE } from \"../action\";\r\n\r\nexport const getWarehouseArea = async ({\r\n  warehouseUuid,\r\n  dispatch,\r\n  type = \"dropdown\",\r\n}) => {\r\n  try {\r\n    let url = `/inventory/warehouseArea?warehouseUuid=${warehouseUuid}`;\r\n    const { data = null } = await axios(url);\r\n    if (type == \"csvValidator\") {\r\n      //get warehouse area for csv validator\r\n      dispatch({\r\n        type: WAREHOUSE_AREA,\r\n        warehouseAreaCsv: data?.data.map((data) => ({\r\n          label: data?.areaName,\r\n          value: data?.id,\r\n        })),\r\n      });\r\n    } else {\r\n      return data?.data.map((data) => ({\r\n        label: data?.areaName,\r\n        value: data?.id,\r\n      }))\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const getRipenessLevel = async ({ dispatch }) => {\r\n  try {\r\n    const url = `/inventory/ripenessLevel`;\r\n    const { data } = await axios(url);\r\n    const ddList = data?.data.map((data, i) => ({ label: data, value: String(data) }))\r\n    dispatch({\r\n      type: RIPENESS_LEVEL,\r\n      ripenessLevel: ddList\r\n    });\r\n    return ddList\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const getGrade = async ({ skuId, dispatch }) => {\r\n  try {\r\n    const url = `/inventory/grade?skuId=${skuId}`;\r\n    const { data } = await axios(url);\r\n    // console.log(data);\r\n    if (data) {\r\n      return data.data.map((data) => ({\r\n        label: data.skuDescription,\r\n        value: data.id,\r\n        multiplier: data.parentToChildMultiplier,\r\n        uom: data.uom\r\n      }));\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const getOutboundType = async ({\r\n  type = \"dropdown\",\r\n  dispatch\r\n}) => {\r\n  try {\r\n    const url = `/inventory/outboundType`;\r\n    const { data } = await axios(url);\r\n    let outboundType = []\r\n    if (data) {\r\n      if (type == 'csvValidator') {\r\n        dispatch({\r\n          type: OUTBOUND_TYPE,\r\n          outboundTypeCsv: data?.data.map((listItem) => ({\r\n            label: listItem.description,\r\n            value: listItem.code\r\n          })),\r\n        });\r\n      } else {\r\n        outboundType = data.data.map(listItem => ({\r\n          label: listItem.description,\r\n          value: listItem.code\r\n        }))\r\n      }\r\n    }\r\n    return outboundType;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const getWarehouse = async ({ }) => {\r\n  try {\r\n    const url = `/oss/warehouses`\r\n    const { data } = await axios(url)\r\n    if (data) {\r\n      return data?.data.map(data => ({ label: data.name, value: data.id }))\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport const getWasteReason = async ({ dispatch }) => {\r\n  try {\r\n    const url = `/inventory/wasteReasons`\r\n    const { data } = await axios(url)\r\n    if (data) {\r\n      const dropdown = data?.data?.map(data => ({ value: data.code, label: data.description }))\r\n      if (typeof (dispatch) === 'function') dispatch({ type: RIPENESS_LEVEL, wasteReasonList: dropdown })\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.log(e)\r\n  }\r\n}"],"sourceRoot":""}