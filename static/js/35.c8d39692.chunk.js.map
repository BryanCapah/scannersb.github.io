{"version":3,"sources":["Page/StockEntry/StockTransfer/Upload/index.jsx","Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/FileUploader/services.js","Component/FileUploadProgress/index.jsx","Component/FileUploader/index.jsx"],"names":["ExcelFile","ReactExport","ExcelSheet","ExcelColumn","withRouter","props","dispatch","useDispatch","React","useState","warehousesData","useSelector","state","warehouseData","useEffect","getWarehouses","className","element","id","style","display","filename","data","areaSource","warehouseSource","warehouseDestination","expiryDate","po","skuNumber","inputWeight","name","label","value","nextPage","history","push","transaction","field","dataField","text","editable","sort","hidden","type","PopUp","refresh","status","icon","statusDisplay","title","cancelButtonTitle","actionButtonTitle","cancelButtonClass","actionButtonClass","actionButtonEvent","colorText","msg1","msg2","onCloseFunction","refreshOnCancel","setIsSuccess","code","message","show","setShow","window","onkeydown","e","keyCode","closeOnBackdrop","onClose","isFunction","success","STATUS","size","minHeight","bodyOpenClassName","onClick","location","reload","refreshPage","parentOncCloseFunction","templateDownload","document","getElementById","click","csvReader","fieldArray","setIsProgressPercent","Promise","resolve","reject","i","jsonArray","reader","FileReader","onload","csv","parse","result","err","length","map","obj","index","newObject","toString","split","csvObj","csvIndex","percentage","Math","ceil","setTimeout","readAsBinaryString","xlsReader","setIsJsonArray","a","evt","bstr","target","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","putCsvFieldJson","STOK_TAKE_UPLOAD_JSON","csvField","validateColumn","fileName","warehouseArea","warehouseUuid","outboundType","setIsCheckingSchema","warehouseCodeList","warehouseUuidList","warehouseNameList","d","wh_area_label","toUpperCase","wh_area_value","wh_outboundtype_label","wh_outboundtype_value","csv_schema","replace","distinctPOSKUInfoId","distinctSKUNumber","schemaRow","key","keys","includes","console","clear","log","shift","emptyRow","fieldData","fieldIndex","undefined","indexOf","parseInt","tmp_data","stat","isNaN","match","csvData","csvFileName","csvDistinctPOSKUInfoId","csvDistinctSKUNumber","cleaningData","poSkuInfoValidated","poSkuNumberValidated","setIsProgressStatus","wmsPoSkuCode","wmsPoSkuUom","uom","skuNumberArray","skuUuidArray","skuPhotosArray","skuUomArray","imageMd","cleanData","areaDestination","indexId","skuValidatedData","isExist","inboundDate","wmsPoSkuCodeStatus","wmsPoSkuCodeReason","tmp_grade","newGrade","arr_grade","idx","newGradeStatus","newGradeUuid","newGradeReason","tmp_sku_number","skuUuid","photo","skuNumberStatus","skuNumberReason","tmp_new_grade","newGradeUom","resetCsvResist","resetStatus","setIsResetCsvPersist","VALIDATE_PO_SKU_INFO_ID","skuCodeValidated","FileUploadProgress","progressPercent","cancelHandler","cancelButton","lineHeight","cursor","class","role","width","aria-valuemin","aria-valuemax","baseStyle","flex","flexDirection","alignItems","paddingTop","paddingBottom","paddingLeft","paddingRight","outline","transition","height","parentStyle","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","activeStyle","acceptStyle","rejectStyle","FileUploader","isProgressDisplay","setIsProgressDisplay","isProgressStatus","isProgressPercent","isProgressFileName","setIsProgressFileName","isWarehouseArea","setIsWarehouseArea","isAdditionalOutbound","setIsAdditionalOutbound","isUploadStatus","setIsUploadStatus","isCheckingSchema","isResetCsvPersist","modalShow","setModalShow","modalShow2","setModalShow2","selectorWarehouseArea","warehouseAreaCsv","selectorOutboundType","outboundTypeCsv","selectorStatus","selectorDistinctPOSKUInfoId","uploadStatus","selectorDistinctSKUNumber","selectorSkuCodeValidated","selectorSkuNumberValidated","skuNumberValidated","selectorCsvData","user","getWarehouseArea","getOutboundType","onDropAccepted","file","fileArr","fileType","useDropzone","noClick","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","open","acceptedFiles","useMemo","validatePoSkuInfoId","skuData","validateSkuNumber","skuNumberData","bulk","fontSize"],"mappings":"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","file":"static/js/35.c8d39692.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport FileUploader from \"Component/FileUploader\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport { getWarehouses } from \"apiServices\";\r\nimport \"./index.scss\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\nconst Upload = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [isDisplayProgress, setIsDisplayProgress] = React.useState(false);\r\n  const warehousesData = useSelector((state) => state.warehouseData);\r\n  const Field = [\r\n    {\r\n      dataField: \"id\", //field ini wajib ada untuk editable column\r\n      text: \"ID\",\r\n      editable: false,\r\n      sort: true,\r\n      hidden: true,\r\n      type: \"number\",\r\n    },\r\n    {\r\n      dataField: \"wmsPoSkuCode\",\r\n      text: \"PO SKU Code\",\r\n      type: \"number\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"skuNumber\",\r\n      text: \"SKU Number\",\r\n      type: \"number\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"expiryDateCol\",\r\n      text: \"Expiry Date\",\r\n      type: \"date_indo\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"warehouse\",\r\n      text: \"Warehouse Source\",\r\n      type: \"string\",\r\n      sort: true,\r\n    },\r\n    { \r\n      dataField: \"areaName\", \r\n      text: \"Area Source\", \r\n      type: \"string\", \r\n      sort: true \r\n    },\r\n    {\r\n      dataField: \"warehouseDestination\",\r\n      text: \"Warehouse Destination\",\r\n      type: \"string\",\r\n      sort: true,\r\n    }, \r\n    { \r\n      dataField: \"qty\", \r\n      text: \"Input Weight\", \r\n      type: \"number\", \r\n      sort: true \r\n    },\r\n  ];\r\n\r\n  const dataSet1 = [\r\n    {\r\n      areaSource: \"\",\r\n      warehouseSource: \"\",\r\n      warehouseDestination: \"\",\r\n      expiryDate: \"\",\r\n      po: \"\",\r\n      skuNumber: \"\",\r\n      inputWeight: \"\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (!warehousesData) {\r\n      getWarehouses({ dispatch });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mb-5\">\r\n      {/* export this table to excel */}\r\n      <ExcelFile\r\n        element={\r\n          //dont change id and style please\r\n          <button id=\"download-template-xls\" style={{ display: \"none\" }}>\r\n            Download Data\r\n          </button>\r\n        }\r\n        //file name without types\r\n        filename=\"Stock Transfer Template\"\r\n      >\r\n        <ExcelSheet data={dataSet1} name=\"template\">\r\n          <ExcelColumn label=\"PO SKU Code\" value=\"po\" />\r\n          <ExcelColumn label=\"SKU Number\" value=\"skuNumber\" />\r\n          <ExcelColumn label=\"Expiry Date\" value=\"expiryDate\" />\r\n          <ExcelColumn label=\"Warehouse Source\" value=\"warehouseSource\" />\r\n          <ExcelColumn label=\"Area Source\" value=\"areaSource\" />\r\n          <ExcelColumn label=\"Warehouse Destination\" value=\"warehouseDestination\" />\r\n          <ExcelColumn label=\"Input Weight\" value=\"inputWeight\" />\r\n        </ExcelSheet>\r\n      </ExcelFile>\r\n      {/* end export this table to excel */}\r\n\r\n      <FileUploader\r\n        nextPage={() =>\r\n          props.history.push(\r\n            \"/inventory-entry/stock-transfer/CSV-upload/review\"\r\n          )\r\n        }\r\n        transaction={\"stockTransfer\"}\r\n        field={Field}\r\n        type=\"stockTransfer\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Upload);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { onClose, refreshPage } from \"./services.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { STATUS } from \"apiServices/action\";\r\nimport { isFunction } from \"lodash\";\r\n\r\nconst PopUp = ({\r\n  refresh,\r\n  status,\r\n  icon,\r\n  statusDisplay = false,\r\n  title = \"\",\r\n  cancelButtonTitle = \"Cancel\",\r\n  actionButtonTitle = \"Submit\",\r\n  cancelButtonClass = \"bg-background\",\r\n  actionButtonClass = \"bg-background\",\r\n  actionButtonEvent = null,\r\n  colorText = \"red\",\r\n  msg1 = null,\r\n  msg2 = null,\r\n  onCloseFunction = null,\r\n  refreshOnCancel = true,\r\n  setIsSuccess\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  if (status?.code === 500 && statusDisplay == false) {\r\n    icon = \"em-pensive\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 408 && statusDisplay == false) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Request Timeout\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 400 && statusDisplay == false) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n  if (status?.code === 404) {\r\n    title = \"Something wrong with the application\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n\r\n  const [show, setShow] = useState(statusDisplay);\r\n\r\n  useEffect(() => {\r\n    //from outside change\r\n    setShow(statusDisplay);\r\n  }, [statusDisplay]);\r\n\r\n  useEffect(() => {\r\n  }, [show]);\r\n\r\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\r\n  return (\r\n    <CRow className={`${show ? null : \"d-none\"}`}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          closeOnBackdrop={false}\r\n          onClose={() => {\r\n            setShow(false)\r\n            if (isFunction(setIsSuccess)) setIsSuccess({ success: null, name: null })\r\n            dispatch({ type: STATUS, status: null });\r\n            if (onCloseFunction) {\r\n              onCloseFunction()\r\n            }\r\n          }}\r\n          size=\"lg\"\r\n          style={{ minHeight: \"280px\" }}\r\n          bodyOpenClassName=\"p-3\"\r\n        >\r\n          {/* <div className='d-flex flex-row-reverse'>\r\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-3 border-none\">\r\n              <CModalTitle className={`text LatoBold ${colorText}`}>\r\n                {title}\r\n              </CModalTitle> */}\r\n\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <i\r\n              className=\"pr-3 pt-3 iconU-modalClose\"\r\n              onClick={() => {\r\n                setShow(false)\r\n                if (isFunction(setIsSuccess)) setIsSuccess({ success: null, name: null })\r\n                dispatch({ type: STATUS, status: null });\r\n                if (onCloseFunction) {\r\n                  onCloseFunction()\r\n                }\r\n              }}\r\n            ></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className={`text LatoBold ${colorText}`}>\r\n              {title} <span><i className={`em ${icon}`}></i></span>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">{msg1}</p>\r\n            <p className=\"text\">{msg2}</p>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            {cancelButtonTitle ? (\r\n              <CButton\r\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\r\n                onClick={() => {\r\n                  if (refreshOnCancel) {\r\n                    if(typeof(refresh) === 'function') refresh()\r\n                    else refreshPage({ refresh: true });\r\n                  } else {\r\n                    onClose({\r\n                      setShow,\r\n                      parentOncCloseFunction: onCloseFunction,\r\n                    });\r\n                  }\r\n                  dispatch({ type: STATUS, status: null });\r\n                }}\r\n              >\r\n                {cancelButtonTitle}\r\n              </CButton>\r\n            ) : null}\r\n            {actionButtonTitle ? (\r\n              <CButton\r\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\r\n                onClick={() => {\r\n                  if (actionButtonEvent) {\r\n                    actionButtonEvent();\r\n                    setShow(false);\r\n                  } else {\r\n                    setShow(false)\r\n                  }\r\n                }\r\n                }\r\n              >\r\n                {actionButtonTitle}\r\n              </CButton>\r\n            ) : null}{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\r\n  setShow(false);\r\n  if (parentOncCloseFunction) {\r\n    parentOncCloseFunction();\r\n  }\r\n\r\n};\r\n\r\nexport const refreshPage = ({ refresh = true }) => {\r\n  if (refresh === true) {\r\n    window.location.reload(false);\r\n  }\r\n};\r\n","/* eslint-disable array-callback-return */\r\nimport csv from \"csv\";\r\nimport * as XLSX from \"xlsx\";\r\nimport {\r\n  STOK_TAKE_UPLOAD_JSON,\r\n  VALIDATE_PO_SKU_INFO_ID,\r\n  STATUS,\r\n} from \"apiServices/action\";\r\n\r\nexport const templateDownload = () => {\r\n  document.getElementById(\"download-template-xls\").click();\r\n};\r\nexport const csvReader = (e, fieldArray, setIsProgressPercent) => {\r\n  return new Promise((resolve, reject) => {\r\n    let i = 0;\r\n    let jsonArray = [];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      csv.parse(reader.result, (err, data) => {\r\n        if (data.length > 2001) {\r\n          //why 2001? , because line 1 is header\r\n          setIsProgressPercent(0);\r\n          resolve(false);\r\n        }\r\n        data.map((obj, index) => {\r\n          if (index === 0) {\r\n            i++;\r\n            return false; // skip\r\n          }\r\n\r\n          let newObject = {};\r\n          newObject[\"id\"] = index;\r\n\r\n          let csvArray = data[i].toString().split(\";\");\r\n          csvArray.map((csvObj, csvIndex) => {\r\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\r\n          });\r\n          i++;\r\n          jsonArray.push(newObject);\r\n\r\n          //count percent\r\n          let percentage = ((index + 1) * 25) / data.length;\r\n          setIsProgressPercent(Math.ceil(percentage));\r\n        });\r\n      });\r\n    };\r\n\r\n    //checking\r\n    setTimeout(() => {\r\n      resolve(jsonArray);\r\n    }, 200);\r\n    reader.readAsBinaryString(e[0]);\r\n  });\r\n};\r\n\r\nexport const xlsReader = async (\r\n  e,\r\n  fieldArray,\r\n  setIsProgressPercent,\r\n  setIsJsonArray,\r\n  dispatch\r\n) => {\r\n  let i = 0;\r\n  let jsonArray = [];\r\n  const reader = new FileReader();\r\n  let data = null;\r\n  let error = false;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    var fr = new FileReader();\r\n    reader.onload = async (evt) => {\r\n      /* Parse data */\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n      /* Update state */\r\n\r\n      await csv.parse(data, (err, data) => {\r\n        if (data.length > 2001) {\r\n          //why 2001? , because line 1 is header\r\n          setIsProgressPercent(0);\r\n          resolve(false);\r\n        }\r\n        data.map((obj, index) => {\r\n          let newObject = {};\r\n          newObject[\"id\"] = index;\r\n\r\n          let csvArray = data[i].toString().split(\",\");\r\n          csvArray.map((csvObj, csvIndex) => {\r\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\r\n          });\r\n          i++;\r\n          jsonArray.push(newObject);\r\n\r\n          //count percent\r\n          let percentage = ((index + 1) * 25) / data.length;\r\n          setIsProgressPercent(Math.ceil(percentage));\r\n        });\r\n      });\r\n\r\n      //checking\r\n      setTimeout(() => {\r\n        resolve(jsonArray);\r\n      }, 200);\r\n    };\r\n\r\n    reader.readAsBinaryString(e[0]);\r\n  });\r\n};\r\n\r\nexport const putCsvFieldJson = ({ dispatch, jsonArray }) => {\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvField: jsonArray });\r\n};\r\n\r\nexport const validateColumn = async ({\r\n  field,\r\n  jsonArray,\r\n  setIsProgressPercent,\r\n  fileName,\r\n  dispatch,\r\n  warehouseArea,\r\n  warehouseUuid,\r\n  outboundType,\r\n  setIsCheckingSchema,\r\n  warehousesData,\r\n}) => {\r\n  //warehouse\r\n  let warehouseCodeList = [];\r\n  let warehouseUuidList = [];\r\n  let warehouseNameList = [];\r\n  if (warehousesData) {\r\n    warehousesData.data.map((d) => {\r\n      warehouseCodeList.push(d.code);\r\n      warehouseUuidList.push(d.id);\r\n      warehouseNameList.push(d.name);\r\n    });\r\n  }\r\n\r\n  //warehouse area\r\n  let wh_area_label = !warehouseArea\r\n    ? []\r\n    : warehouseArea.map((data) => data.label.toUpperCase());\r\n  let wh_area_value = !warehouseArea\r\n    ? []\r\n    : warehouseArea.map((data) => data.value);\r\n  let wh_outboundtype_label = !outboundType\r\n    ? []\r\n    : outboundType.map((data) => data.label.toUpperCase());\r\n  let wh_outboundtype_value = !outboundType\r\n    ? []\r\n    : outboundType.map((data) => data.value);\r\n  let csv_schema = !field\r\n    ? []\r\n    : field.map((data) => data.text.toUpperCase().replace(/\\s/g, \"\"));\r\n  let distinctPOSKUInfoId = [];\r\n  let distinctSKUNumber = [];\r\n\r\n  // check schema\r\n  let checkSchema = true;\r\n  let i = 0;\r\n  const schemaRow = jsonArray[0];\r\n  for (var key in schemaRow) {\r\n    if (key == \"id\") {\r\n      continue;\r\n    }\r\n    let keys = schemaRow[key].toUpperCase().replace(/\\s/g, \"\");\r\n    if (\r\n      key !== \"undefined\" &&\r\n      (csv_schema[i + 1] !== keys || !csv_schema.includes(keys))\r\n    ) {\r\n      console.clear();\r\n      console.log(\"--Schema Not Same--\");\r\n      console.log(\"Schema \\t\\t: \", csv_schema[i + 1]);\r\n      console.log(\"File SChema : \", keys);\r\n      checkSchema = false;\r\n      setIsCheckingSchema(false);\r\n      return 0;\r\n    }\r\n    i++;\r\n  }\r\n\r\n  jsonArray.shift();\r\n  await jsonArray.map((data, index) => {\r\n    let emptyRow = true; // if empty row dont show\r\n    field.map((fieldData, fieldIndex) => {\r\n      //if null then return\r\n      if (fieldData === undefined || fieldData === null) {\r\n        return;\r\n      }\r\n\r\n      if (fieldData.dataField !== \"id\" && data[fieldData.dataField] == \"\") {\r\n        return;\r\n      } else if (fieldData.dataField == \"id\") {\r\n      } else {\r\n        emptyRow = false;\r\n      }\r\n      // end checking empty\r\n\r\n      //set warehouse id\r\n      data[\"warehouseSource\"] = warehouseUuid;\r\n\r\n      //checking warehouse\r\n      if (warehouseCodeList && fieldData.dataField == \"warehouse\") {\r\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`;\r\n          data[\"warehouseUuid\"] = \"\";\r\n          data[\"warehouseName\"] = \"\";\r\n          return;\r\n        } else {\r\n          let i = warehouseCodeList.indexOf(data[fieldData.dataField]);\r\n          data[\"warehouseUuid\"] = warehouseUuidList[i];\r\n          data[\"warehouseName\"] = warehouseNameList[i];\r\n        }\r\n      }\r\n\r\n      //checing warehouse Destination\r\n      if (warehouseCodeList && fieldData.dataField == \"warehouseDestination\") {\r\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`;\r\n          data[\"warehouseDestinationUuid\"] = \"\";\r\n          data[\"warehouseDestinationName\"] = \"\";\r\n          return;\r\n        } else {\r\n          let i = warehouseCodeList.indexOf(data[fieldData.dataField]);\r\n          data[\"warehouseDestinationUuid\"] = warehouseUuidList[i];\r\n          data[\"warehouseDestinationName\"] = warehouseNameList[i];\r\n        }\r\n      }\r\n\r\n      //checking warehouse area\r\n      if (fieldData.dataField == \"areaName\") {\r\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\r\n          data[\"areaSource\"] = null;\r\n          return;\r\n        } else {\r\n          let i = wh_area_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"areaSource\"] = wh_area_value[i];\r\n        }\r\n      }\r\n\r\n      if (fieldData.dataField == \"areaNameDestination\") {\r\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\r\n          data[\"areaDestination\"] = null;\r\n          return;\r\n        } else {\r\n          let i = wh_area_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"areaDestination\"] = wh_area_value[i];\r\n        }\r\n      }\r\n\r\n      //checking outbound type\r\n      if (\r\n        wh_outboundtype_value.length > 0 &&\r\n        fieldData.dataField == \"outboundType\"\r\n      ) {\r\n        if (\r\n          !wh_outboundtype_label.includes(\r\n            data[fieldData.dataField].toUpperCase()\r\n          )\r\n        ) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Outbound Type Not Found`;\r\n          data[\"outboundTypeCode\"] = null;\r\n          return;\r\n        } else {\r\n          let i = wh_outboundtype_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"outboundTypeCode\"] = wh_outboundtype_value[i];\r\n        }\r\n      }\r\n\r\n      //newgrade\r\n      if (fieldData.dataField == \"newGrade\") {\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n        if (\r\n          data[fieldData.dataField] &&\r\n          !arr_grade.includes(data[fieldData.dataField].toUpperCase())\r\n        ) {\r\n          //if not waste or semi waste\r\n          if (parseInt(data[fieldData.dataField])) {\r\n            //if number, check sku number\r\n            if (!distinctSKUNumber.includes(data[fieldData.dataField])) {\r\n              distinctSKUNumber.push(data[fieldData.dataField]);\r\n            }\r\n            data[fieldData.dataField + \"Status\"] = true;\r\n          } else if (data[fieldData.dataField] == \"\") {\r\n            //if null\r\n            data[fieldData.dataField + \"Status\"] = true;\r\n          } else {\r\n            //if not number => undefined\r\n            data[fieldData.dataField + \"Status\"] = false;\r\n            data[fieldData.dataField + \"Reason\"] = `Grade Undefined`;\r\n          }\r\n        } else {\r\n          data[\"newGradeUuid\"] = data[fieldData.dataField];\r\n        }\r\n      }\r\n\r\n      //set ripeness\r\n      let ripeness = null;\r\n      if (\r\n        (fieldData.dataField == \"ripenessLevel\" ||\r\n          fieldData.dataField == \"newRipeness\") &&\r\n        data[fieldData.dataField] !== undefined\r\n      ) {\r\n        let ripeness_ = data[fieldData.dataField].split(\" \");\r\n        ripeness = ripeness_[1];\r\n      }\r\n\r\n      //checking type\r\n      let tmp_data = data[fieldData.dataField];\r\n      let stat = null;\r\n      if (fieldData.type == \"number\") {\r\n        if (isNaN(tmp_data)) {\r\n          stat = false;\r\n        } else {\r\n          stat = true;\r\n\r\n          if (fieldData.dataField == \"wmsPoSkuCode\") {\r\n            if (!distinctPOSKUInfoId.includes(tmp_data)) {\r\n              distinctPOSKUInfoId.push(tmp_data);\r\n            }\r\n          }\r\n\r\n          //distinct sku angka maka push ke array buat di cek\r\n          if (fieldData.dataField == \"skuNumber\") {\r\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\r\n              distinctSKUNumber.push(tmp_data);\r\n            }\r\n          }\r\n        }\r\n      } else if (fieldData.type == \"date_indo\") {\r\n        //checking date\r\n        let regex_date = /(0[1-9]|[12][0-9]|3[01])[-.](0[1-9]|1[012])[-.](19|20)\\d\\d/;\r\n        if (tmp_data.match(regex_date)) {\r\n          stat = true;\r\n        } else {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[\r\n            fieldData.dataField + \"Reason\"\r\n          ] = `Date format must be 'dd-mm-yyyy'`;\r\n          return;\r\n        }\r\n        // console.log('stat date', stat)\r\n        // console.log(`${fieldData.dataField}Reason`, data[fieldData.dataField + \"Reason\"])\r\n      } else {\r\n        stat = true;\r\n      }\r\n\r\n      //grade can null\r\n      let canNull = [\r\n        \"grade\",\r\n        \"outboundReason\",\r\n        \"ripenessLevel\",\r\n        \"newRipeness\",\r\n        \"newGrade\",\r\n      ];\r\n      if (canNull.includes(fieldData.dataField) && tmp_data == \"\") {\r\n        stat = true;\r\n      }\r\n\r\n      //check newGrade, jika angka maka cek ke distinct sku\r\n      if (fieldData.dataField == \"newGrade\") {\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n        if (!arr_grade.includes(tmp_data.toUpperCase())) {\r\n          //if not waste or semi waste\r\n          if (parseInt(tmp_data)) {\r\n            //if number\r\n            stat = true;\r\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\r\n              distinctSKUNumber.push(tmp_data);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      data[fieldData.dataField + \"Status\"] = stat;\r\n      if (!stat) {\r\n        data[\r\n          fieldData.dataField + \"Reason\"\r\n        ] = `Invalid ${fieldData.text} \\nShould be a ${fieldData.type}`;\r\n      } else {\r\n        data[fieldData.dataField + \"Reason\"] = \"\";\r\n      }\r\n\r\n      let percentage =\r\n        ((index + 1 + parseInt(jsonArray.length)) * 50) /\r\n        (parseInt(jsonArray.length) * 2);\r\n      setIsProgressPercent(Math.ceil(percentage));\r\n    });\r\n    data[\"emptyRow\"] = emptyRow;\r\n  });\r\n\r\n  //end checking type\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: jsonArray });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: fileName });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctPOSKUInfoId: distinctPOSKUInfoId,\r\n  });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctSKUNumber: distinctSKUNumber,\r\n  });\r\n};\r\n\r\nexport const cleaningData = async ({\r\n  poSkuInfoValidated,\r\n  poSkuNumberValidated,\r\n  csvData,\r\n  setIsProgressPercent,\r\n  dispatch,\r\n  status,\r\n  transaction,\r\n  setIsProgressStatus,\r\n  nextPage,\r\n}) => {\r\n  //checking\r\n  if (status === false || status === null) {\r\n    return 0;\r\n  }\r\n  if (\r\n    csvData === undefined ||\r\n    csvData === null ||\r\n    poSkuInfoValidated === null ||\r\n    poSkuInfoValidated === undefined ||\r\n    poSkuNumberValidated === null ||\r\n    poSkuNumberValidated === undefined\r\n  ) {\r\n    console.clear();\r\n    return 0;\r\n  }\r\n\r\n  //split data and id po sku code\r\n  const wmsPoSkuCode = [];\r\n  const wmsPoSkuUom = [];\r\n  poSkuInfoValidated.map((data) => {\r\n    wmsPoSkuCode.push(data.wmsPoSkuCode);\r\n    wmsPoSkuUom.push(data.uom);\r\n  });\r\n\r\n  //split sku number and skuUUid sku number\r\n  let skuNumberArray = [];\r\n  let skuUuidArray = [];\r\n  let skuPhotosArray = [];\r\n  let skuUomArray = [];\r\n  poSkuNumberValidated.map((data) => {\r\n    skuNumberArray.push(data.skuNumber);\r\n    skuUuidArray.push(data.id);\r\n    skuPhotosArray.push(data.imageMd);\r\n    skuUomArray.push(data.uom);\r\n  });\r\n\r\n  //cleaning data\r\n  let cleanData = [];\r\n  csvData.map((data, index) => {\r\n    //if empty row then skip\r\n    if (data.emptyRow === true) {\r\n      return 0;\r\n    }\r\n\r\n    //format fixing\r\n    data.areaSource = parseInt(data.areaSource);\r\n    data.areaDestination = parseInt(data.areaDestination);\r\n\r\n    //if transaction stocktake then source and destination is same\r\n    if (\r\n      transaction == \"stock_take\" ||\r\n      transaction == \"repacking\" ||\r\n      transaction == \"outbound\"\r\n    ) {\r\n      data.areaDestination = parseInt(data.areaSource);\r\n      data.warehouseDestination = parseInt(data.warehouseSource);\r\n    }\r\n    //get index dari poskucode\r\n    let indexId = wmsPoSkuCode.indexOf(data.wmsPoSkuCode);\r\n\r\n    //get validated data\r\n    let skuValidatedData = poSkuInfoValidated[indexId];\r\n\r\n    if (\r\n      !skuValidatedData ||\r\n      skuValidatedData.isExist === undefined ||\r\n      skuValidatedData.isExist === false ||\r\n      skuValidatedData.isExist === null\r\n    ) {\r\n      data.wmsPoSkuCodeStatus = false;\r\n      data.wmsPoSkuCodeReason = \"PO SKU Code Not Found\";\r\n    } else {\r\n      // skuValidatedData.expiryDate = skuValidatedData.expiryDate\r\n      data.inboundDate = skuValidatedData.inboundDate;\r\n      data.uom = wmsPoSkuUom[indexId];\r\n    }\r\n\r\n    //check grade\r\n    let tmp_grade = data.newGrade;\r\n    let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n    if (\r\n      tmp_grade !== undefined &&\r\n      !arr_grade.includes(tmp_grade.toUpperCase())\r\n    ) {\r\n      //if not waste or semi waste\r\n      if (skuNumberArray.includes(tmp_grade)) {\r\n        let idx = skuNumberArray.indexOf(tmp_grade);\r\n        data.newGradeStatus = true;\r\n        data.newGradeUuid = skuUuidArray[idx];\r\n      } else if (tmp_grade == \"\") {\r\n        data.newGradeUuid = \"\";\r\n        data.newGradeStatus = true;\r\n      } else {\r\n        //if not number => undefined\r\n        data.newGradeReason = \"Grade Undefined\";\r\n        data.newGradeStatus = false;\r\n      }\r\n    }\r\n\r\n    //check Sku Number\r\n    let tmp_sku_number = data.skuNumber;\r\n    if (!skuNumberArray.includes(tmp_sku_number)) {\r\n      data.skuNumberStatus = false;\r\n      data.skuNumberReason = \"SKU Number Not Found\";\r\n      data.skuUuid = \"\";\r\n    } else {\r\n      let idx = skuNumberArray.indexOf(tmp_sku_number);\r\n      data.skuUuid = skuUuidArray[idx];\r\n      data.photo = skuPhotosArray[idx];\r\n    }\r\n\r\n    //check New Grade\r\n    let tmp_new_grade = data.newGrade;\r\n    console.log(\"tmp_new_grade\", tmp_new_grade);\r\n    if (\r\n      (tmp_new_grade && arr_grade.includes(tmp_new_grade.toUpperCase())) ||\r\n      tmp_new_grade == \"\"\r\n    ) {\r\n      data.newGradeReason = \"\";\r\n      data.newGradeStatus = true;\r\n      data.newGradeUuid = null;\r\n      data.newGradeUom = null;\r\n    } else {\r\n      if (skuNumberArray.includes(tmp_new_grade)) {\r\n        let idx = skuNumberArray.indexOf(tmp_new_grade);\r\n        data.newGradeReason = \"\";\r\n        data.newGradeStatus = true;\r\n        data.newGradeUuid = skuUuidArray[idx];\r\n        data.newGradeUom = skuUomArray[idx];\r\n      } else {\r\n        data.newGradeReason = \"SKU Number Not Found\";\r\n        data.newGradeStatus = false;\r\n        data.newGradeUuid = null;\r\n        data.newGradeUom = null;\r\n      }\r\n    }\r\n\r\n    //merging_array\r\n    cleanData.push({ ...data, ...skuValidatedData });\r\n  });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: cleanData });\r\n  setIsProgressPercent(Math.ceil(100));\r\n  setTimeout(() => {\r\n    nextPage();\r\n  }, 200);\r\n};\r\n\r\nexport const resetCsvResist = async ({\r\n  dispatch,\r\n  resetStatus,\r\n  setIsResetCsvPersist,\r\n}) => {\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: null });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: null });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctPOSKUInfoId: null,\r\n  });\r\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\r\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\r\n  dispatch({ type: STATUS, status: null });\r\n  setIsResetCsvPersist(true);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./index.scss\";\r\n\r\nconst FileUploadProgress = ({\r\n  status,\r\n  progressPercent,\r\n  fileName,\r\n  display = false,\r\n  cancelButton = null,\r\n  cancelHandler,\r\n}) => {\r\n  useEffect(() => {\r\n  }, [progressPercent, status]);\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-100 d-flex flex-column progressBar \" +\r\n        (!display ? \"hiddenProgress\" : null)\r\n      }\r\n    >\r\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white border-all radius-all mb-3 mt-0\">\r\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n          <div className=\"uploadStatus w-100\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-7\">\r\n                <i className=\"iconU-sideBarInventoryEntry green\"></i> File\r\n                {fileName}\r\n              </div>\r\n              <div className=\"col-md-5\">\r\n                <p className=\"float-right\" style={{ lineHeight: \"30px\", cursor: \"pointer\" }} onClick={() => { cancelHandler() }}>\r\n                  Cancel\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"progress\">\r\n              <div\r\n                class=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                style={{ width: progressPercent + \"%\" }}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n              ></div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <div className=\"emptyTextField inline\">{status}</div>\r\n              <div className=\"text inline font-weight-bold\">\r\n                {\"  \"}\r\n                {progressPercent}%\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadProgress;\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./FileUploader.scss\";\r\nimport {\r\n  templateDownload,\r\n  csvReader,\r\n  putCsvFieldJson,\r\n  validateColumn,\r\n  xlsReader,\r\n  cleaningData,\r\n  resetCsvResist,\r\n} from \"./services.js\";\r\nimport FileUploadProgress from \"Component/FileUploadProgress\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport { validatePoSkuInfoId, validateSkuNumber } from \"apiServices\";\r\nimport { getWarehouseArea, getOutboundType } from \"apiServices/dropdown\";\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  paddingTop: \"20px\",\r\n  paddingBottom: \"20px\",\r\n  paddingLeft: \"20px\",\r\n  paddingRight: \"20px\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n  height: \"400px\",\r\n};\r\n\r\nconst parentStyle = {\r\n  paddingTop: \"20px\",\r\n  paddingBottom: \"10px\",\r\n  paddingLeft: \"20px\",\r\n  paddingRight: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fff\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n  height: \"600px\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nconst FileUploader = ({ field, transaction, nextPage = null, type = null }) => {\r\n  const [isProgressDisplay, setIsProgressDisplay] = React.useState(false);\r\n  const [isProgressStatus, setIsProgressStatus] = React.useState();\r\n  const [isProgressPercent, setIsProgressPercent] = React.useState(0);\r\n  const [isProgressFileName, setIsProgressFileName] = React.useState(null);\r\n  const [isWarehouseArea, setIsWarehouseArea] = React.useState(null);\r\n  const [isAdditionalOutbound, setIsAdditionalOutbound] = React.useState(null);\r\n  const [isJsonArray, setIsJsonArray] = React.useState(null);\r\n  const [isUploadStatus, setIsUploadStatus] = React.useState(null);\r\n  const [isCheckingSchema, setIsCheckingSchema] = React.useState(null);\r\n  const [isResetCsvPersist, setIsResetCsvPersist] = React.useState(false);\r\n  const [defaultValues, setDefaultValues] = React.useState(0);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [modalShow2, setModalShow2] = React.useState(false);\r\n\r\n  //declare redux\r\n  const dispatch = useDispatch();\r\n  const selectorWarehouseArea = useSelector((state) => state.warehouseAreaCsv);\r\n  const selectorOutboundType = useSelector((state) => state.outboundTypeCsv);\r\n  const selectorStatus = useSelector((state) => state.status);\r\n  const uploadStatus = useSelector((state) => state.uploadStatus);\r\n  const selectorDistinctPOSKUInfoId = useSelector(\r\n    (state) => state.csvDistinctPOSKUInfoId\r\n  );\r\n  const selectorDistinctSKUNumber = useSelector(\r\n    (state) => state.csvDistinctSKUNumber\r\n  );\r\n  const selectorSkuCodeValidated = useSelector(\r\n    (state) => state.skuCodeValidated\r\n  );\r\n  const selectorSkuNumberValidated = useSelector(\r\n    (state) => state.skuNumberValidated\r\n  );\r\n  const selectorCsvData = useSelector((state) => state.csvData); \r\n  const warehousesData =  useSelector(state => state.warehouseData);\r\n\r\n  //reset csv persist\r\n  if (isResetCsvPersist !== true) {\r\n    resetCsvResist({\r\n      dispatch,\r\n      resetStatus: isResetCsvPersist,\r\n      setIsResetCsvPersist,\r\n    });\r\n  }\r\n\r\n  //get warehouse & warehouse area data\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  if (isWarehouseArea === null) {\r\n    getWarehouseArea({\r\n      warehouseUuid: warehouseUuid,\r\n      dispatch,\r\n      type: \"csvValidator\",\r\n    });\r\n    setIsWarehouseArea(1);\r\n  }\r\n\r\n  //get additional outbound type\r\n  if (isAdditionalOutbound === null && type == \"additionalOutbound\") {\r\n    getOutboundType({\r\n      dispatch,\r\n      type: \"csvValidator\",\r\n    });\r\n    setIsAdditionalOutbound(1);\r\n  }\r\n\r\n  //when file droped or selected\r\n  const onDropAccepted = async (e) => {\r\n    //reset percent\r\n    setIsProgressPercent(0);\r\n    setIsUploadStatus(true);\r\n\r\n    //get file type\r\n    const file = e[0].name;\r\n    const fileArr = file.split(\".\");\r\n    const fileType = fileArr[1];\r\n\r\n    //read file\r\n    let fieldArray = field.map((obj) => obj.dataField);\r\n    putCsvFieldJson({ dispatch, jsonArray: field });\r\n\r\n    let jsonArray = null;\r\n    let cleanArray = [];\r\n    await setIsProgressStatus(\"Reading...\");\r\n    await setIsProgressFileName(file);\r\n    await setIsProgressDisplay(true);\r\n    if (fileType == \"csv\") {\r\n      jsonArray = await csvReader(\r\n        e,\r\n        fieldArray,\r\n        setIsProgressPercent,\r\n        setIsProgressStatus\r\n      );\r\n      //console.log(\"csv\", jsonArray);\r\n    } else {\r\n      jsonArray = await xlsReader(\r\n        e,\r\n        fieldArray,\r\n        setIsProgressPercent,\r\n        setIsProgressStatus,\r\n        setIsJsonArray,\r\n        dispatch\r\n      );\r\n      // console.log(\"xls\", jsonArray);\r\n    }\r\n    console.log(jsonArray);\r\n    if (jsonArray === false) {\r\n      // resetCsvResist({ dispatch, resetStatus: 1, setIsResetCsvPersist });\r\n      setModalShow(true);\r\n      return 0;\r\n    }\r\n\r\n    await setIsProgressStatus(\"Validating Column Type...\");\r\n    await validateColumn({\r\n      field,\r\n      jsonArray,\r\n      setIsProgressPercent,\r\n      fileName: file,\r\n      dispatch,\r\n      warehouseArea: selectorWarehouseArea,\r\n      warehouseUuid,\r\n      outboundType: selectorOutboundType,\r\n      setIsCheckingSchema,\r\n      warehousesData\r\n    });\r\n    await setIsProgressStatus(\"Validating PO SKU Code. . .\");\r\n  };\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    acceptedFiles,\r\n    open,\r\n  } = useDropzone({\r\n    noClick: true,\r\n    onDropAccepted,\r\n    accept:\r\n      //accept csv, xls, and xlsx\r\n      \"text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n  });\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept]\r\n  );\r\n\r\n  const cancelCsv = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  // Use Effect\r\n  useEffect(() => {\r\n    //setelah validasi kolom\r\n    // validasi PO SKU Code\r\n    // console.clear();\r\n    validatePoSkuInfoId({\r\n      dispatch,\r\n      skuData: selectorDistinctPOSKUInfoId,\r\n      status: isUploadStatus,\r\n    });\r\n  }, [selectorDistinctPOSKUInfoId]);\r\n\r\n  useEffect(() => {\r\n    //setelah validasi PO SKU Code\r\n    //validasi SKU Number\r\n    // console.clear();\r\n    setIsProgressPercent(70);\r\n    setIsProgressStatus(\"Validating SKU Numbers\");\r\n    validateSkuNumber({\r\n      dispatch,\r\n      skuNumberData: selectorDistinctSKUNumber,\r\n      bulk: true,\r\n      status: isUploadStatus,\r\n    });\r\n  }, [selectorSkuCodeValidated]);\r\n\r\n  useEffect(() => {\r\n    //setelah validasi sku number\r\n    //re arrange data yang akan digunakan di table\r\n    // console.clear();\r\n    setIsProgressPercent(90);\r\n    setIsProgressStatus(\"rearrange data. . .\");\r\n    cleaningData({\r\n      poSkuInfoValidated: selectorSkuCodeValidated,\r\n      poSkuNumberValidated: selectorSkuNumberValidated,\r\n      csvData: selectorCsvData,\r\n      transaction: transaction,\r\n      setIsProgressPercent,\r\n      dispatch,\r\n      status: isUploadStatus,\r\n      setIsProgressStatus,\r\n      nextPage,\r\n    });\r\n  }, [selectorSkuNumberValidated]);\r\n\r\n  useEffect(() => {\r\n    if (isCheckingSchema === false) {\r\n      console.log(isCheckingSchema);\r\n      setModalShow2(true);\r\n      setIsCheckingSchema(null);\r\n    }\r\n  }, [isCheckingSchema]);\r\n\r\n  return (\r\n    <div>\r\n      <PopUp\r\n        status={selectorStatus}\r\n        onCloseFunction={() => {\r\n          setModalShow(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        statusDisplay={modalShow}\r\n        title=\"Upload File Failed\"\r\n        cancelButtonTitle=\"Try Another File\"\r\n        actionButtonTitle={null}\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div>\r\n              Upload failed because your file has more than 2000 lines.{\" \"}\r\n            </div>\r\n            <div> Please make it less than 2000 lines. </div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to try another file?\"\r\n        cancelButtonClass=\"bg-red background\"\r\n        actionButtonClass=\" \"\r\n      />\r\n\r\n      <PopUp\r\n        status={200}\r\n        onCloseFunction={() => {\r\n          setModalShow2(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        actionButtonEvent={() => templateDownload()}\r\n        statusDisplay={modalShow2}\r\n        title=\"Different File Template\"\r\n        cancelButtonTitle=\"Cancel\"\r\n        actionButtonTitle=\"Download latest template\"\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div> Your uploaded file has a different template.</div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to download the latest file template ?\"\r\n        actionButtonClass=\"bg-green background\"\r\n        cancelButtonClass=\"\"\r\n      />\r\n\r\n      <div className=\"w-100 d-flex flex-column p-3 mb-3 bg-white\">\r\n        <div\r\n          className=\"d-flex flex-column justify-content-between\"\r\n          style={parentStyle}\r\n        >\r\n          <div className=\"FileUploader\">\r\n            <div\r\n              className=\"d-flex flex-column justify-content-end\"\r\n              {...getRootProps({ style })}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <i\r\n                style={{ fontSize: \"90px\" }}\r\n                className=\"lineGrey iconU-upload\"\r\n              ></i>\r\n              <b className=\"mt-2\">Drag and Drop files here</b>\r\n              <p className=\"mt-2 mb-2 emptyTextField\"> Or </p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={open}\r\n                className=\"btn px-5 py-2 text-white bg-green LatoBold no-shadow\"\r\n              >\r\n                Browse File\r\n              </button>\r\n\r\n              <div className=\"emptyTextField LatoBold mt-3 \">\r\n                Support only CSV, XLS, XLSX file\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"downloadTemplate w-100 align-right\">\r\n            <span onClick={() => templateDownload()} className=\"float-right\">\r\n              Download the File Template\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <FileUploadProgress\r\n        status={isProgressStatus}\r\n        progressPercent={isProgressPercent}\r\n        fileName={isProgressFileName}\r\n        display={isProgressDisplay}\r\n        cancelHandler={cancelCsv}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n"],"sourceRoot":""}