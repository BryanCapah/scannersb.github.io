{"version":3,"sources":["Page/StockEntry/Waste/WeightEntry/SelectedSKUList/SelectedSKU/index.jsx","Page/StockEntry/Waste/WeightEntry/SelectedSKUList/index.jsx","Page/StockEntry/Waste/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry/index.jsx","Page/StockEntry/Waste/WeightEntry/services.js","Page/StockEntry/Waste/WeightEntry/WeightEntryList/WeightEntryCard/index.jsx","Page/StockEntry/Waste/WeightEntry/WeightEntryList/index.jsx","Page/StockEntry/Waste/WeightEntry/index.jsx","Component/Dropdown/index.jsx","Component/Input/index.jsx","Component/Input/Note.jsx","assets/icons/refreshIcon.svg","assets/icons/asc.svg","assets/icons/desc.svg","Component/DatePickerNew/index.jsx","Component/DatePickerNew/services.js","Component/Sort/index.jsx","Component/Input/InputImage.jsx","Page/StockEntry/Waste/services.js"],"names":["SelectedSKU","isNewItem","img","skuDescription","skuNumber","activeSku","uomValue","idx","uom","onClick","data","edited","getEditedData","isEmpty","checkisEmpty","onKeyDown","e","onEnter","className","src","alt","toUpperCase","SelectedSKUList","hideSKUList","setActiveSKU","moduleEntry","moduleName","setUpdateEntry","selectedSku","jobPost","list","length","dimention","document","documentElement","clientWidth","height","clientHeight","useState","hideContent","setHideContent","dispatch","useDispatch","thereAreRequest","useSelector","state","style","padding","content","placement","Reload","updateEntries","to","type","ADD_SKU","maxHeight","map","skuName","uomLabel","unitOfMeassures","totalQty","photo","WeightEntry","entryListIdx","wmsPoSkuInfoId","gradeList","ripeness","inputWidth","showTitle","item","onChange","onChangeDropdown","poListIdx","category","Input","qtyIsEmpty","values","qty","title","Dropdown","wasteTypeIsEmpty","selectedValue","wasteType","show","selected","name","placeholder","options","width","Note","noteIsEmpty","grade","note","InputImage","uploadPhotoIsEmpty","uploadPhoto","updateJSWeightLine","a","target","value","js","poList","itemList","CREATE_JOB_SHEET","saveImage","image","regex","console","clear","test","newValue","arr","split","number","parseInt","commaNumber","undefined","sliceNumber","slice","qtyToCompare","qtyToCompareIsEmpty","initialWeight","inboundQty","initialWeightUpdate","minus","isNaN","filter","initialWeightScreen","initialWeightScreenUpdate","over","totalListItemWeightCount","moduleList","initialWeightOver","WeightEntryCard","poItem","expiryDate","inboundDate","supplierName","poUuid","skuUuid","supplierId","ripenessLevel","wmsPoSkuCode","codeGrade","isHidden","initialWeightTotal","uomType","dateFull","date","opacity","noTime","label","ripenessIsEmpty","updateJSWeightLineDropdown","Trash","deleteRow","countQty","grades","lastSelected","gradeSelected","push","addRow","isFloat","WeightEntryList","setHideSKUList","updateEntry","useEntryDimention","heightAdj","useWasteEntry","setIsSuccess","confirmation","setConfirmation","discard","setDiscard","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","isLoading","totalWeight","postInfo","status","isMobile","isPlural","isEdited","paddingLeft","module","close","discardEntry","id","removeEntryModule","PopUpSaved","submit","totalSku","PopUpRequired","isSuccess","save","saveJobSheet","submitValidation","Sort","minHeight","wasteEntryData","isDisabled","noMarginBottom","resetName","isMulti","hideResetOpt","isOpen","setIsOpen","useEffect","isEmptyStyle","styles","border","elem","getElementById","position","getBoundingClientRect","defaultvalue","val","menuPlacement","bottom","inputId","isSearchable","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","color","cursor","fontWeight","theme","borderRadius","maxLength","autoComplete","isReadOnly","readOnly","exports","SKUDatePicker","showDate","selectDate","setShowDate","startDate","Date","endDate","key","dateRange","setDateRange","setDate","mode","setMode","singleDate","multipleDate","wrapperRef","useRef","handleClickOutside","event","current","contains","addEventListener","removeEventListener","useOutside","ref","ranges","newdate","dt","selection","setDates","dateShow","sortBy","setSortBy","resetFilter","setResetFilter","dateDMY","datePicker","sortByInboundDate","_","filterByDate","minWidth","d","desc","asc","hover","setHover","onMouseLeave","onMouseEnter","backgroundImage","backgroundSize","margin","fontSize","nv-file-select","uploader","accept","selectSku","checked","setLocalEntryData","moduleSummary","warehouseUuid","areaId","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","jsD","sI","includes","getGrade","skuId","getPoBySkuId","addPoItem","expiryMs","moment","valueOf","inBoundyMs","Number","isInteger","parseFloat","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","areaSource","areaName","areaDestination","sort","b","filterBySkuName","preAddSku","preAddHandler","isClear","jsR","po","qtyCount","valid","checkIsSkuRequired"],"mappings":"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","file":"static/js/29.69b4f64a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { getEditedData, checkisEmpty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { onEnter } from 'services'\r\nconst SelectedSKU = ({\r\n    isNewItem,\r\n    img,\r\n    skuDescription,\r\n    skuNumber,\r\n    activeSku,\r\n    uomValue,\r\n    idx,\r\n    uom,\r\n    onClick,\r\n    data\r\n}) => {\r\n    const edited = getEditedData({ data })\r\n    const isEmpty = checkisEmpty(data)\r\n    return (\r\n        <div onKeyDown={e => onEnter({ e, idx, onClick })} className={`w-100 sku-item softGreen pl-2 pr-2 pt-2 mb-3 cursor-pointer rounded ${edited ? 'soft-green' : null} ${activeSku === idx ? 'border-green' : (isEmpty ? 'border-red' : 'border')}`}>\r\n            <div className=\" w-100 d-flex justify-content-end\">\r\n                <div className={isNewItem ? 'green-dot' : 'dot'} />\r\n            </div>\r\n            <div onClick={() => onClick()} className={`w-100 softGreen d-flex justify-content-between pl-2 pr-2 mb-3 cursor-pointer ${edited ? 'soft-green' : null}`}>\r\n                <div className='d-flex align-items-center w-100'>\r\n                    <div className='d-flex align-items-center'>\r\n                        <img src={img} alt='sku image' className='w-5 mr-3 border softGreen rounded' />\r\n                    </div>\r\n                    <div className=\"w-100\">\r\n                        <div className='mr-3 w-100 d-flex'>\r\n                            <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-between'>\r\n                            <div className='text'>{skuNumber}</div>{activeSku}\r\n                            <div className='green LatoBold'>{uomValue} <span>{`${uom ? uom.toUpperCase() : ''}${uomValue > 1 ? 's' : ''}`}</span></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKU","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ADD_SKU } from 'apiServices/action'\r\nimport './index.scss'\r\nimport SelectedSKU from 'Page/StockEntry/Waste/WeightEntry/SelectedSKUList/SelectedSKU'\r\nimport Reload from 'assets/icons/refreshIcon.svg'\r\nimport { updateEntries } from 'apiServices'\r\nimport { CTooltip } from '@coreui/react'\r\nconst SelectedSKUList = ({\r\n    hideSKUList,\r\n    setActiveSKU,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    setUpdateEntry,\r\n}) => {\r\n    const selectedSku = moduleEntry.jobPost.list.length\r\n    const dimention = document.documentElement.clientWidth\r\n    let height = document.documentElement.clientHeight\r\n    height = height - 212\r\n    const [hideContent, setHideContent] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const thereAreRequest = useSelector(state => state.thereAreRequest)\r\n    // const { sorted } = useIsNewItem({ setActiveSKU, moduleEntry, selectedSku })\r\n    return (\r\n        <div className={`${hideSKUList ? 'w-0' : 'w-30'}  mt-md-0 rounded-bottom rounded-top`}>\r\n            <div style={{ padding: 17 }} className='w-100 bg-white border-top border-left border-right rounded-top border-soft-green text d-flex align-items-center justify-content-between' onClick={() => dimention <= 500 ? setHideContent(!hideContent) : null}>\r\n                <div className=\"LatoBold\"> Selected SKU <span className='font-green'>{`(${selectedSku} SKU${selectedSku > 1 ? 's' : ''})`}</span></div>\r\n                <div className='d-flex align-items-center justify-content-between'>\r\n                    <CTooltip content={`Click to refresh the stock`} placement={dimention <= 500 ? 'left' : 'right'}>\r\n                        <div>\r\n                            <img className={`${thereAreRequest > 0 ? 'fa-spin-hover' : false} mt-1 pointer`} src={Reload} onClick={() => updateEntries({ moduleEntry, moduleName, dispatch, setUpdateEntry })} />\r\n                        </div>\r\n                    </CTooltip>\r\n                    <Link to='/inventory-entry/waste/weight-entry/remove-sku'>\r\n                        <div className=\"fontSizeTitle px-3 emptyTextField iconU-remove\" />\r\n                    </Link>\r\n                    <Link to='/inventory-entry/waste/weight-entry/add-sku'>\r\n                        <div onClick={() => dispatch({ type: ADD_SKU, [`${moduleName}AddSku`]: true })} className='fontSizeTitle emptyTextField text-bold iconU-entryAdd' ></div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div style={{ height: dimention <= 500 ? false : height, maxHeight: height }} className={` overflow-y w-100 bg-white mr-0 border rounded-bottom border-soft-green pl-3 pr-0 pt-3 ${hideContent ? 'd-none' : null}`}>\r\n                {\r\n                    moduleEntry?.jobPost?.list?.map((data, idx) =>\r\n                        <SelectedSKU\r\n                            isNewItem={data?.isNewItem}\r\n                            data={data}\r\n                            idx={idx}\r\n                            activeSku={activeSku}\r\n                            skuDescription={data?.skuName}\r\n                            skuNumber={data?.skuNumber}\r\n                            uomLabel={data?.unitOfMeassures}\r\n                            uomValue={data?.totalQty}\r\n                            uom={data?.unitOfMeassures}\r\n                            img={data?.photo}\r\n                            onClick={() => setActiveSKU(idx)}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKUList","import React from 'react'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport Decimal from 'Component/Input/decimal'\r\nimport Input from 'Component/Input'\r\nimport Note from 'Component/Input/Note'\r\nimport InputImage from 'Component/Input/InputImage'\r\n\r\n\r\nconst WeightEntry = ({\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    gradeList,\r\n    ripeness,\r\n    inputWidth,\r\n    showTitle,\r\n    item,\r\n    onChange,\r\n    onChangeDropdown,\r\n    uom,\r\n    poListIdx,\r\n    category\r\n}) => {\r\n    return (\r\n        <div className='d-flex w-100 we-m'>\r\n            <Input\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                showTitle={showTitle}\r\n                title={'Input Quantity'}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            <Decimal\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                ripeness={ripeness}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n            <Dropdown\r\n                isEmpty={item.wasteTypeIsEmpty}\r\n                selectedValue={item?.wasteType}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={true}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'grade' })}\r\n                title='Waste'\r\n                placeholder='Select Waste'\r\n                options={gradeList}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={null} />\r\n            <Note\r\n                isEmpty={item.noteIsEmpty}\r\n                grade={'Waste'}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                inputWidth={'w-30'}\r\n                values={item?.note}\r\n                showTitle={showTitle}\r\n                title={'Note'}\r\n                onChange={(e) => onChange(e)} />\r\n            <InputImage\r\n                isEmpty={item.uploadPhotoIsEmpty}\r\n                uom={'PACK'}\r\n                inputWidth={'fit-content'}\r\n                values={item.uploadPhoto}\r\n                onChange={(e) => onChange(e)}\r\n                showTitle={true}\r\n                title={'Add Photos'} />\r\n        </div>\r\n    )\r\n}\r\nexport default WeightEntry","import { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { saveImage } from 'apiServices'\r\nimport { totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nexport const addRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    const codeGrade = js.jobPost.list[activeSku].poList[poListIdx].codeGrade\r\n    const grades = js.jobPost.list[activeSku].gradeList.filter(grade => grade?.value === codeGrade)\r\n    const itemList = js.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    const lastSelected = itemList[itemList?.length - 1]\r\n    const gradeSelected = lastSelected ? lastSelected.grade : grades[0]\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.push({\r\n        qty: '',\r\n        grade: gradeSelected,\r\n        note: '',\r\n        uploadPhoto: null,\r\n        wasteType: null\r\n    })\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLine = async ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e\r\n}) => {\r\n    const name = e?.target?.name\r\n    let value = e?.target?.value\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n    if (!name) {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].uploadPhoto = null\r\n        dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n        return\r\n    }\r\n    if (name === 'upload') {\r\n        const image = await saveImage({ e, dispatch })\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].uploadPhoto = image\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].uploadPhotoIsEmpty = false\r\n        dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n        return\r\n    }\r\n\r\n    if (name === 'weight' || name === 'weightToCompare') {\r\n        // js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = parseInt(value)\r\n        let regex = /^[0-9\\.\\x0]+$/\r\n        console.clear()\r\n        if ((regex.test(value) === true && value !== \"\")) {\r\n            let newValue = 0;\r\n            let arr = value?.split('.')\r\n            let number = arr[0];\r\n            if (number >= 0) number = parseInt(number)\r\n            let commaNumber = arr[1];\r\n\r\n            if ((commaNumber !== null && commaNumber !== undefined)) {\r\n                if (commaNumber.length > 2) {\r\n                    //jika dibelakang koma ada lebih dari 2 angka\r\n                    var sliceNumber = commaNumber.slice(0, 2);\r\n                    newValue = `${number}.${sliceNumber}`\r\n                } else {\r\n                    newValue = `${number}.${commaNumber}`\r\n                }\r\n            } else {\r\n                newValue = parseInt(number)\r\n            }\r\n\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompareIsEmpty = false\r\n            }\r\n\r\n        }\r\n        else {\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    else if (name === 'qty') {\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = value ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n    }\r\n    if (name === 'note') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n    const initialWeight = js.jobPost.list[activeSku].poList[poListIdx].inboundQty\r\n    let initialWeightUpdate = initialWeight\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        if (data.qty) js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        initialWeightUpdate = initialWeightUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = initialWeightUpdate\r\n        const value = js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty\r\n        if (initialWeightUpdate < 0) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n            js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = 0\r\n        }\r\n        else {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList.filter(item => { return item.qtyIsEmpty = false })\r\n        }\r\n    })\r\n\r\n    //initial weight from it self\r\n    const initialWeightScreen = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n    let initialWeightScreenUpdate = initialWeightScreen\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        initialWeightScreenUpdate = initialWeightScreenUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = initialWeightScreenUpdate\r\n    })\r\n    //end of initial weight from it self\r\n\r\n    const over = totalListItemWeightCount({ moduleList: js.jobPost.list[activeSku].poList[poListIdx].itemList })\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightOver = over > initialWeight ? over : 0\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLineDropdown = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    selected,\r\n    name\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n    if (name === 'grade') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].wasteType = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].wasteTypeIsEmpty = false\r\n    }\r\n    if (name === 'ripeness') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripenessIsEmpty = false\r\n    }\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dateFull, isFloat } from 'services';\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport WeightEntry from \"Page/StockEntry/Waste/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry\";\r\nimport \"./index.scss\";\r\nimport {\r\n  addRow,\r\n  updateJSWeightLine,\r\n  updateJSWeightLineDropdown\r\n} from \"Page/StockEntry/Waste/WeightEntry/services\";\r\nimport {deleteRow,countQty} from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst WeightEntryCard = ({\r\n  inputWidth,\r\n  activeSku,\r\n  poListIdx,\r\n  poItem,\r\n  moduleEntry,\r\n  moduleName,\r\n  gradeList,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    expiryDate,\r\n    inboundDate,\r\n    initialWeight,\r\n    inboundQty,\r\n    initialWeightUpdate,\r\n    initialWeightScreenUpdate,\r\n    poUuid,\r\n    skuUuid,\r\n    supplierId,\r\n    supplierName,\r\n    uom,\r\n    ripeness,\r\n    ripenessLevel,\r\n    edited,\r\n    wmsPoSkuCode,\r\n    category,\r\n    codeGrade,\r\n    isHidden\r\n  } = poItem;\r\n  const total = !isNaN(initialWeightUpdate) ? initialWeightUpdate : inboundQty;\r\n  const initialWeightTotal = !isNaN(initialWeightScreenUpdate) ? initialWeightScreenUpdate : initialWeight\r\n  const uomType = uom === \"kg\" || uom === \"gram\" ? \"Weight\" : \"Quantity\";\r\n  const grade = moduleEntry.jobPost.list[activeSku].gradeList.filter(grade => { return grade?.value === codeGrade })\r\n  return (\r\n    <div className={`${isHidden ? 'd-none' : null} z-0 d-flex flex-column justify-content-between w-100 mb-3 align-items-center border rounded border-soft-green ${edited ? \"soft-green\" : null\r\n      }`}\r\n    >\r\n      {/* Line 1 */}\r\n      <div className=\"w-100 border-soft-green mt-3 d-flex align-items-start px-3\">\r\n        <div className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex justify-content-between align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Inbound Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {inboundDate ? dateFull({ date: inboundDate }) : '-'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex align-items-center mb-3\">\r\n            {`Initial ${uomType}`}\r\n            <span className=\"ml-2 font-green\">\r\n              {` ${initialWeight} ${uom?.toUpperCase()}${initialWeight > 1 ? \"s\" : \"\"}`}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 2 */}\r\n\r\n      <div className=\"w-100 border-soft-green d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`PO Code`}\r\n              <span className=\"ml-2 font-green\">{` ${wmsPoSkuCode ? wmsPoSkuCode : '-'}`}</span>\r\n            </div>\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Supplier Name`}\r\n              <span className=\"ml-2 font-green\">{` ${supplierName}`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 3 */}\r\n      <div className=\"w-100 border-bottom border-soft-green mb-3 d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Expiry Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {expiryDate ? dateFull({ date: expiryDate, noTime: true }) : '-'}\r\n              </span>\r\n            </div>\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Grade`}\r\n              <span className=\"ml-2 font-green\">{` ${grade.length ? grade[0].label : '-'}`}</span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`Inbound Quantity`}\r\n              <span className=\"ml-2 font-green\">{` ${inboundQty ? inboundQty : '-'}`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex flex-column justify-content-between w-100 align-items-center px-3 z-0\">\r\n        {poItem.itemList?.map((item, entryListIdx) => {\r\n          return (\r\n            <div className=\"d-flex w-100 align-items-center justify-content-between\">\r\n              <div className=\"w-100 d-flex\">\r\n                <div style={{width:'10px'}} className=\"input-height d-flex align-items-center mb-3 mr-3 pt-4 mt-2\">{`${entryListIdx + 1}.`}</div>\r\n                <div className=\"w-100\">\r\n                  <WeightEntry\r\n                    entryListIdx={entryListIdx}\r\n                    wmsPoSkuInfoId={item.wmsPoSkuInfoId}\r\n                    showTitle={true}\r\n                    gradeList={gradeList}\r\n                    onChange={(e) =>\r\n                      updateJSWeightLine({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        e,\r\n                      })\r\n                    }\r\n                    onChangeDropdown={({ selected, name }) =>\r\n                      updateJSWeightLineDropdown({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        selected,\r\n                        name,\r\n                      })\r\n                    }\r\n                    uom={uom}\r\n                    ripeness={ripeness}\r\n                    inputWidth={inputWidth}\r\n                    item={item}\r\n                    className={!ripeness ? \"d-none\" : null}\r\n                    poListIdx={poListIdx}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex w-25 align-items-center justify-content-end input-height mb-0 p-0\">\r\n                <img\r\n                  src={Trash}\r\n                  alt=\"delete icon\"\r\n                  className=\"w-1 cursor-pointer\"\r\n                  onClick={(e) =>\r\n                    deleteRow({\r\n                      dispatch,\r\n                      moduleEntry,\r\n                      moduleName,\r\n                      activeSku,\r\n                      poListIdx,\r\n                      entryListIdx,\r\n                      e,\r\n                      countQty\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        // className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer ${total === 0 ? 'd-none' : null}`}\r\n        className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer`}\r\n        onClick={() => addRow({\r\n          dispatch, moduleEntry,\r\n          moduleName, activeSku, poListIdx\r\n        })}\r\n      >\r\n        <i className=\"green iconU-entryAdd pr-2\"></i>\r\n        {`Add ${uomType} (${isFloat(initialWeightTotal) ? isFloat(initialWeightTotal) : initialWeightTotal} ${uom ? uom.toUpperCase() : ''}${initialWeightTotal > 1 ? \"s\" : \"\"} left)`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WeightEntryCard;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport WeightEntryCard from 'Page/StockEntry/Waste/WeightEntry/WeightEntryList/WeightEntryCard'\r\nimport { removeEntryModule, saveJobSheet } from 'apiServices'\r\nimport { submitValidation } from 'Page/StockEntry/Waste/services'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\";\r\nimport PopUpRequired from \"Component/Modal/PopUpRequired\";\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport Sort from 'Component/Sort'\r\nimport { useEntryDimention, useWasteEntry } from 'Page/StockEntry/GeneralServices'\r\n\r\nconst WeightEntryList = ({\r\n    setActiveSKU,\r\n    hideSKUList,\r\n    setHideSKUList,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    updateEntry,\r\n    setUpdateEntry\r\n}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { dimention, height, heightAdj } = useEntryDimention()\r\n\r\n    const {\r\n        setIsSuccess,\r\n        confirmation,\r\n        setConfirmation,\r\n        discard,\r\n        setDiscard,\r\n        isSaved,\r\n        setIsSaved,\r\n        action,\r\n        setAction,\r\n        isRequired,\r\n        setIsRequired,\r\n        hideContent,\r\n        setHideContent,\r\n        isLoading,\r\n        skuName,\r\n        skuNumber,\r\n        poList,\r\n        gradeList,\r\n        unitOfMeassures,\r\n        totalWeight,\r\n        edited,\r\n        postInfo,\r\n        status\r\n    } = useWasteEntry({ moduleEntry, activeSku })\r\n\r\n    //Condition\r\n    const isMobile = dimention <= 500\r\n    const isHidden = hideContent ? 'd-none' : null\r\n    const isPlural = totalWeight > 1 ? \"s\" : ''\r\n    const isEdited = edited ? 'bg-green' : 'bg-lineGrey'\r\n\r\n    return (\r\n        <div style={{ paddingLeft: isMobile ? 0 : 10 }} className='w-100 h-100 mt-3 mt-md-0'>\r\n            {/* <Prompt\r\n                when={true}\r\n                message={location => {\r\n                    let pathname = location.pathname\r\n                    if (!allowPage.includes(pathname)) {\r\n                        setDiscard(true)\r\n                        return false\r\n                    }\r\n                }}\r\n            /> */}\r\n            <Discard\r\n                discard={discard}\r\n                module={'Inventory Entry - Waste'}\r\n                moduleEntry={moduleEntry}\r\n                close={() => setDiscard(false)}\r\n                discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch })}\r\n            />\r\n            <PopUpSaved\r\n                updateEntry={updateEntry}\r\n                setUpdateEntry={setUpdateEntry}\r\n                status={status}\r\n                moduleEntry={moduleEntry}\r\n                submit={() => dispatch({ type: 'CREATE_JOB_SHEET', [`${moduleName}EntryData`]: null, [`${moduleName}SummaryData`]: null })}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSaved={isSaved}\r\n                action={action}\r\n                setIsSaved={setIsSaved}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <PopUpRequired\r\n                isRequired={isRequired}\r\n                module={moduleEntry}\r\n                setIsRequired={setIsRequired}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <Confirmation\r\n                moduleName={moduleName}\r\n                isLoading={isLoading}\r\n                moduleEntry={moduleEntry}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSuccess={postInfo}\r\n                setAction={setAction}\r\n                action={action}\r\n                save={() => saveJobSheet({ name: 'save', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n                submit={() => saveJobSheet({ name: 'submit', moduleEntry, moduleName, dispatch, setIsSuccess, submitValidation, setActiveSKU })}\r\n            />\r\n            <div className='mb-3 bg-white rounded-bottom rounded-top'>\r\n                <div style={{ height }} style={{ padding: 10 }} className='w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green'>\r\n                    <div className='d-flex w-100 m-0 p-0' onClick={() => isMobile ? setHideContent(!hideContent) : null}>\r\n                        <div className={`${hideSKUList ? 'iconU-sideBarHideRight' : 'iconU-sideBarHideLeft'} emptyTextField fontSizeTitle mr-3 m-0 p-0`} onClick={() => setHideSKUList(!hideSKUList)} />\r\n                        <div className='mr-3 pr-1 d-flex align-items-center m-0 p-0 LatoBold'>Weight Entry</div>\r\n                        <div className='mr-3 iconU-sideBarDot d-flex align-items-center m-0 p-0' />\r\n                        <div className='mr-3 d-flex align-items-center font-green LatoBold m-0 p-0'>{`${skuName} (${skuNumber})`}</div>\r\n                    </div>\r\n                    <Sort moduleEntry={moduleEntry} moduleName={moduleName} activeSku={activeSku} dispatch={dispatch} />\r\n                </div>\r\n                <div style={{ height: isMobile ? height : heightAdj, minHeight: isMobile ? height : heightAdj }} className={`w-100 overflow-y mr-0 border-left border-right border-soft-green pl-3 pr-2 pt-3 ${isHidden}`}>\r\n                    {\r\n                        poList?.map((poItem, idx) => {\r\n                            return <WeightEntryCard\r\n                                gradeList={gradeList}\r\n                                inputWidth='input-w-100'\r\n                                activeSku={activeSku}\r\n                                poListIdx={idx}\r\n                                poItem={poItem}\r\n                                moduleEntry={moduleEntry}\r\n                                moduleName={moduleName}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <div className='w-100 d-flex align-items-center p-3 border-left border-right border-bottom rounded-bottom LatoBold'>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={`btn ${isEdited}  text-white px-5 mr-3 LatoBold`}\r\n                        onClick={() => edited ? setConfirmation({ show: true, name: 'save' }) : null}>\r\n                        Save\r\n                    </button>\r\n                    <div>Total Weight <span className='font-green'>{`${totalWeight} ${unitOfMeassures?.toUpperCase()}${isPlural}`}</span></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end\">\r\n                <div onClick={() => setDiscard(true)} className='red pr-3 fontSizeButton cursor-pointer'><i className='iconU-entryTrash'></i> Discard</div>\r\n                <button onClick={() => edited ? submitValidation({ setActiveSKU, moduleEntry, moduleName, dispatch, setConfirmation, setIsRequired }) : null} className={`btn px-5 py-2 text-white ${isEdited} LatoBold no-shadow`} style={{ height: \"fit-content !important\" }} >Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntryList","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport SelectedSKUList from 'Page/StockEntry/Waste/WeightEntry/SelectedSKUList'\r\nimport WeightEntryList from 'Page/StockEntry/Waste/WeightEntry/WeightEntryList'\r\n\r\nconst WeightEntry = () => {\r\n    const wasteEntryData = useSelector(state => state.wasteEntryData)\r\n    const [hideSKUList, setHideSKUList] = useState(false)\r\n    const [activeSku, setActiveSKU] = useState(0)\r\n    const [updateEntry, setUpdateEntry] = useState()\r\n    let height = document.documentElement.clientHeight\r\n    let clientWidth = document.documentElement.clientWidth\r\n    let heightAdj = height - 150\r\n    const moduleName = 'waste'\r\n    if (!wasteEntryData || wasteEntryData?.jobPost.list.length === 0) {\r\n        return (\r\n            <div className='d-flex align-items-center justify-content-center text-center w-100 h-screen'><Redirect to='/inventory-entry/waste'>Please Select At Least 1 SKU</Redirect></div >)\r\n    }\r\n    return (\r\n        <div style={{ height: clientWidth <= 500 ? height : heightAdj }} className='w-100 d-md-flex justify-content-between scroll-y z-0'>\r\n            <SelectedSKUList\r\n                hideSKUList={hideSKUList}\r\n                activeSku={activeSku}\r\n                setActiveSKU={setActiveSKU}\r\n                moduleName={moduleName}\r\n                moduleEntry={wasteEntryData}\r\n                setUpdateEntry={setUpdateEntry}\r\n            />\r\n            <WeightEntryList\r\n                setActiveSKU={setActiveSKU}\r\n                setHideSKUList={setHideSKUList}\r\n                hideSKUList={hideSKUList}\r\n                moduleName={moduleName}\r\n                moduleEntry={wasteEntryData}\r\n                activeSku={activeSku}\r\n                setUpdateEntry={setUpdateEntry}\r\n                updateEntry={updateEntry}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntry","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom,\r\n    resetName,\r\n    isMulti,\r\n    hideResetOpt\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? ( styles ) => {\r\n        return {\r\n            ...styles,\r\n            border: 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{ label: `-${resetName ? resetName : title}-`, value: null }]\r\n    if (options) defaultvalue = [...defaultvalue, ...options]\r\n    if (hideResetOpt) defaultvalue = defaultvalue.filter(val => val?.value)\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if (dimention <= 500) {\r\n        menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n        if (title === 'Categories') menuPlacement = 'top'\r\n    }\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                inputId={`${title}_${poListIdx}_${entryListIdx}`}\r\n                isMulti={isMulti}\r\n                isSearchable={dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : (selectedValue?.length ? selectedValue : false)}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={resetName ? resetName : placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={150}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#a8b1be',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    name\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n\r\n    // const input = document.getElementById(`qty_${poListIdx}_${entryListIdx}`)\r\n    // if (isEmpty && input) input.focus()\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nconst Note = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    isReadOnly,\r\n    poListIdx\r\n}) => {\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${grade === 'Waste' ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} border rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`note_${poListIdx}_${entryListIdx}`} readOnly={isReadOnly} autoComplete='off' className='w-100 plain-input' value={values} name='note' onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","module.exports = __webpack_public_path__ + \"static/media/refreshIcon.20a8ff95.svg\";","module.exports = __webpack_public_path__ + \"static/media/asc.9b60817e.svg\";","module.exports = __webpack_public_path__ + \"static/media/desc.bec03077.svg\";","import React, {useEffect,useState,useRef } from 'react'\r\nimport {Calendar,DateRangePicker } from 'react-date-range'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport './index.scss'\r\nimport {setDates} from './services'\r\n\r\nfunction useOutside({wrapperRef,showDate,setShowDate,selectDate}) {\r\n  useEffect(() => {\r\n      /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n      function handleClickOutside(event) {\r\n          if (showDate && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n              setShowDate(!showDate)\r\n              selectDate()\r\n          }\r\n      }\r\n\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n          // Unbind the event listener on clean up\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n  }, [wrapperRef,showDate]);\r\n}\r\n\r\nconst SKUDatePicker = ({ showDate, selectDate, setShowDate }) => {\r\n  let dimention = document.documentElement.clientWidth\r\n  dimention = dimention - 1555\r\n  const [dateRange, setDateRange] = useState({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n  const [date,setDate] = useState(new Date())\r\n  const [mode, setMode] = useState()\r\n\r\n  const singleDate = mode ? 'text' : 'bg-green text-white'\r\n  const multipleDate = mode ? 'bg-green text-white' : 'text'\r\n\r\n  const wrapperRef = useRef(null);\r\n  useOutside({wrapperRef,showDate,setShowDate,selectDate});\r\n\r\n  useEffect(() => {\r\n    setDateRange({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n    setDate(new Date())\r\n  },[mode])\r\n\r\n  const setDateValue = () => {\r\n    if(showDate){\r\n      mode ? selectDate(dateRange) : selectDate(date)\r\n      setShowDate()\r\n    } \r\n  }\r\n\r\n  return (\r\n    <div ref={wrapperRef} style={{ width: '350px' }} className={` mt-5 position-fixed bg-white border border-soft-green rounded z-100 d-flex flex-column justify-content-center ${showDate ? null : 'd-none'}`}>\r\n      <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <div className=' border border-soft-green d-flex rounded justify-content-between w-100 cursor-pointer'>\r\n        <span onClick={() => setMode(!mode)} className={` ${singleDate} w-50  ${mode ? 'rounded-left' : 'rounded'} text-center p-2`}>Single Date</span>\r\n        <span onClick={() => setMode(!mode)} className={` ${multipleDate} w-50 ${!mode ? 'rounded-right' : 'rounded'} text-center p-2`}>Ranged Date</span>\r\n        </div>\r\n      </div>\r\n    <DateRangePicker\r\n      className={mode ? null : 'd-none'}\r\n      ranges={[dateRange]}\r\n      onChange={newdate => setDates({newdate,dateRange,setDateRange})}\r\n      />\r\n    <Calendar\r\n    className={mode ? 'd-none' : null}\r\n      date={date}\r\n      onChange = {dt => setDate(dt)}\r\n    />\r\n    <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <span onClick={() => setDateValue()} className={` bg-green text-white w-100 border border-soft-green rounded text-center p-2`}>Confirm</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SKUDatePicker","export const setDates = ({newdate, dateRange,setDateRange}) => {\r\n    let dt = {...dateRange}\r\n    dt.startDate = newdate.selection.startDate\r\n    dt.endDate = newdate.selection.endDate\r\n    setDateRange(dt)\r\n  }","import React, { useState, useEffect } from 'react'\r\nimport { sortByInboundDate, filterByDate, dateDMY } from 'services'\r\nimport DatePicker from 'Component/DatePickerNew'\r\nimport asc from 'assets/icons/asc.svg'\r\nimport desc from 'assets/icons/desc.svg'\r\n\r\nconst Sort = ({ moduleEntry, moduleName, activeSku, dispatch }) => {\r\n    const [sortBy, setSortBy] = useState()\r\n    const [date, setDate] = useState()\r\n    const [showDate, setShowDate] = useState()\r\n    const [resetFilter, setResetFilter] = useState()\r\n    let dateShow;\r\n    const dimention = document.documentElement.clientWidth\r\n    dateShow = dateDMY({ date, datePicker: true })\r\n    if (dateShow?.startDate) dateShow = `${dateShow.startDate} - ${dateShow.endDate}`\r\n\r\n    useEffect(() => {\r\n        sortByInboundDate({ moduleEntry, moduleName, activeSku, dispatch, sortBy })\r\n    }, [sortBy, activeSku])\r\n\r\n    useEffect(_ => {\r\n        if (!showDate) filterByDate({ moduleEntry, moduleName, activeSku, dispatch, date })\r\n    }, [date, showDate, activeSku])\r\n\r\n    useEffect(_ => {\r\n        setSortBy()\r\n        setDate()\r\n    }, [resetFilter, activeSku])\r\n    return (\r\n        <div className='w-25 d-flex justify-content-end'>\r\n            {/* <div className='iconU-modalClose red border-soft-green border emptyTextField rounded px-2 pt-2 mr-3 cursor-pointer' onClick={() => setResetFilter(d => !d)} /> */}\r\n            <div style={{ height: 40 }} className={`${moduleName === 'repack' ? 'd-none' : null} border-soft-green border-top border-bottom border-left m-0 rounded-left green h6 d-flex align-items-center justify-content-center px-2 text-nowrap ${dimention > 500 ? (date ? null : 'd-none') : 'd-none'}`}>{dateShow}</div>\r\n            <div style={{ height: 40, minWidth: 40 }}\r\n                className={`${date ? 'iconU-modalClose red' : 'iconU-filterDate emptyTextField'} border-soft-green border ${date ? 'rounded-right' : 'rounded'} ${moduleName === 'repack' ? 'd-none' : null} d-flex align-items-center justify-content-center mr-3 cursor-pointer`}\r\n                onClick={() => date ? setResetFilter(d => !d) : setShowDate(d => !d)} />\r\n            <DatePicker showDate={showDate} selectDate={(date) => setDate(date)} setShowDate={(d) => setShowDate(d)} />\r\n            <img style={{ height: 40, minWidth: 40 }} src={sortBy ? desc : asc} onClick={() => setSortBy(!sortBy)} className='p-2 border rounded border-soft-green cursor-pointer' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sort","import React, { useEffect, useState } from 'react'\r\n\r\nconst InputImage = ({\r\n    isEmpty,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title\r\n}) => {\r\n    const [hover, setHover] = useState()\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n\r\n    return (\r\n        <div name='upload' className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`} onClick={() => hover && values ? onChange() : null}>\r\n            <div className={` pb-1 LatoBold text-nowrap ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div\r\n                onMouseLeave={() => setHover()}\r\n                onMouseEnter={() => setHover(true)}\r\n                style={{\r\n                    backgroundImage: `url(${values})`,\r\n                    backgroundSize: 'cover',\r\n                    opacity: 0.7,\r\n                    width: values ? 42 : false\r\n                }}\r\n                id='input-img'\r\n                className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green bg-white d-flex w-fit-content px-2 justify-content-center align-items-center input-height d-flex mr-3`}\r\n            >\r\n                {\r\n                    values && hover ?\r\n                        <div className=\"hand-cursor\" style={{ margin: 0 }}>\r\n                            <span style={{ fontSize: values ? 25 : false }} className={`photo_text hidden-xs ${values ? (hover ? 'iconU-entryTrash css-2613qy-menu' : null) : \" iconU-entryPhotos\"}`} />\r\n                        </div>\r\n                        :\r\n                        <label className=\"hand-cursor\" style={{ margin: 0 }}>\r\n                            <input name='upload' type=\"file\" nv-file-select uploader=\"$ctrl.uploader\" accept=\"image/x-png,image/gif,image/jpeg\" onChange={(e) => onChange(e)} />\r\n                            <span className=\"fa fa-camera\" />\r\n                            <span style={{ fontSize: values ? 25 : false }} className={`photo_text hidden-xs ${values ? (hover ? 'iconU-entryTrash css-2613qy-menu' : null) : \" iconU-entryPhotos\"}`} />\r\n                        </label>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputImage","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { getPoBySkuId, removeEntryModule } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { checkIsSkuRequired, filterBySkuName, totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade?.filter(grade => grade?.label === 'Waste' || grade?.label === 'Semi Waste')\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaId?.value),\r\n            list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    setLocalEntryData(jobSheet)\r\n    // dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade?.filter(grade => grade?.label === 'Waste' || grade?.label === 'Semi Waste')\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                list.isNewItem = true\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            po.itemList.map(item => {\r\n                const { qty, wasteType, note } = item\r\n                if ((qty == 0 || isNaN(qty)) && wasteType?.value === null) {\r\n                    item.qtyIsEmpty = false\r\n                    item.wasteTypeIsEmpty = false\r\n                    item.uploadPhotoIsEmpty = false\r\n                    item.noteIsEmpty = false\r\n                }\r\n                else {\r\n                    isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                    !wasteType?.value ? item.wasteTypeIsEmpty = true : item.wasteTypeIsEmpty = false\r\n                    !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                    // !uploadPhoto ? item.uploadPhotoIsEmpty = true : item.uploadPhotoIsEmpty = false\r\n                }\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                // if(!item.qtyIsEmpty) po.initialWeightOver > po.initialWeight ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                if (item?.qtyIsEmpty || item?.wasteTypeIsEmpty || item?.uploadPhotoIsEmpty || item?.noteIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}"],"sourceRoot":""}