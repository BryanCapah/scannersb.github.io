{"version":3,"sources":["Page/StockEntry/AdditionalOutbound/WeightEntry/SelectedSKUList/SelectedSKU/index.jsx","Page/StockEntry/AdditionalOutbound/WeightEntry/SelectedSKUList/index.jsx","Page/StockEntry/AdditionalOutbound/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry/index.jsx","Page/StockEntry/AdditionalOutbound/WeightEntry/WeightEntryList/WeightEntryCard/index.jsx","Page/StockEntry/AdditionalOutbound/WeightEntry/services.js","Page/StockEntry/AdditionalOutbound/WeightEntry/WeightEntryList/index.jsx","Page/StockEntry/AdditionalOutbound/WeightEntry/index.jsx","Component/Dropdown/index.jsx","Component/Input/index.jsx","assets/icons/refreshIcon.svg","assets/icons/asc.svg","assets/icons/desc.svg","Component/DatePickerNew/index.jsx","Component/DatePickerNew/services.js","Component/Sort/index.jsx","Page/StockEntry/AdditionalOutbound/services.js","Component/Input/text.jsx"],"names":["SelectedSKU","isNewItem","img","skuDescription","skuNumber","activeSku","uomValue","idx","uom","onClick","data","edited","getEditedData","isEmpty","checkisEmpty","onKeyDown","e","onEnter","className","src","alt","toUpperCase","SelectedSKUList","hideSKUList","setActiveSKU","moduleEntry","moduleName","setUpdateEntry","selectedSku","jobPost","list","length","dimention","document","documentElement","clientWidth","height","clientHeight","useState","hideContent","setHideContent","dispatch","useDispatch","thereAreRequest","useSelector","state","style","padding","content","placement","Reload","updateEntries","to","type","ADD_SKU","maxHeight","map","skuName","uomLabel","unitOfMeassures","totalQty","photo","WeightEntry","entryListIdx","wmsPoSkuInfoId","outboundTypeList","inputWidth","reason","showTitle","item","onChange","onChangeDropdown","totalPack","poListIdx","category","ripenessLevel","Input","qtyIsEmpty","values","qty","title","packIsEmpty","pack","name","Dropdown","outboundTypeIsEmpty","ddType","selectedValue","codeOutbound","selected","placeholder","options","filter","label","width","show","ripenessIsEmpty","ripeness","grade","noteIsEmpty","note","WeightEntryCard","poItem","expiryDate","inboundDate","initialWeight","inboundQty","initialWeightUpdate","initialWeightScreenUpdate","supplierName","poUuid","skuUuid","supplierId","wmsPoSkuCode","codeGrade","isHidden","initialWeightTotal","isNaN","uomType","dateFull","date","opacity","noTime","itemList","target","value","js","console","clear","test","newValue","arr","split","number","parseInt","commaNumber","undefined","sliceNumber","slice","poList","qtyToCompare","qtyToCompareIsEmpty","minus","over","totalListItemWeightCount","moduleList","initialWeightOver","CREATE_JOB_SHEET","updateJSWeightLine","updateJSWeightLineDropdown","Trash","deleteRow","countQty","push","addRow","isFloat","WeightEntryList","setHideSKUList","updateEntry","useEntryDimention","heightAdj","useAdditionalOutboundEntry","setIsSuccess","confirmation","setConfirmation","discard","setDiscard","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","isLoading","totalWeight","postInfo","status","isMobile","isPlural","isEdited","paddingLeft","module","close","discardEntry","id","removeEntryModule","PopUpSaved","submit","totalSku","PopUpRequired","noSkuChecking","isSuccess","save","saveJobSheet","submitValidation","Sort","minHeight","props","outboundEntryData","isDisabled","noMarginBottom","resetName","isMulti","hideResetOpt","isOpen","setIsOpen","useEffect","isEmptyStyle","styles","border","elem","getElementById","position","getBoundingClientRect","defaultvalue","val","menuPlacement","bottom","inputId","isSearchable","menuIsOpen","menuPortal","onMenuOpen","onMenuClose","menuPortalTarget","body","maxMenuHeight","base","zIndex","control","option","isFocused","isSelected","backgroundColor","color","cursor","fontWeight","theme","borderRadius","maxLength","autoComplete","exports","SKUDatePicker","showDate","selectDate","setShowDate","startDate","Date","endDate","key","dateRange","setDateRange","setDate","mode","setMode","singleDate","multipleDate","wrapperRef","useRef","handleClickOutside","event","current","contains","addEventListener","removeEventListener","useOutside","ref","ranges","newdate","dt","selection","setDates","dateShow","sortBy","setSortBy","resetFilter","setResetFilter","dateDMY","datePicker","sortByInboundDate","_","filterByDate","minWidth","d","desc","asc","selectSku","a","checked","setLocalEntryData","moduleSummary","warehouseUuid","areaId","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","jsD","sI","includes","getOutboundType","outboundType","getPoBySkuId","skuId","addPoItem","expiryMs","moment","valueOf","inBoundyMs","Number","isInteger","parseFloat","toLowerCase","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","areaSource","areaName","areaDestination","sort","b","filterBySkuName","preAddSku","preAddHandler","isClear","jsR","po","qtyCount","log","valid","checkIsSkuRequired","InputText"],"mappings":"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","file":"static/js/32.34ca35ed.chunk.js","sourcesContent":["import React from 'react'\r\nimport { getEditedData, checkisEmpty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { onEnter } from 'services'\r\nconst SelectedSKU = ({\r\n    isNewItem,\r\n    img,\r\n    skuDescription,\r\n    skuNumber,\r\n    activeSku,\r\n    uomValue,\r\n    idx,\r\n    uom,\r\n    onClick,\r\n    data\r\n}) => {\r\n    const edited = getEditedData({ data })\r\n    const isEmpty = checkisEmpty(data)\r\n    return (\r\n        <div onKeyDown={e => onEnter({ e, idx, onClick })} className={`w-100 sku-item softGreen pl-2 pr-2 pt-2 mb-3 cursor-pointer rounded ${edited ? 'soft-green' : null} ${activeSku === idx ? 'border-green' : (isEmpty ? 'border-red' : 'border')}`}>\r\n            <div className=\" w-100 d-flex justify-content-end\">\r\n                <div className={isNewItem ? 'green-dot' : 'dot'} />\r\n            </div>\r\n            <div onClick={() => onClick()} className={`w-100 softGreen d-flex justify-content-between pl-2 pr-2 mb-3 cursor-pointer ${edited ? 'soft-green' : null}`}>\r\n                <div className='d-flex align-items-center w-100'>\r\n                    <div className='d-flex align-items-center'>\r\n                        <img src={img} alt='sku image' className='w-5 mr-3 border softGreen rounded' />\r\n                    </div>\r\n                    <div className=\"w-100\">\r\n                        <div className='mr-3 w-100 d-flex'>\r\n                            <div className='mr-3 text LatoBold fontSizeTitle'>{skuDescription}</div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-between'>\r\n                            <div className='text'>{skuNumber}</div>{activeSku}\r\n                            <div className='green LatoBold'>{uomValue} <span>{`${uom ? uom.toUpperCase() : ''}${uomValue > 1 ? 's' : ''}`}</span></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKU","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ADD_SKU } from 'apiServices/action'\r\nimport './index.scss'\r\nimport SelectedSKU from 'Page/StockEntry/AdditionalOutbound/WeightEntry/SelectedSKUList/SelectedSKU'\r\nimport Reload from 'assets/icons/refreshIcon.svg'\r\nimport { updateEntries } from 'apiServices'\r\nimport { CTooltip } from '@coreui/react'\r\nconst SelectedSKUList = ({\r\n    hideSKUList,\r\n    setActiveSKU,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    setUpdateEntry,\r\n}) => {\r\n    const selectedSku = moduleEntry.jobPost.list.length\r\n    const dimention = document.documentElement.clientWidth\r\n    let height = document.documentElement.clientHeight\r\n    height = height - 212\r\n    const [hideContent, setHideContent] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const thereAreRequest = useSelector(state => state.thereAreRequest)\r\n    // const { sorted } = useIsNewItem({ setActiveSKU, moduleEntry, selectedSku })\r\n    return (\r\n        <div className={`${hideSKUList ? 'w-0' : 'w-30'}  mt-md-0 rounded-bottom rounded-top`}>\r\n            <div style={{ padding: 17 }} className='w-100 bg-white border-top border-left border-right rounded-top border-soft-green text d-flex align-items-center justify-content-between' onClick={() => dimention <= 500 ? setHideContent(!hideContent) : null}>\r\n                <div className=\"LatoBold\"> Selected SKU <span className='font-green'>{`(${selectedSku} SKU${selectedSku > 1 ? 's' : ''})`}</span></div>\r\n                <div className='d-flex align-items-center justify-content-between'>\r\n                    <CTooltip content={`Click to refresh the stock`} placement={dimention <= 500 ? 'left' : 'right'}>\r\n                        <div>\r\n                            <img className={`${thereAreRequest > 0 ? 'fa-spin-hover' : false} mt-1 pointer`} src={Reload} onClick={() => updateEntries({ moduleEntry, moduleName, dispatch, setUpdateEntry })} />\r\n                        </div>\r\n                    </CTooltip>\r\n                    <Link to='/inventory-entry/additional-outbound/weight-entry/remove-sku'>\r\n                        <div className=\"fontSizeTitle px-3 emptyTextField iconU-remove\" />\r\n                    </Link>\r\n                    <Link to='/inventory-entry/additional-outbound/weight-entry/add-sku'>\r\n                        <div onClick={() => dispatch({ type: ADD_SKU, [`${moduleName}AddSku`]: true })} className='fontSizeTitle emptyTextField text-bold iconU-entryAdd' ></div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div style={{ height: dimention <= 500 ? false : height, maxHeight: height }} className={` overflow-y w-100 bg-white mr-0 border rounded-bottom border-soft-green pl-3 pr-0 pt-3 ${hideContent ? 'd-none' : null}`}>\r\n                {\r\n                    moduleEntry?.jobPost?.list?.map((data, idx) =>\r\n                        <SelectedSKU\r\n                            isNewItem={data?.isNewItem}\r\n                            data={data}\r\n                            idx={idx}\r\n                            activeSku={activeSku}\r\n                            skuDescription={data?.skuName}\r\n                            skuNumber={data?.skuNumber}\r\n                            uomLabel={data?.unitOfMeassures}\r\n                            uomValue={data?.totalQty}\r\n                            uom={data?.unitOfMeassures}\r\n                            img={data?.photo}\r\n                            onClick={() => setActiveSKU(idx)}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedSKUList","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Dropdown from 'Component/Dropdown'\r\nimport Decimal from 'Component/Input/decimal'\r\nimport Input from 'Component/Input'\r\nimport InputText from 'Component/Input/text'\r\n\r\n\r\nconst WeightEntry = ({\r\n    entryListIdx,\r\n    wmsPoSkuInfoId,\r\n    outboundTypeList,\r\n    reason,\r\n    inputWidth,\r\n    showTitle,\r\n    item,\r\n    onChange,\r\n    onChangeDropdown,\r\n    uom,\r\n    totalPack,\r\n    poListIdx,\r\n    category\r\n}) => {\r\n    const ripenessLevel = useSelector(state => state.ripenessLevel)\r\n    return (\r\n        <div className='d-flex w-100 we-m'>\r\n            <Input\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                showTitle={showTitle}\r\n                title={'Input Quantity'}\r\n                onChange={(e) => onChange(e)} />\r\n\r\n            <Decimal\r\n                isEmpty={item.qtyIsEmpty}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                inputWidth={inputWidth}\r\n                values={item?.qty}\r\n                title={'Input Weight'}\r\n                showTitle={showTitle}\r\n                onChange={(e) => onChange(e)} />\r\n            <Input\r\n                isEmpty={item.packIsEmpty}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={'PACK'}\r\n                inputWidth={`${inputWidth} ${totalPack ? null : 'd-none'}`}\r\n                values={item?.pack}\r\n                showTitle={showTitle}\r\n                title={'Pack'}\r\n                name='pack'\r\n                onChange={(e) => onChange(e)} />\r\n            <Dropdown\r\n                isEmpty={item.outboundTypeIsEmpty}\r\n                ddType={'codeOutbound'}\r\n                selectedValue={item?.codeOutbound}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={'kg'}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'codeOutbound' })}\r\n                title='Select Outbound Type'\r\n                placeholder='Select Outbound Type'\r\n                options={outboundTypeList?.filter(data => data.label !== 'Stock Transfer')}\r\n                width='w-30 text-nowrap'\r\n                showTitle={showTitle}\r\n                show={true}\r\n            />\r\n            <Dropdown\r\n                // isDisabled={entryListIdx === 0 ? true : false}\r\n                isEmpty={item.ripenessIsEmpty}\r\n                selectedValue={item?.ripeness}\r\n                grade={item.grade?.label}\r\n                poListIdx={poListIdx}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                uom={uom}\r\n                show={true}\r\n                onChangeDropdown={(selected) => onChangeDropdown({ selected, name: 'ripeness' })}\r\n                title='Ripeness'\r\n                placeholder='Select Ripeness'\r\n                options={ripenessLevel}\r\n                width='w-30'\r\n                showTitle={showTitle}\r\n                className={item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste' ? 'd-none' : (category === 'Fruits' ? null : 'd-none')} />\r\n            <InputText\r\n                poListIdx={poListIdx}\r\n                isEmpty={item.noteIsEmpty}\r\n                entryListIdx={entryListIdx}\r\n                wmsPoSkuInfoId={wmsPoSkuInfoId}\r\n                inputWidth={'w-30'}\r\n                values={item?.note}\r\n                showTitle={showTitle}\r\n                title={'Note'}\r\n                onChange={(e) => onChange(e)} />\r\n        </div>\r\n    )\r\n}\r\nexport default WeightEntry","import React from \"react\";\r\nimport Trash from \"assets/icons/trash.png\";\r\nimport { dateFull, isFloat } from 'services';\r\nimport WeightEntry from \"Page/StockEntry/AdditionalOutbound/WeightEntry/WeightEntryList/WeightEntryCard/WeightEntry\";\r\nimport \"./index.scss\";\r\nimport {\r\n  addRow,\r\n  updateJSWeightLine,\r\n  updateJSWeightLineDropdown\r\n} from \"Page/StockEntry/AdditionalOutbound/WeightEntry/services\";\r\nimport {deleteRow,countQty} from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst WeightEntryCard = ({\r\n  inputWidth,\r\n  activeSku,\r\n  poListIdx,\r\n  poItem,\r\n  moduleEntry,\r\n  moduleName,\r\n  outboundTypeList,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    expiryDate,\r\n    inboundDate,\r\n    initialWeight,\r\n    inboundQty,\r\n    initialWeightUpdate,\r\n    initialWeightScreenUpdate,\r\n    poUuid,\r\n    skuUuid,\r\n    supplierId,\r\n    supplierName,\r\n    uom,\r\n    ripeness,\r\n    ripenessLevel,\r\n    edited,\r\n    wmsPoSkuCode,\r\n    category,\r\n    codeGrade,\r\n    totalPack,\r\n    isHidden\r\n  } = poItem;\r\n  const total = !isNaN(initialWeightUpdate) ? initialWeightUpdate : inboundQty;\r\n  const initialWeightTotal = !isNaN(initialWeightScreenUpdate) ? initialWeightScreenUpdate : initialWeight\r\n  const uomType = uom === \"kg\" || uom === \"gram\" ? \"Weight\" : \"Quantity\";\r\n  return (\r\n    <div\r\n      className={`${isHidden ? 'd-none' : null} d-flex flex-column justify-content-between w-100 mb-3 align-items-center border rounded border-soft-green ${edited ? \"soft-green\" : null\r\n        }`}\r\n    >\r\n\r\n      {/* Line 1 */}\r\n      <div className=\"w-100 border-soft-green mt-3 d-flex align-items-start px-3\">\r\n        <div className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex justify-content-between align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Inbound Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {inboundDate ? dateFull({ date: inboundDate }) : '-'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex align-items-center mb-3\">\r\n            {`Initial ${uomType}`}\r\n            <span className=\"ml-2 font-green\">\r\n              {` ${initialWeight} ${uom?.toUpperCase()}${initialWeight > 1 ? \"s\" : \"\"}`}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 2 */}\r\n\r\n      <div className=\"w-100 border-soft-green d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`PO Code`}\r\n              <span className=\"ml-2 font-green\">{` ${wmsPoSkuCode ? wmsPoSkuCode : '-'}`}</span>\r\n            </div>\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Supplier Name`}\r\n              <span className=\"ml-2 font-green\">{` ${supplierName}`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 3 */}\r\n      <div className=\"w-100 border-bottom border-soft-green mb-3 d-flex align-items-start px-3\">\r\n        <div style={{ opacity: 0 }} className=\"d-flex align-items-center LatoBold pr-3\">{`${poListIdx + 1\r\n          }.`}\r\n        </div>\r\n        <div className=\"w-100 d-flex align-items-center LatoBold cardheader-m\">\r\n          <div className=\"d-flex align-items-center cardheader-m\">\r\n            <div className=\"d-flex align-items-center mb-3 mr-5\">\r\n              {`Expiry Date`}\r\n              <span className=\"ml-2 font-green\">\r\n                {expiryDate ? dateFull({ date: expiryDate, noTime: true }) : '-'}\r\n              </span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-5`}>\r\n              {`Inbound Quantity`}\r\n              <span className=\"ml-2 font-green\">{` ${inboundQty ? inboundQty : '-'}`}</span>\r\n            </div>\r\n            <div className={`d-flex align-items-center mb-3 mr-5 ${totalPack ? null : 'd-none'}`}>\r\n              {`Total Pack`}\r\n              <span className=\"ml-2 font-green\">{` ${totalPack ? totalPack : '-'}`}</span>\r\n            </div>\r\n            {/* <div className={`d-flex align-items-center mb-3 mr-5 ${category === 'Fruits' || category === 'Vegetables' ? null : 'd-none'}`}>\r\n              {`Ripeness Level`}\r\n              <span className=\"ml-2 font-green\">{` ${ripenessLevel}`}</span>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex flex-column justify-content-between w-100 align-items-center px-3\">\r\n        {poItem.itemList?.map((item, entryListIdx) => {\r\n          return (\r\n            <div className=\"d-flex w-100 align-items-center justify-content-between\">\r\n              <div className=\"w-100 d-flex\">\r\n                <div style={{width:'10px'}} className=\"input-height d-flex align-items-center mb-3 mr-3 pt-4 mt-2\">{`${entryListIdx + 1}.`}</div>\r\n                <div className=\"w-100\">\r\n                  <WeightEntry\r\n                    category={category}\r\n                    poListIdx={poListIdx}\r\n                    entryListIdx={entryListIdx}\r\n                    wmsPoSkuInfoId={item.wmsPoSkuInfoId}\r\n                    showTitle={true}\r\n                    outboundTypeList={outboundTypeList}\r\n                    onChange={(e) =>\r\n                      updateJSWeightLine({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        e,\r\n                      })\r\n                    }\r\n                    onChangeDropdown={({ selected, name }) =>\r\n                      updateJSWeightLineDropdown({\r\n                        dispatch,\r\n                        moduleEntry,\r\n                        moduleName,\r\n                        activeSku,\r\n                        poListIdx,\r\n                        entryListIdx,\r\n                        selected,\r\n                        name,\r\n                      })\r\n                    }\r\n                    uom={uom}\r\n                    ripeness={ripeness}\r\n                    inputWidth={inputWidth}\r\n                    item={item}\r\n                    totalPack={totalPack}\r\n                    className={!ripeness ? \"d-none\" : null}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex w-25 align-items-center justify-content-end input-height mb-0 p-0\">\r\n                <img\r\n                  src={Trash}\r\n                  alt=\"delete icon\"\r\n                  className=\"w-1 cursor-pointer\"\r\n                  onClick={(e) =>\r\n                    deleteRow({\r\n                      dispatch,\r\n                      moduleEntry,\r\n                      moduleName,\r\n                      activeSku,\r\n                      poListIdx,\r\n                      entryListIdx,\r\n                      e,\r\n                      countQty\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        // className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer ${total === 0 ? 'd-none' : null}`}\r\n        className={`w-100 ml-5 pl-4 font-green mb-3 LatoBold cursor-pointer`}\r\n        onClick={() => addRow({\r\n          dispatch, moduleEntry,\r\n          moduleName, activeSku, poListIdx\r\n        })}\r\n      >\r\n        <i className=\"green iconU-entryAdd pr-2\"></i>\r\n        {`Add ${uomType} (${isFloat(initialWeightTotal) ? isFloat(initialWeightTotal) : initialWeightTotal} ${uom ? uom.toUpperCase() : ''}${initialWeightTotal > 1 ? \"s\" : \"\"} left)`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WeightEntryCard;\r\n","import { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nexport const updateJSWeightLine = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e\r\n}) => {\r\n    const name = e?.target?.name\r\n    let value = e?.target?.value\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n\r\n    console.clear()\r\n\r\n    if (name === 'weight' || name === 'weightToCompare') {\r\n        // js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = parseInt(value)\r\n        let regex = /^[0-9\\.\\x0]+$/\r\n        console.clear()\r\n        if ((regex.test(value) === true && value !== \"\")) {\r\n            let newValue = 0;\r\n            let arr = value?.split('.')\r\n            let number = arr[0];\r\n            if (number >= 0) number = parseInt(number)\r\n            let commaNumber = arr[1];\r\n\r\n            if ((commaNumber !== null && commaNumber !== undefined)) {\r\n                if (commaNumber.length > 2) {\r\n                    //jika dibelakang koma ada lebih dari 2 angka\r\n                    var sliceNumber = commaNumber.slice(0, 2);\r\n                    newValue = `${number}.${sliceNumber}`\r\n                } else {\r\n                    newValue = `${number}.${commaNumber}`\r\n                }\r\n            } else {\r\n                newValue = parseInt(number)\r\n            }\r\n\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = newValue\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompareIsEmpty = false\r\n            }\r\n\r\n        }\r\n        else {\r\n            //fill weight qty\r\n            if (name === 'weight') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = ''\r\n            }\r\n            if (name === 'weightToCompare') {\r\n                js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyToCompare = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    else if (name === 'qty') {\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qty = value ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].qtyIsEmpty = false\r\n    }\r\n\r\n    else if (name === 'pack') {\r\n        let regex = /^[0-9.]+$/\r\n        if ((regex.test(value) === false && value !== \"\")) {\r\n            return;\r\n        }\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].pack = value > 0 ? parseInt(value) : value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].packIsEmpty = false\r\n    }\r\n    if (name === 'reason') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].note = value\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].noteIsEmpty = false\r\n    }\r\n\r\n    const initialWeight = js.jobPost.list[activeSku].poList[poListIdx].inboundQty\r\n    let initialWeightUpdate = initialWeight\r\n    js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        initialWeightUpdate = initialWeightUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = initialWeightUpdate\r\n        if (initialWeightUpdate < 0) {\r\n            js.jobPost.list[activeSku].poList[poListIdx].minus = false\r\n            js.jobPost.list[activeSku].poList[poListIdx].initialWeightUpdate = 0\r\n        }\r\n        else {\r\n            js.jobPost.list[activeSku].poList[poListIdx].itemList.filter(item => { return item.qtyIsEmpty = false })\r\n        }\r\n    })\r\n\r\n    //initial weight from it self\r\n    const initialWeightScreen = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n    let initialWeightScreenUpdate = initialWeightScreen\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.map(data => {\r\n        initialWeightScreenUpdate = initialWeightScreenUpdate - (!isNaN(data.qty) ? data.qty : 0)\r\n        js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = initialWeightScreenUpdate\r\n    })\r\n    //end of initial weight from it self\r\n\r\n    const over = totalListItemWeightCount({ moduleList: js.jobPost.list[activeSku].poList[poListIdx].itemList })\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightOver = over > initialWeight ? over : 0\r\n\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const updateJSWeightLineDropdown = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    selected,\r\n    name\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].isNewItem = false\r\n\r\n    if (name === 'codeOutbound') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].codeOutbound = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].outboundTypeIsEmpty = false\r\n    }\r\n    if (name === 'ripeness') {\r\n        js.jobPost.list[activeSku].poList[poListIdx].itemList[entryListIdx].ripeness = selected\r\n        js.jobPost.list[activeSku].poList[poListIdx].edited = true\r\n    }\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const addRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.push({\r\n        qty: '',\r\n        codeOutbound: { label: '', value: '' },\r\n        note: ''\r\n    })\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport WeightEntryCard from 'Page/StockEntry/AdditionalOutbound/WeightEntry/WeightEntryList/WeightEntryCard'\r\nimport { removeEntryModule, saveJobSheet } from 'apiServices'\r\nimport { submitValidation } from 'Page/StockEntry/AdditionalOutbound/services'\r\nimport { ModalsConfirmation as Confirmation } from 'Component/Modal/ModalConfirmation'\r\nimport PopUpSaved from \"Component/Modal/PopUpSaved\";\r\nimport PopUpRequired from \"Component/Modal/PopUpRequired\";\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport Sort from 'Component/Sort'\r\nimport { useAdditionalOutboundEntry, useEntryDimention } from 'Page/StockEntry/GeneralServices'\r\n\r\nconst WeightEntryList = ({\r\n    setActiveSKU,\r\n    hideSKUList,\r\n    setHideSKUList,\r\n    activeSku,\r\n    moduleEntry,\r\n    moduleName,\r\n    updateEntry,\r\n    setUpdateEntry\r\n}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { height, heightAdj, dimention } = useEntryDimention()\r\n\r\n    const {\r\n        setIsSuccess,\r\n        confirmation,\r\n        setConfirmation,\r\n        discard,\r\n        setDiscard,\r\n        isSaved,\r\n        setIsSaved,\r\n        action,\r\n        setAction,\r\n        isRequired,\r\n        setIsRequired,\r\n        hideContent,\r\n        setHideContent,\r\n        isLoading,\r\n        skuName,\r\n        skuNumber,\r\n        poList,\r\n        unitOfMeassures,\r\n        totalWeight,\r\n        edited,\r\n        postInfo,\r\n        outboundTypeList,\r\n        status,\r\n    } = useAdditionalOutboundEntry({ moduleEntry, activeSku })\r\n\r\n    //Condition\r\n    const isMobile = dimention <= 500\r\n    const isHidden = hideContent ? 'd-none' : null\r\n    const isPlural = totalWeight > 1 ? \"s\" : ''\r\n    const isEdited = edited ? 'bg-green' : 'bg-lineGrey'\r\n    return (\r\n        <div style={{ paddingLeft: isMobile ? 0 : 10 }} className='w-100 h-100 mt-3 mt-md-0'>\r\n            <Discard\r\n                discard={discard}\r\n                module={'Inventory Entry - Additional Outbound'}\r\n                moduleEntry={moduleEntry}\r\n                close={() => setDiscard(false)}\r\n                discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch })}\r\n            />\r\n            <PopUpSaved\r\n                updateEntry={updateEntry}\r\n                setUpdateEntry={setUpdateEntry}\r\n                status={status}\r\n                moduleEntry={moduleEntry}\r\n                submit={() => dispatch({ type: 'CREATE_JOB_SHEET', [`${moduleName}EntryData`]: null, [`${moduleName}SummaryData`]: null })}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSaved={isSaved}\r\n                action={action}\r\n                setIsSaved={setIsSaved}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <PopUpRequired\r\n                isRequired={isRequired}\r\n                module={moduleEntry}\r\n                setIsRequired={setIsRequired}\r\n                moduleName={moduleName}\r\n                totalSku={moduleEntry?.jobPost?.list.length}\r\n\r\n            />\r\n            <Confirmation\r\n                noSkuChecking={true}\r\n                moduleName={moduleName}\r\n                isLoading={isLoading}\r\n                moduleEntry={moduleEntry}\r\n                confirmation={confirmation}\r\n                setConfirmation={setConfirmation}\r\n                isSuccess={postInfo}\r\n                setAction={setAction}\r\n                action={action}\r\n                save={() => saveJobSheet({ name: 'save', moduleEntry, moduleName, dispatch, setIsSuccess })}\r\n                submit={() => saveJobSheet({ name: 'submit', moduleEntry, moduleName, dispatch, setIsSuccess, submitValidation, setActiveSKU })}\r\n            />\r\n            <div className='mb-3 bg-white rounded-bottom rounded-top'>\r\n                <div style={{ height }} style={{ padding: 10 }} className='w-100 mr-0 d-flex align-items-center border-top border-left border-right border-bottom rounded-top border-soft-green'>\r\n                    <div className='d-flex w-100 m-0 p-0' onClick={() => isMobile ? setHideContent(!hideContent) : null}>\r\n                        <div className={`${hideSKUList ? 'iconU-sideBarHideRight' : 'iconU-sideBarHideLeft'} emptyTextField fontSizeTitle mr-3 m-0 p-0`} onClick={() => setHideSKUList(!hideSKUList)} />\r\n                        <div className='mr-3 pr-1 d-flex align-items-center m-0 p-0 LatoBold'>Weight Entry</div>\r\n                        <div className='mr-3 iconU-sideBarDot d-flex align-items-center m-0 p-0' />\r\n                        <div className='mr-3 d-flex align-items-center font-green LatoBold m-0 p-0'>{`${skuName} (${skuNumber})`}</div>\r\n                    </div>\r\n                    <Sort moduleEntry={moduleEntry} moduleName={moduleName} activeSku={activeSku} dispatch={dispatch} />\r\n                </div>\r\n                <div style={{ height: isMobile ? height : heightAdj, minHeight: isMobile ? height : heightAdj }} className={`w-100 overflow-y mr-0 border-left border-right border-soft-green pl-3 pr-2 pt-3 ${isHidden}`}>\r\n                    {\r\n                        poList?.map((poItem, idx) => {\r\n                            return <WeightEntryCard\r\n                                outboundTypeList={outboundTypeList}\r\n                                inputWidth='input-w-100'\r\n                                activeSku={activeSku}\r\n                                poListIdx={idx}\r\n                                poItem={poItem}\r\n                                moduleEntry={moduleEntry}\r\n                                moduleName={moduleName}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <div className='w-100 d-flex align-items-center p-3 border-left border-right border-bottom rounded-bottom LatoBold'>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={`btn ${isEdited}  text-white px-5 mr-3 LatoBold`}\r\n                        onClick={() => edited ? setConfirmation({ show: true, name: 'save' }) : null}>\r\n                        Save\r\n                    </button>\r\n                    <div>Total Weight <span className='font-green'>{`${totalWeight} ${unitOfMeassures?.toUpperCase()}${isPlural}`}</span></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end\">\r\n                <div onClick={() => setDiscard(true)} className='red pr-3 fontSizeButton cursor-pointer'><i className='iconU-entryTrash'></i> Discard</div>\r\n                <button onClick={() => edited ? submitValidation({ setActiveSKU, moduleEntry, moduleName, dispatch, setConfirmation, setIsRequired }) : null} className={`btn px-5 py-2 text-white ${isEdited} LatoBold no-shadow`} style={{ height: \"fit-content !important\" }} >Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntryList","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport SelectedSKUList from 'Page/StockEntry/AdditionalOutbound/WeightEntry/SelectedSKUList'\r\nimport WeightEntryList from 'Page/StockEntry/AdditionalOutbound/WeightEntry/WeightEntryList'\r\n\r\n\r\nconst WeightEntry = (props) => {\r\n    const outboundEntryData = useSelector(state => state.outboundEntryData)\r\n    const [hideSKUList, setHideSKUList] = useState(false)\r\n    const [activeSku, setActiveSKU] = useState(0)\r\n    const [updateEntry, setUpdateEntry] = useState()\r\n    const [allowPage, setAllowPage] = useState([\r\n        '/inventory-entry/additional-outbound/weight-entry',\r\n        '/inventory-entry/additional-outbound/remove-sku',\r\n        '/inventory-entry/additional-outbound/add-sku',\r\n    ])\r\n    let height = document.documentElement.clientHeight\r\n    let clientWidth = document.documentElement.clientWidth\r\n    let heightAdj = height - 150\r\n    const moduleName = 'outbound'\r\n    if (!outboundEntryData || outboundEntryData?.jobPost.list.length === 0) {\r\n        return (\r\n            <div className='d-flex align-items-center justify-content-center text-center w-100 h-screen'><Redirect to='/inventory-entry/additional-outbound'>Please Select At Least 1 SKU</Redirect></div >)\r\n    }\r\n    return (\r\n        <div style={{ height: clientWidth <= 500 ? height : heightAdj }} className='w-100 d-md-flex justify-content-between scroll-y z-0'>\r\n            <SelectedSKUList\r\n                hideSKUList={hideSKUList}\r\n                activeSku={activeSku}\r\n                setActiveSKU={setActiveSKU}\r\n                moduleName={moduleName}\r\n                moduleEntry={outboundEntryData}\r\n                setUpdateEntry={setUpdateEntry}\r\n            />\r\n            <WeightEntryList\r\n                setActiveSKU={setActiveSKU}\r\n                setHideSKUList={setHideSKUList}\r\n                hideSKUList={hideSKUList}\r\n                moduleName={moduleName}\r\n                moduleEntry={outboundEntryData}\r\n                activeSku={activeSku}\r\n                setUpdateEntry={setUpdateEntry}\r\n                updateEntry={updateEntry}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightEntry","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Dropdown = ({\r\n    isEmpty,\r\n    title,\r\n    placeholder,\r\n    options,\r\n    selectedValue,\r\n    showTitle,\r\n    width,\r\n    className,\r\n    entryListIdx,\r\n    onChangeDropdown,\r\n    show,\r\n    poListIdx,\r\n    isDisabled,\r\n    style,\r\n    noMarginBottom,\r\n    resetName,\r\n    isMulti,\r\n    hideResetOpt\r\n}) => {\r\n    const onChangeHandler = (selected) => {\r\n        onChangeDropdown(selected)\r\n        setIsOpen(false)\r\n    }\r\n    const [isOpen, setIsOpen] = useState()\r\n    useEffect(() => {\r\n        if (selectedValue === 'empty') setIsOpen(true)\r\n    }, [selectedValue, isEmpty])\r\n    const isEmptyStyle = isEmpty ? ( styles ) => {\r\n        return {\r\n            ...styles,\r\n            border: 'solid #eb5c5c 1px',\r\n            ':hover': { border: 'solid #eb5c5c 1px !important' },\r\n            ':active': { border: 'solid #eb5c5c 1px !important' },\r\n\r\n        }\r\n    } : false\r\n\r\n    const elem = document?.getElementById(`dropdown${entryListIdx}${poListIdx}`);\r\n    let position = elem?.getBoundingClientRect()\r\n\r\n    useEffect(() => {\r\n        position = elem?.getBoundingClientRect()\r\n    }, [isOpen])\r\n\r\n    const dimention = document.documentElement.clientWidth\r\n    let defaultvalue = [{ label: `-${resetName ? resetName : title}-`, value: null }]\r\n    if (options) defaultvalue = [...defaultvalue, ...options]\r\n    if (hideResetOpt) defaultvalue = defaultvalue.filter(val => val?.value)\r\n    let menuPlacement = position?.bottom > 600 ? 'top' : 'bottom'\r\n    if (dimention <= 500) {\r\n        menuPlacement = position?.bottom > 400 ? 'top' : 'bottom'\r\n        if (title === 'Categories') menuPlacement = 'top'\r\n    }\r\n    return (\r\n        <div style={style} className={`mr-0 ${style ? null : 'mr-lg-3'} ${noMarginBottom ? null : 'mb-3'} ${width} ${className} ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <Select\r\n                inputId={`${title}_${poListIdx}_${entryListIdx}`}\r\n                isMulti={isMulti}\r\n                isSearchable={dimention < 500 ? false : true}\r\n                isDisabled={isDisabled ? isDisabled : false}\r\n                id={`dropdown${entryListIdx}${poListIdx}`}\r\n                value={selectedValue?.value ? selectedValue : (selectedValue?.length ? selectedValue : false)}\r\n                menuIsOpen={isOpen}\r\n                menuPortal\r\n                placeholder={resetName ? resetName : placeholder}\r\n                options={defaultvalue}\r\n                onMenuOpen={() => setIsOpen(true)}\r\n                onMenuClose={() => setIsOpen(false)}\r\n                onChange={onChangeHandler}\r\n                menuPortalTarget={document.body}\r\n                maxMenuHeight={150}\r\n                menuPlacement={`${menuPlacement}`}\r\n                // isClearable={true}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n                    control: isEmptyStyle,\r\n                    option: (styles,\r\n                        { isFocused, isSelected }) => {\r\n                        return {\r\n                            ...styles,\r\n                            backgroundColor: isSelected ? 'rgb(242, 250, 246, 0)' : isFocused ? 'rgb(242, 250, 246)' : null,\r\n                            color: isSelected ? 'black' : '#a8b1be',\r\n                            cursor: 'pointer',\r\n                            fontWeight: isSelected ? 'bold' : null,\r\n                            ':active': {\r\n                                backgroundColor: 'rgb(242, 250, 246) !important',\r\n                                color: '#4abe84'\r\n                            },\r\n                            ':hover': {\r\n                                color: !isSelected ? '#4abe84' : null\r\n                            },\r\n                        };\r\n                    },\r\n                }}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 4,\r\n                })} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dropdown","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    grade,\r\n    title,\r\n    name\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' ? false : true\r\n\r\n    // const input = document.getElementById(`qty_${poListIdx}_${entryListIdx}`)\r\n    // if (isEmpty && input) input.focus()\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`qty_${poListIdx}_${entryListIdx}`} maxLength='10' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={name ? name : 'qty'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","module.exports = __webpack_public_path__ + \"static/media/refreshIcon.de5bc1ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/asc.9b60817e.svg\";","module.exports = __webpack_public_path__ + \"static/media/desc.bec03077.svg\";","import React, {useEffect,useState,useRef } from 'react'\r\nimport {Calendar,DateRangePicker } from 'react-date-range'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport './index.scss'\r\nimport {setDates} from './services'\r\n\r\nfunction useOutside({wrapperRef,showDate,setShowDate,selectDate}) {\r\n  useEffect(() => {\r\n      /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n      function handleClickOutside(event) {\r\n          if (showDate && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n              setShowDate(!showDate)\r\n              selectDate()\r\n          }\r\n      }\r\n\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n          // Unbind the event listener on clean up\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n  }, [wrapperRef,showDate]);\r\n}\r\n\r\nconst SKUDatePicker = ({ showDate, selectDate, setShowDate }) => {\r\n  let dimention = document.documentElement.clientWidth\r\n  dimention = dimention - 1555\r\n  const [dateRange, setDateRange] = useState({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n  const [date,setDate] = useState(new Date())\r\n  const [mode, setMode] = useState()\r\n\r\n  const singleDate = mode ? 'text' : 'bg-green text-white'\r\n  const multipleDate = mode ? 'bg-green text-white' : 'text'\r\n\r\n  const wrapperRef = useRef(null);\r\n  useOutside({wrapperRef,showDate,setShowDate,selectDate});\r\n\r\n  useEffect(() => {\r\n    setDateRange({startDate: new Date(),endDate: new Date(),key: 'selection'})\r\n    setDate(new Date())\r\n  },[mode])\r\n\r\n  const setDateValue = () => {\r\n    if(showDate){\r\n      mode ? selectDate(dateRange) : selectDate(date)\r\n      setShowDate()\r\n    } \r\n  }\r\n\r\n  return (\r\n    <div ref={wrapperRef} style={{ width: '350px' }} className={` mt-5 position-fixed bg-white border border-soft-green rounded z-100 d-flex flex-column justify-content-center ${showDate ? null : 'd-none'}`}>\r\n      <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <div className=' border border-soft-green d-flex rounded justify-content-between w-100 cursor-pointer'>\r\n        <span onClick={() => setMode(!mode)} className={` ${singleDate} w-50  ${mode ? 'rounded-left' : 'rounded'} text-center p-2`}>Single Date</span>\r\n        <span onClick={() => setMode(!mode)} className={` ${multipleDate} w-50 ${!mode ? 'rounded-right' : 'rounded'} text-center p-2`}>Ranged Date</span>\r\n        </div>\r\n      </div>\r\n    <DateRangePicker\r\n      className={mode ? null : 'd-none'}\r\n      ranges={[dateRange]}\r\n      onChange={newdate => setDates({newdate,dateRange,setDateRange})}\r\n      />\r\n    <Calendar\r\n    className={mode ? 'd-none' : null}\r\n      date={date}\r\n      onChange = {dt => setDate(dt)}\r\n    />\r\n    <div className='d-flex justify-content-between w-100 cursor-pointer p-3'>\r\n        <span onClick={() => setDateValue()} className={` bg-green text-white w-100 border border-soft-green rounded text-center p-2`}>Confirm</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SKUDatePicker","export const setDates = ({newdate, dateRange,setDateRange}) => {\r\n    let dt = {...dateRange}\r\n    dt.startDate = newdate.selection.startDate\r\n    dt.endDate = newdate.selection.endDate\r\n    setDateRange(dt)\r\n  }","import React, { useState, useEffect } from 'react'\r\nimport { sortByInboundDate, filterByDate, dateDMY } from 'services'\r\nimport DatePicker from 'Component/DatePickerNew'\r\nimport asc from 'assets/icons/asc.svg'\r\nimport desc from 'assets/icons/desc.svg'\r\n\r\nconst Sort = ({ moduleEntry, moduleName, activeSku, dispatch }) => {\r\n    const [sortBy, setSortBy] = useState()\r\n    const [date, setDate] = useState()\r\n    const [showDate, setShowDate] = useState()\r\n    const [resetFilter, setResetFilter] = useState()\r\n    let dateShow;\r\n    const dimention = document.documentElement.clientWidth\r\n    dateShow = dateDMY({ date, datePicker: true })\r\n    if (dateShow?.startDate) dateShow = `${dateShow.startDate} - ${dateShow.endDate}`\r\n\r\n    useEffect(() => {\r\n        sortByInboundDate({ moduleEntry, moduleName, activeSku, dispatch, sortBy })\r\n    }, [sortBy, activeSku])\r\n\r\n    useEffect(_ => {\r\n        if (!showDate) filterByDate({ moduleEntry, moduleName, activeSku, dispatch, date })\r\n    }, [date, showDate, activeSku])\r\n\r\n    useEffect(_ => {\r\n        setSortBy()\r\n        setDate()\r\n    }, [resetFilter, activeSku])\r\n    return (\r\n        <div className='w-25 d-flex justify-content-end'>\r\n            {/* <div className='iconU-modalClose red border-soft-green border emptyTextField rounded px-2 pt-2 mr-3 cursor-pointer' onClick={() => setResetFilter(d => !d)} /> */}\r\n            <div style={{ height: 40 }} className={`${moduleName === 'repack' ? 'd-none' : null} border-soft-green border-top border-bottom border-left m-0 rounded-left green h6 d-flex align-items-center justify-content-center px-2 text-nowrap ${dimention > 500 ? (date ? null : 'd-none') : 'd-none'}`}>{dateShow}</div>\r\n            <div style={{ height: 40, minWidth: 40 }}\r\n                className={`${date ? 'iconU-modalClose red' : 'iconU-filterDate emptyTextField'} border-soft-green border ${date ? 'rounded-right' : 'rounded'} ${moduleName === 'repack' ? 'd-none' : null} d-flex align-items-center justify-content-center mr-3 cursor-pointer`}\r\n                onClick={() => date ? setResetFilter(d => !d) : setShowDate(d => !d)} />\r\n            <DatePicker showDate={showDate} selectDate={(date) => setDate(date)} setShowDate={(d) => setShowDate(d)} />\r\n            <img style={{ height: 40, minWidth: 40 }} src={sortBy ? desc : asc} onClick={() => setSortBy(!sortBy)} className='p-2 border rounded border-soft-green cursor-pointer' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sort","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { getPoBySkuId, removeEntryModule } from 'apiServices'\r\nimport { getOutboundType } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { checkIsSkuRequired, filterBySkuName, totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const outboundType = await getOutboundType({})\r\n            list['outboundTypeList'] = outboundType\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    if (areaId?.label?.toLowerCase() !== 'staging') poList.totalPack = null\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaId?.value),\r\n            list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    setLocalEntryData(jobSheet)\r\n    // dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const outboundType = await getOutboundType({})\r\n            list['outboundTypeList'] = outboundType\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    if (areaId?.label?.toLowerCase() !== 'staging') poList.totalPack = null\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                list.isNewItem = true\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//remove sku\r\nexport const removeSku = async ({ dispatch, moduleEntry, moduleName }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n    const list = moduleEntry.jobPost.list.filter(data => { if (data.checked) return data })\r\n    jobSheet.jobPost.list = list\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n    if (list.length === 0) removeEntryModule({ id: jobSheet.jobPost.id, moduleName, dispatch })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            const { totalPack } = po\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            po.itemList.map(item => {\r\n                const { qty, grade, ripeness, reason, pack } = item\r\n                isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                !item?.codeOutbound?.value ? item.outboundTypeIsEmpty = true : item.outboundTypeIsEmpty = false\r\n\r\n                //outbound type lainnya tidak boleh kosong\r\n                if (item?.codeOutbound?.value == 'lainnya') {\r\n                    item?.note == '' || item?.note === undefined ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                } else {\r\n                    item.noteIsEmpty = false\r\n                }\r\n                if (js.jobPost.areaName?.toLowerCase() === 'staging' && (data?.category === 'Fruits' || data?.category === 'Vegetables' ? true : false)) {\r\n                    if (!pack && totalPack > 0) item.packIsEmpty = true\r\n                }\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n                // if(!item.qtyIsEmpty) po.initialWeightOver > po.initialWeight ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                if (item?.qtyIsEmpty || item?.outboundTypeIsEmpty || item?.noteIsEmpty || item?.packIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n    console.log(isClear);\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}","import React from 'react'\r\n\r\nconst InputText = ({ placeholder, inputWidth, values, showTitle, title, isEmpty, onChange, poListIdx, entryListIdx }) => {\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`noteob_${poListIdx}_${entryListIdx}`} autoComplete='off' type='text' className='w-100 plain-input' value={values} name='reason' placeholder={placeholder} onChange={(e) => onChange(e)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputText"],"sourceRoot":""}