{"version":3,"sources":["Page/StockEntry/GeneralServices/moduleServices.js","apiServices/index.js","apiServices/dropdown/index.js"],"names":["selectedSkuCheck","moduleEntry","count","jobPost","list","map","data","checked","addSku","a","dispatch","moduleSummary","moduleName","jobSheet","push","filtered","sort","b","filterBySkuName","type","CREATE_JOB_SHEET","length","getEditedData","edited","poList","item","totalWeightCount","activeSku","total","po","itemList","qqq","Number","isInteger","qty","parseInt","parseFloat","toFixed","totalPackCount","pack","jobSheetChecker","totalQty","checkisEmpty","isRequired","qtyIsEmpty","noteIsEmpty","outboundTypeIsEmpty","ripenessIsEmpty","gradeIsEmpty","packIsEmpty","responseCheck","isLoading","summaryData","preRemoveSku","idx","totalListItemWeightCount","moduleList","removeSku","filter","removeEntryModule","id","resetSKU","setAreaId","selected","SET_AREA","areaId","countQty","poListIdx","entryListIdx","number","deleteRow","e","js","update","initialWeight","initialWeightScreenUpdate","splice","setSwitch","search","updateList","zeroQuantity","stockMovementTargetRepack","isMovement","filterTargetRepack","targetRepacks","gradeList","slot","targetMovement","colWidth","document","documentElement","clientWidth","value","includes","skuUuid","grade","gr","label","totalPack","totalMove","countPackMovement","countPack","targetUom","targetUos","percent","warehouse","skuName","targetDate","no","undefined","slotList","s","columns","Header","placeholder","accessor","width","style","textAlign","display","justifyContent","className","headerClassName","updateTargetRepack","setTargetRepack","updatedTargetRepacks","ls","concat","nameA","toUpperCase","nameB","filterCheckedSku","localEntryData","summary","setLocalEntryData","warehouseUuid","areaIdDesposition","filteredSku","module","warehouseSource","warehouseDestination","areaSource","areaName","areaDestination","areaDestinationName","isExist","f","filterCheckedAddSku","newModuleEntry","isNewItem","setSingleViewSku","skuUuId","getGrade","skuId","getPoBySkuId","addPoItem","poItems","expiryMs","expiryDate","moment","valueOf","inBoundyMs","inboundDate","targetMovements","uom","unitOfMeassures","category","getPoList","newEntry","warehouseId","getPoRepack","packSize","getPORepacking","totalWeight","updateSummary","setSummary","newSummary","checkRequiredData","requiredSku","requiredName","requiredPo","requiredItem","data2","idx2","data3","idx3","reasonIsEmpty","checkIsSkuRequired","setActiveSKU","getElementById","input","focus","getUserData","sessionId","setComplete","GET_USER","status","url","axios","headers","isSuccess","user","message","code","statusMessage","throwErrorStatus","userLogout","email","logout","USER_LOGOUT","window","location","replace","checkSessionId","getPoByPoCode","setModule","poNumber","setSkuList","param","toLowerCase","entryData","wait","ripeness","codeGrade","inboundQty","photo","skuNumber","supplierId","supplierName","wmsPoSkuCode","ddGrade","findIndex","expiryDateText","dateDMY","date","Promise","all","console","log","getStockTakeSummary","targetRepack","singleView","desc","areaIdDestination","transaction","categoryParam","GET_STOCK_TAKE_ACTION","dt","skuList","d","isFloat","sku","targetMovementProgress","targetRepackProgress","originalUom","getStockTakeSummaryAddSku","selectedSkusNumber","tmp","getUnfinishedEntries","IS_LOADING","savedJs","lists","getOutboundType","outboundTypeList","ripenessLevel","weight","outboundType","outbound","isNaN","initialWeightUpdate","initialWeightOver","STATUS","setDiscard","validatePoSkuInfoId","skuData","bulk","method","then","response","VALIDATE_PO_SKU_INFO_ID","skuCodeValidated","validateSkuNumber","skuNumberData","skuNumberValidated","submitCsv","dataCsv","setSubmitStatus","source","submitCsvStockTransfer","catch","error","submitCsvTargetRepack","saveJobSheet","setIsSuccess","name","table","finalModule","Object","assign","JSON","parse","stringify","post","success","moduleEntrywithId","saveImage","file","target","files","options","maxSizeMB","maxWidthOrHeight","useWebWorker","fileType","imageCompression","compressedFile","newFile","File","formData","FormData","append","getWasteWarehouseArea","getWarehouses","getLatestSyncHistories","newData","updatedAt","dateFull","lastSyncHistories","syncAllHistories","setSubmit","getCategories","categoryList","getWarehouseArea","WAREHOUSE_AREA","warehouseAreaCsv","getRipenessLevel","ddList","i","String","RIPENESS_LEVEL","skuDescription","multiplier","parentToChildMultiplier","OUTBOUND_TYPE","outboundTypeCsv","listItem","description","getWarehouse","getWasteReason","dropdown","wasteReasonList"],"mappings":"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","file":"static/js/14.88f976b5.chunk.js","sourcesContent":["import { CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { getPoBySkuId, getPORepacking, removeEntryModule } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport moment from 'moment'\r\n\r\n// check selected sku\r\nexport const selectedSkuCheck = ({ moduleEntry }) => {\r\n    let count = 0\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            if (data.checked) count = count + 1\r\n        })\r\n    }\r\n\r\n    return count\r\n}\r\n\r\n//add new SKU\r\nexport const addSku = async ({ dispatch, moduleEntry, moduleSummary, moduleName }) => {\r\n    let jobSheet = { ...moduleSummary }\r\n    moduleEntry.map((data) => {\r\n        jobSheet.jobPost.list.push(data)\r\n    })\r\n    const filtered = jobSheet.jobPost.list?.sort(function (a, b) { return filterBySkuName(a, b) })\r\n    jobSheet.jobPost.list = filtered\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet.jobPost.list.length > 0 ? jobSheet : null });\r\n}\r\n\r\n// get selected sku\r\nexport const getEditedData = ({ data }) => {\r\n    let edited = false;\r\n    const a = data?.poList?.map(item => {\r\n        if (item.edited) edited = true\r\n    })\r\n    return edited\r\n}\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const { qty, grade, ripeness, note } = item\r\n\r\n                if (po.category === 'Fruits') {\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                            isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                        else {\r\n                            isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                            !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                            !ripeness?.value ? item.ripenessIsEmpty = true : item.ripenessIsEmpty = false\r\n                            grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                        item.qtyIsEmpty = false\r\n                        item.gradeIsEmpty = false\r\n                        item.ripenessIsEmpty = false\r\n                        item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        isNaN(qty) || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                    }\r\n                }\r\n\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item?.ripenessIsEmpty || item?.noteIsEmpty || item?.qtyToCompareIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item?.qty >= 0) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        setConfirmation({ show: false, name: null })\r\n        setIsRequired(true)\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}\r\n\r\nexport const totalWeightCount = ({ moduleEntry, activeSku }) => {\r\n    let total = 0\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list[activeSku].poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const qqq = Number.isInteger(item.qty) ? parseInt(item.qty) : Number.parseFloat(item.qty ? item.qty : 0)\r\n                total += qqq\r\n            })\r\n        })\r\n    }\r\n    total = Number.isInteger(total) ? total : Number.parseFloat(total).toFixed(2)\r\n    return total\r\n}\r\n\r\nexport const totalPackCount = ({ moduleEntry, activeSku }) => {\r\n    let total = 0\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list[activeSku].poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const qqq = Number.isInteger(item.pack) ? parseInt(item.pack) : Number.parseFloat(item.pack ? item.pack : 0)\r\n                total += qqq\r\n            })\r\n        })\r\n    }\r\n    total = Number.isInteger(total) ? total : Number.parseFloat(total).toFixed(2)\r\n    return total\r\n}\r\n\r\n\r\n\r\nexport const totalListWeightCount = ({ moduleList }) => {\r\n    let total = 0\r\n    if (moduleList) {\r\n        moduleList.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                const qqq = Number.isInteger(item.qty) ? parseInt(item.qty) : Number.parseFloat(item.qty ? item.qty : 0)\r\n                total += qqq\r\n            })\r\n        })\r\n    }\r\n    total = Number.isInteger(total) ? total : Number.parseFloat(total).toFixed(2)\r\n    return total\r\n}\r\n\r\n// edited jobsheet checker\r\nexport const jobSheetChecker = ({ moduleEntry }) => {\r\n    let edited = false;\r\n    const a = moduleEntry?.jobPost?.list?.map(item => {\r\n        const check = getEditedData({ data: item })\r\n        if (check) edited = true\r\n    })\r\n    return edited\r\n}\r\n\r\nexport const totalQty = (qty) => {\r\n    if (qty) {\r\n        if (Number.isInteger(qty)) return qty\r\n        else return Number.parseFloat(qty).toFixed(2)\r\n    }\r\n    else return 0\r\n}\r\n\r\nexport const checkisEmpty = (moduleEntry) => {\r\n    let isRequired = false\r\n    moduleEntry.poList.map(po => {\r\n        po.itemList.map(item => {\r\n            if (item.qtyIsEmpty || item.noteIsEmpty || item.outboundTypeIsEmpty || item.ripenessIsEmpty || item.gradeIsEmpty || item.packIsEmpty) isRequired = true\r\n        })\r\n    })\r\n    return isRequired\r\n}\r\n\r\n// check loading\r\nexport const responseCheck = ({ isLoading, summaryData = null }) => {\r\n    if (!summaryData && !isLoading) {\r\n        return true\r\n    }\r\n    if (isLoading) {\r\n        return false\r\n    }\r\n    else {\r\n        return true\r\n    }\r\n}\r\n\r\n//pre remove sku\r\nexport const preRemoveSku = ({ dispatch, moduleEntry, moduleName, idx, checked }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n    jobSheet.jobPost.list[idx].checked = checked\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\nexport const totalListItemWeightCount = ({ moduleList }) => {\r\n    let total = 0\r\n    if (moduleList) {\r\n        moduleList.map(item => {\r\n            const qqq = Number.isInteger(item.qty) ? parseInt(item.qty) : Number.parseFloat(item.qty ? item.qty : 0)\r\n            total += qqq\r\n        })\r\n    }\r\n    total = Number.isInteger(total) ? total : Number.parseFloat(total).toFixed(2)\r\n    return total\r\n}\r\n\r\n//get initial jobsheet\r\nexport const getInitialJs = ({ moduleEntry }) => {\r\n    return moduleEntry.jobPost.list.length\r\n}\r\n\r\n//remove sku\r\nexport const removeSku = async ({ dispatch, moduleEntry, moduleName }) => {\r\n    let jobSheet = { ...moduleEntry }\r\n\r\n    const list = moduleEntry.jobPost.list.filter(data => { if (data.checked) return data })\r\n    jobSheet.jobPost.list = list\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n    if (list.length === 0) removeEntryModule({ id: jobSheet.jobPost.id, moduleName, dispatch })\r\n}\r\n\r\nexport const resetSKU = ({ dispatch, moduleSummary, moduleName }) => {\r\n    let jobSheet = { ...moduleSummary }\r\n    jobSheet.jobPost.list.map(list => {\r\n        list.checked = true\r\n    })\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\nexport const setAreaId = ({ dispatch, selected }) => {\r\n    if (selected) dispatch({ type: SET_AREA, areaId: selected })\r\n}\r\n\r\nexport const countQty = ({ activeSku, moduleEntry, poListIdx, entryListIdx }) => {\r\n    let number = parseInt(0)\r\n    const list = moduleEntry.jobPost.list[activeSku].poList[poListIdx].itemList\r\n    list.map((item, idx) => {\r\n        if (idx !== entryListIdx) number += Number.isInteger(item?.qty) ? item?.qty : parseFloat(item?.qty)\r\n    })\r\n\r\n    return number\r\n}\r\n\r\nexport const deleteRow = ({\r\n    dispatch,\r\n    moduleEntry,\r\n    moduleName,\r\n    activeSku,\r\n    poListIdx,\r\n    entryListIdx,\r\n    e,\r\n    countQty\r\n}) => {\r\n    let js = { ...moduleEntry }\r\n    const number = countQty({ moduleEntry, activeSku, poListIdx, entryListIdx })\r\n    const update = js.jobPost.list[activeSku].poList[poListIdx].initialWeight\r\n\r\n    js.jobPost.list[activeSku].poList[poListIdx].initialWeightScreenUpdate = update - number\r\n    js.jobPost.list[activeSku].poList[poListIdx].itemList.splice(entryListIdx, 1)\r\n\r\n    if (js.jobPost.list[activeSku].poList[poListIdx].itemList.length === 0) js.jobPost.list[activeSku].poList[poListIdx].edited = false\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n}\r\n\r\nexport const setZeroQuantity = ({ dispatch, zeroQuantity }) => {\r\n    dispatch({ type: 'SET_ZERO_QUANTITY', data: !zeroQuantity })\r\n}\r\n\r\nexport const setMovementTargetRepack = ({ dispatch, stockMovementTargetRepack }) => {\r\n    dispatch({ type: 'SET_MOVEMENT_TARGET_REPACK', data: !stockMovementTargetRepack })\r\n}\r\n\r\nexport const setSwitch = ({ moduleName, search, updateList, dispatch, zeroQuantity, stockMovementTargetRepack, isMovement }) => {\r\n    if (!isMovement) setZeroQuantity({ dispatch, zeroQuantity })\r\n    if (isMovement) setMovementTargetRepack({ dispatch, stockMovementTargetRepack })\r\n    if (search) updateList(!zeroQuantity, !stockMovementTargetRepack, moduleName)\r\n}\r\n\r\nexport const countPack = ({ activeSku, moduleEntry, grade, slot }) => {\r\n    let number = 0\r\n    const list = moduleEntry.jobPost.list[activeSku].poList[0].itemList\r\n    list.map((item) => {\r\n        if (item?.pack && item.grade.label === grade && item.slot?.value == slot) number += item?.pack\r\n    })\r\n    return number\r\n}\r\n\r\nexport const countPackMovement = ({ activeSku, moduleEntry, grade, slot }) => {\r\n    let number = 0\r\n    const list = moduleEntry.jobPost.list[activeSku].poList\r\n    list.map(po => {\r\n        po.itemList.map(item => {\r\n            if (item?.qty && item.grade.label === grade) number += item?.qty\r\n        })\r\n    })\r\n    return number\r\n}\r\n\r\n\r\nexport const filterTargetRepack = (targetRepacks, gradeList, activeSku, moduleEntry, slot, targetMovement) => {\r\n    const width = document.documentElement.clientWidth\r\n    const colWidth = width <= 500 ? 100 : 'auto'\r\n    let id = gradeList?.map(data => data.value)\r\n    let data = targetRepacks?.map((data, idx) => {\r\n        if (id.includes(data.skuUuid)) {\r\n\r\n            // set grade\r\n            let grade = null\r\n            gradeList.map(gr => {\r\n                if (gr.value === data.skuUuid) grade = gr.label\r\n            })\r\n\r\n            // set percent\r\n            const totalPack = (targetMovement ? data?.totalMove : data?.totalPack) + (targetMovement ? countPackMovement({ activeSku, moduleEntry, grade, slot: data?.slot }) : countPack({ activeSku, moduleEntry, grade, slot: data?.slot }))\r\n            const targetUom = data.targetUom\r\n            const targetUos = data.targetUos\r\n            const percent = (totalPack / (targetMovement ? targetUos : targetUom)) * 100\r\n\r\n            return {\r\n                warehouse: data.warehouse,\r\n                skuUuid: data.skuUuid,\r\n                skuName: data.skuName,\r\n                targetDate: data.targetDate,\r\n                targetUom: data.targetUom,\r\n                targetUos: data.targetUos,\r\n                slot: data.slot,\r\n                totalPack: totalPack,\r\n                totalMove: data.totalMove,\r\n                no: idx + 1,\r\n                grade: grade,\r\n                [targetMovement ? '%Moved' : '%Repack']: `${percent?.toFixed(2)}%`,\r\n            }\r\n        }\r\n    })\r\n    data = data?.filter(data => data !== undefined)\r\n    if (slot?.length) {\r\n        const slotList = slot.map(s => Number.parseInt(s?.value))\r\n        if (!slotList.includes(null)) data = data.filter(data => {\r\n            return slotList.includes(Number.parseInt(data.slot))\r\n        })\r\n    }\r\n    data = data?.map((data, idx) => {\r\n        data.no = idx + 1\r\n        return data\r\n    })\r\n    if (!data) data = []\r\n    const repack = [\r\n        { Header: 'Slot', placeholder: 'Slot', accessor: 'slot', width: 70, style: { textAlign: 'left', display: 'end', justifyContent: 'flex-end' } },\r\n        { Header: 'Grade', placeholder: 'Grade', accessor: 'grade', width: 300 },\r\n        { Header: 'Total Pack', placeholder: 'Total Pack', accessor: 'totalPack', style: { textAlign: 'right', display: 'flex', justifyContent: 'flex-end' }, width: colWidth, },\r\n        { Header: 'Target Pack', placeholder: 'Target Pack', accessor: 'targetUom', width: colWidth, style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-end' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\r\n        { Header: '%Repack', placeholder: '%Repack', accessor: '%Repack', width: colWidth, style: { textAlign: 'right', display: 'flex', justifyContent: 'flex-end' }, },\r\n    ]\r\n\r\n    const move = [\r\n        // { Header: 'Slot', placeholder: 'Slot', accessor: 'slot', width: 70, style: { textAlign: 'left', display: 'end', justifyContent: 'flex-end' } },\r\n        { Header: 'Grade', placeholder: 'Grade', accessor: 'grade', width: 300 },\r\n        { Header: 'Total Movement', placeholder: 'Total Movement', accessor: 'totalPack', width: colWidth, style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-end' }, className: 'flex-end !important', headerClassName: 'flex-end !important' },\r\n        { Header: 'Target Movement', placeholder: 'Target Movement', accessor: 'targetUos', width: colWidth, style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-end' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\r\n        { Header: '%Moved', placeholder: '%Moved', accessor: '%Moved', width: colWidth, style: { textAlign: 'right', display: 'flex', justifyContent: 'flex-end' }, },\r\n    ]\r\n    let table = { data, columns: targetMovement ? move : repack }\r\n    return table\r\n}\r\n\r\nexport const updateTargetRepack = ({ data, targetRepacks, activeSku, dispatch }) => {\r\n    // let newUpdatedTargetRepacks = []\r\n\r\n    // targetRepacks.map(target => {\r\n    //     data.map(updatedTarget => {\r\n    //             if(updatedTarget.skuName === target.skuName){\r\n    //                 target.totalPack = updatedTarget.totalPack\r\n    //                 newUpdatedTargetRepacks.push(target)\r\n    //             }\r\n    //         })\r\n    // })\r\n\r\n    // console.log(newUpdatedTargetRepacks);\r\n}\r\n\r\nexport const setTargetRepack = ({ moduleEntry, dispatch }) => {\r\n    let updatedTargetRepacks = []\r\n    moduleEntry.jobPost.list.map(ls => {\r\n        if (ls?.poList[0]?.targetRepacks?.length) updatedTargetRepacks = updatedTargetRepacks.concat(ls.poList[0].targetRepacks)\r\n    })\r\n    dispatch({ type: 'IS_LOADING', targetRepacks: updatedTargetRepacks })\r\n}\r\n\r\nexport const addSlot = ({ dispatch, moduleEntry, slot, moduleName }) => {\r\n    let newModuleEntry = { ...moduleEntry }\r\n\r\n    if (slot?.length) {\r\n        newModuleEntry.jobPost.slot = slot.map(s => {\r\n            if (Number.isInteger(s?.value)) return Number.parseInt(s?.value)\r\n            else return 0\r\n        })\r\n        dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: newModuleEntry })\r\n    }\r\n}\r\n\r\nexport const filterBySkuName = (a, b) => {\r\n    var nameA = a.skuName.toUpperCase(); // ignore upper and lowercase\r\n    var nameB = b.skuName.toUpperCase(); // ignore upper and lowercase\r\n    if (nameA < nameB) {\r\n        return -1;\r\n    }\r\n    if (nameA > nameB) {\r\n        return 1;\r\n    }\r\n\r\n    // names must be equal\r\n    return 0;\r\n}\r\n\r\nexport const filterCheckedSku = ({\r\n    localEntryData,\r\n    moduleName,\r\n    summary,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    warehouseUuid,\r\n    areaId,\r\n    areaIdDesposition\r\n}) => {\r\n    const filteredSku = summary?.filter(data => data.checked)\r\n    let module = {\r\n        jobPost: {\r\n            id: 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: areaId?.value,\r\n            areaName: areaId?.label,\r\n            areaDestination: areaIdDesposition?.value,\r\n            areaDestinationName: areaIdDesposition?.label,\r\n            list: filteredSku,\r\n        }\r\n    }\r\n\r\n    const isExist = []\r\n    let a = localEntryData?.jobPost?.list.map(data => isExist.push(data.skuName))\r\n\r\n    if (localEntryData?.jobPost?.list?.length) {\r\n        module = { ...localEntryData }\r\n        const f = filteredSku?.filter(data => !isExist.includes(data.skuName))\r\n        module.jobPost.list = module.jobPost.list.concat(f)\r\n    }\r\n    setLocalEntryData(module)\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: module })\r\n}\r\n\r\nexport const filterCheckedAddSku = ({\r\n    localEntryData,\r\n    moduleEntry,\r\n    moduleName,\r\n    summary,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    warehouseUuid,\r\n    areaId,\r\n    areaIdDesposition\r\n}) => {\r\n    let filteredSku = summary?.filter(data => data.checked)\r\n\r\n    const module = {\r\n        jobPost: {\r\n            id: 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: areaId?.value,\r\n            areaName: areaId?.label,\r\n            areaDestination: areaIdDesposition?.value,\r\n            areaDestinationName: areaIdDesposition?.label,\r\n            list: filteredSku,\r\n        }\r\n    }\r\n    const newModuleEntry = { ...moduleEntry }\r\n\r\n    if (filteredSku?.length) {\r\n        filteredSku = filteredSku?.map(data => {\r\n            data.isNewItem = true\r\n            return data\r\n        })\r\n        newModuleEntry.jobPost.list = newModuleEntry.jobPost.list.concat(filteredSku)\r\n    }\r\n\r\n    if (localEntryData?.jobPost?.list?.length) {\r\n        filteredSku = localEntryData?.jobPost?.list?.map(data => {\r\n            data.isNewItem = true\r\n            return data\r\n        })\r\n        newModuleEntry.jobPost.list = newModuleEntry.jobPost.list.concat(filteredSku)\r\n    }\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: newModuleEntry })\r\n}\r\n\r\nexport const setSingleViewSku = async ({\r\n    summary,\r\n    setLocalEntryData,\r\n    warehouseUuid,\r\n    areaId,\r\n    areaIdDesposition,\r\n    skuUuId,\r\n    dispatch,\r\n    moduleName\r\n}) => {\r\n    let filteredSku = summary?.filter(data => data.skuUuid === skuUuId)\r\n    if (filteredSku?.length) filteredSku = filteredSku\r\n\r\n    const grade = await getGrade({ skuId: filteredSku[0].skuUuid })\r\n    const data = await getPoBySkuId({ skuId: filteredSku[0].skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n    if (data) {\r\n        filteredSku[0].gradeList = grade\r\n        const addPoItem = data?.poItems.map(poList => {\r\n            poList.itemList = []\r\n            const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n            const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n            poList.targetMovements = data?.targetMovements\r\n            poList.expiryDate = expiryMs\r\n            poList.inboundDate = inBoundyMs\r\n            poList.skuUuid = filteredSku[0].skuUuid\r\n            poList.uom = filteredSku[0].unitOfMeassures\r\n            poList.category = filteredSku[0].category\r\n            poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n            return poList\r\n        })\r\n        filteredSku[0].poList = addPoItem\r\n    }\r\n    const module = {\r\n        jobPost: {\r\n            id: 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: areaId?.value,\r\n            areaName: areaId?.label,\r\n            areaDestination: areaIdDesposition?.value,\r\n            areaDestinationName: areaIdDesposition?.label,\r\n            list: filteredSku,\r\n        }\r\n    }\r\n    setLocalEntryData(module)\r\n}\r\n\r\nexport const getPoList = async ({ dispatch, moduleName, moduleEntry, activeSku }) => {\r\n    let newEntry = { ...moduleEntry }\r\n    const { areaSource } = newEntry.jobPost\r\n    const { skuUuid, warehouseId, poList } = newEntry.jobPost.list[activeSku]\r\n    if (poList?.length) return\r\n\r\n    const grade = await getGrade({ skuId: newEntry.jobPost.list[activeSku].skuUuid })\r\n    const data = await getPoBySkuId({ skuId: skuUuid, warehouseUuid: warehouseId, dispatch, areaId: areaSource, moduleName })\r\n    if (data) {\r\n        newEntry.jobPost.list[activeSku].gradeList = grade\r\n        const addPoItem = data?.poItems.map(poList => {\r\n            poList.itemList = []\r\n            const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n            const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n            poList.targetMovements = data?.targetMovements\r\n            poList.expiryDate = expiryMs\r\n            poList.inboundDate = inBoundyMs\r\n            poList.skuUuid = newEntry.jobPost.list[activeSku].skuUuid\r\n            poList.uom = newEntry.jobPost.list[activeSku].unitOfMeassures\r\n            poList.category = newEntry.jobPost.list[activeSku].category\r\n            poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n            return poList\r\n        })\r\n        newEntry.jobPost.list[activeSku].poList = addPoItem\r\n    }\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: newEntry })\r\n}\r\n\r\nexport const getPoRepack = async ({ dispatch, moduleName, moduleEntry, activeSku }) => {\r\n    let newEntry = { ...moduleEntry }\r\n    const { areaSource } = newEntry.jobPost\r\n    const { skuUuid, warehouseId, poList, unitOfMeassures, packSize, category } = newEntry.jobPost.list[activeSku]\r\n    if (poList?.length) return\r\n\r\n    const grade = await getGrade({ skuId: skuUuid })\r\n    const data = await getPORepacking({ skuId: skuUuid, warehouseId, uom: unitOfMeassures })\r\n    const a = await getPORepacking({ skuId: skuUuid, warehouseId, uom: unitOfMeassures })\r\n    newEntry.jobPost.list[activeSku].gradeList = grade\r\n    const addPoItem = [{\r\n        itemList: [],\r\n        expiryMs: null,\r\n        inBoundyMs: null,\r\n        expiryDate: null,\r\n        inboundDate: null,\r\n        packSize: packSize,\r\n        category: category,\r\n        initialWeight: Number.isInteger(data?.data.totalWeight) ? parseInt(data?.data.totalWeight) : parseFloat(data?.data.totalWeight),\r\n        targetRepacks: data?.data.targetRepacks,\r\n        skuUuid: skuUuid,\r\n        targetRepacks: data?.data?.targetRepacks,\r\n        initialWeight: data?.data?.totalWeight,\r\n        uom: data?.data?.uom,\r\n        itemList: []\r\n    }]\r\n    newEntry.jobPost.list[activeSku].poList = addPoItem\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: newEntry })\r\n}\r\n\r\nexport const updateSummary = ({ summary, setSummary, idx, checked }) => {\r\n    let newSummary = [...summary]\r\n    newSummary[idx].checked = checked\r\n    setSummary(newSummary)\r\n}\r\n\r\nexport const checkRequiredData = ({ moduleEntry }) => {\r\n    let requiredSku = []\r\n    let requiredName = []\r\n    let requiredPo = []\r\n    let requiredItem = []\r\n\r\n    moduleEntry.jobPost.list.map((data, idx) => {\r\n        data.poList.map((data2, idx2) => {\r\n            data2.itemList.map((data3, idx3) => {\r\n                if (data3.qtyIsEmpty || data3.gradeIsEmpty || data3.ripenessIsEmpty || data3.reasonIsEmpty || data3.noteIsEmpty || data3.packIsEmpty) {\r\n                    requiredSku.push(idx)\r\n                    requiredPo.push(idx2)\r\n                    requiredItem.push(idx3)\r\n\r\n                    if (data3.gradeIsEmpty) {\r\n                        requiredName.push('Grade')\r\n                    }\r\n\r\n                    if (data3.packIsEmpty) {\r\n                        requiredName.push('pack')\r\n                    }\r\n\r\n                    if (data3.qtyIsEmpty) {\r\n                        if (data2.uom === 'gram' || data2.uom === 'kg') requiredName.push('wgt')\r\n                        else requiredName.push('qty')\r\n                    }\r\n\r\n                    if (data3.reasonIsEmpty) {\r\n                        requiredName.push('Reason')\r\n                    }\r\n\r\n                    if (data3.ripenessIsEmpty) {\r\n                        requiredName.push('Ripeness')\r\n                    }\r\n\r\n                    if (data3.noteIsEmpty) {\r\n                        requiredName.push('note')\r\n                    }\r\n\r\n\r\n                }\r\n            })\r\n        })\r\n    })\r\n\r\n    return { requiredSku, requiredName, requiredPo, requiredItem }\r\n}\r\n\r\nexport const checkIsSkuRequired = async ({ setActiveSKU, moduleEntry }) => {\r\n    const { requiredSku, requiredName, requiredPo, requiredItem } = await checkRequiredData({ moduleEntry })\r\n\r\n    if (requiredSku?.length) {\r\n        if (typeof (setActiveSKU) === 'function') await setActiveSKU(requiredSku[0])\r\n        const input = await document.getElementById(`${requiredName[0]}_${requiredPo[0]}_${requiredItem[0]}`)\r\n        if (input) input.focus()\r\n    }\r\n}","import axios from \"axios\";\r\nimport imageCompression from 'browser-image-compression';\r\nimport { isFloat, throwErrorStatus, dateDMY, dateFull } from 'services'\r\nimport {\r\n  GET_STOCK_TAKE_ACTION,\r\n  GET_USER,\r\n  USER_LOGOUT,\r\n  STATUS,\r\n  VALIDATE_PO_SKU_INFO_ID,\r\n  CREATE_JOB_SHEET,\r\n  IS_LOADING,\r\n} from \"apiServices/action\";\r\nimport { getGrade, getOutboundType } from \"./dropdown\";\r\nimport { filterBySkuName, totalQty } from \"Page/StockEntry/GeneralServices/moduleServices\";\r\n\r\n//get user credential by email\r\nexport const getUserData = async ({ dispatch, sessionId, setComplete }) => {\r\n  try {\r\n    dispatch({ type: GET_USER, status: null });\r\n    const url = `user/validate?sessionId=${sessionId}`;\r\n    const { data, headers } = await axios(url);\r\n    setComplete(true);\r\n    if (data) {\r\n      data[\"sessionId\"] = headers[\"session-id\"];\r\n\r\n      if (data?.isSuccess)\r\n        dispatch({ type: GET_USER, user: data, status: null });\r\n      else\r\n        dispatch({\r\n          type: GET_USER,\r\n          user: null,\r\n          status: { message: \"Unauthorized\", code: 401 },\r\n          statusMessage: data.message,\r\n        });\r\n    }\r\n    return true;\r\n  } catch (e) {\r\n    const status = throwErrorStatus(e);\r\n    setComplete(true);\r\n    dispatch({\r\n      type: \"STATUS\",\r\n      status,\r\n      user: null,\r\n    });\r\n  }\r\n};\r\n\r\n//logout\r\nexport const userLogout = async ({ dispatch, email }) => {\r\n  try {\r\n    const logout = `/user/signOut?email=${email}`;\r\n    await axios(logout);\r\n    dispatch({ type: USER_LOGOUT, user: null });\r\n    window.location.replace(\"https://dev-wms-web.sayurbox.tech/\");\r\n    return true;\r\n  } catch (error) { }\r\n};\r\n\r\nexport const checkSessionId = async ({ dispatch, sessionId }) => {\r\n  try {\r\n    const url = `/user/checkSession?sessionId=${sessionId}`;\r\n    const data = await axios(url);\r\n    if (data) {\r\n      if (!data?.data?.isSuccess) dispatch({ type: USER_LOGOUT, user: null });\r\n    }\r\n  }\r\n  catch (e) {\r\n    const status = throwErrorStatus(e)\r\n    dispatch({\r\n      type: GET_USER,\r\n      user: null,\r\n      status: { message: \"Unauthorized\", code: 401 },\r\n      statusMessage: status.message,\r\n    });\r\n  }\r\n};\r\n\r\n// get by po sku code\r\n\r\nexport const getPoByPoCode = async ({\r\n  moduleName,\r\n  setModule,\r\n  dispatch,\r\n  poNumber,\r\n  warehouseUuid,\r\n  areaId,\r\n  areaName,\r\n  setSkuList,\r\n  setLocalEntryData,\r\n  areaDestination\r\n}) => {\r\n  try {\r\n    let param = ''\r\n    if (poNumber.length > 0) param = `&wmsPoSkuCode=${poNumber}`;\r\n    if (warehouseUuid) param = param + `&warehouseUuid=${warehouseUuid}`;\r\n    if (areaId) param = param + `&areaId=${areaId?.value}`;\r\n    let url = `/${moduleName?.toLowerCase()}/poByPoSkuCode? ${param}`;\r\n    const { data, status } = await axios(url);\r\n    if (data?.data?.length) {\r\n      let entryData = {}\r\n      entryData.jobPost = {}\r\n      entryData.jobPost.list = []\r\n      const wait = data.data.map(async data => {\r\n        const {\r\n          ripeness,\r\n          expiryDate,\r\n          codeGrade,\r\n          inboundDate,\r\n          inboundQty,\r\n          initialWeight,\r\n          photo,\r\n          skuName,\r\n          skuUuid,\r\n          skuNumber,\r\n          supplierId,\r\n          supplierName,\r\n          totalPack,\r\n          uom,\r\n          wmsPoSkuCode,\r\n          slot,\r\n          category\r\n        } = data\r\n        const grade = await getGrade({ skuId: skuUuid })\r\n        let ddGrade = grade?.filter(data => data.label === skuName)\r\n        ddGrade?.length ? ddGrade = ddGrade[0] : ddGrade = { label: null, value: null }\r\n        entryData.jobPost.id = 0\r\n        entryData.jobPost.warehouseSource = warehouseUuid\r\n        entryData.jobPost.warehouseDestination = warehouseUuid\r\n        entryData.jobPost.areaSource = areaId?.value\r\n        entryData.jobPost.areaName = areaId?.label\r\n        if (moduleName === 'stockMovement') {\r\n          entryData.jobPost.areaDestinationName = areaDestination?.label\r\n          entryData.jobPost.areaDestination = areaDestination?.value\r\n        }\r\n        else entryData.jobPost.areaDestination = areaId?.value\r\n        if (entryData?.jobPost?.list?.length) {\r\n          const idx = entryData?.jobPost.list?.findIndex((data, idx) => data?.skuName === skuName)\r\n          if (idx === -1) {\r\n            entryData.jobPost.list.push(\r\n              {\r\n                category: category,\r\n                packSize: totalPack,\r\n                checked: true,\r\n                gradeList: grade,\r\n                slot: slot,\r\n                skuUuid: skuUuid,\r\n                skuNumber: skuNumber,\r\n                skuName: skuName,\r\n                warehouseId: warehouseUuid,\r\n                unitOfMeassures: uom,\r\n                totalQty: initialWeight,\r\n                photo: photo,\r\n                poList: [\r\n                  {\r\n                    wmsPoSkuCode: wmsPoSkuCode,\r\n                    skuUuid: skuUuid,\r\n                    inboundDate: inboundDate,\r\n                    initialWeight: initialWeight,\r\n                    uom: uom,\r\n                    expiryDate: expiryDate,\r\n                    supplierId: supplierId,\r\n                    supplierName: supplierName,\r\n                    codeGrade: codeGrade,\r\n                    inboundQty: inboundQty,\r\n                    totalPack: totalPack,\r\n                    packSize: totalPack,\r\n                    category: category,\r\n                    itemList: [\r\n                      {\r\n                        qty: initialWeight,\r\n                        grade: ddGrade,\r\n                        ripeness: {\r\n                          label: ripeness,\r\n                          value: ripeness\r\n                        },\r\n                        expiryDate: expiryDate,\r\n                        expiryDateText: dateDMY({ date: expiryDate }),\r\n                      }\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            )\r\n          }\r\n          if (idx >= 0) {\r\n            entryData.jobPost.list[idx].totalQty += initialWeight\r\n            entryData.jobPost.list[idx].poList.push(\r\n              {\r\n                wmsPoSkuCode: wmsPoSkuCode,\r\n                skuUuid: skuUuid,\r\n                inboundDate: inboundDate,\r\n                initialWeight: initialWeight,\r\n                uom: uom,\r\n                expiryDate: expiryDate,\r\n                supplierId: supplierId,\r\n                supplierName: supplierName,\r\n                codeGrade: codeGrade,\r\n                inboundQty: inboundQty,\r\n                totalPack: totalPack,\r\n                category: category,\r\n                itemList: [\r\n                  {\r\n                    qty: initialWeight,\r\n                    grade: ddGrade,\r\n                    ripeness: {\r\n                      label: ripeness,\r\n                      value: ripeness\r\n                    },\r\n                    expiryDate: expiryDate,\r\n                    expiryDateText: dateDMY({ date: expiryDate }),\r\n                  }\r\n                ]\r\n              }\r\n            )\r\n          }\r\n        }\r\n\r\n        if (!entryData?.jobPost?.list?.length) {\r\n          entryData.jobPost.list.push(\r\n            {\r\n              checked: true,\r\n              category: category,\r\n              packSize: totalPack,\r\n              gradeList: grade,\r\n              skuUuid: skuUuid,\r\n              skuNumber: skuNumber,\r\n              skuName: skuName,\r\n              warehouseId: warehouseUuid,\r\n              unitOfMeassures: uom,\r\n              totalQty: initialWeight,\r\n              photo: photo,\r\n              poList: [\r\n                {\r\n                  wmsPoSkuCode: wmsPoSkuCode,\r\n                  skuUuid: skuUuid,\r\n                  inboundDate: inboundDate,\r\n                  initialWeight: initialWeight,\r\n                  uom: uom,\r\n                  expiryDate: expiryDate,\r\n                  supplierId: supplierId,\r\n                  supplierName: supplierName,\r\n                  codeGrade: codeGrade,\r\n                  inboundQty: inboundQty,\r\n                  totalPack: totalPack,\r\n                  category: category,\r\n                  itemList: [\r\n                    {\r\n                      qty: initialWeight,\r\n                      grade: ddGrade,\r\n                      ripeness: {\r\n                        label: ripeness,\r\n                        value: ripeness\r\n                      },\r\n                      expiryDate: expiryDate,\r\n                      expiryDateText: dateDMY({ date: expiryDate }),\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          )\r\n        }\r\n      })\r\n      await Promise.all(wait)\r\n      await setLocalEntryData(entryData)\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n// get stock take summary data\r\nexport const getStockTakeSummary = async ({\r\n  category,\r\n  stockMovementTargetRepack,\r\n  targetRepack,\r\n  moduleName,\r\n  zeroQuantity,\r\n  singleView,\r\n  module,\r\n  setModule,\r\n  dispatch,\r\n  desc,\r\n  warehouseUuid,\r\n  areaId,\r\n  areaIdDestination,\r\n  transaction,\r\n}) => {\r\n  try {\r\n    let param = \"\";\r\n    // let cancelToken = axios.CancelToken.source();\r\n    if (desc.length > 0) param = `&desc=${desc}`;\r\n    if (desc.length === 0) param = `&desc=${''}`;\r\n    if (warehouseUuid) param = param + `&warehouseUuid=${warehouseUuid}`;\r\n    if (areaId) param = param + `&areaId=${areaId?.value}`;\r\n    if (transaction === 'waste') param = param + `&transaction=${transaction}`\r\n    if (areaIdDestination === 'movement') param = param + `&areaId=${areaIdDestination?.value}`\r\n    if (moduleName === 'stockMovement' && stockMovementTargetRepack) param = param + `&haveTargetMovement=${stockMovementTargetRepack}`\r\n    if (moduleName === 'repack' && targetRepack) param = param + `&haveTargetRepack=${targetRepack}`\r\n    if (category?.length) {\r\n      let categoryParam = ''\r\n      category.map(data => {\r\n        categoryParam = categoryParam + `&categoryUuid=${data?.value}`\r\n      })\r\n      param = param + categoryParam\r\n    }\r\n    let url = `oss/skus? ${param}`;\r\n\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, isLoading: true });\r\n    setModule(dt);\r\n    const { data, status } = await axios(url);\r\n    let dt = [];\r\n    // filter selected sku\r\n    const skuList = module?.jobPost?.list\r\n    if (!data?.data) dispatch({ type: GET_STOCK_TAKE_ACTION, isLoading: false });\r\n    let tmp = data?.data.map(d => {\r\n      //if outbound, qty < 0 then skip\r\n      if (isFloat(d.totalQty) < 0.01) { }\r\n      if (isFloat(d.totalQty) <= 0 && zeroQuantity && moduleName === 'stockTake') {\r\n        let isExist = skuList?.filter(sku => sku.skuUuid === d.skuUuid)\r\n        if (singleView) isExist = []\r\n        dt.push({\r\n          targetMovementProgress: d.targetMovementProgress?.length ? d.targetMovementProgress : [],\r\n          targetRepackProgress: d.targetRepackProgress?.length ? d.targetRepackProgress : [],\r\n          checked: isExist?.length > 0 ? true : false,\r\n          gradeList: d.gradeList,\r\n          photo: d.photo,\r\n          poList: d.poList ? d.poList : [],\r\n          packSize: d.packSize,\r\n          category: d.category,\r\n          skuName: d.skuName,\r\n          skuNumber: parseInt(d.skuNumber),\r\n          skuUuid: d.skuUuid,\r\n          totalQty: isFloat(d.totalQty),\r\n          unitOfMeassures: d.unitOfMeassures,\r\n          warehouseId: d.warehouseId,\r\n          originalUom: d.originalUom,\r\n        });\r\n      }\r\n      if (isFloat(d.totalQty) > 0 && (moduleName === 'stockTake' ? !zeroQuantity : true)) {\r\n        let isExist = skuList?.filter(sku => sku.skuUuid === d.skuUuid)\r\n        if (singleView) isExist = []\r\n        dt.push({\r\n          targetMovementProgress: d.targetMovementProgress?.length ? d.targetMovementProgress : [],\r\n          targetRepackProgress: d.targetRepackProgress?.length ? d.targetRepackProgress : [],\r\n          checked: isExist?.length > 0 ? true : false,\r\n          gradeList: d.gradeList,\r\n          photo: d.photo,\r\n          poList: d.poList ? d.poList : [],\r\n          packSize: d.packSize,\r\n          category: d.category,\r\n          skuName: d.skuName,\r\n          skuNumber: parseInt(d.skuNumber),\r\n          skuUuid: d.skuUuid,\r\n          totalQty: isFloat(d.totalQty),\r\n          unitOfMeassures: d.unitOfMeassures,\r\n          warehouseId: d.warehouseId,\r\n          originalUom: d.originalUom,\r\n        });\r\n      }\r\n    });\r\n\r\n    dt = dt.sort(function (a, b) { return filterBySkuName(a, b) })\r\n    setModule(dt);\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, isLoading: false });\r\n  } catch (e) { }\r\n};\r\n\r\nexport const getStockTakeSummaryAddSku = async ({\r\n  category,\r\n  zeroQuantity,\r\n  moduleName,\r\n  setModule,\r\n  dispatch,\r\n  desc,\r\n  warehouseUuid,\r\n  areaId,\r\n  selectedSkusNumber,\r\n  transaction,\r\n  stockMovementTargetRepack,\r\n  targetRepack\r\n}) => {\r\n  try {\r\n    let param = \"\";\r\n    if (desc) param = `&desc=${desc}`;\r\n    if (warehouseUuid) param = param + `&warehouseUuid=${warehouseUuid}`;\r\n    if (areaId) param = param + `&areaId=${areaId?.value}`;\r\n    if (transaction === \"waste\") param = param + `&transaction=${transaction}`;\r\n    if (moduleName === 'stockMovement' && stockMovementTargetRepack) param = param + `&haveTargetMovement=${stockMovementTargetRepack}`\r\n    if (moduleName === 'repack' && targetRepack) param = param + `&haveTargetRepack=${targetRepack}`\r\n    if (category?.value) param = param + `&categoryUuid=${category?.value}`\r\n    let url = `oss/skus? ${param}`;\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, isLoading: true });\r\n    setModule(dt);\r\n    const { data, status } = await axios(url);\r\n\r\n    let dt = [];\r\n    let x = data?.data.map((d, idx) => {\r\n      if (selectedSkusNumber.includes(parseInt(d.skuNumber))) {\r\n        return false;\r\n      }\r\n\r\n      if (isFloat(d.totalQty) < 0.01) { }\r\n      if (isFloat(d.totalQty) <= 0 && zeroQuantity && moduleName === 'stockTake') {\r\n        dt.push({\r\n          targetMovement: d.targetMovementProgress?.length ? d.targetMovementProgress : [],\r\n          gradeList: d.gradeList,\r\n          photo: d.photo,\r\n          poList: d.poList ? d.poList : [],\r\n          packSize: d.packSize,\r\n          category: d.category,\r\n          skuName: d.skuName,\r\n          skuNumber: parseInt(d.skuNumber),\r\n          skuUuid: d.skuUuid,\r\n          totalQty: isFloat(d.totalQty),\r\n          unitOfMeassures: d.unitOfMeassures,\r\n          warehouseId: d.warehouseId,\r\n          originalUom: d.originalUom,\r\n        });\r\n      }\r\n      if (isFloat(d.totalQty) > 0 && (moduleName === 'stockTake' ? !zeroQuantity : true)) {\r\n        let tmp = {\r\n          targetMovement: d.targetMovementProgress?.length ? d.targetMovementProgress : [],\r\n          targetRepackProgress: d.targetRepackProgress?.length ? d.targetRepackProgress : [],\r\n          checked: d.checked,\r\n          gradeList: d.gradeList,\r\n          photo: d.photo,\r\n          poList: d.poList ? d.poList : [],\r\n          skuName: d.skuName,\r\n          skuNumber: parseInt(d.skuNumber),\r\n          packSize: d.packSize,\r\n          category: d.category,\r\n          skuUuid: d.skuUuid,\r\n          totalQty: isFloat(d.totalQty),\r\n          unitOfMeassures: d.unitOfMeassures,\r\n          warehouseId: d.warehouseId,\r\n          originalUom: d.originalUom,\r\n        };\r\n        dt.push(tmp);\r\n      }\r\n    });\r\n    dt = dt.sort(function (a, b) { return filterBySkuName(a, b) })\r\n    setModule(dt);\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, isLoading: false });\r\n  } catch (e) {\r\n    // dispatch({ type: STATUS, status: 500, isLoading: false });\r\n  }\r\n};\r\n\r\n// get unfinished entry\r\nexport const getUnfinishedEntries = async ({\r\n  dispatch,\r\n  moduleName,\r\n  isExist,\r\n  ripeness,\r\n}) => {\r\n  if (isExist) return;\r\n  try {\r\n    dispatch({ type: IS_LOADING, isLoading: true });\r\n    const url = `${moduleName.toLowerCase()}/unfinishedEntries`;\r\n    const { data } = await axios(url);\r\n    if (data.data?.length === 0 || !data.data[0].list || data.data[0]?.list?.length === 0) {\r\n      dispatch({ type: IS_LOADING, isLoading: false, [`${moduleName}FirstLoad`]: true })\r\n      return\r\n    }\r\n    let savedJs = { jobPost: { ...data.data[0] } };\r\n    let lists = [];\r\n    if (data) {\r\n      const list = savedJs.jobPost.list.map(async list => {\r\n        list.checked = true\r\n        if (moduleName === 'outbound') list.outboundTypeList = await getOutboundType({ dispatch })\r\n        if (moduleName === 'stockTake') list.gradeList = await getGrade({ skuId: list.skuUuid, dispatch })\r\n        if (moduleName === 'repack') list.gradeList = await getGrade({ skuId: list.skuUuid, dispatch })\r\n        if (moduleName === 'waste') list.gradeList = await getGrade({ skuId: list.skuUuid, dispatch })\r\n        if (moduleName === 'stockMovement') list.gradeList = await getGrade({ skuId: list.skuUuid, dispatch })\r\n        list.poList.map(po => {\r\n          po.category = list.category\r\n          po.skuUuid = list.skuUuid\r\n          po.uom = list.unitOfMeassures\r\n          po.ripenessLevel = 0\r\n          const weight = list.unitOfMeassures === 'gram' || 'kg' ? parseFloat(po.initialWeight) : parseInt(po.initialWeight)\r\n          po.initialWeight = weight\r\n          let number = 0\r\n          po.edited = po.itemList.length > 0 ? true : false\r\n          po.itemList.map(item => {\r\n            item.expiryDate = po?.expiryDate\r\n            item.expiryDateText = dateDMY({ date: po?.expiryDate })\r\n\r\n            if (moduleName === 'stockTake') {\r\n              //restructure ripeness\r\n              item.ripeness = ripeness.filter(\r\n                (ripeness) => ripeness?.value === item?.ripeness?.value\r\n              );\r\n              item.ripeness = item.ripeness[0];\r\n\r\n              //restructure grade\r\n              item.grade = list.gradeList.filter(\r\n                (grade) => grade?.value === item?.grade?.value\r\n              );\r\n              item.grade = item.grade[0];\r\n            }\r\n\r\n            if (moduleName === \"repack\") {\r\n              //restructure grade\r\n              item.grade = list.gradeList.filter(\r\n                (grade) => grade?.value === item?.grade?.value\r\n              );\r\n              item.grade = item.grade[0];\r\n            }\r\n\r\n            if (moduleName === \"outbound\") {\r\n              //resturcture outbound type\r\n              item.outboundType = list.outboundTypeList.filter(\r\n                (outbound) => outbound?.value === item?.outboundType?.value\r\n              );\r\n              item.outboundType = item.outboundType[0];\r\n            }\r\n\r\n            if (\r\n              list.unitOfMeassures !== \"gram\" ||\r\n              list.unitOfMeassures !== \"kg\"\r\n            ) {\r\n              if (!isNaN(item.qty)) number += parseInt(item.qty);\r\n            }\r\n            return item;\r\n          });\r\n          po.initialWeightUpdate =\r\n            po.inboundQty - number <= 0 ? 0 : po.inboundQty - number;\r\n          number >= po.inboundQty\r\n            ? (po.initialWeightOver = number)\r\n            : (po.initialWeightOver = 0);\r\n          return po;\r\n        });\r\n        lists.push(list);\r\n      });\r\n      const wait = await Promise.all(list);\r\n      savedJs.jobPost.list = lists;\r\n      dispatch({\r\n        type: CREATE_JOB_SHEET,\r\n        [`${moduleName}EntryData`]: savedJs,\r\n        isLoading: false,\r\n        [`${moduleName}FirstLoad`]: true,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: STATUS, [`${moduleName}FirstLoad`]: true });\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPORepacking = async ({ skuId, warehouseId, uom }) => {\r\n  const url = `repack/totalWeightBySku?warehouseUuid=${warehouseId}&skuId=${skuId}&uom=${uom}`\r\n  const data = await axios(url)\r\n  if (data.data) return data.data\r\n}\r\n\r\nexport const removeEntryModule = async ({ id, moduleName, dispatch, setDiscard }) => {\r\n  if (id === 0) {\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    if (typeof (setDiscard) === 'function') setDiscard(false)\r\n    return true\r\n  }\r\n  try {\r\n    const url = `${moduleName.toLowerCase()}/discard?jobId=${id}`\r\n    const { data } = await axios(url)\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    if (typeof (setDiscard) === 'function') setDiscard(false)\r\n    return true\r\n  }\r\n  catch (e) {\r\n    return false\r\n  }\r\n};\r\n\r\n//get po by sku id\r\nexport const getPoBySkuId = async ({ skuId, warehouseUuid, areaId, dispatch, moduleName, zeroQuantity }) => {\r\n  try {\r\n    const url = `${moduleName?.toLowerCase()}/poBySkuId?skuId=${skuId}&warehouseUuid=${warehouseUuid}&areaId=${areaId}&zeroQuantity=${zeroQuantity}`;\r\n    const { data } = await axios(url);\r\n    if (!data?.data?.poItems?.length) dispatch({ type: 'STATUS', status: { code: 500, message: 'There is no PO' } })\r\n    if (moduleName === 'stockMovement') return { poItems: data?.data.poItems, targetMovements: data?.data.targetMovements }\r\n    return data?.data?.poItems;\r\n  } catch (error) {\r\n    // const status = throwErrorStatus(error)\r\n    // console.log(error)\r\n    // dispatch({type:'STATUS', status})\r\n    return;\r\n  }\r\n};\r\n\r\n// validate and get data from po sku info id\r\nexport const validatePoSkuInfoId = async ({\r\n  dispatch,\r\n  skuData,\r\n  status,\r\n  bulk = true,\r\n}) => {\r\n  if (\r\n    (status === false || status === null || skuData === null) &&\r\n    bulk === true\r\n  ) {\r\n    return 0;\r\n  }\r\n\r\n  try {\r\n    const url = \"/stocktake/rowValidationUpload\";\r\n    await axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: { data: skuData },\r\n    }).then(function (response) {\r\n      if (bulk === true) {\r\n        dispatch({\r\n          type: VALIDATE_PO_SKU_INFO_ID,\r\n          skuCodeValidated: response?.data.data,\r\n        });\r\n      } else {\r\n        return response?.data.data;\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    // dispatch({ type: STATUS, status: 500 });\r\n  }\r\n};\r\n\r\nexport const validateSkuNumber = async ({\r\n  dispatch,\r\n  skuNumberData,\r\n  bulk = true,\r\n  status,\r\n}) => {\r\n  if (\r\n    (status === false || status === null || skuNumberData === null) &&\r\n    bulk === true\r\n  ) {\r\n    return 0;\r\n  }\r\n\r\n  try {\r\n    const url = \"/oss/skuByNumbers\";\r\n    await axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: { skuList: skuNumberData },\r\n    }).then(function (response) {\r\n      if (bulk === true) {\r\n        dispatch({\r\n          type: VALIDATE_PO_SKU_INFO_ID,\r\n          skuNumberValidated: response?.data.data,\r\n        });\r\n      } else {\r\n        return response?.data.data;\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    // dispatch({ type: STATUS, status: 500 });\r\n  }\r\n};\r\n\r\n//validate and get data from po sku info id\r\nexport const submitCsv = async ({\r\n  dispatch,\r\n  dataCsv,\r\n  setSubmitStatus,\r\n  transaction,\r\n}) => {\r\n  let url = null;\r\n  if (transaction == 'stockTake') { url = \"/stocktake/submit\"; }\r\n  else if (transaction == 'movement') { url = \"/stockmovement/submit\"; }\r\n  else if (transaction == 'additionalOutbound') { url = \"/outbound/submit\"; }\r\n  else if (transaction == 'repacking') { url = \"/repack/submit\"; }\r\n  else if (transaction == 'waste') { url = \"/waste/submit\"; }\r\n\r\n\r\n  try {\r\n    return await axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: {\r\n        source: \"upload\",\r\n        jobPost: dataCsv[0],\r\n      },\r\n    }).then(function (response) {\r\n      if (response?.data?.isSuccess === true) {\r\n        dispatch({ type: STATUS, status: 200 });\r\n        setSubmitStatus(\"success\");\r\n      } else if (response?.data?.isSuccess === false) {\r\n        dispatch({ type: STATUS, status: 200 });\r\n        setSubmitStatus(\"failed\");\r\n      } else {\r\n        setSubmitStatus(false);\r\n      }\r\n      return response?.data\r\n\r\n    });\r\n  } catch (e) {\r\n    setSubmitStatus(false);\r\n    return 'error';\r\n  }\r\n};\r\n\r\nexport const submitCsvStockTransfer = async ({\r\n  dispatch,\r\n  dataCsv,\r\n  setSubmitStatus,\r\n  transaction,\r\n}) => {\r\n  let url = \"/stocktransfer/submit\";\r\n  return await axios({\r\n    method: \"post\",\r\n    url: url,\r\n    data: {\r\n      source: \"upload\",\r\n      jobPost: dataCsv[0],\r\n    },\r\n  })\r\n    .then(response => {\r\n      return response?.data;\r\n    })\r\n    .catch(error => {\r\n      return error?.response?.data;\r\n    });\r\n};\r\n\r\n\r\n//submit csv but for upload target repack \r\nexport const submitCsvTargetRepack = async ({ dispatch, data, setSubmitStatus }) => {\r\n  let url = '/repack/target_repacks/save';\r\n\r\n  try {\r\n    return await axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: {\r\n        data\r\n      },\r\n    }).then(function (response) {\r\n      if (response?.data?.isSuccess === true) {\r\n        dispatch({ type: STATUS, status: 200 });\r\n        setSubmitStatus(\"success\");\r\n      } else if (response?.data?.isSuccess === false) {\r\n        dispatch({ type: STATUS, status: 200 });\r\n        setSubmitStatus(\"failed\");\r\n      } else {\r\n        setSubmitStatus(false);\r\n      }\r\n      return response?.data;\r\n    });\r\n  } catch (e) {\r\n    setSubmitStatus(false);\r\n    return \"error\";\r\n  }\r\n};\r\n\r\n//save jobsheet\r\nexport const saveJobSheet = async ({ moduleEntry, moduleName, setIsSuccess, dispatch, name, table }) => {\r\n  try {\r\n    let finalModule = Object.assign({}, JSON.parse(JSON.stringify(moduleEntry)))\r\n\r\n    // submit & stocktake\r\n    // if(moduleName === 'stockTake' && name === 'submit'){\r\n    //   let list = finalModule.jobPost.list.map(ls => {\r\n    //     ls.poList.map(po => {\r\n    //       po.itemList = po.itemList.filter((item,idx) => {\r\n    //         if(item?.expiryDate !== po?.expiryDate || item.grade?.label !== ls.skuName) return item\r\n    //         if(idx === 0 && po.itemList.length === 1) return item.qty !== po.initialWeight\r\n\r\n    //         else return item\r\n    //       })\r\n    //       return po\r\n    //       })\r\n    //       return ls\r\n    //     })\r\n    //   finalModule.jobPost.list = list\r\n    // }\r\n    dispatch({ type: IS_LOADING, isLoading: true });\r\n    const url = `${moduleName.toLowerCase()}${name === \"submit\" ? \"/submit\" : \"/save\"\r\n      }`;\r\n    const { status, data } = await axios.post(url, finalModule);\r\n    if (data?.length === 0) {\r\n      setIsSuccess({ success: true, name: name, status: 500 })\r\n      dispatch({ type: IS_LOADING, isLoading: false })\r\n    }\r\n\r\n    let moduleEntrywithId = { ...finalModule };\r\n    // moduleEntrywithId.id = data\r\n    if (name === \"submit\") {\r\n      setIsSuccess({ success: true, name: name, status: 200 });\r\n      dispatch({ type: IS_LOADING, isLoading: false });\r\n    } else {\r\n      moduleEntrywithId.jobPost.id = data.data.id;\r\n      dispatch({\r\n        type: CREATE_JOB_SHEET,\r\n        [`${moduleName}EntryData`]: moduleEntrywithId,\r\n      });\r\n      setIsSuccess({ success: true, name: name, status: 200 });\r\n      dispatch({ type: IS_LOADING, isLoading: false });\r\n    }\r\n\r\n    // save updated target Repack\r\n    // if(moduleName === 'repack'){\r\n    //   const repack = await axios.post(`repack/target_repacks/save`, {data:table?.data})\r\n    //   if(repack?.isSuccess) {\r\n    //     setIsSuccess({ success: true, name: name, status: 500 })\r\n    //     dispatch({ type: IS_LOADING, isLoading: false })\r\n    //   }\r\n    // }\r\n\r\n    return true;\r\n  } catch (e) {\r\n    console.log(e);\r\n    const status = throwErrorStatus(e)\r\n    setIsSuccess({ success: true, name: null, status: 500, isLoading: false })\r\n    return false\r\n  }\r\n};\r\n\r\nexport const saveImage = async ({ e, dispatch }) => {\r\n  try {\r\n    dispatch({ type: IS_LOADING, isLoading: true });\r\n\r\n    let file = e.target.files[0];\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: true,\r\n      fileType: \"jpeg\",\r\n    };\r\n    const compressedFile = await imageCompression(file, options);\r\n    const newFile = new File([compressedFile], compressedFile.name);\r\n    let formData = new FormData();\r\n    formData.append(\"files\", newFile);\r\n    const url = `waste/uploadImages`;\r\n    const { data } = await axios.post(url, formData);\r\n    dispatch({ type: IS_LOADING, isLoading: false });\r\n    return data.data[0];\r\n  } catch (e) {\r\n    console.log(e);\r\n    // dispatch({ type: IS_LOADING, isLoading: false, status: 500 })\r\n  }\r\n};\r\n\r\n// Outbound Module\r\n\r\n//get po by sku id\r\nexport const getPoBySkuIdOutbound = async ({ skuId, warehouseUuid }) => {\r\n  try {\r\n    const url = `outbound/poBySkuId?skuId=${skuId}&warehouseUuid=${warehouseUuid}`;\r\n    const { data } = await axios(url);\r\n    return data?.data?.poItems;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\n//get waste area\r\nexport const getWasteWarehouseArea = async ({ warehouseUuid, setAreaId }) => {\r\n  try {\r\n    const url = `inventory/wasteArea?warehouseUuid=${warehouseUuid}`;\r\n    const { data } = await axios(url);\r\n    const areaId = data?.data.map((data) => ({\r\n      label: data.areaName,\r\n      value: data.id,\r\n    }));\r\n    if (areaId) setAreaId(areaId[0]);\r\n    return areaId[0];\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\n//get warehouse\r\nexport const getWarehouses = async ({ dispatch }) => {\r\n  try {\r\n    const url = `/oss/warehouses`;\r\n    const { data } = await axios(url);\r\n    dispatch({ type: 'DATA_WAREHOUSE', data })\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n//get latest sync histories\r\n\r\nexport const getLatestSyncHistories = async ({ dispatch }) => {\r\n  const url = `inventory/getLastHistories`\r\n  const data = await axios(url)\r\n  if (data) {\r\n    let newData = [...data?.data?.data]\r\n    newData = newData?.map(data => {\r\n      data.updatedAt = dateFull({ date: data.updatedAt })\r\n      return data\r\n    })\r\n    dispatch({ type: IS_LOADING, lastSyncHistories: newData })\r\n  }\r\n}\r\n\r\nexport const syncAllHistories = async ({ warehouseUuid, setSubmit }) => {\r\n  const url = `/inventory/syncAllHistories?warehouseUuid=${warehouseUuid}`\r\n\r\n  const data = await axios.post(url)\r\n  setSubmit(data)\r\n\r\n}\r\n\r\nexport const getCategories = async ({ dispatch, categoryList }) => {\r\n  const url = `/oss/categories`\r\n  const data = await axios(url)\r\n  if (data) dispatch({ type: IS_LOADING, categoryList: data?.data?.data?.map(data => ({ value: data?.id, label: data?.name })) })\r\n}","import axios from \"axios\";\r\nimport { WAREHOUSE_AREA, RIPENESS_LEVEL, GRADE, OUTBOUND_TYPE } from \"../action\";\r\n\r\nexport const getWarehouseArea = async ({\r\n  warehouseUuid,\r\n  dispatch,\r\n  type = \"dropdown\",\r\n}) => {\r\n  try {\r\n    let url = `/inventory/warehouseArea?warehouseUuid=${warehouseUuid}`;\r\n    const { data = null } = await axios(url);\r\n    if (type == \"csvValidator\") {\r\n      //get warehouse area for csv validator\r\n      dispatch({\r\n        type: WAREHOUSE_AREA,\r\n        warehouseAreaCsv: data?.data.map((data) => ({\r\n          label: data?.areaName,\r\n          value: data?.id,\r\n        })),\r\n      });\r\n    } else {\r\n      return data?.data.map((data) => ({\r\n        label: data?.areaName,\r\n        value: data?.id,\r\n      }))\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const getRipenessLevel = async ({ dispatch }) => {\r\n  try {\r\n    const url = `/inventory/ripenessLevel`;\r\n    const { data } = await axios(url);\r\n    const ddList = data?.data.map((data, i) => ({ label: data, value: String(data) }))\r\n    dispatch({\r\n      type: RIPENESS_LEVEL,\r\n      ripenessLevel: ddList\r\n    });\r\n    return ddList\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const getGrade = async ({ skuId, dispatch }) => {\r\n  try {\r\n    const url = `/inventory/grade?skuId=${skuId}`;\r\n    const { data } = await axios(url);\r\n    // console.log(data);\r\n    if (data) {\r\n      return data.data.map((data) => ({\r\n        label: data.skuDescription,\r\n        value: data.id,\r\n        multiplier: data.parentToChildMultiplier,\r\n        uom: data.uom\r\n      }));\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const getOutboundType = async ({\r\n  type = \"dropdown\",\r\n  dispatch\r\n}) => {\r\n  try {\r\n    const url = `/inventory/outboundType`;\r\n    const { data } = await axios(url);\r\n    let outboundType = []\r\n    if (data) {\r\n      if (type == 'csvValidator') {\r\n        dispatch({\r\n          type: OUTBOUND_TYPE,\r\n          outboundTypeCsv: data?.data.map((listItem) => ({\r\n            label: listItem.description,\r\n            value: listItem.code\r\n          })),\r\n        });\r\n      } else {\r\n        outboundType = data.data.map(listItem => ({\r\n          label: listItem.description,\r\n          value: listItem.code\r\n        }))\r\n      }\r\n    }\r\n    return outboundType;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const getWarehouse = async ({ }) => {\r\n  try {\r\n    const url = `/oss/warehouses`\r\n    const { data } = await axios(url)\r\n    if (data) {\r\n      return data?.data.map(data => ({ label: data.name, value: data.id }))\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport const getWasteReason = async ({ dispatch }) => {\r\n  try {\r\n    const url = `/inventory/wasteReasons`\r\n    const { data } = await axios(url)\r\n    if (data) {\r\n      const dropdown = data?.data?.map(data => ({ value: data.code, label: data.description }))\r\n      if (typeof (dispatch) === 'function') dispatch({ type: RIPENESS_LEVEL, wasteReasonList: dropdown })\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.log(e)\r\n  }\r\n}"],"sourceRoot":""}