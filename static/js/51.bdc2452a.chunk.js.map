{"version":3,"sources":["Page/ConfigModules/Settings/ActiveStockDetail.jsx","Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/CustomTable/index.jsx","Page/ConfigModules/Settings/services.js"],"names":["useDimension","height","emptyItem","isMobile","width","tableHeight","customTableClass","ActiveStockDetail","props","useState","detail","setDetail","history","useHistory","status","useSelector","state","thereAreRequest","id","location","pathname","split","pop","useEffect","_","getSyncHistoriesDetail","length","className","style","minHeight","maxHeight","editColumn","styles","color","textAlign","data","columns","activeStockTableHeaderDetail","onClick","goBack","type","src","loading","alt","PopUp","refresh","icon","statusDisplay","title","cancelButtonTitle","actionButtonTitle","cancelButtonClass","actionButtonClass","actionButtonEvent","colorText","msg1","msg2","onCloseFunction","refreshOnCancel","setIsSuccess","dispatch","useDispatch","code","message","show","setShow","window","onkeydown","e","keyCode","closeOnBackdrop","onClose","success","name","STATUS","size","bodyOpenClassName","reload","refreshPage","parentOncCloseFunction","ReactTableFixedColumns","withFixedColumns","ReactTable","CustomTable","getColumnWidth","rows","accessor","headerText","Math","max","map","row","value","toString","headerIcon","header","listHeader","h","index","obj","Header","Cell","sortable","resizable","headerClassName","showModal","activeTab","editColumnTemp","this","tableStatus","Fragment","showPagination","noDataText","minRows","getTdProps","rowInfo","column","instance","handleOriginal","original","cursor","isNaN","defaultPageSize","React","Component","activeStockTableHeader","placeholder","display","justifyContent"],"mappings":"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","file":"static/js/51.bdc2452a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDimension } from 'Page/StockEntry/GeneralServices/'\r\nimport CustomTable from 'Component/CustomTable'\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport { getSyncHistoriesDetail } from 'apiServices'\r\nimport { activeStockTableHeaderDetail, data } from './services'\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport { useHistory } from 'react-router';\r\n\r\nconst { height, emptyItem, width, isMobile } = useDimension(200)\r\nconst tableHeight = height + 50\r\nconst customTableClass = isMobile ? 'target-movement-mobile' : 'target-movement'\r\n\r\nconst ActiveStockDetail = (props) => {\r\n    const [detail, setDetail] = useState([])\r\n    const history = useHistory()\r\n    const status = useSelector((state) => state.status);\r\n    const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n    const id = props.location.pathname.split(\"/\").pop()\r\n\r\n    useEffect(_ => {\r\n        if (id) getSyncHistoriesDetail({ setDetail, id })\r\n    }, [id])\r\n\r\n    if (thereAreRequest !== 0 && !detail?.length) return (\r\n        <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem + 200, maxHeight: emptyItem + 200 }}>\r\n            <img className=\"loading\" src={loading} alt=\"loading\" />\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\"bg-white border radius-all w-100 active-stock\" style={{ minHeight: height, height: height, maxHeight: height }} >\r\n            <PopUp status={status} />\r\n            <div style={{ minHeight: tableHeight }} className='w-100'>\r\n                {detail?.length ? <CustomTable\r\n                    editColumn={'false'}\r\n                    className={`${customTableClass} pointer`}\r\n                    styles={{ color: 'red', textAlign: 'right', width: '100%', maxHeight: tableHeight }}\r\n                    data={detail?.length ? detail : []}\r\n                    columns={activeStockTableHeaderDetail} /> :\r\n                    <div\r\n                        style={{ minHeight: tableHeight }} className='emptyTextField d-flex flex-column justify-content-center align-items-center w-100'>\r\n                        No Data. Please select another Transaction\r\n                    </div>}\r\n            </div>\r\n\r\n            <div className='w-100 d-flex justify-content-end'>\r\n                <button onClick={() => history.goBack()} type=\"button\" className={`btn px-5 mt-3 sku-item no-shadow text-white bg-green`}>Back</button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ActiveStockDetail","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { onClose, refreshPage } from \"./services.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { STATUS } from \"apiServices/action\";\r\n\r\nconst PopUp = ({\r\n  refresh,\r\n  status,\r\n  icon,\r\n  statusDisplay = false,\r\n  title = \"\",\r\n  cancelButtonTitle = \"Cancel\",\r\n  actionButtonTitle = \"Submit\",\r\n  cancelButtonClass = \"bg-background\",\r\n  actionButtonClass = \"bg-background\",\r\n  actionButtonEvent = null,\r\n  colorText = \"red\",\r\n  msg1 = null,\r\n  msg2 = null,\r\n  onCloseFunction = null,\r\n  refreshOnCancel = true,\r\n  setIsSuccess\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  if (status?.code === 500 ) {\r\n    icon = \"em-pensive\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 408 ) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Request Timeout\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 400 ) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n  if (status?.code === 404) {\r\n    title = \"Something wrong with the application\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n\r\n  const [show, setShow] = useState(statusDisplay);\r\n\r\n  useEffect(() => {\r\n    //from outside change\r\n    setShow(statusDisplay);\r\n  }, [statusDisplay]);\r\n\r\n  useEffect(() => {\r\n  }, [show]);\r\n\r\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\r\n  return (\r\n    <CRow className={`${show ? null : \"d-none\"}`}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          closeOnBackdrop={false}\r\n          onClose={() => {\r\n            setShow(false)\r\n            if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n            dispatch({ type: STATUS, status: null });\r\n            if (onCloseFunction) {\r\n              onCloseFunction()\r\n            }\r\n          }}\r\n          size=\"lg\"\r\n          style={{ minHeight: \"280px\" }}\r\n          bodyOpenClassName=\"p-3\"\r\n        >\r\n          {/* <div className='d-flex flex-row-reverse'>\r\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-3 border-none\">\r\n              <CModalTitle className={`text LatoBold ${colorText}`}>\r\n                {title}\r\n              </CModalTitle> */}\r\n\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <i\r\n              className=\"pr-3 pt-3 iconU-modalClose\"\r\n              onClick={() => {\r\n                setShow(false)\r\n                if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n                dispatch({ type: STATUS, status: null });\r\n                if (onCloseFunction) {\r\n                  onCloseFunction()\r\n                }\r\n              }}\r\n            ></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className={`text LatoBold ${colorText}`}>\r\n              {title} <span><i className={`em ${icon}`}></i></span>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">{msg1}</p>\r\n            <p className=\"text\">{msg2}</p>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            {cancelButtonTitle ? (\r\n              <CButton\r\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\r\n                onClick={() => {\r\n                  if (refreshOnCancel) {\r\n                    if (typeof (refresh) === 'function') refresh()\r\n                    else refreshPage({ refresh: true });\r\n                  } else {\r\n                    onClose({\r\n                      setShow,\r\n                      parentOncCloseFunction: onCloseFunction,\r\n                    });\r\n                  }\r\n                  dispatch({ type: STATUS, status: null });\r\n                }}\r\n              >\r\n                {cancelButtonTitle}\r\n              </CButton>\r\n            ) : null}\r\n            {actionButtonTitle ? (\r\n              <CButton\r\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\r\n                onClick={() => {\r\n                  if (actionButtonEvent) {\r\n                    actionButtonEvent();\r\n                    setShow(false);\r\n                  } else {\r\n                    setShow(false)\r\n                  }\r\n                }\r\n                }\r\n              >\r\n                {actionButtonTitle}\r\n              </CButton>\r\n            ) : null}{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\r\n  setShow(false);\r\n  if (parentOncCloseFunction) {\r\n    parentOncCloseFunction();\r\n  }\r\n\r\n};\r\n\r\nexport const refreshPage = ({ refresh = true }) => {\r\n  if (refresh === true) {\r\n    window.location.reload(false);\r\n  }\r\n};\r\n","import ReactTable from 'react-table-v6'\r\nimport 'react-table-v6/react-table.css'\r\nimport './CustomTable.scss'\r\nimport React from 'react'\r\n\r\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\r\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\r\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\r\n\r\nclass CustomTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            activeTab: '1',\r\n            editColumnTemp: {},\r\n        }\r\n    }\r\n\r\n    getColumnWidth = (rows, accessor, headerText) => {\r\n        const cellLength = Math.max(\r\n            ...rows.map(row => {\r\n                let value = '';\r\n                value = accessor(row);\r\n                if (typeof value === 'number') return value.toString().length;\r\n                return (value || '').length;\r\n            }),\r\n            headerText.length\r\n        );\r\n        return cellLength * 12\r\n    }\r\n\r\n    headerIcon = (data, header, editColumn) => {\r\n        let listHeader = []\r\n        header && header.map((h, index) => {\r\n            if (!editColumn[index]) {\r\n                let withIcon = (<span>\r\n                    {h.Header} <i className=\"iconU-sort\"> </i>\r\n                </span>\r\n                )\r\n                let obj = {\r\n                    Header: withIcon,\r\n                    Cell: h.Cell,\r\n                    accessor: h.accessor,\r\n                    sortable: h.sortable === false ? false : true,\r\n                    resizable: h.resizable || false,\r\n                    className: h.className || null,\r\n                    headerClassName: h.headerClassName || null,\r\n                    style: h.style || null,\r\n                    width: h.width || null,\r\n                }\r\n                listHeader = [...listHeader, obj]\r\n                return listHeader\r\n            } else {\r\n                listHeader = [...listHeader]\r\n                return listHeader\r\n            }\r\n        })\r\n\r\n        if (this.props.editColumn !== 'false') {\r\n            let editBtn = (\r\n                <i className='iconU-tableEdit pencilTable' />\r\n            )\r\n            let obj = {\r\n                Header: editBtn,\r\n                accessor: 'editBtn',\r\n                width: 50,\r\n                style: { textAlign: 'center' },\r\n            };\r\n            listHeader = [...listHeader, obj];\r\n        }\r\n\r\n        return listHeader;\r\n    };\r\n\r\n    render() {\r\n        const { editColumnTemp } = this.state\r\n        let { columns, data, onClick, styles, tableStatus, className } = this.props\r\n        let headerIcon = this.headerIcon(data, columns, editColumnTemp);\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <ReactTableFixedColumns\r\n                    className={className}\r\n                    columns={headerIcon}\r\n                    data={data}\r\n                    showPagination={false}\r\n                    style={styles}\r\n                    noDataText={tableStatus == \"noData\" ? 'Please Wait' : 'No  Data Found'}\r\n                    minRows='0'\r\n                    resizable={false}\r\n                    getTdProps={(state, rowInfo, column, instance) => {\r\n                        return {\r\n                            onClick: (e, handleOriginal) => {\r\n                                !!onClick &&\r\n                                    onClick(rowInfo.original, state, column, e, instance);\r\n                            },\r\n                            style: {\r\n                                height: \"3rem\",\r\n                                cursor: !!onClick && 'pointer',\r\n                                textAlign: isNaN(rowInfo?.original[column.id])\r\n                                    ? 'left'\r\n                                    : 'right',\r\n                            },\r\n                        };\r\n                    }}\r\n                    defaultPageSize={50}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CustomTable","export const activeStockTableHeader = [\r\n    { width: '100%', Header: 'SYNC DATE', placeholder: 'Sync Date', accessor: 'updatedAt', style: { textAlign: 'left', display: 'start', justifyContent: 'flex-start' } },\r\n    { width: '100%', Header: 'USER', placeholder: 'User', accessor: 'createdBy' },\r\n    { width: '100%', Header: 'MODULE', placeholder: 'Module', accessor: 'module', style: { textAlign: 'right', display: 'flex', justifyContent: 'flex-start' }, },\r\n    { width: '100%', Header: 'MESSAGE RESPONSE', placeholder: 'Message Response', accessor: 'responseMessage', style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-start' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\r\n]\r\n\r\nexport const activeStockTableHeaderDetail = [\r\n    { width: '100%', Header: 'SKU DESCRIPTION', placeholder: 'Sku Description', accessor: 'skuDescription', style: { textAlign: 'left', display: 'start', justifyContent: 'flex-start' } },\r\n    { width: '100%', Header: 'SKU NUMBER', placeholder: 'Sku Number', accessor: 'skuNumber' },\r\n    { width: '100%', Header: 'REASON', placeholder: 'Reason', accessor: 'reason', style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-start' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\r\n]\r\n\r\nexport const data = [\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n\r\n    {\r\n        syncDate: '19:03 30-03-2021',\r\n        user: 'serge@sayurbox.com',\r\n        module: 'Stock Take',\r\n        messageResponse: 'Synchronize failed'\r\n    },\r\n]"],"sourceRoot":""}