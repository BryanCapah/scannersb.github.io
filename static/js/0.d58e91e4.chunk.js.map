{"version":3,"sources":["Page/StockEntry/GeneralServices/index.js","assets/icons/loading/LOADING-MLS-GRAY.gif","Page/StockEntry/Repacking/services.js"],"names":["useDimension","hValue","wValue","dimention","document","documentElement","clientHeight","width","clientWidth","height","emptyItem","isMobile","useEntryDimention","showTargetRepack","heightAdj","loading","useStockTake","dispatch","zeroQuantity","useSelector","state","thereAreRequest","moduleFirstLoad","stockTakeFirstLoad","warehouseUuid","user","warehouseCode","status","isLoading","stockTakeEntryData","useState","summary","setSummary","localEntryData","setLocalEntryData","search","setSearch","area","setArea","areaId","setAreaId","discard","setDiscard","useEffect","a","getRipenessLevel","ripeness","getWarehouseArea","areaList","storageList","filter","data","typeId","label","getUnfinishedEntries","moduleName","isExist","getData","useStockTakeEntry","moduleEntry","activeSku","success","name","isSuccess","setIsSuccess","show","confirmation","setConfirmation","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","hideContent","setHideContent","allowPage","setAllowPage","jobPost","list","skuName","skuNumber","poList","gradeList","totalQty","unitOfMeassures","totalWeight","totalWeightCount","edited","jobSheetChecker","postInfo","useStockMovement","stockMovementFirstLoad","stockMovementDropdown","areaIdDesposition","areaMovement","stockMovementEntryData","wasteReasonList","isCheckedBefore","setIsCheckedBefore","areaMatched","setAreaMatched","isCheckedTotal","selectedSkuCheck","added","entryIsReady","length","stockMovementTargetRepack","getWasteReason","_","value","getStockTakeSummary","desc","setModule","module","useStockMovementEntry","useStockTransferEntry","useWaste","wasteFirstLoad","wasteEntryData","getWasteWarehouseArea","useWasteEntry","useAdditionalOutbound","outboundFirstLoad","outboundEntryData","warehouseArea","outboundAddSku","next","setNext","useAdditionalOutboundEntry","outboundTypeList","useRepacking","repackFirstLoad","repackEntryData","targetRepack","areaDestinationId","setAreaDestinationId","aId","adId","setTargetRepack","type","IS_LOADING","useRepackingEntry","invalidThreshold","setInvalidThreshold","activeTab","setActiveTab","totalPack","totalPackCount","useSingleView","category","createPo","setCreatePo","singleViewData","setSingleViewData","fromBarcode","setFromBarcode","moveAll","setMoveAll","updateList","props","props2","setTimeout","singleView","useScanner","showScanner","setShowScanner","showSkuList","setShowSkuList","useTargetRepack","targetRepacks","slotList","slot","setSlot","tgtRpck","table","filterTargetRepack","setShowTargetRepack","totalEmptyThreshold","countThresholdIsEmpty","updateTargetRepack","useTargetMovement","targetMovements","useOutside","wrapperRef","setShow","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","exports","selectSku","idx","checked","moduleSummary","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","map","jsList","skuUuid","push","jsD","sI","includes","getGradeRepacking","skuId","grade","getPORepacking","warehouseId","uom","addPoItem","itemList","expiryMs","inBoundyMs","expiryDate","inboundDate","packSize","initialWeight","Number","isInteger","parseInt","parseFloat","Promise","all","newJs","concat","uncheckedSku","id","jobSheet","warehouseSource","warehouseDestination","areaSource","areaName","areaDestination","areaDestinationName","sort","b","filterBySkuName","CREATE_JOB_SHEET","console","log","preAddSku","preAddHandler","isFloat","isNewItem","submitValidation","setActiveSKU","isClear","js","jsR","description","originalUom","po","qtyCount","totalListItemWeightCount","moduleList","item","qty","pack","note","isNaN","qtyIsEmpty","gradeIsEmpty","noteIsEmpty","ratio","grd","multiplier","standardWeight","toLowerCase","inputWeight","packThresholdIsEmpty","packThreshold","packIsEmpty","qtyToCompareIsEmpty","slotIsEmpty","valid","checkIsSkuRequired","number","ls","listIndex","poListIdx","entryListIdx","excess"],"mappings":"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","file":"static/js/0.d58e91e4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUnfinishedEntries, getWasteWarehouseArea, getStockTakeSummary } from \"apiServices\";\r\nimport { getWarehouseArea, getRipenessLevel, getWasteReason } from \"apiServices/dropdown\";\r\nimport { IS_LOADING } from 'apiServices/action'\r\nimport { jobSheetChecker, totalWeightCount, selectedSkuCheck, totalPackCount, filterTargetRepack, updateTargetRepack, setTargetRepack } from 'Page/StockEntry/GeneralServices/moduleServices'\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport { countThresholdIsEmpty } from '../Repacking/services';\r\n//dimension\r\nexport const useDimension = (hValue, wValue) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const width = document.documentElement.clientWidth\r\n  const height = dimention - (hValue ? hValue : 0)\r\n  const emptyItem = dimention - (hValue ? hValue : 0)\r\n  const isMobile = width <= 500 ? true : false\r\n  return { dimention, height, emptyItem, width, isMobile }\r\n}\r\n\r\nexport const useEntryDimention = (showTargetRepack) => {\r\n  const dimention = document.documentElement.clientWidth\r\n  let height = document.documentElement.clientHeight\r\n  let heightAdj = height - (showTargetRepack ? 535 : 290)\r\n  height = dimention <= 500 ? (showTargetRepack ? (heightAdj + 100) : heightAdj) : height\r\n\r\n  return { height, heightAdj, dimention, loading }\r\n}\r\n\r\n// Stock Take\r\nexport const useStockTake = ({ dispatch }) => {\r\n  const moduleName = 'stockTake'\r\n  const zeroQuantity = useSelector(state => state.zeroQuantity)\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTakeFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const warehouseCode = useSelector((state) => state.user.warehouseCode);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockTakeEntryData = useSelector((state) => state.stockTakeEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState({})\r\n  const [discard, setDiscard] = useState()\r\n\r\n  // use Effect\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      const storageList = areaList?.filter(data => data.typeId === 1)\r\n      if (warehouseCode === 'JK01') setAreaId(storageList?.filter(data => data.label === 'Storage Ambient')[0])\r\n      else setAreaId(storageList[0])\r\n      setArea(areaList)\r\n\r\n      getUnfinishedEntries({ dispatch, moduleName, isExist: stockTakeEntryData ? true : false, ripeness })\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    stockTakeEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    discard,\r\n    setDiscard,\r\n    zeroQuantity\r\n  }\r\n}\r\n\r\n// Stock Take Entry\r\nexport const useStockTakeEntry = ({ moduleEntry, activeSku }) => {\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/stock-take/weight-entry',\r\n    '/inventory-entry/stock-take/weight-entry/remove-sku',\r\n    '/inventory-entry/stock-take/weight-entry/add-sku',\r\n  ])\r\n\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    status\r\n  }\r\n}\r\n\r\n// Stock Movement\r\nexport const useStockMovement = ({ dispatch }) => {\r\n  const moduleName = 'stockMovement'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockMovementFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const stockMovementDropdown = useSelector(state => state.stockMovementDropdown)\r\n  const areaId = useSelector(state => state.areaId)\r\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockMovementEntryData = useSelector((state) => state.stockMovementEntryData);\r\n  const wasteReasonList = useSelector(state => state.wasteReasonList)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState('')\r\n  const [area, setArea] = useState()\r\n  const [areaMatched, setAreaMatched] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  // const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n\r\n\r\n  const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockMovementEntryData ? true : false, ripeness })\r\n      if (!wasteReasonList?.length) {\r\n        getWasteReason({ dispatch })\r\n      }\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(_ => {\r\n    if (areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value) setAreaMatched(true)\r\n    else setAreaMatched(false)\r\n  }, [areaId, areaIdDesposition, added])\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId, areaIdDesposition])\r\n\r\n  useEffect(_ => {\r\n    if (stockMovementTargetRepack) {\r\n      const isMatchedDropdown = areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value\r\n      if (isMatchedDropdown) {\r\n        setSummary()\r\n        getStockTakeSummary({\r\n          moduleName,\r\n          stockMovementTargetRepack,\r\n          dispatch,\r\n          desc: search,\r\n          warehouseUuid,\r\n          areaId,\r\n          areaIdDesposition,\r\n          setModule: setSummary,\r\n          module: localEntryData\r\n        })\r\n        setSearch(search)\r\n      }\r\n    }\r\n    if (!stockMovementTargetRepack) setSummary()\r\n  }, [stockMovementTargetRepack])\r\n\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    stockMovementDropdown,\r\n    areaId,\r\n    areaIdDesposition,\r\n    areaMovement,\r\n    status,\r\n    isLoading,\r\n    stockMovementEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area, setArea,\r\n    areaMatched, setAreaMatched,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    entryIsReady,\r\n    stockMovementTargetRepack\r\n  }\r\n}\r\n\r\n// Stock Movement Entry\r\nexport const useStockMovementEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/movement/weight-entry',\r\n    '/inventory-entry/movement/weight-entry/remove-sku',\r\n    '/inventory-entry/movement/weight-entry/add-sku',\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    areaMovement,\r\n    status\r\n  }\r\n}\r\n\r\n// Stock Transfer\r\nexport const useStockTransfer = ({ dispatch }) => {\r\n  const moduleName = 'stockTransfer'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.stockTransferFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const stockTransferDropdown = useSelector(state => state.stockTransferDropdown)\r\n  const areaId = useSelector(state => state.areaId)\r\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const stockTransferEntryData = useSelector((state) => state.stockTransferEntryData);\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [area, setArea] = useState()\r\n  const [areaMatched, setAreaMatched] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockTransferEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(_ => {\r\n    if (areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value) setAreaMatched(true)\r\n    else setAreaMatched(false)\r\n  }, [areaId, areaIdDesposition, added])\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId, areaIdDesposition])\r\n\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    stockTransferDropdown,\r\n    areaId,\r\n    areaIdDesposition,\r\n    areaMovement,\r\n    status,\r\n    isLoading,\r\n    stockTransferEntryData,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area, setArea,\r\n    areaMatched, setAreaMatched,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    entryIsReady\r\n  }\r\n}\r\n\r\n// Stock Transfer Entry\r\nexport const useStockTransferEntry = ({ moduleEntry, activeSku }) => {\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const areaMovement = useSelector(state => state.areaMovement)\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/stock-transfer/weight-entry',\r\n    '/inventory-entry/stock-transfer/weight-entry/remove-sku',\r\n    '/inventory-entry/stock-transfer/weight-entry/add-sku',\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    areaMovement,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n// Waste\r\nexport const useWaste = ({ dispatch }) => {\r\n  const moduleName = 'waste'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.wasteFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const wasteEntryData = useSelector((state) => state.wasteEntryData);\r\n\r\n  const [areaId, setAreaId] = useState()\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const b = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      const areaId = await getWasteWarehouseArea({ warehouseUuid, setAreaId })\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: wasteEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    wasteEntryData,\r\n    areaId,\r\n    setAreaId,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal\r\n  }\r\n}\r\n\r\n// Waste Entry\r\nexport const useWasteEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/waste/weight-entry',\r\n    '/inventory-entry/waste/weight-entry/remove-sku',\r\n    '/inventory-entry/waste/weight-entry/add-sku',\r\n  ])\r\n\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    status\r\n  }\r\n}\r\n\r\n// Additional Outbound\r\nexport const useAdditionalOutbound = ({ dispatch }) => {\r\n  const moduleName = 'outbound'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.outboundFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const outboundEntryData = useSelector((state) => state.outboundEntryData);\r\n  const warehouseArea = useSelector(state => state.warehouseArea);\r\n  const outboundAddSku = useSelector(state => state.outboundAddSku)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [next, setNext] = useState(false)\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState()\r\n  const [search, setSearch] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: outboundEntryData ? true : false })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    outboundEntryData,\r\n    warehouseArea,\r\n    outboundAddSku,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    next,\r\n    setNext,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added\r\n  }\r\n}\r\n\r\n// Additional Outbound Entry\r\nexport const useAdditionalOutboundEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const { skuName, skuNumber, poList, outboundTypeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/additional-outbound/weight-entry',\r\n    '/inventory-entry/additional-outbound/remove-sku',\r\n    '/inventory-entry/additional-outbound/add-sku',\r\n  ])\r\n\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    isLoading,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    totalQty,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    outboundTypeList,\r\n    status\r\n  }\r\n}\r\n\r\n// Repacking\r\nexport const useRepacking = ({ dispatch }) => {\r\n  const moduleName = 'repack'\r\n\r\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n  const moduleFirstLoad = useSelector(state => state.repackFirstLoad)\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  const status = useSelector((state) => state.status);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const repackEntryData = useSelector((state) => state.repackEntryData);\r\n  const warehouseArea = useSelector(state => state.warehouseArea);\r\n  const targetRepack = useSelector(state => state.targetRepack)\r\n\r\n  const [summary, setSummary] = useState(null)\r\n  const [localEntryData, setLocalEntryData] = useState()\r\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n  const [search, setSearch] = useState('')\r\n  const [area, setArea] = useState()\r\n  const [areaId, setAreaId] = useState()\r\n  const [areaDestinationId, setAreaDestinationId] = useState()\r\n  const [discard, setDiscard] = useState()\r\n\r\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\r\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n\r\n  const setTargetRepack = (value) => {\r\n    dispatch({ type: IS_LOADING, targetRepack: value })\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const ripeness = await getRipenessLevel({ dispatch })\r\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\r\n      setArea(areaList)\r\n      const aId = areaList?.filter(area => area.label === 'Production')\r\n      const adId = areaList?.filter(area => area.label === 'Staging')\r\n      if (aId?.length) setAreaId(aId[0])\r\n      if (adId?.length) setAreaDestinationId(adId[0])\r\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: repackEntryData ? true : false, ripeness })\r\n      setIsCheckedBefore(isCheckedTotal)\r\n    }\r\n    getData()\r\n  }, []);\r\n  useEffect(() => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n  }, [areaId])\r\n\r\n  useEffect(_ => {\r\n    if (targetRepack) {\r\n      setSummary()\r\n      if (areaId) getStockTakeSummary({\r\n        moduleName,\r\n        targetRepack,\r\n        dispatch,\r\n        desc: '',\r\n        warehouseUuid,\r\n        areaId,\r\n        areaIdDesposition: areaDestinationId,\r\n        setModule: setSummary,\r\n        module: localEntryData\r\n      })\r\n    }\r\n    if (!targetRepack) setSummary()\r\n  }, [targetRepack, areaId])\r\n\r\n  return {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    repackEntryData,\r\n    warehouseArea,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    isCheckedBefore,\r\n    setIsCheckedBefore,\r\n    search,\r\n    setSearch,\r\n    area,\r\n    setArea,\r\n    areaId,\r\n    setAreaId,\r\n    areaDestinationId,\r\n    setAreaDestinationId,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal,\r\n    added,\r\n    targetRepack,\r\n    setTargetRepack\r\n  }\r\n}\r\n\r\n// Repacking Entry\r\nexport const useRepackingEntry = ({ moduleEntry, activeSku }) => {\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  const status = useSelector(state => state.status)\r\n  const [invalidThreshold, setInvalidThreshold] = useState()\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\r\n  const [discard, setDiscard] = useState(false)\r\n  const [isSaved, setIsSaved] = useState()\r\n  const [action, setAction] = useState()\r\n  const [isRequired, setIsRequired] = useState(false)\r\n  const [hideContent, setHideContent] = useState(false)\r\n  const [allowPage, setAllowPage] = useState([\r\n    '/inventory-entry/repacking/weight-entry',\r\n    '/inventory-entry/repacking/weight-entry/remove-sku',\r\n    '/inventory-entry/repacking/weight-entry/add-sku',\r\n  ])\r\n\r\n  //filter item by active slot\r\n  const [activeTab, setActiveTab] = useState(0)\r\n\r\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\r\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\r\n  const totalPack = totalPackCount({ moduleEntry, activeSku })\r\n  const edited = jobSheetChecker({ moduleEntry })\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n\r\n  return {\r\n    isLoading,\r\n    invalidThreshold,\r\n    setInvalidThreshold,\r\n    isSuccess,\r\n    setIsSuccess,\r\n    confirmation,\r\n    setConfirmation,\r\n    discard,\r\n    setDiscard,\r\n    isSaved,\r\n    setIsSaved,\r\n    action,\r\n    setAction,\r\n    isRequired,\r\n    setIsRequired,\r\n    hideContent,\r\n    setHideContent,\r\n    allowPage,\r\n    setAllowPage,\r\n    unitOfMeassures,\r\n    totalWeight,\r\n    edited,\r\n    postInfo,\r\n    skuName,\r\n    skuNumber,\r\n    poList,\r\n    gradeList,\r\n    totalQty,\r\n    totalPack,\r\n    status,\r\n    activeTab,\r\n    setActiveTab\r\n  }\r\n}\r\n\r\n// Single view\r\nexport const useSingleView = ({ category, dispatch, setLocalEntryData, setSummary, setSearch, getStockTakeSummary, search, warehouseUuid, areaId, localEntryData, moduleName, stockMovementTargetRepack }) => {\r\n\r\n  //submit\r\n  const [action, setAction] = useState()\r\n  const [confirmation, setConfirmation] = useState({ show: false, name: 'submit' })\r\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\r\n  const [isSaved, setIsSaved] = useState()\r\n\r\n  // create po single view\r\n  const [createPo, setCreatePo] = useState()\r\n  const [singleViewData, setSingleViewData] = useState()\r\n  const [fromBarcode, setFromBarcode] = useState()\r\n\r\n\r\n  //condition move all\r\n  const [moveAll, setMoveAll] = useState()\r\n\r\n  useEffect(() => {\r\n    if (isSuccess.status === 500) {\r\n      setIsSaved(false)\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n    }\r\n    else if (isSuccess.status === 200) {\r\n      setConfirmation({ show: false, name: confirmation.name })\r\n      setIsSaved(true)\r\n    }\r\n\r\n  }, [isSuccess])\r\n\r\n  useEffect(() => {\r\n    if (!isSaved) setIsSuccess({ success: false, name: null })\r\n  }, [isSaved])\r\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\r\n\r\n  // end of submit\r\n\r\n  //singleview\r\n  const updateList = (props, props2, moduleName) => {\r\n    setLocalEntryData()\r\n    setSummary()\r\n    if (search === 'barcode') return\r\n\r\n    dispatch({ type: IS_LOADING, isLoading: true })\r\n    setTimeout(() => {\r\n      getStockTakeSummary({\r\n        category,\r\n        moduleName,\r\n        stockMovementTargetRepack: props2,\r\n        zeroQuantity: props,\r\n        singleView: true,\r\n        dispatch,\r\n        desc: search,\r\n        warehouseUuid,\r\n        areaId,\r\n        setModule: setSummary,\r\n        module: localEntryData\r\n      },\r\n        setSearch(search))\r\n    }, 10);\r\n  }\r\n\r\n  return { fromBarcode, setFromBarcode, updateList, action, setAction, confirmation, setConfirmation, isSuccess, setIsSuccess, isSaved, setIsSaved, createPo, setCreatePo, singleViewData, setSingleViewData, postInfo, moveAll, setMoveAll }\r\n}\r\n\r\n// Scanner\r\nexport const useScanner = () => {\r\n  const [showScanner, setShowScanner] = useState()\r\n  const [showSkuList, setShowSkuList] = useState()\r\n  return { showScanner, setShowScanner, showSkuList, setShowSkuList }\r\n}\r\n\r\nexport const useTargetRepack = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\r\n  const targetRepacks = useSelector(state => state.targetRepacks)\r\n  const slotList = useSelector(state => state.slotList)\r\n\r\n  const [slot, setSlot] = useState()\r\n\r\n  const { gradeList } = moduleEntry?.jobPost?.list[activeSku]\r\n  const tgtRpck = moduleEntry?.jobPost?.list[activeSku]?.poList[0]?.targetRepacks || []\r\n  const table = filterTargetRepack(tgtRpck, gradeList, activeSku, moduleEntry, slot)\r\n\r\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\r\n\r\n  const totalEmptyThreshold = countThresholdIsEmpty(moduleEntry)\r\n\r\n\r\n  //set Target Repack\r\n\r\n  useEffect(_ => {\r\n    setTargetRepack({ moduleEntry, dispatch })\r\n  }, [])\r\n\r\n  useEffect(_ => {\r\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\r\n    if (table?.data?.length) setShowTargetRepack(true)\r\n    updateTargetRepack({ data: table?.data, targetRepacks, activeSku, dispatch })\r\n  }, [table])\r\n\r\n  return { showTargetRepack, table, slot, setSlot, slotList, totalEmptyThreshold }\r\n}\r\n\r\n//use target movement\r\nexport const useTargetMovement = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\r\n  const targetRepacks = moduleEntry.jobPost.list[activeSku].poList[0]?.targetMovements\r\n  const slotList = useSelector(state => state.slotList)\r\n  const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\r\n\r\n  const [slot, setSlot] = useState()\r\n\r\n  const { gradeList } = moduleEntry.jobPost.list[activeSku]\r\n  const table = filterTargetRepack(targetRepacks, gradeList, activeSku, moduleEntry, slot, true)\r\n\r\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\r\n\r\n  useEffect(_ => {\r\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\r\n    if (table?.data?.length) setShowTargetRepack(true)\r\n    updateTargetRepack({ data: table?.data, targetRepacks, activeSku, dispatch })\r\n  }, [table])\r\n\r\n  return { showTargetRepack, table, slot, setSlot, slotList, stockMovementTargetRepack }\r\n}\r\n\r\n//use filter new item to active\r\nexport const useIsNewItem = ({ setActiveSKU, moduleEntry, selectedSku, dispatch, moduleName }) => {\r\n  const sorted = null\r\n  useEffect(() => {\r\n    let skuName = null\r\n    const newSkuList = moduleEntry?.jobPost?.list?.filter(data => data.isNewItem)\r\n    const length = newSkuList?.length\r\n    if (length) skuName = newSkuList[length - 1]?.skuName\r\n    const idx = moduleEntry?.jobPost?.list?.findIndex(data => data.skuName === skuName)\r\n    if (idx >= 0) setActiveSKU(idx)\r\n\r\n  }, [selectedSku]);\r\n  return { sorted }\r\n}\r\n\r\nexport function useOutside({ wrapperRef, setShow, show }) {\r\n  useEffect(() => {\r\n\r\n    function handleClickOutside(event) {\r\n      if (show && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n        setShow(!show)\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [wrapperRef, show]);\r\n}","module.exports = __webpack_public_path__ + \"static/media/LOADING-MLS-GRAY.903088aa.gif\";","import { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport { getPORepacking } from 'apiServices'\r\nimport { getGradeRepacking } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { checkIsSkuRequired, filterBySkuName, totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    areaDestinationId }) => {\r\n    try {\r\n        let moduleSummaryNew = [...moduleSummary]\r\n        moduleSummaryNew[idx].checked = checked\r\n        dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n        const selectedData = moduleSummaryNew?.filter(ldata => {\r\n            if (ldata.checked) return ldata\r\n        })\r\n        let jsSelector = []\r\n        if (moduleEntry) {\r\n            moduleEntry.jobPost.list.map(data => {\r\n                const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n                if (jsList.skuUuid) {\r\n                    jsSelector.push(jsList.skuUuid)\r\n                }\r\n            })\r\n        }\r\n        let jsD = []\r\n        const a = selectedData.map(async (list, sI) => {\r\n            const isInclude = jsSelector.includes(list.skuUuid)\r\n            if (!isInclude) {\r\n                const grade = await getGradeRepacking({ skuId: list.skuUuid })\r\n                list['gradeList'] = grade\r\n                const data = await getPORepacking({ skuId: list.skuUuid, warehouseId: warehouseUuid, uom: list.unitOfMeassures })\r\n                if (data) {\r\n                    const addPoItem = [\r\n                        {\r\n                            itemList: [],\r\n                            expiryMs: null,\r\n                            inBoundyMs: null,\r\n                            expiryDate: null,\r\n                            inboundDate: null,\r\n                            skuUuid: list.skuUuid,\r\n                            uom: list.unitOfMeassures,\r\n                            packSize: list.packSize,\r\n                            category: list.category,\r\n                            initialWeight: Number.isInteger(data?.data.totalWeight) ? parseInt(data?.data.totalWeight) : parseFloat(data?.data.totalWeight),\r\n                            targetRepacks: data?.data.targetRepacks\r\n                        }\r\n                    ]\r\n                    list['poList'] = addPoItem\r\n                    jsD.push(list)\r\n                }\r\n\r\n            }\r\n        })\r\n        const aF = await Promise.all(a)\r\n        let newJs = []\r\n        if (moduleEntry) {\r\n            newJs = moduleEntry.jobPost.list.concat(jsD)\r\n        }\r\n        if (!moduleEntry) newJs = jsD\r\n\r\n        const uncheckedSku = moduleSummaryNew[idx]\r\n        if (!uncheckedSku.checked) {\r\n            newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n        }\r\n\r\n        const id = moduleEntry?.jobPost?.id\r\n        const jobSheet = {\r\n            jobPost: {\r\n                id: id ? id : 0,\r\n                warehouseSource: warehouseUuid,\r\n                warehouseDestination: warehouseUuid,\r\n                areaSource: parseInt(areaId?.value),\r\n                areaName: areaId?.label,\r\n                areaDestination: parseInt(areaDestinationId?.value),\r\n                areaDestinationName: areaDestinationId?.label,\r\n                list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\r\n            }\r\n        }\r\n        if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n        setLocalEntryData(jobSheet)\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    try {\r\n        let moduleSummaryNew = [...moduleSummary]\r\n        moduleSummaryNew[idx].checked = checked\r\n\r\n        const selectedData = moduleSummaryNew?.filter(ldata => {\r\n            if (ldata.checked) return ldata\r\n        })\r\n        let jsSelector = []\r\n        if (moduleEntry) {\r\n            moduleEntry.map(data => {\r\n                const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n                if (jsList.skuUuid) {\r\n                    jsSelector.push(jsList.skuUuid)\r\n                }\r\n            })\r\n        }\r\n        let jsD = []\r\n        const a = selectedData.map(async (list, sI) => {\r\n            const isInclude = jsSelector.includes(list.skuUuid)\r\n            if (!isInclude) {\r\n                const grade = await getGradeRepacking({ skuId: list.skuUuid })\r\n                list['gradeList'] = grade\r\n                const data = await getPORepacking({ skuId: list.skuUuid, warehouseId: warehouseUuid, uom: list.unitOfMeassures })\r\n                if (data) {\r\n                    const addPoItem = [\r\n                        {\r\n                            itemList: [],\r\n                            expiryMs: null,\r\n                            inBoundyMs: null,\r\n                            expiryDate: null,\r\n                            inboundDate: null,\r\n                            skuUuid: list.skuUuid,\r\n                            uom: list.unitOfMeassures,\r\n                            packSize: list.packSize,\r\n                            category: list.category,\r\n                            initialWeight: isFloat(data?.data.totalWeight) ? isFloat(data?.data.totalWeight) : data?.data.totalWeight,\r\n                            targetRepacks: data?.data.targetRepacks\r\n                        }\r\n                    ]\r\n                    list['poList'] = addPoItem\r\n                    list.isNewItem = true\r\n                    jsD.push(list)\r\n                }\r\n\r\n            }\r\n        })\r\n        const aF = await Promise.all(a)\r\n        let newJs = []\r\n        if (moduleEntry) {\r\n            newJs = moduleEntry.concat(jsD)\r\n        }\r\n        if (!moduleEntry) newJs = jsD\r\n\r\n        const uncheckedSku = moduleSummaryNew[idx]\r\n        if (!uncheckedSku.checked) {\r\n            newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n        }\r\n        preAddHandler(newJs);\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired, setInvalidThreshold }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n    let invalidThreshold = []\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        let description = data.originalUom\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            const { packSize, targetRepacks } = po\r\n            const isTargetRepacks = targetRepacks?.length ? true : false\r\n            po.itemList.map(item => {\r\n                const { qty, grade, pack, note } = item\r\n\r\n                if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\r\n                    item.qtyIsEmpty = false\r\n                    item.gradeIsEmpty = false\r\n                    item.noteIsEmpty = false\r\n                    item.packIsEmpty = false\r\n                    item.packThresholdIsEmpty = false\r\n                }\r\n                else {\r\n                    if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\r\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                    }\r\n                    else {\r\n                        let grd = data.gradeList.filter(grd => grd.value === grade.value)\r\n                        let ratio = grd[0].multiplier\r\n                        let standardWeight = description?.toLowerCase() == 'gram' ? packSize / 1000 : packSize\r\n                        let inputWeight = qty / pack\r\n                        inputWeight = inputWeight - (standardWeight / ratio)\r\n                        inputWeight = inputWeight / (standardWeight / ratio)\r\n                        inputWeight = inputWeight * 100\r\n                        if (inputWeight >= 51 || inputWeight <= -20) {\r\n                            item.packThresholdIsEmpty = true\r\n                            invalidThreshold.push(true)\r\n                        }\r\n                        else {\r\n                            item.packThresholdIsEmpty = false\r\n                            invalidThreshold.push(false)\r\n                        }\r\n                        item.packThreshold = isFloat(inputWeight)\r\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                        isNaN(pack) || pack == 0 || pack === \"\" || pack === null ? item.packIsEmpty = true : item.packIsEmpty = false\r\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\r\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                        if (isTargetRepacks) {\r\n                            // !slot?.value && slot?.value?.toString() !== '0' ? item.slotIsEmpty = true : item.slotIsEmpty = false\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item.packIsEmpty || item?.noteIsEmpty || item?.qtyToCompareIsEmpty || item?.slotIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(false)\r\n    }\r\n    else {\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    if (!invalidThreshold.includes(true)) {\r\n        if (typeof (setInvalidThreshold) === 'function') setInvalidThreshold(false)\r\n    }\r\n    else {\r\n        if (typeof (setInvalidThreshold) === 'function') setInvalidThreshold(true)\r\n    }\r\n\r\n    // if (!isClear.includes(false) && valid && !invalidThreshold.includes(true)) {\r\n    if (!isClear.includes(false) && valid) {\r\n        if (invalidThreshold.includes(true)) return\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}\r\n\r\nexport const countThresholdIsEmpty = (js) => {\r\n\r\n    let number = []\r\n    if (js.jobPost.list.length) {\r\n        js.jobPost.list.map((ls, listIndex) => {\r\n            if (ls.poList.length) {\r\n                ls.poList.map((po, poListIdx) => {\r\n                    if (po.itemList.length) {\r\n                        po.itemList.map((item, entryListIdx) => {\r\n                            if (item.packThresholdIsEmpty) {\r\n                                number.push({ skuName: ls.skuName, id: `pack_${poListIdx}_${entryListIdx}`, excess: item.packThreshold, slot: item.slot, activeSku: listIndex })\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    return number\r\n}"],"sourceRoot":""}