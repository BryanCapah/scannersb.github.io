{"version":3,"sources":["Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/FileUploader/services.js","Component/FileUploader/index.jsx","Component/FileUploadProgress/index.jsx"],"names":["PopUp","refresh","status","icon","statusDisplay","title","cancelButtonTitle","actionButtonTitle","cancelButtonClass","actionButtonClass","actionButtonEvent","colorText","msg1","msg2","onCloseFunction","refreshOnCancel","setIsSuccess","dispatch","useDispatch","code","message","useState","show","setShow","useEffect","window","onkeydown","e","keyCode","className","closeOnBackdrop","onClose","success","name","type","STATUS","size","style","minHeight","bodyOpenClassName","onClick","location","reload","refreshPage","parentOncCloseFunction","templateDownload","document","getElementById","click","xlsReader","fieldArray","setIsProgressPercent","setIsJsonArray","a","i","jsonArray","reader","FileReader","data","Promise","resolve","reject","onload","evt","bstr","target","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","csv","parse","err","length","map","obj","index","newObject","csvArray2","string","includes","toString","split","x","csvObj","csvIndex","push","percentage","Math","ceil","setTimeout","readAsBinaryString","putCsvFieldJson","STOK_TAKE_UPLOAD_JSON","csvField","validateColumn","field","fileName","warehouseArea","warehouseUuid","outboundType","setIsCheckingSchema","setIsCheckingArea","warehousesData","warehouseCodeList","warehouseUuidList","warehouseNameList","d","id","wh_area_label","label","toUpperCase","wh_area_value","value","wh_outboundtype_label","wh_outboundtype_value","csv_schema","text","replace","distinctPOSKUInfoId","distinctSKUNumber","distinctAreaSource","distinctAreaDestination","schemaRow","key","keys","console","clear","log","shift","emptyRow","fieldData","fieldIndex","undefined","dataField","warehouseData","indexOf","warehouseDestinationData","warehouseAreaData","areaDestinationData","outboundData","parseInt","tmp_data","stat","isNaN","match","csvData","csvFileName","csvDistinctPOSKUInfoId","csvDistinctSKUNumber","cleaningData","poSkuInfoValidated","poSkuNumberValidated","transaction","setIsProgressStatus","nextPage","wmsPoSkuCode","wmsPoSkuUom","uom","skuNumberArray","skuUuidArray","skuPhotosArray","skuUomArray","skuNumber","imageMd","cleanData","areaSource","areaDestination","warehouseDestination","warehouseSource","indexId","skuValidatedData","isExist","inboundDate","wmsPoSkuCodeStatus","wmsPoSkuCodeReason","tmp_grade","newGrade","arr_grade","idx","newGradeStatus","newGradeUuid","newGradeReason","tmp_sku_number","skuUuid","photo","skuNumberStatus","skuNumberReason","tmp_new_grade","newGradeUom","resetCsvResist","resetStatus","setIsResetCsvPersist","VALIDATE_PO_SKU_INFO_ID","skuCodeValidated","baseStyle","flex","display","flexDirection","alignItems","paddingTop","paddingBottom","paddingLeft","paddingRight","outline","transition","height","parentStyle","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","activeStyle","acceptStyle","rejectStyle","FileUploader","React","isProgressDisplay","setIsProgressDisplay","isProgressStatus","isProgressPercent","isProgressFileName","setIsProgressFileName","isWarehouseArea","setIsWarehouseArea","isAdditionalOutbound","setIsAdditionalOutbound","isUploadStatus","setIsUploadStatus","isCheckingSchema","isCheckingArea","isResetCsvPersist","modalShow","setModalShow","modalShow2","setModalShow2","modalShow3","setModalShow3","selectorWarehouseArea","useSelector","state","warehouseAreaCsv","selectorOutboundType","outboundTypeCsv","selectorStatus","selectorDistinctPOSKUInfoId","selectorDistinctSKUNumber","selectorSkuCodeValidated","selectorSkuNumberValidated","skuNumberValidated","selectorCsvData","user","getWarehouseArea","getOutboundType","onDropAccepted","file","fileArr","useDropzone","noClick","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","open","useMemo","validatePoSkuInfoId","skuData","validateSkuNumber","skuNumberData","bulk","fontSize","FileUploadProgress","progressPercent","cancelHandler","cancelButton","lineHeight","cursor","class","role","width","aria-valuemin","aria-valuemax"],"mappings":"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","file":"static/js/6.7f52bfe9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { onClose, refreshPage } from \"./services.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { STATUS } from \"apiServices/action\";\r\n\r\nconst PopUp = ({\r\n  refresh,\r\n  status,\r\n  icon,\r\n  statusDisplay = false,\r\n  title = \"\",\r\n  cancelButtonTitle = \"Cancel\",\r\n  actionButtonTitle = \"Submit\",\r\n  cancelButtonClass = \"bg-background\",\r\n  actionButtonClass = \"bg-background\",\r\n  actionButtonEvent = null,\r\n  colorText = \"red\",\r\n  msg1 = null,\r\n  msg2 = null,\r\n  onCloseFunction = null,\r\n  refreshOnCancel = true,\r\n  setIsSuccess\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  if (status?.code === 500 ) {\r\n    icon = \"em-pensive\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 408 ) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Request Timeout\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = true;\r\n  }\r\n  if (status?.code === 400 ) {\r\n    icon = \"em-alarm_clock\"\r\n    title = \"Server Error\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n  if (status?.code === 404) {\r\n    title = \"Something wrong with the application\";\r\n    cancelButtonTitle = \"Try Again\";\r\n    actionButtonTitle = \"Contact Administration\";\r\n    colorText = \"red\";\r\n    msg1 = status?.message;\r\n    msg2 =\r\n      \"Please try again or contact Sayurbox administration for further information.\";\r\n    cancelButtonClass = \"bg-green\";\r\n    statusDisplay = true;\r\n    refreshOnCancel = false;\r\n  }\r\n\r\n  const [show, setShow] = useState(statusDisplay);\r\n\r\n  useEffect(() => {\r\n    //from outside change\r\n    setShow(statusDisplay);\r\n  }, [statusDisplay]);\r\n\r\n  useEffect(() => {\r\n  }, [show]);\r\n\r\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\r\n  return (\r\n    <CRow className={`${show ? null : \"d-none\"}`}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          closeOnBackdrop={false}\r\n          onClose={() => {\r\n            setShow(false)\r\n            if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n            dispatch({ type: STATUS, status: null });\r\n            if (onCloseFunction) {\r\n              onCloseFunction()\r\n            }\r\n          }}\r\n          size=\"lg\"\r\n          style={{ minHeight: \"280px\" }}\r\n          bodyOpenClassName=\"p-3\"\r\n        >\r\n          {/* <div className='d-flex flex-row-reverse'>\r\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-3 border-none\">\r\n              <CModalTitle className={`text LatoBold ${colorText}`}>\r\n                {title}\r\n              </CModalTitle> */}\r\n\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <i\r\n              className=\"pr-3 pt-3 iconU-modalClose\"\r\n              onClick={() => {\r\n                setShow(false)\r\n                if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\r\n                dispatch({ type: STATUS, status: null });\r\n                if (onCloseFunction) {\r\n                  onCloseFunction()\r\n                }\r\n              }}\r\n            ></i>\r\n          </div>\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className={`text LatoBold ${colorText}`}>\r\n              {title} <span><i className={`em ${icon}`}></i></span>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">{msg1}</p>\r\n            <p className=\"text\">{msg2}</p>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            {cancelButtonTitle ? (\r\n              <CButton\r\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\r\n                onClick={() => {\r\n                  if (refreshOnCancel) {\r\n                    if (typeof (refresh) === 'function') refresh()\r\n                    else refreshPage({ refresh: true });\r\n                  } else {\r\n                    onClose({\r\n                      setShow,\r\n                      parentOncCloseFunction: onCloseFunction,\r\n                    });\r\n                  }\r\n                  dispatch({ type: STATUS, status: null });\r\n                }}\r\n              >\r\n                {cancelButtonTitle}\r\n              </CButton>\r\n            ) : null}\r\n            {actionButtonTitle ? (\r\n              <CButton\r\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\r\n                onClick={() => {\r\n                  if (actionButtonEvent) {\r\n                    actionButtonEvent();\r\n                    setShow(false);\r\n                  } else {\r\n                    setShow(false)\r\n                  }\r\n                }\r\n                }\r\n              >\r\n                {actionButtonTitle}\r\n              </CButton>\r\n            ) : null}{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\r\n  setShow(false);\r\n  if (parentOncCloseFunction) {\r\n    parentOncCloseFunction();\r\n  }\r\n\r\n};\r\n\r\nexport const refreshPage = ({ refresh = true }) => {\r\n  if (refresh === true) {\r\n    window.location.reload(false);\r\n  }\r\n};\r\n","/* eslint-disable array-callback-return */\r\nimport csv from \"csv\";\r\nimport * as XLSX from \"xlsx\";\r\nimport {\r\n  STOK_TAKE_UPLOAD_JSON,\r\n  VALIDATE_PO_SKU_INFO_ID,\r\n  STATUS,\r\n} from \"apiServices/action\";\r\n\r\nexport const templateDownload = () => {\r\n  document.getElementById(\"download-template-xls\").click();\r\n};\r\nexport const csvReader = (e, fieldArray, setIsProgressPercent) => {\r\n  return new Promise((resolve, reject) => {\r\n    let i = 0;\r\n    let jsonArray = [];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      csv.parse(reader.result, (err, data) => {\r\n        if (data.length > 2001) {\r\n          //why 2001? , because line 1 is header\r\n          setIsProgressPercent(0);\r\n          resolve(false);\r\n        }\r\n        data.map((obj, index) => {\r\n          if (index === 0) {\r\n            i++;\r\n            return false; // skip\r\n          }\r\n\r\n          let newObject = {};\r\n          newObject[\"id\"] = index;\r\n\r\n          let csvArray = data[i].toString().split(\";\");\r\n          csvArray.map((csvObj, csvIndex) => {\r\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\r\n          });\r\n          i++;\r\n          jsonArray.push(newObject);\r\n\r\n          //count percent\r\n          let percentage = ((index + 1) * 25) / data.length;\r\n          setIsProgressPercent(Math.ceil(percentage));\r\n        });\r\n      });\r\n    };\r\n\r\n    //checking\r\n    setTimeout(() => {\r\n      resolve(jsonArray);\r\n    }, 200);\r\n    reader.readAsBinaryString(e[0]);\r\n  });\r\n};\r\n\r\nexport const xlsReader = async (\r\n  e,\r\n  fieldArray,\r\n  setIsProgressPercent,\r\n  setIsJsonArray,\r\n  dispatch\r\n) => {\r\n  let i = 0;\r\n  let jsonArray = [];\r\n  const reader = new FileReader();\r\n  let data = null;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    reader.onload = async (evt) => {\r\n      /* Parse data */\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n      /* Update state */\r\n\r\n      await csv.parse(data, (err, data) => {\r\n        if (data.length > 2001) {\r\n          //why 2001? , because line 1 is header\r\n          setIsProgressPercent(0);\r\n          resolve(false);\r\n        } \r\n        data.map((obj, index) => {\r\n          let newObject = {};\r\n          newObject[\"id\"] = index;\r\n\r\n          // let csvArray = data[i].toString().split(\",\");  \r\n          let escapeString = [];\r\n          let csvArray2 = null;\r\n\r\n          if(i===0){\r\n            escapeString = data[i].map((string,i) => string.includes(\",\")  ?  `\\\"${string}\\\"` : `${string}`); \r\n            csvArray2 = escapeString.toString().split(',');   \r\n          }else{ \r\n            escapeString = data[i].map((string,x) => { \r\n              let ret = null;\r\n              if(string.includes(\",\")){\r\n                ret =  `\\\"${string}\\\"`;\r\n              }else if(x === 0){\r\n                ret = `${string}\"`;\r\n              }else if( x===data[i].length-1){\r\n                ret = `\"${string}`\r\n              }else{\r\n                ret = `\"${string}\"`\r\n              }\r\n              return ret; \r\n              // string.includes(\",\")  ?  `\\\"${string}\\\"` : (x === 0 || x===data.length-1  ? `${string}\"` : `\"${string}\"`)\r\n            }); \r\n            let x = escapeString.toString();\r\n            csvArray2 = x.split('\",\"');    \r\n          } \r\n \r\n          csvArray2.map((csvObj, csvIndex) => {\r\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\r\n          });\r\n          i++;\r\n          jsonArray.push(newObject);\r\n\r\n          //count percent\r\n          let percentage = ((index + 1) * 25) / data.length;\r\n          setIsProgressPercent(Math.ceil(percentage));\r\n        });\r\n      });\r\n\r\n      //checking\r\n      setTimeout(() => {\r\n        resolve(jsonArray);\r\n      }, 200);\r\n    };\r\n\r\n    reader.readAsBinaryString(e[0]);\r\n  });\r\n};\r\n\r\nexport const putCsvFieldJson = ({ dispatch, jsonArray }) => {\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvField: jsonArray });\r\n};\r\n\r\nexport const validateColumn = async ({\r\n  field,\r\n  jsonArray,\r\n  setIsProgressPercent,\r\n  fileName,\r\n  dispatch,\r\n  warehouseArea,\r\n  warehouseUuid,\r\n  outboundType,\r\n  setIsCheckingSchema,\r\n  setIsCheckingArea,\r\n  warehousesData,\r\n}) => {\r\n  //warehouse\r\n  let warehouseCodeList = [];\r\n  let warehouseUuidList = [];\r\n  let warehouseNameList = [];\r\n  if (warehousesData) {\r\n    warehousesData.data.map((d) => {\r\n      warehouseCodeList.push(d.code);\r\n      warehouseUuidList.push(d.id);\r\n      warehouseNameList.push(d.name);\r\n    });\r\n  }\r\n\r\n  //warehouse area\r\n  let wh_area_label = !warehouseArea\r\n    ? []\r\n    : warehouseArea.map((data) => data.label.toUpperCase());\r\n  let wh_area_value = !warehouseArea\r\n    ? []\r\n    : warehouseArea.map((data) => data.value);\r\n  let wh_outboundtype_label = !outboundType\r\n    ? []\r\n    : outboundType.map((data) => data.label.toUpperCase());\r\n  let wh_outboundtype_value = !outboundType\r\n    ? []\r\n    : outboundType.map((data) => data.value);\r\n  let csv_schema = !field\r\n    ? []\r\n    : field.map((data) => data.text.toUpperCase().replace(/\\s/g, \"\"));\r\n  let distinctPOSKUInfoId = [];\r\n  let distinctSKUNumber = [];\r\n  let distinctAreaSource = [];\r\n  let distinctAreaDestination = [];\r\n\r\n  // check schema\r\n  let checkSchema = true;\r\n  let i = 0;\r\n  const schemaRow = jsonArray[0];\r\n  for (var key in schemaRow) {\r\n    if (key == \"id\") {\r\n      continue;\r\n    }\r\n    let keys = schemaRow[key].toUpperCase().replace(/\\s/g, \"\");\r\n    if (\r\n      key !== \"undefined\" &&\r\n      (csv_schema[i + 1] !== keys || !csv_schema.includes(keys))\r\n    ) {\r\n      console.clear();\r\n      console.log(\"--Schema Not Same--\");\r\n      console.log(\"Schema \\t\\t: \", csv_schema[i + 1]);\r\n      console.log(\"File SChema : \", keys);\r\n      checkSchema = false;\r\n      setIsCheckingSchema(false);\r\n      return 0;\r\n    }\r\n    i++;\r\n  }\r\n\r\n  jsonArray.shift();\r\n  await jsonArray.map((data, index) => {\r\n    let emptyRow = true; // if empty row dont show\r\n    field.map((fieldData, fieldIndex) => {\r\n      //if null then return\r\n      if (fieldData === undefined || fieldData === null) {\r\n        return;\r\n      } \r\n      if (fieldData.dataField !== \"id\" && data[fieldData.dataField] == \"\" ) {\r\n        return;\r\n      } else if (fieldData.dataField !== \"id\") {\r\n        emptyRow = false;\r\n      }\r\n      // end checking empty\r\n\r\n      //set warehouse id\r\n      data[\"warehouseSource\"] = warehouseUuid;\r\n\r\n      //checking warehouse\r\n      if (warehouseCodeList && fieldData.dataField == \"warehouse\") {\r\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`;\r\n          data[\"warehouseUuid\"] = \"\";\r\n          data[\"warehouseName\"] = \"\";\r\n          return;\r\n        } else {\r\n          let warehouseData = warehouseCodeList.indexOf(data[fieldData.dataField]);\r\n          data[\"warehouseUuid\"] = warehouseUuidList[warehouseData];\r\n          data[\"warehouseName\"] = warehouseNameList[warehouseData];\r\n        }\r\n      }\r\n\r\n      //checing warehouse Destination\r\n      if (warehouseCodeList && fieldData.dataField == \"warehouseDestination\") {\r\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`;\r\n          data[\"warehouseDestinationUuid\"] = \"\";\r\n          data[\"warehouseDestinationName\"] = \"\";\r\n          return;\r\n        } else {\r\n          let warehouseDestinationData = warehouseCodeList.indexOf(data[fieldData.dataField]);\r\n          data[\"warehouseDestinationUuid\"] = warehouseUuidList[warehouseDestinationData];\r\n          data[\"warehouseDestinationName\"] = warehouseNameList[warehouseDestinationData];\r\n        }\r\n      }\r\n\r\n      //checking warehouse area\r\n      if (fieldData.dataField == \"areaName\") {\r\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\r\n          data[\"areaSource\"] = null;\r\n          return;\r\n        } else {\r\n          let warehouseAreaData = wh_area_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"areaSource\"] = wh_area_value[warehouseAreaData];\r\n\r\n          if (!distinctAreaSource.includes(wh_area_value[warehouseAreaData])) {\r\n            distinctAreaSource.push(wh_area_value[warehouseAreaData]);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (fieldData.dataField == \"areaNameDestination\") {\r\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\r\n          data[\"areaDestination\"] = null;\r\n          return;\r\n        } else {\r\n          let areaDestinationData = wh_area_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"areaDestination\"] = wh_area_value[areaDestinationData];\r\n\r\n          if (!distinctAreaDestination.includes(wh_area_value[areaDestinationData])) {\r\n            distinctAreaDestination.push(wh_area_value[areaDestinationData]);\r\n          }\r\n        }\r\n      }\r\n\r\n      //checking outbound type\r\n      if (\r\n        wh_outboundtype_value.length > 0 &&\r\n        fieldData.dataField == \"outboundType\"\r\n      ) {\r\n        if (\r\n          !wh_outboundtype_label.includes(\r\n            data[fieldData.dataField].toUpperCase()\r\n          )\r\n        ) {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[fieldData.dataField + \"Reason\"] = `Outbound Type Not Found`;\r\n          data[\"outboundTypeCode\"] = null;\r\n          return;\r\n        } else {\r\n          let outboundData = wh_outboundtype_label.indexOf(\r\n            data[fieldData.dataField].toUpperCase()\r\n          );\r\n          data[\"outboundTypeCode\"] = wh_outboundtype_value[outboundData];\r\n        }\r\n      }\r\n\r\n      //newgrade\r\n      if (fieldData.dataField == \"newGrade\") {\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n        if (\r\n          data[fieldData.dataField] &&\r\n          !arr_grade.includes(data[fieldData.dataField].toUpperCase())\r\n        ) {\r\n          //if not waste or semi waste\r\n          if (parseInt(data[fieldData.dataField])) {\r\n            //if number, check sku number\r\n            if (!distinctSKUNumber.includes(data[fieldData.dataField])) {\r\n              distinctSKUNumber.push(data[fieldData.dataField]);\r\n            }\r\n            data[fieldData.dataField + \"Status\"] = true;\r\n          } else if (data[fieldData.dataField] == \"\") {\r\n            //if null\r\n            data[fieldData.dataField + \"Status\"] = true;\r\n          } else {\r\n            //if not number => undefined\r\n            data[fieldData.dataField + \"Status\"] = false;\r\n            data[fieldData.dataField + \"Reason\"] = `Grade Undefined`;\r\n          }\r\n        } else {\r\n          data[\"newGradeUuid\"] = data[fieldData.dataField];\r\n        }\r\n      }\r\n\r\n      //set ripeness\r\n      let ripeness = null;\r\n      if (\r\n        (fieldData.dataField == \"ripenessLevel\" ||\r\n          fieldData.dataField == \"newRipeness\") &&\r\n        data[fieldData.dataField] !== undefined\r\n      ) {\r\n        let ripeness_ = data[fieldData.dataField].split(\" \");\r\n        ripeness = ripeness_[1];\r\n      }\r\n\r\n      //checking type\r\n      let tmp_data = data[fieldData.dataField];\r\n      let stat = null;\r\n      if (fieldData.type == \"number\") {\r\n        if (isNaN(tmp_data)) {\r\n          stat = false;\r\n        } else {\r\n          stat = true;\r\n\r\n          if (fieldData.dataField == \"wmsPoSkuCode\") {\r\n            if (!distinctPOSKUInfoId.includes(tmp_data)) {\r\n              distinctPOSKUInfoId.push(tmp_data);\r\n            }\r\n          }\r\n\r\n          //distinct sku angka maka push ke array buat di cek\r\n          if (fieldData.dataField == \"skuNumber\") {\r\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\r\n              distinctSKUNumber.push(tmp_data);\r\n            }\r\n          }\r\n        }\r\n      } else if (fieldData.type == \"date_indo\") {\r\n        //checking date\r\n        let regex_date = /(0[1-9]|[12][0-9]|3[01])[-.](0[1-9]|1[012])[-.](19|20)\\d\\d/;\r\n        if (tmp_data.match(regex_date)) {\r\n          stat = true;\r\n        } else {\r\n          data[fieldData.dataField + \"Status\"] = false;\r\n          data[\r\n            fieldData.dataField + \"Reason\"\r\n          ] = `Date format must be 'dd-mm-yyyy'`;\r\n          return;\r\n        }\r\n      } else {\r\n        stat = true;\r\n      }\r\n\r\n      //grade can null\r\n      let canNull = [\r\n        \"grade\",\r\n        \"outboundReason\",\r\n        \"ripenessLevel\",\r\n        \"newRipeness\",\r\n        \"newGrade\",\r\n      ];\r\n      if (canNull.includes(fieldData.dataField) && tmp_data == \"\") {\r\n        stat = true;\r\n      }\r\n\r\n      //check newGrade, jika angka maka cek ke distinct sku\r\n      if (fieldData.dataField == \"newGrade\") {\r\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n        if (!arr_grade.includes(tmp_data.toUpperCase())) {\r\n          //if not waste or semi waste\r\n          if (parseInt(tmp_data)) {\r\n            //if number\r\n            stat = true;\r\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\r\n              distinctSKUNumber.push(tmp_data);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      data[fieldData.dataField + \"Status\"] = stat;\r\n      if (!stat) {\r\n        data[\r\n          fieldData.dataField + \"Reason\"\r\n        ] = `Invalid ${fieldData.text} \\nShould be a ${fieldData.type}`;\r\n      } else {\r\n        data[fieldData.dataField + \"Reason\"] = \"\";\r\n      }\r\n\r\n      let percentage =\r\n        ((index + 1 + parseInt(jsonArray.length)) * 50) /\r\n        (parseInt(jsonArray.length) * 2);\r\n      setIsProgressPercent(Math.ceil(percentage));\r\n    });\r\n    data[\"emptyRow\"] = emptyRow;\r\n  });\r\n\r\n  //checking area\r\n  if (distinctAreaSource.length > 1 || distinctAreaDestination.length > 1) {\r\n    console.log(\"area Destination :\" + distinctAreaDestination);\r\n    console.log(\"area Source :\" + distinctAreaSource);\r\n    setIsCheckingArea(false);\r\n    return;\r\n  }\r\n\r\n  //end checking type\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: jsonArray });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: fileName });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctPOSKUInfoId: distinctPOSKUInfoId,\r\n  });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctSKUNumber: distinctSKUNumber,\r\n  });\r\n};\r\n\r\nexport const cleaningData = async ({\r\n  poSkuInfoValidated,\r\n  poSkuNumberValidated,\r\n  csvData,\r\n  setIsProgressPercent,\r\n  dispatch,\r\n  status,\r\n  transaction,\r\n  setIsProgressStatus,\r\n  nextPage,\r\n}) => {\r\n  //checking\r\n  if (status === false || status === null) {\r\n    return 0;\r\n  }\r\n  if (\r\n    csvData === undefined ||\r\n    csvData === null ||\r\n    poSkuInfoValidated === null ||\r\n    poSkuInfoValidated === undefined ||\r\n    poSkuNumberValidated === null ||\r\n    poSkuNumberValidated === undefined\r\n  ) {\r\n    console.clear();\r\n    return 0;\r\n  }\r\n\r\n  //split data and id po sku code\r\n  const wmsPoSkuCode = [];\r\n  const wmsPoSkuUom = [];\r\n  poSkuInfoValidated.map((data) => {\r\n    wmsPoSkuCode.push(data.wmsPoSkuCode);\r\n    wmsPoSkuUom.push(data.uom);\r\n  });\r\n\r\n  //split sku number and skuUUid sku number\r\n  let skuNumberArray = [];\r\n  let skuUuidArray = [];\r\n  let skuPhotosArray = [];\r\n  let skuUomArray = [];\r\n  poSkuNumberValidated.map((data) => {\r\n    skuNumberArray.push(data.skuNumber);\r\n    skuUuidArray.push(data.id);\r\n    skuPhotosArray.push(data.imageMd);\r\n    skuUomArray.push(data.uom);\r\n  });\r\n\r\n  //cleaning data\r\n  let cleanData = [];\r\n  csvData.map((data, index) => {\r\n    //if empty row then skip\r\n    if (data.emptyRow === true) {\r\n      return 0;\r\n    }\r\n\r\n    //format fixing\r\n    data.areaSource = parseInt(data.areaSource);\r\n    data.areaDestination = parseInt(data.areaDestination);\r\n\r\n    //if transaction stocktake then source and destination is same\r\n    if (\r\n      transaction == \"stock_take\" ||\r\n      transaction == \"repacking\" ||\r\n      transaction == \"outbound\"\r\n    ) {\r\n      data.areaDestination = parseInt(data.areaSource);\r\n      data.warehouseDestination = parseInt(data.warehouseSource);\r\n    }\r\n    //get index dari poskucode\r\n    let indexId = wmsPoSkuCode.indexOf(data.wmsPoSkuCode);\r\n\r\n    //get validated data\r\n    let skuValidatedData = poSkuInfoValidated[indexId];  \r\n    if(transaction !== \"additional_inbound\"){ \r\n        if (\r\n          !skuValidatedData ||\r\n          skuValidatedData.isExist === undefined ||\r\n          skuValidatedData.isExist === false ||\r\n          skuValidatedData.isExist === null\r\n        ) {\r\n          data.wmsPoSkuCodeStatus = false;\r\n          data.wmsPoSkuCodeReason = \"PO SKU Code Not Found\";\r\n        } else {\r\n          // skuValidatedData.expiryDate = skuValidatedData.expiryDate\r\n          data.inboundDate = skuValidatedData.inboundDate;\r\n          data.uom = wmsPoSkuUom[indexId];\r\n        } \r\n    } \r\n\r\n    //check grade\r\n    let tmp_grade = data.newGrade;\r\n    let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\r\n    if (\r\n      tmp_grade !== undefined &&\r\n      !arr_grade.includes(tmp_grade.toUpperCase())\r\n    ) {\r\n      //if not waste or semi waste\r\n      if (skuNumberArray.includes(tmp_grade)) {\r\n        let idx = skuNumberArray.indexOf(tmp_grade);\r\n        data.newGradeStatus = true;\r\n        data.newGradeUuid = skuUuidArray[idx];\r\n      } else if (tmp_grade == \"\") {\r\n        data.newGradeUuid = \"\";\r\n        data.newGradeStatus = true;\r\n      } else {\r\n        //if not number => undefined\r\n        data.newGradeReason = \"Grade Undefined\";\r\n        data.newGradeStatus = false;\r\n      }\r\n    }\r\n\r\n    //check Sku Number\r\n    let tmp_sku_number = data.skuNumber;\r\n    if (!skuNumberArray.includes(tmp_sku_number)) {\r\n      data.skuNumberStatus = false;\r\n      data.skuNumberReason = \"SKU Number Not Found\";\r\n      data.skuUuid = \"\";\r\n    } else {\r\n      let idx = skuNumberArray.indexOf(tmp_sku_number);\r\n      data.skuUuid = skuUuidArray[idx];\r\n      data.photo = skuPhotosArray[idx];\r\n      if(transaction==\"additional_inbound\"){\r\n        data.uom = skuUomArray[idx];\r\n      }\r\n    }\r\n\r\n    //check New Grade\r\n    let tmp_new_grade = data.newGrade;\r\n    console.log(\"tmp_new_grade\", tmp_new_grade);\r\n    if( transaction !== \"additional_inbound\"){\r\n      if (\r\n        (tmp_new_grade && arr_grade.includes(tmp_new_grade.toUpperCase())) ||\r\n        tmp_new_grade == \"\"\r\n      ) {\r\n        data.newGradeReason = \"\";\r\n        data.newGradeStatus = true;\r\n        data.newGradeUuid = null;\r\n        data.newGradeUom = null;\r\n      } else {\r\n        if (skuNumberArray.includes(tmp_new_grade)) {\r\n          let idx = skuNumberArray.indexOf(tmp_new_grade);\r\n          data.newGradeReason = \"\";\r\n          data.newGradeStatus = true;\r\n          data.newGradeUuid = skuUuidArray[idx];\r\n          data.newGradeUom = skuUomArray[idx];\r\n        } else {\r\n          data.newGradeReason = \"SKU Number Not Found\";\r\n          data.newGradeStatus = false;\r\n          data.newGradeUuid = null;\r\n          data.newGradeUom = null;\r\n        }\r\n      }\r\n    }\r\n    \r\n\r\n    //merging_array\r\n    cleanData.push({ ...data, ...skuValidatedData });\r\n  });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: cleanData });\r\n  setIsProgressPercent(Math.ceil(100));\r\n  setTimeout(() => {\r\n    nextPage();\r\n  }, 200);\r\n};\r\n\r\nexport const resetCsvResist = async ({\r\n  dispatch,\r\n  resetStatus,\r\n  setIsResetCsvPersist,\r\n}) => {\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: null });\r\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: null });\r\n  dispatch({\r\n    type: STOK_TAKE_UPLOAD_JSON,\r\n    csvDistinctPOSKUInfoId: null,\r\n  });\r\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\r\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\r\n  dispatch({ type: STATUS, status: null });\r\n  setIsResetCsvPersist(true);\r\n};\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./FileUploader.scss\";\r\nimport {\r\n  templateDownload,\r\n  csvReader,\r\n  putCsvFieldJson,\r\n  validateColumn,\r\n  xlsReader,\r\n  cleaningData,\r\n  resetCsvResist,\r\n} from \"./services.js\";\r\nimport FileUploadProgress from \"Component/FileUploadProgress\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport { validatePoSkuInfoId, validateSkuNumber } from \"apiServices\";\r\nimport { getWarehouseArea, getOutboundType } from \"apiServices/dropdown\";\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  paddingTop: \"20px\",\r\n  paddingBottom: \"20px\",\r\n  paddingLeft: \"20px\",\r\n  paddingRight: \"20px\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n  height: \"400px\",\r\n};\r\n\r\nconst parentStyle = {\r\n  paddingTop: \"20px\",\r\n  paddingBottom: \"10px\",\r\n  paddingLeft: \"20px\",\r\n  paddingRight: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fff\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n  height: \"600px\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nconst FileUploader = ({ field, transaction, nextPage = null, type = null }) => {\r\n  const [isProgressDisplay, setIsProgressDisplay] = React.useState(false);\r\n  const [isProgressStatus, setIsProgressStatus] = React.useState();\r\n  const [isProgressPercent, setIsProgressPercent] = React.useState(0);\r\n  const [isProgressFileName, setIsProgressFileName] = React.useState(null);\r\n  const [isWarehouseArea, setIsWarehouseArea] = React.useState(null);\r\n  const [isAdditionalOutbound, setIsAdditionalOutbound] = React.useState(null);\r\n  const [isUploadStatus, setIsUploadStatus] = React.useState(null);\r\n  const [isCheckingSchema, setIsCheckingSchema] = React.useState(null);\r\n  const [isCheckingArea, setIsCheckingArea] = React.useState(null);\r\n  const [isResetCsvPersist, setIsResetCsvPersist] = React.useState(false);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [modalShow2, setModalShow2] = React.useState(false);\r\n  const [modalShow3, setModalShow3] = React.useState(false);\r\n\r\n  //declare redux\r\n  const dispatch = useDispatch();\r\n  const selectorWarehouseArea = useSelector((state) => state.warehouseAreaCsv);\r\n  const selectorOutboundType = useSelector((state) => state.outboundTypeCsv);\r\n  const selectorStatus = useSelector((state) => state.status);\r\n  const selectorDistinctPOSKUInfoId = useSelector(\r\n    (state) => state.csvDistinctPOSKUInfoId\r\n  );\r\n  const selectorDistinctSKUNumber = useSelector(\r\n    (state) => state.csvDistinctSKUNumber\r\n  );\r\n  const selectorSkuCodeValidated = useSelector(\r\n    (state) => state.skuCodeValidated\r\n  );\r\n  const selectorSkuNumberValidated = useSelector(\r\n    (state) => state.skuNumberValidated\r\n  );\r\n  const selectorCsvData = useSelector((state) => state.csvData);\r\n  const warehousesData = useSelector((state) => state.warehouseData);\r\n\r\n  //reset csv persist\r\n  if (isResetCsvPersist !== true) {\r\n    resetCsvResist({\r\n      dispatch,\r\n      resetStatus: isResetCsvPersist,\r\n      setIsResetCsvPersist,\r\n    });\r\n  }\r\n\r\n  //get warehouse & warehouse area data\r\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n  if (isWarehouseArea === null) {\r\n    getWarehouseArea({\r\n      warehouseUuid: warehouseUuid,\r\n      dispatch,\r\n      type: \"csvValidator\",\r\n    });\r\n    setIsWarehouseArea(1);\r\n  }\r\n\r\n  //get additional outbound type\r\n  if (isAdditionalOutbound === null && type == \"additionalOutbound\") {\r\n    getOutboundType({\r\n      dispatch,\r\n      type: \"csvValidator\",\r\n    });\r\n    setIsAdditionalOutbound(1);\r\n  }\r\n\r\n  //when file droped or selected\r\n  const onDropAccepted = async (e) => {\r\n    //reset percent\r\n    setIsProgressPercent(0);\r\n    setIsUploadStatus(true);\r\n\r\n    //get file type\r\n    const file = e[0].name;\r\n    const fileArr = file.split(\".\");\r\n    const fileType = fileArr[1];\r\n\r\n    //read file\r\n    let fieldArray = field.map((obj) => obj.dataField);\r\n    putCsvFieldJson({ dispatch, jsonArray: field });\r\n\r\n    let jsonArray = null;\r\n    await setIsProgressStatus(\"Reading...\");\r\n    await setIsProgressFileName(file);\r\n    await setIsProgressDisplay(true);\r\n    \r\n  // function csvReader Not Working\r\n    // if (fileType == \"csv\") {\r\n    //   jsonArray = await csvReader(\r\n    //     e,\r\n    //     fieldArray,\r\n    //     setIsProgressPercent,\r\n    //     setIsProgressStatus\r\n    //   );\r\n    // } else {\r\n      jsonArray = await xlsReader(\r\n        e,\r\n        fieldArray,\r\n        setIsProgressPercent,\r\n        setIsProgressStatus,\r\n        dispatch\r\n      );\r\n    // } \r\n    if (jsonArray === false) {\r\n      setModalShow(true);\r\n      return 0;\r\n    }\r\n\r\n    await setIsProgressStatus(\"Validating Column Type...\");\r\n    await validateColumn({\r\n      field,\r\n      jsonArray,\r\n      setIsProgressPercent,\r\n      fileName: file,\r\n      dispatch,\r\n      warehouseArea: selectorWarehouseArea,\r\n      warehouseUuid,\r\n      outboundType: selectorOutboundType,\r\n      setIsCheckingSchema,\r\n      warehousesData,\r\n      setIsCheckingArea,\r\n    });\r\n    await setIsProgressStatus(\"Validating PO SKU Code. . .\");\r\n  };\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    open,\r\n  } = useDropzone({\r\n    noClick: true,\r\n    onDropAccepted,\r\n    accept:\r\n      //accept csv, xls, and xlsx\r\n      \"text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n  });\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept]\r\n  );\r\n\r\n  const cancelCsv = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  // Use Effect\r\n  useEffect(() => {\r\n    //setelah validasi kolom\r\n    // validasi PO SKU Code\r\n    // console.clear();\r\n    validatePoSkuInfoId({\r\n      dispatch,\r\n      skuData: selectorDistinctPOSKUInfoId,\r\n      status: isUploadStatus,\r\n    });\r\n  }, [selectorDistinctPOSKUInfoId]);\r\n\r\n  useEffect(() => {\r\n    //setelah validasi PO SKU Code\r\n    //validasi SKU Number\r\n    // console.clear();\r\n    setIsProgressPercent(70);\r\n    setIsProgressStatus(\"Validating SKU Numbers\");\r\n    validateSkuNumber({\r\n      dispatch,\r\n      skuNumberData: selectorDistinctSKUNumber,\r\n      bulk: true,\r\n      status: isUploadStatus,\r\n    });\r\n  }, [selectorSkuCodeValidated]);\r\n\r\n  useEffect(() => {\r\n    //setelah validasi sku number\r\n    //re arrange data yang akan digunakan di table\r\n    // console.clear();\r\n    setIsProgressPercent(90);\r\n    setIsProgressStatus(\"rearrange data. . .\");\r\n    cleaningData({\r\n      poSkuInfoValidated: selectorSkuCodeValidated,\r\n      poSkuNumberValidated: selectorSkuNumberValidated,\r\n      csvData: selectorCsvData,\r\n      transaction: transaction,\r\n      setIsProgressPercent,\r\n      dispatch,\r\n      status: isUploadStatus,\r\n      setIsProgressStatus,\r\n      nextPage,\r\n    });\r\n  }, [selectorSkuNumberValidated]);\r\n\r\n  useEffect(() => {\r\n    if (isCheckingSchema === false) {\r\n      console.log(isCheckingSchema);\r\n      setModalShow2(true);\r\n      setIsCheckingSchema(null);\r\n    }\r\n  }, [isCheckingSchema]);\r\n\r\n  useEffect(() => {\r\n    if (isCheckingArea === false) {\r\n      console.log(isCheckingArea);\r\n      setModalShow3(true);\r\n      setIsCheckingArea(null);\r\n    }\r\n  }, [isCheckingArea]);\r\n\r\n  return (\r\n    <div>\r\n      <PopUp\r\n        status={selectorStatus}\r\n        onCloseFunction={() => {\r\n          setModalShow(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        statusDisplay={modalShow}\r\n        title=\"Upload File Failed\"\r\n        cancelButtonTitle=\"Try Another File\"\r\n        actionButtonTitle={null}\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div>\r\n              Upload failed because your file has more than 2000 lines.{\" \"}\r\n            </div>\r\n            <div> Please make it less than 2000 lines. </div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to try another file?\"\r\n        cancelButtonClass=\"bg-red background\"\r\n        actionButtonClass=\" \"\r\n      />\r\n\r\n      <PopUp\r\n        status={200}\r\n        onCloseFunction={() => {\r\n          setModalShow2(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        actionButtonEvent={() => templateDownload()}\r\n        statusDisplay={modalShow2}\r\n        title=\"Different File Template\"\r\n        cancelButtonTitle=\"Cancel\"\r\n        actionButtonTitle=\"Download latest template\"\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div> Your uploaded file has a different template.</div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to download the latest file template ?\"\r\n        actionButtonClass=\"bg-green background\"\r\n        cancelButtonClass=\"\"\r\n      />\r\n\r\n      <PopUp\r\n        status={200}\r\n        onCloseFunction={() => {\r\n          setModalShow3(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        actionButtonEvent={() => {\r\n          setModalShow3(false);\r\n          setIsProgressPercent(0);\r\n          setIsProgressDisplay(false);\r\n        }}\r\n        statusDisplay={modalShow3}\r\n        title=\"Upload File Failed!\"\r\n        actionButtonTitle=\"Try Another File\"\r\n        colorText=\"red\"\r\n        refreshOnCancel={false}\r\n        msg1={\r\n          <div>\r\n            <div>\r\n              {\" \"}\r\n              We detect that you've uploaded two or more areas at once.\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              Please try again to upload the file with one specific area.\r\n            </div>\r\n          </div>\r\n        }\r\n        msg2=\"Do you want to try another file ?\"\r\n        actionButtonClass=\"bg-red margin-left-0 background\"\r\n        cancelButtonClass=\"d-none \"\r\n      />\r\n\r\n      <div className=\"w-100 d-flex flex-column p-3 mb-3 bg-white\">\r\n        <div\r\n          className=\"d-flex flex-column justify-content-between\"\r\n          style={parentStyle}\r\n        >\r\n          <div className=\"FileUploader\">\r\n            <div\r\n              className=\"d-flex flex-column justify-content-end\"\r\n              {...getRootProps({ style })}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <i\r\n                style={{ fontSize: \"90px\" }}\r\n                className=\"lineGrey iconU-upload\"\r\n              ></i>\r\n              <b className=\"mt-2\">Drag and Drop files here</b>\r\n              <p className=\"mt-2 mb-2 emptyTextField\"> Or </p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={open}\r\n                className=\"btn px-5 py-2 text-white bg-green LatoBold no-shadow\"\r\n              >\r\n                Browse File\r\n              </button>\r\n\r\n              <div className=\"emptyTextField LatoBold mt-3 \">\r\n                Support only CSV, XLS, XLSX file\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"downloadTemplate w-100 align-right\">\r\n            <span onClick={() => templateDownload()} className=\"float-right\">\r\n              Download the File Template\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <FileUploadProgress\r\n        status={isProgressStatus}\r\n        progressPercent={isProgressPercent}\r\n        fileName={isProgressFileName}\r\n        display={isProgressDisplay}\r\n        cancelHandler={cancelCsv}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./index.scss\";\r\n\r\nconst FileUploadProgress = ({\r\n  status,\r\n  progressPercent,\r\n  fileName,\r\n  display = false,\r\n  cancelButton = null,\r\n  cancelHandler,\r\n}) => {\r\n  useEffect(() => {\r\n}, [progressPercent, status]);\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-100 d-flex flex-column progressBar \" +\r\n        (!display ? \"hiddenProgress\" : null)\r\n      }\r\n    >\r\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white border-all radius-all mb-3 mt-0\">\r\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n          <div className=\"uploadStatus w-100\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-7\">\r\n                <i className=\"iconU-sideBarInventoryEntry green\"></i> File\r\n                {fileName}\r\n              </div>\r\n              <div className=\"col-md-5\">\r\n                <p className=\"float-right\" style={{ lineHeight: \"30px\", cursor: \"pointer\" }} onClick={() => { cancelHandler() }}>\r\n                  Cancel\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"progress\">\r\n              <div\r\n                class=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                style={{ width: progressPercent + \"%\" }}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n              ></div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <div className=\"emptyTextField inline\">{status}</div>\r\n              <div className=\"text inline font-weight-bold\">\r\n                {\"  \"}\r\n                {progressPercent}%\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadProgress;\r\n"],"sourceRoot":""}