{"version":3,"sources":["Page/StockEntry/AdditionalInbound/AddSKU.jsx"],"names":["withRouter","props","thereAreRequest","useSelector","state","dispatch","useDispatch","warehouseUuid","useHistory","inboundFirstLoad","user","status","isLoading","inboundEntryData","isCheckedTotal","selectedSkuCheck","moduleEntry","moduleName","warehouseArea","areaId","inboundAddSku","useState","summary","setSummary","setIsCheckedBefore","next","isSkusNumber","setSkusNumber","firstLoadCheck","setFirstLoadCheck","isSelectedData","setIsSelectedData","search","setSearch","useEffect","getRipenessLevel","getWarehouseArea","undefined","history","push","jobPost","list","map","data","idx","skuNumber","areaData","areaSource","areaName","setAreaId","selected","dimention","document","documentElement","clientHeight","height","emptyItem","length","className","show","title","placeholder","options","onChangeDropdown","selectedValue","showTitle","filter","searchHandler","desc","getStockTakeSummaryAddSku","setModule","selectedSkusNumber","style","minHeight","key","img","photo","skuDescription","skuName","uomLabel","uomValue","totalQty","uom","unitOfMeassures","isCheckedHandler","checked","preAddSku","moduleSummary","preAddHandler","check","maxHeight","responseCheck","label","src","loading","alt","onClick","type","to","e","preventDefault","addSku"],"mappings":"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","file":"static/js/68.a5dde9a9.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport Dropdown from \"Component/Dropdown\";\r\nimport Search from \"Component/Search\";\r\nimport { getStockTakeSummaryAddSku } from \"apiServices\";\r\nimport { getWarehouseArea, getRipenessLevel } from \"apiServices/dropdown\";\r\nimport SKUItem from \"Component/SKUItem\";\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport \"./index.scss\";\r\nimport { preAddSku } from './services'\r\nimport { responseCheck, selectedSkuCheck, setAreaId, addSku } from \"Page/StockEntry/GeneralServices/moduleServices\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport PopUpUnfinished from 'Component/Modal/PopUpUnfinished'\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nconst AddSKU = (props) => {\r\n    const thereAreRequest = useSelector(state => state.thereAreRequest);\r\n    const dispatch = useDispatch();\r\n    const story = useHistory()\r\n    const moduleFirstLoad = useSelector(state => state.inboundFirstLoad)\r\n    const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\r\n    const status = useSelector((state) => state.status);\r\n    const isLoading = useSelector((state) => state.isLoading);\r\n    const inboundEntryData = useSelector((state) => state.inboundEntryData);\r\n    const isCheckedTotal = selectedSkuCheck({ moduleEntry: inboundEntryData, moduleName: 'inbound' });\r\n    const warehouseArea = useSelector(state => state.warehouseArea);\r\n    const areaId = useSelector(state => state.areaId)\r\n    const inboundAddSku = useSelector(state => state.inboundAddSku)\r\n    const [summary, setSummary] = useState(null)\r\n    const [isCheckedBefore, setIsCheckedBefore] = useState(0)\r\n    const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\r\n    const [next, setNext] = useState(false)\r\n    const [isSkusNumber, setSkusNumber] = useState(null)\r\n    const [firstLoadCheck, setFirstLoadCheck] = useState(true)\r\n    const [isSelectedData, setIsSelectedData] = useState([])\r\n    const [search, setSearch] = useState()\r\n\r\n    useEffect(() => {\r\n        getRipenessLevel({ dispatch })\r\n        getWarehouseArea({ dispatch, warehouseUuid })\r\n        setIsCheckedBefore(isCheckedTotal)\r\n    }, []);\r\n    \r\n\r\n    if (!inboundEntryData || inboundEntryData === undefined) {\r\n        props.history.push(\"/inventory-entry/additional-inbound\")\r\n    }\r\n\r\n    if (firstLoadCheck === true && inboundEntryData !== undefined) {\r\n        //get sku number only\r\n        let skusNumber = inboundEntryData.jobPost.list.map((data, idx) => {\r\n            return data.skuNumber\r\n        });\r\n        setSkusNumber(skusNumber)\r\n\r\n        //get area source from selected data\r\n        let areaData = {}\r\n        areaData['value'] = inboundEntryData?.jobPost?.areaSource\r\n        areaData['label'] = inboundEntryData?.jobPost?.areaName\r\n        \r\n        setAreaId({ selected: areaData, dispatch })\r\n        setFirstLoadCheck(false)\r\n    }\r\n\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 290\r\n    const emptyItem = dimention - 290\r\n\r\n    if (inboundAddSku === false && inboundEntryData?.jobPost.list.length > 0 && next) props.history.push(\"/inventory-entry/additional-inbound/weight-entry\")\r\n    return (\r\n        <div className=\"w-100  stock-take-summary\">\r\n            <PopUp status={status} />\r\n            <div className=\" bg-white border-all radius-all d-md-flex dd-group d-none\">\r\n                <div className=\"col-lg-3 px-0 stock-take-dropdown\">\r\n                    <Dropdown\r\n                        show={true}\r\n                        title=\"Select Area\"\r\n                        placeholder='Select Area'\r\n                        options={warehouseArea}\r\n                        onChangeDropdown={(selected) => setAreaId({ selected, dispatch })}\r\n                        selectedValue={areaId}\r\n                        showTitle={true}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white   border-all radius-all mb-3\">\r\n                <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n                    <div className=\"text LatoBold d-flex justify-content-between align-items-center sku-des\">\r\n                        <div>\r\n                            Search & check SKU(s) that you want add to entries{\" \"}\r\n                            <span className=\"green\">{`(${isSelectedData.length} Selected SKU${isSelectedData.length> 1 ? \"s\" : \"\"})`}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Search\r\n                    placeholder={\"Enter SKU\"}\r\n                    filter={false}\r\n                    searchHandler={(desc) =>\r\n                        getStockTakeSummaryAddSku({\r\n                            dispatch,\r\n                            desc,\r\n                            warehouseUuid,\r\n                            areaId,\r\n                            setModule: setSummary,\r\n                            selectedSkusNumber: isSkusNumber\r\n                        },setSearch(desc))\r\n                        // areaId\r\n                        // ? getStockTakeSummary({dispatch, desc, warehouseUuid, areaId})\r\n                        // : setAreaId(\"empty\")\r\n                    }\r\n                />\r\n                <div\r\n                    className={`mb-3 mt-3 d-flex align-items-center ${summary?.length ? \"flex-column\" : \"flex-row\"\r\n                        } w-100 text-center`}\r\n                    style={{ minHeight: height }}\r\n                >\r\n                    {summary?.length ? (\r\n                        summary?.map((data, idx) => {\r\n                            return (\r\n                                <SKUItem\r\n                                    key={idx}\r\n                                    img={data?.photo}\r\n                                    skuDescription={data?.skuName}\r\n                                    skuNumber={data?.skuNumber}\r\n                                    uomLabel=\"weight\"\r\n                                    uomValue={data?.totalQty}\r\n                                    uom={data?.unitOfMeassures}\r\n                                    isCheckedHandler={(checked) =>\r\n                                        preAddSku({\r\n                                            idx,\r\n                                            checked,\r\n                                            dispatch,\r\n                                            moduleSummary: summary,\r\n                                            moduleEntry: isSelectedData,\r\n                                            moduleName: 'inbound',\r\n                                            warehouseUuid,\r\n                                            areaId,\r\n                                            preAddHandler: setIsSelectedData\r\n                                        })\r\n                                    }\r\n                                    check={data?.checked}\r\n                                />\r\n                            );\r\n                        })\r\n                    ) : (\r\n                            <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem, maxHeight:emptyItem }}>\r\n                                {!responseCheck({ isLoading, summary }) ? (\r\n                                    <img className=\"loading\" src={loading} alt=\"loading\" />\r\n                                ) :  areaId && summary?.length === 0 ? (\r\n                                    <div>\r\n                                      Sorry, we couldn't find any matches\r\n                                      for '<span className='LatoBold'>{search}</span>' in {areaId?.label} area.\r\n                                      <br/>\r\n                                      Please Try search with another term.\r\n                                    </div>\r\n                                  ) : 'Enter SKU'}\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n            <div className=\"h-screen-summary-footer d-flex flex-column justify-content-start\">\r\n                <div className=\"w-100 d-flex align-items-center justify-content-between mb-1\">\r\n                    <button\r\n                        onClick={() => props.history.push(\"/inventory-entry/additional-inbound/weight-entry\")}\r\n                        type=\"button\"\r\n                        className=\"btn px-4 no-shadow border-all bg-white fontSizeButton\"\r\n                    >\r\n                        Cancel\r\n          </button>\r\n                    <Link to='/inventory-entry/additional-inbound/weight-entry' onClick={(e) => thereAreRequest === 0 && isSelectedData?.length > 0 ? true : e.preventDefault()}>\r\n                        <button\r\n                            onClick={() => thereAreRequest === 0 && isSelectedData?.length > 0 ? addSku({ dispatch, moduleEntry: isSelectedData, moduleSummary: inboundEntryData, moduleName: 'inbound' }) : null}\r\n                            type=\"button\"\r\n                            className={`btn px-5 fontSizeButton no-shadow text-white ${thereAreRequest === 0 && isSelectedData?.length > 0 ? \"bg-green\" : \"bg-lineGrey\"\r\n                                }`}\r\n                        >\r\n                            {isSelectedData?.length === 0 ? 'Update' :thereAreRequest === 0 && isSelectedData?.length > 0? 'Update' : 'Processing...'}\r\n          </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default withRouter(AddSKU);\r\n"],"sourceRoot":""}