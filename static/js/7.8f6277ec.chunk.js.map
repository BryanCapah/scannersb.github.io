{"version":3,"sources":["Component/Modal/ModalConfirmation/services.js","Component/Modal/ModalConfirmation/index.jsx","Component/Modal/PopUpDiscard/index.jsx","Component/Input/decimal.jsx","assets/icons/trash.png","Component/Modal/PopUpSaved/services.js","Component/Modal/PopUpSaved/index.jsx","Component/Modal/PopUpRequired/services.js","Component/Modal/PopUpRequired/index.jsx"],"names":["next","e","state","isCaptcha","setIsValidated","setIsType","isType","key","type","includes","type_","document","getElementById","parseInt","focus","value","console","log","setSelectionRange","toUpperCase","split","stat","map","data","index","ModalsConfirmation","moduleEntry","confirmation","setConfirmation","save","submit","isSuccess","isLoading","moveAll","setAction","moduleName","noSkuChecking","singleViewData","height","documentElement","clientHeight","buttonName","name","useEffect","show","window","onkeydown","keyCode","module","areaDestinationName","jobPost","warehouseDestinationName","areaName","skuListUpdate","length","newModule","list","poList","po","itemList","item","qty","grade","_qty","isInteger","parseFloat","_sku","skuName","wasteType","label","_toWaste","_uom","unitOfMeassures","uom","newSku","sku","wqty","swqty","isExist","findIndex","push","i","s","forEach","skuListUpdateCheck","className","closeOnBackdrop","tabIndex","onKeyDown","onClick","style","minHeight","maxHeight","overflow","border","borderBottom","color","textAlign","maxWidth","totalQty","ModalsCaptcha","setIsShowModal","submitText","text","characters","charactersLength","text_split","r","charAt","Math","floor","random","useDispatch","selectorCsvFileName","useSelector","csvFileName","React","useState","isCaptchaText","isValidated","onClose","size","autocomplete","onKeyUp","id","textTransform","maxLength","placeholder","PopUpDiscard","discard","close","discardEntry","Input","isEmpty","entryListIdx","poListIdx","wmsPoSkuInfoId","inputWidth","ripeness","values","onChange","showTitle","title","toCompare","autoComplete","exports","submitAction","setIsSaved","setLocalEntryData","PopUpSaved","isSaved","totalSku","action","complete","status","updateEntry","setUpdateEntry","saved","success","header","headerIcon","textColor","date","dateFull","button","buttonText","failed","updateSuccess","updatedAlready","showErrorMessage","setShowErrorMessage","arrowIcon","opacity","errorText","reset","bodyOpenClassName","backgroundColor","message","wordWrap","toString","handleFailed","defaults","threshold","initialWeight","isRequired","setIsRequired","invalidThreshold","setInvalidThreshold","isLessThanInitWeight"],"mappings":"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","file":"static/js/7.8f6277ec.chunk.js","sourcesContent":["import { isInteger } from \"formik\";\r\n\r\nexport const next = ({\r\n  e,\r\n  state,\r\n  isCaptcha,\r\n  setIsValidated,\r\n  setIsType,\r\n  isType,\r\n}) => {\r\n  const key = e.key; // const {key} = event; ES6+\r\n  let type = [...isType];\r\n\r\n  let arr_tmp = [\"ArrowUp\", \"ArrowDown\", \"Tab\"];\r\n  if (arr_tmp.includes(key)) {\r\n    return 0;\r\n  } else if (key === \"Backspace\") {\r\n    let type_ = [...isType];\r\n    let state_ = type_[state];\r\n    if (state_ == \"\" && state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).value = \"\";\r\n      type_[state - 1] = \"\";\r\n      type[state - 1] = \"\";\r\n    }\r\n    console.log(type_);\r\n  } else if (key === \"ArrowLeft\") {\r\n    if (state !== 1) {\r\n      document.getElementById(\"t\" + (parseInt(state) - 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) - 1))\r\n        .setSelectionRange(-1, -1);\r\n\r\n      return 0;\r\n    }\r\n  } else if (key === \"ArrowRight\") {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n      document\r\n        .getElementById(\"t\" + (parseInt(state) + 1))\r\n        .setSelectionRange(-1, -1);\r\n      return 0;\r\n    }\r\n  } else {\r\n    if (state !== 3) {\r\n      document.getElementById(\"t\" + (parseInt(state) + 1)).focus();\r\n    }\r\n  }\r\n\r\n  if (key === \"Backspace\") {\r\n    type[state] = \"\";\r\n  } else {\r\n    type[state] = key.toUpperCase();\r\n  }\r\n  let char = \"QWERTYUIOPLKJHGFDSAZXCVBNM1234567890\";\r\n  let allowedChar = char.split(\"\");\r\n  if (allowedChar.includes(key.toUpperCase()) || type[state] == \"\") {\r\n    document.getElementById(\"t\" + parseInt(state)).value = type[state];\r\n    setIsType(type);\r\n  } else {\r\n    return 0;\r\n  }\r\n\r\n  let stat = true;\r\n  isCaptcha.map((data, index) => {\r\n    if (index == 0) {\r\n      return;\r\n    }\r\n    if (!(type[index + 1] == isCaptcha[index])) {\r\n      stat = false;\r\n    }\r\n  });\r\n  setIsValidated(stat);\r\n};\r\n\r\nexport const skuListUpdateCheck = (module, noSkuChecking, moduleName) => {\r\n  if (module?.length) {\r\n    let newModule = [];\r\n    module.map((list) => {\r\n      list.poList.map((po) => {\r\n        po.itemList.map((item) => {\r\n          const { qty, grade } = item;\r\n          const _qty = isInteger(qty)\r\n            ? parseInt(qty)\r\n            : !qty\r\n              ? 0\r\n              : parseFloat(qty);\r\n          const _sku = noSkuChecking\r\n            ? list.skuName\r\n            : moduleName === \"waste\"\r\n              ? item.wasteType?.label\r\n                ? item.wasteType?.label\r\n                : list.skuName\r\n              : grade?.label;\r\n          const _toWaste =\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\" ||\r\n                item.wasteType?.label === \"Waste\"\r\n                ? true\r\n                : false\r\n              : grade?.label === \"Waste\" || grade?.label === \"Semi Waste\"\r\n                ? true\r\n                : false;\r\n          const _uom = noSkuChecking\r\n            ? list.unitOfMeassures\r\n            : grade?.uom === \"gram\"\r\n              ? \"kg\"\r\n              : grade?.uom;\r\n          let newSku = {\r\n            sku: _sku,\r\n            qty: _qty,\r\n            uom: _uom,\r\n            wqty: 0,\r\n            swqty: 0,\r\n          };\r\n          if (_toWaste) {\r\n            newSku.qty = 0;\r\n            newSku.sku = list.skuName;\r\n          }\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Waste\"\r\n              : grade?.label === \"Waste\"\r\n          )\r\n            newSku.wqty = _qty;\r\n          if (\r\n            moduleName === \"waste\"\r\n              ? item.wasteType?.label === \"Semi Waste\"\r\n              : grade?.label === \"Semi Waste\"\r\n          )\r\n            newSku.swqty = _qty;\r\n          const isExist = newModule.findIndex(\r\n            (sku) => sku?.sku === (_toWaste ? list.skuName : _sku)\r\n          );\r\n\r\n          if (moduleName !== \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (grade?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (grade?.label === \"Waste\") newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n\r\n          if (moduleName === \"waste\") {\r\n            if (isExist === -1) newModule.push(newSku);\r\n            if (isExist !== -1) {\r\n              if (!_toWaste) newModule[isExist].qty += _qty;\r\n              if (item.wasteType?.label === \"Semi Waste\")\r\n                newModule[isExist].swqty += _qty;\r\n              if (item.wasteType?.label === \"Waste\")\r\n                newModule[isExist].wqty += _qty;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n    const skuName = module.length ? module[0].skuName : \"No SKU\";\r\n    const i = newModule.findIndex((s) => s.sku === skuName);\r\n    newModule.forEach((sku) => {\r\n      if (i !== -1) {\r\n        if (sku.sku === \"Waste\") newModule[i].wqty = sku.qty;\r\n        if (sku.sku === \"Semi Waste\") newModule[i].swqty = sku.qty;\r\n      }\r\n    });\r\n    return newModule;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport \"./index.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { next, skuListUpdateCheck } from \"./services.js\";\r\nimport { totalQty } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\nconst ModalsConfirmation = ({ moduleEntry, confirmation, setConfirmation, save, submit, isSuccess, isLoading, moveAll, setAction, moduleName, noSkuChecking, singleViewData }) => {\r\n  const dimention = document.documentElement.clientHeight\r\n  const height = dimention - 300\r\n\r\n  let buttonName = 'Submit'\r\n\r\n  if (confirmation.name === 'save') buttonName = 'Save'\r\n  useEffect(() => {\r\n    if (isSuccess) setConfirmation({ show: false, name: null })\r\n  }, [isSuccess])\r\n  window.onkeydown = e => e.keyCode === 27 ? setConfirmation({ show: false, name: null }) : null\r\n\r\n  useEffect(() => {\r\n    setAction(confirmation.name)\r\n  }, [confirmation])\r\n\r\n  let module = singleViewData && !moveAll ? singleViewData : moduleEntry\r\n\r\n  const areaDestinationName = module?.jobPost?.areaDestinationName\r\n  const warehouseDestinationName = module?.jobPost?.warehouseDestinationName\r\n  const areaName = module?.jobPost?.areaName\r\n\r\n  const skuListUpdate = skuListUpdateCheck(module?.jobPost.list, noSkuChecking, moduleName)\r\n  return (\r\n    <CRow className={confirmation.show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={confirmation.show}\r\n          closeOnBackdrop={false}\r\n        >\r\n          <CModalHeader className=\"px-4 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation <span><i className=\"em em-pray\"></i></span></CModalTitle>\r\n            <label tabIndex='0' onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false} onClick={() => setConfirmation({ show: false, name: null })} className='sku-item iconU-modalClose' />\r\n\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-4 py-0\" style={{ minHeight: height }}>\r\n            <p className=\"text mb-2\">\r\n              <span>{`Are you sure want to ${areaName == 'Waste' ? 'update' : 'send'} this Item `}</span>\r\n              <span className={` ${areaDestinationName ? null : 'd-none'}`}>{` from`}</span>\r\n              <span className={`green ${areaDestinationName ? null : 'd-none'}`}>{` ${areaName} `}</span>\r\n              <span>{moduleName == 'outbound' ? 'from' : moduleName === 'repack' ? '' : 'to'} </span>\r\n              <span className={`green ${moduleName !== 'repack' ? null : 'd-none'}`}>{` ${moduleName === 'stockTransfer' ? warehouseDestinationName : (areaDestinationName ? areaDestinationName : areaName)} `}</span>\r\n            </p>\r\n            <p className=\"text\">\r\n              Please double check this list, this record will store to database.\r\n            </p>\r\n            <div\r\n              style={{\r\n                minHeight: height,\r\n                maxHeight: height,\r\n                overflow: \"auto\",\r\n                border: \"1px solid var(--lineGrey)\",\r\n              }}\r\n            >\r\n              <table>\r\n                <thead>\r\n                  <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                    <th style={{ color: \"var(--emptyTextField)\" }}>SKU List</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Weight</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Semi Waste</th>\r\n                    <th style={{ textAlign: \"right\", color: \"var(--emptyTextField)\", }}>Waste</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {skuListUpdate?.map((data) => (\r\n                    <tr style={{ borderBottom: \"1px solid var(--lineGrey)\" }}>\r\n                      <td style={{ maxWidth: '160px' }}>{data.sku}</td>\r\n                      <td className=\"text-right py-3\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.qty)}`}\r\n                      </td>\r\n                      <td className=\"text-right text-nowrap\" style={{ textAlign: \"right\" }}>\r\n                        <span className='text-nowrap'>{`${totalQty(data?.swqty)} `}</span>\r\n                      </td>\r\n                      <td className=\"text-right\" style={{ textAlign: \"right\" }}>\r\n                        {`${totalQty(data?.wqty)}`}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"px-0 pb-5 pt-0 justify-content-start border-none\">\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? setConfirmation({ show: false, name: null }) : false}\r\n                className=\"bg-background sku-item text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n                onClick={() => setConfirmation({ show: false, name: null })}\r\n              >\r\n                Cancel\r\n            </CButton>\r\n              <CButton\r\n                tabIndex='0'\r\n                onKeyDown={e => e.keyCode === 13 ? (isLoading ? null : (confirmation.name === 'save' ? save() : submit())) : false}\r\n                className={`${isLoading ? 'bg-softGreen text' : 'bg-green text-white'} no-shadow px-5 mt-4 sku-item mb-0 ml-3 mr-0`}\r\n                onClick={() => isLoading ? null : (confirmation.name === 'save' ? save() : submit())}\r\n              >\r\n                {isLoading ? 'Processing...' : buttonName}\r\n              </CButton>{\" \"}\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst ModalsCaptcha = ({\r\n  show = false,\r\n  setIsShowModal,\r\n  submit,\r\n  submitText = \"Submit\",\r\n}) => {\r\n  //random text\r\n  var text = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  var text_split = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    let r = characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    text += r;\r\n    text_split.push(r);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const selectorCsvFileName = useSelector((state) => state.csvFileName);\r\n  const [isCaptcha, setIsCaptcha] = React.useState(text_split);\r\n  const [isCaptchaText, setIsCaptchaText] = React.useState(text);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n  const [isButtonSubmit, setIsButtonSubmit] = React.useState(\"Submit\");\r\n  const [isType, setIsType] = React.useState([]);\r\n\r\n  //reset if visible = false \r\n  useEffect(() => {\r\n    if (show === true) {\r\n      document.getElementById('t1').value = '';\r\n      document.getElementById('t2').value = '';\r\n      document.getElementById('t3').value = '';\r\n    }\r\n  }, [show]);\r\n\r\n  return (\r\n    <CRow className={show ? null : 'd-none'}>\r\n      <CCol>\r\n        <CModal\r\n          show={show}\r\n          onClose={() => {\r\n            setIsShowModal(false);\r\n          }}\r\n          size=\"lg\"\r\n          style={{ height: \"400px\" }}\r\n        >\r\n          <CModalHeader className=\"px-5 pt-5 border-none\">\r\n            <CModalTitle className=\"text LatoBold\">Confirmation</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody className=\"px-5 py-0\">\r\n            <p className=\"text mb-2\">\r\n              Are you sure want to upload <span className=\"green\">Edited</span>{\" \"}\r\n              {selectorCsvFileName}?\r\n            </p>\r\n            <p className=\"text\">\r\n              Once uploaded this record will store to databases.\r\n            </p>\r\n            <p className=\"text mb-2\">\r\n              Please type ‘{isCaptchaText}’ on the Box to confirm upload file.\r\n            </p>\r\n\r\n            <div className=\"captcha-box\">\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 1,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t1\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[0]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 2,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t2\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input ml-0 mr-0\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[1]}\r\n              />\r\n              <input\r\n                autocomplete=\"off\"\r\n                onKeyUp={(e) => {\r\n                  next({\r\n                    e,\r\n                    state: 3,\r\n                    isCaptcha,\r\n                    setIsValidated,\r\n                    setIsType,\r\n                    isType,\r\n                  });\r\n                }}\r\n                id=\"t3\"\r\n                type=\"text\"\r\n                style={{ textTransform: \"uppercase\" }}\r\n                className=\"captcha-input\"\r\n                maxLength=\"1\"\r\n                placeholder={isCaptcha[2]}\r\n              />\r\n            </div>\r\n          </CModalBody>\r\n\r\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\r\n            <CButton\r\n              className=\"bg-background text no-shadow px-5 mt-4 mb-0 mx-0\"\r\n              onClick={() => {\r\n                setIsShowModal(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </CButton>\r\n            <CButton\r\n              className={\r\n                (isValidated ? \"bg-green\" : \"bg-emptyTextField disabled\") +\r\n                \" no-shadow px-5 mt-4 mb-0 ml-3 mr-0\"\r\n              }\r\n              onClick={() => {\r\n                submit();\r\n                setIsValidated(false);\r\n              }}\r\n            >\r\n              {submitText}\r\n            </CButton>{\" \"}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport { ModalsConfirmation, ModalsCaptcha };\r\n","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    return (\r\n        <CRow className={discard ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                             from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-5 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","import React from 'react'\r\nconst Input = ({\r\n    isEmpty,\r\n    entryListIdx,\r\n    poListIdx,\r\n    wmsPoSkuInfoId,\r\n    uom,\r\n    ripeness,\r\n    inputWidth,\r\n    values,\r\n    onChange,\r\n    showTitle,\r\n    title,\r\n    toCompare\r\n}) => {\r\n    const show = uom === 'gram' || uom === 'kg' || uom === 'KG' ? true : false\r\n    return (\r\n        <div className={` ${inputWidth} mb-3 mr-3 ${show ? null : 'd-none'}`}>\r\n            <div className={` pb-1 LatoBold ${showTitle ? null : 'd-none'}`}>{title}</div>\r\n            <div className={`${isEmpty ? 'border-red' : 'border'} rounded border-soft-green w-100 bg-white d-flex align-items-center input-height px-2 mr-3`}>\r\n                <input id={`wgt_${poListIdx}_${entryListIdx}`} maxLength='12' autoComplete='off' type='text' className='w-100 plain-input' value={values} name={toCompare ? 'weightToCompare' : 'weight'} onChange={(e) => onChange(e)} />\r\n                <div className='font-soft-grey'>{uom ? uom.toUpperCase() : ''}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","module.exports = __webpack_public_path__ + \"static/media/trash.121a7b10.png\";","export const submitAction = ({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) => {\r\n    if (confirmation.name === 'submit') {\r\n        if (moveAll) setLocalEntryData()\r\n        submit()\r\n        setIsSaved()\r\n\r\n    }\r\n    else {\r\n        setIsSaved()\r\n    }\r\n}\r\n\r\nexport const message = ({ moduleEntry, complete }) => {\r\n    if (moduleEntry?.jobPost) {\r\n        let message = null\r\n        const { areaDestinationName, areaName } = moduleEntry?.jobPost\r\n        if (areaDestinationName) message = ` ${areaName} reefer ${areaDestinationName} - `\r\n        else message = ` ${areaName} - `\r\n        return message\r\n    }\r\n}\r\n\r\nexport const handleFailed = ({ setIsSaved, setConfirmation, action, setLocalEntryData }) => {\r\n    setIsSaved()\r\n    setConfirmation({ show: false, name: action })\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { dateFull } from 'services'\r\nimport { submitAction, message, handleFailed } from './services'\r\n\r\nconst PopUpSaved = ({\r\n    isSaved,\r\n    moduleName,\r\n    totalSku,\r\n    setIsSaved,\r\n    confirmation,\r\n    setConfirmation,\r\n    submit,\r\n    action,\r\n    moduleEntry,\r\n    complete,\r\n    setLocalEntryData,\r\n    moveAll,\r\n    status,\r\n    updateEntry,\r\n    setUpdateEntry\r\n}) => {\r\n    const saved = {\r\n        success: {\r\n            header: confirmation.name === 'submit' ? 'Success ! ' : 'Saved !',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: `${confirmation.name === 'submit' ? 'Submitted' : 'Saved'} successfully`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        failed: {\r\n            header: `${confirmation.name === 'submit' ? 'Submit' : 'Save'} Failed`,\r\n            headerIcon: 'em em-anguished',\r\n            textColor: 'red',\r\n            date: dateFull({}),\r\n            sku: '',\r\n            module: `Sorry `,\r\n            status: 'item not recorded.',\r\n            button: 'bg-red',\r\n            buttonText: 'Try Again'\r\n        },\r\n        updateSuccess: {\r\n            header: 'Updated',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: ` updated successfully.`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        },\r\n        updatedAlready: {\r\n            header: 'Already Updated',\r\n            headerIcon: confirmation.name === 'submit' ? 'em em-tada' : 'em em-camera_with_flash',\r\n            textColor: 'green',\r\n            date: dateFull({}),\r\n            sku: totalSku ? `${totalSku} ${totalSku > 1 ? 'SKU(s)' : 'SKU'}` : '',\r\n            module: moduleName,\r\n            status: ` already updated`,\r\n            button: 'bg-green',\r\n            buttonText: 'Got It !'\r\n        }\r\n    }\r\n    let data = isSaved ? saved.success : saved.failed\r\n    const [showErrorMessage, setShowErrorMessage] = useState(false)\r\n\r\n    let show = isSaved === true || isSaved === false ? true : false\r\n\r\n    if (updateEntry === true || updateEntry === false) {\r\n        data = updateEntry === true ? saved.updateSuccess : (updateEntry === false ? saved.updatedAlready : saved.success)\r\n        if (updateEntry) show = true\r\n        else if (updateEntry === false) show = true\r\n        else {\r\n            if (typeof (setUpdateEntry) === 'function') {\r\n                setUpdateEntry()\r\n                show = false\r\n            }\r\n        }\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_saved')\r\n    if (focus) focus.focus()\r\n\r\n    const arrowIcon = showErrorMessage ? 'iconU-arrowTop' : 'iconU-arrowBottom'\r\n    const opacity = isSaved ? 1 : (showErrorMessage ? 1 : 0)\r\n    const errorText = showErrorMessage ? 'Hide Message' : 'Show Message'\r\n\r\n    const reset = () => {\r\n        setIsSaved()\r\n        if (typeof (setUpdateEntry) === 'function') setUpdateEntry()\r\n    }\r\n    return (\r\n        <CRow onKeyDown={e => e.keyCode === 27 ? setIsSaved() : false} className={show ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    className={`${isSaved ? null : 'popup-saved'}`}\r\n                    show={show}\r\n\r\n                    onClose={() => {\r\n                        if (isSaved) submitAction({ confirmation, setIsSaved, submit })\r\n                        if (!isSaved) setIsSaved()\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit }) : reset()} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <label className={`${data.textColor} LatoBold mr-2 h5 mb-3`}>{data.header}</label> <span><i className={`${data.headerIcon}`}></i></span>\r\n                        <div className='mr-1 h5 mb-3'>{`Entries ${data.status}`}</div>\r\n                        <div className={updateEntry ? 'mb-3 h5' : 'd-none'}>Please continue your work.</div>\r\n                        <div onClick={() => setShowErrorMessage(!showErrorMessage)} className={`d-flex align-items-center mr-1 mb-3 error-message pointer ${isSaved || updateEntry === true || updateEntry === false ? 'd-none' : null}`}>\r\n                            <div className={`mr-2 ${arrowIcon}`} />\r\n                            <div className='green'>{errorText}</div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA', opacity: opacity }} className='w-100 border rounded px-3 pt-3 pb-3 mb-3'>\r\n                            <div className={`h5 mb-3 ${isSaved ? null : 'd-none'}`}>{data.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className={`mr-1 ${isSaved ? null : 'd-none'}`}>{`${message({ moduleEntry, complete })} ${data.sku}`}</label>\r\n                                <div className={`mr-1 ${isSaved || updateEntry ? 'd-none' : null}`}>\r\n                                    <div style={{ wordWrap: 'break-word !important', opacity: opacity, height: showErrorMessage ? false : 0 }} className={`mr-1 `}>\r\n                                        {`${status?.message?.toString() ? status?.message?.toString() : 'The transaction cannot be processed. Please update current entries'}`}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`mb-2 h5 ${confirmation.name === 'submit' || updateEntry ? 'd-none' : null}`}>Please continue your work</div>\r\n                        <div className='w-100 d-flex '>\r\n                            <CButton onClick={() => reset()} className={`text no-shadow px-5 mr-4 mb-3 ${`bg-softGreen ${isSaved ? 'd-none' : null}`}`}>\r\n                                Cancel\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => setUpdateEntry()} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button} ${updateEntry === true || updateEntry === false ? null : 'd-none'}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                            <CButton id={`btn_is_saved`} tabIndex='0' onClick={() => isSaved ? submitAction({ confirmation, setIsSaved, submit, setLocalEntryData, moveAll }) : handleFailed({ setIsSaved, setConfirmation, action })} className={`text-white sku-item no-shadow px-5 mb-3 ${data.button} ${updateEntry === true || updateEntry === false ? 'd-none' : null}`}>\r\n                                {data.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n","export let defaults = {\r\n    header: 'Complete All !',\r\n    headerIcon: 'em em-anger',\r\n    textColor: 'red',\r\n    date: 'You are  required to update all entries on the list.',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Check several entries left.',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const threshold = {\r\n    header: 'Please double check!',\r\n    headerIcon: 'em em-pray',\r\n    textColor: 'red',\r\n    date: 'Some entries are less -20% or exceed 50% the excess percentage.',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again. If you’re sure enough, click Submit anyway.',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}\r\n\r\nexport const initialWeight = {\r\n    header: 'Something wrong!',\r\n    headerIcon: 'em em-thinking_face',\r\n    textColor: 'red',\r\n    date: 'Add Weight should not exceed Initial Weight',\r\n    sku: '',\r\n    module: '',\r\n    status: 'Please check again and edit the Weight field or Pack field?',\r\n    button: 'bg-green',\r\n    buttonText: 'Check Entries'\r\n}","import React from \"react\";\r\nimport { isLessThanInitWeight } from 'services'\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n    CModalFooter\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/PopUp/index.scss\";\r\nimport { threshold, initialWeight, defaults } from './services'\r\n\r\nconst PopUpSaved = ({ isRequired, setIsRequired, moduleName, module, totalSku, invalidThreshold, setInvalidThreshold, submit }) => {\r\n    let saved = defaults;\r\n    let isTrue\r\n    if ((!isRequired && invalidThreshold) || (isRequired && invalidThreshold)) {\r\n        saved = threshold\r\n    }\r\n\r\n    if (moduleName !== 'stockTake') {\r\n        isTrue = isLessThanInitWeight(module)\r\n        if (isTrue) saved = initialWeight\r\n    }\r\n\r\n    const focus = document.getElementById('btn_is_required')\r\n    if (focus) focus.focus()\r\n    return (\r\n        <CRow className={isRequired || invalidThreshold ? null : 'd-none'}>\r\n            <CCol className='required'>\r\n                <CModal\r\n                    show={isRequired || invalidThreshold}\r\n                    onClose={() => {\r\n                        setIsRequired(false)\r\n                        if (invalidThreshold) setInvalidThreshold(false)\r\n                    }}\r\n                    size=\"lg\"\r\n                    style={{ minHeight: \"280px\" }}\r\n                    bodyOpenClassName=\"p-3\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <i className=\"pr-3 pt-3 iconU-modalClose\" onClick={() => {\r\n                            setIsRequired(false)\r\n                            if (invalidThreshold) setInvalidThreshold(false)\r\n                        }} ></i>\r\n                    </div>\r\n                    <CModalBody className=\"px-5 mt-3 py-0\">\r\n                        <div className='d-flex align-items-center mb-5'>\r\n                            <label className={`${saved?.textColor} LatoBold mr-2 h5`}>{saved?.header}</label> <span><i className={`${saved?.headerIcon}`}></i></span>\r\n                        </div>\r\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100 border rounded px-3 pt-4 pb-3 mb-4'>\r\n                            <div className={`h5 mb-3 ${isRequired || invalidThreshold ? null : 'd-none'}`}>{saved?.date}</div>\r\n                            <div className='mb-0'>\r\n                                <label className='mr-1 h5'>{`${saved?.status}`}</label>\r\n                            </div>\r\n                        </div>\r\n                    </CModalBody>\r\n                    <CModalFooter className={`px-5 pb-5 pt-0 w-100 ${invalidThreshold ? 'justify-content-between' : 'justify-content-start'}  border-none d-flex mt-2`}>\r\n                        <div>\r\n                            {/* <CButton onClick={() => {\r\n                                setIsRequired(false)\r\n                                if (invalidThreshold) setInvalidThreshold(false)\r\n                            }} className={`text no-shadow ${`bg-softGreen ${isRequired ? 'd-none' : null}`}`}>\r\n                                Cancel\r\n                        </CButton> */}\r\n                            <CButton\r\n                                id={'btn_is_required'}\r\n                                tabIndex='0'\r\n                                onClick={() => {\r\n                                    setIsRequired(false)\r\n                                    if (invalidThreshold) setInvalidThreshold(false)\r\n                                }} className={`text-white no-shadow ${saved?.button}`}>\r\n                                {saved?.buttonText}\r\n                            </CButton>\r\n                        </div>\r\n                        <div>\r\n                            <CButton\r\n                                style={{ backgroundColor: '#F5F7FA' }}\r\n                                id={'btn_is_required'}\r\n                                tabIndex='0'\r\n                                onClick={() => {\r\n                                    setIsRequired(false)\r\n                                    if (invalidThreshold) setInvalidThreshold(false)\r\n                                    if (typeof (submit) === 'function') submit()\r\n                                }} className={`text LatoBold no-shadow ${invalidThreshold ? null : 'd-none'} `}>\r\n                                Submit anyway\r\n                        </CButton>\r\n                        </div>\r\n\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n\r\n    );\r\n};\r\n\r\nexport default PopUpSaved;\r\n"],"sourceRoot":""}