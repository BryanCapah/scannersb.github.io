{"version":3,"sources":["Page/StockEntry/Waste/index.jsx","Component/Modal/PopUpDiscard/index.jsx","Page/StockEntry/Waste/services.js"],"names":["withRouter","props","dispatch","useDispatch","story","useHistory","useDimension","height","emptyItem","useWaste","moduleName","thereAreRequest","moduleFirstLoad","warehouseUuid","status","isLoading","wasteEntryData","areaId","summary","setSummary","localEntryData","setLocalEntryData","search","setSearch","discard","setDiscard","isCheckedTotal","useState","category","setCategory","sortBy","setSortBy","isPlural","noLength","length","isReady","jobPost","list","className","module","moduleEntry","close","discardEntry","id","removeEntryModule","redirect","history","push","previousPage","goBack","placeholder","filter","searchHandler","desc","getStockTakeSummary","setModule","transaction","style","minHeight","maxHeight","sort","a","b","filterBySkuName","value","map","data","idx","key","img","photo","skuDescription","skuName","skuNumber","uomLabel","uomValue","totalQty","uom","unitOfMeassures","isCheckedHandler","checked","selectSku","moduleSummary","check","responseCheck","label","src","loading","alt","tabIndex","onClick","type","CREATE_JOB_SHEET","PopUpDiscard","document","documentElement","clientHeight","show","size","closeOnBackdrop","moduleSummaryNew","GET_STOCK_TAKE_ACTION","selectedData","ldata","jsSelector","jsList","skuUuid","jsD","sI","includes","getGrade","skuId","grade","getPoBySkuId","addPoItem","poList","itemList","expiryMs","expiryDate","moment","valueOf","inBoundyMs","inboundDate","initialWeight","Number","isInteger","parseInt","parseFloat","Promise","all","newJs","concat","uncheckedSku","jobSheet","warehouseSource","warehouseDestination","areaSource","areaName","areaDestination","preAddSku","preAddHandler","isFloat","isNewItem","submitValidation","setActiveSKU","setConfirmation","setIsRequired","isClear","js","jsR","po","qtyCount","totalListItemWeightCount","moduleList","item","qty","wasteType","note","isNaN","qtyIsEmpty","wasteTypeIsEmpty","noteIsEmpty","uploadPhotoIsEmpty","valid","name","checkIsSkuRequired"],"mappings":"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","file":"static/js/70.b54e535d.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { CREATE_JOB_SHEET } from 'apiServices/action'\r\nimport Search from \"Component/Search\";\r\nimport { getStockTakeSummary, removeEntryModule } from \"apiServices\";\r\nimport SKUItem from \"Component/SKUItem\";\r\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\r\nimport \"./index.scss\";\r\nimport {selectSku} from './services'\r\nimport { filterBySkuName, responseCheck } from \"Page/StockEntry/GeneralServices/moduleServices\";\r\nimport PopUp from \"Component/Modal/PopUp\";\r\nimport PopUpUnfinished from 'Component/Modal/PopUpUnfinished'\r\nimport Discard from 'Component/Modal/PopUpDiscard'\r\nimport { useDimension,useWaste } from \"../GeneralServices\";\r\nconst Waste = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const story = useHistory()\r\n\r\n  const {height,emptyItem} = useDimension(290)\r\n\r\n  const {\r\n    moduleName,\r\n    thereAreRequest,\r\n    moduleFirstLoad,\r\n    warehouseUuid,\r\n    status,\r\n    isLoading,\r\n    wasteEntryData,\r\n    areaId,\r\n    summary,\r\n    setSummary,\r\n    localEntryData,\r\n    setLocalEntryData,\r\n    search,\r\n    setSearch,\r\n    discard,\r\n    setDiscard,\r\n    isCheckedTotal\r\n  } = useWaste({dispatch})\r\n\r\n  //search\r\n  const [category, setCategory] = useState()\r\n  const [sortBy, setSortBy] = useState()\r\n\r\n  // Condition\r\n  const isPlural = isCheckedTotal > 1 ? \"s\" : \"\"\r\n  const noLength = summary?.length ? \"flex-column\" : \"flex-row\"\r\n  const isReady = thereAreRequest === 0 && (localEntryData && localEntryData?.jobPost?.list?.length > 0)\r\n  return (\r\n    <div className=\"w-100  stock-take-summary\">\r\n      <Discard\r\n          discard={discard}\r\n          module={'Inventory Entry - Waste'}\r\n          moduleEntry={wasteEntryData}\r\n          close={() => setDiscard(false)}\r\n          discardEntry={(id) => removeEntryModule({ id, moduleName, dispatch,setDiscard })}\r\n      />\r\n      <PopUpUnfinished\r\n        discard={discard}\r\n        moduleFirstLoad={moduleFirstLoad}\r\n        moduleEntry={wasteEntryData}\r\n        redirect={() => props.history.push(\"/inventory-entry/waste/weight-entry\")}\r\n        previousPage={() => story.goBack()}\r\n        setDiscard={() => setDiscard(true)}\r\n      />\r\n      <PopUp status={status} />\r\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white border-all radius-all mb-3\">\r\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\r\n          <div className=\"text LatoBold d-flex justify-content-between align-items-center sku-des\">\r\n            <div>\r\n              Enter SKU or Description{\" \"}\r\n              <span className=\"green\">{`(${isCheckedTotal} Selected SKU${isPlural\r\n                })`}</span>\r\n            </div>\r\n            {/* <div className=\"icon-unfinishEn\">\r\n              <i className=\"iconU-sideBarInventoryEntry emptyTextField\"></i>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <Search\r\n          setSortBy={setSortBy}\r\n          moduleName={moduleName}\r\n          category={category} \r\n          setCategory={setCategory}\r\n          placeholder={\"Enter SKU\"}\r\n          filter={false}\r\n          searchHandler={(desc) => getStockTakeSummary({category, dispatch, desc, warehouseUuid, areaId, setModule: setSummary, transaction:'waste', module:localEntryData  },setSearch(desc))}\r\n        />\r\n        <div\r\n          className={`mb-3 mt-3 d-flex align-items-center scroll-sku ${noLength} w-100 text-center`} style={{ minHeight: height , maxHeight: height}}>\r\n          {summary?.length ? (\r\n            summary?.sort( function(a,b){ return filterBySkuName(a,b,sortBy?.value)})?.map((data, idx) => {\r\n              return (\r\n                <SKUItem\r\n                  key={idx}\r\n                  img={data?.photo}\r\n                  skuDescription={data?.skuName}\r\n                  skuNumber={data?.skuNumber}\r\n                  uomLabel=\"weight\"\r\n                  uomValue={data?.totalQty}\r\n                  uom={data?.unitOfMeassures}\r\n                  isCheckedHandler={(checked) =>\r\n                    selectSku({\r\n                      idx,\r\n                      checked,\r\n                      dispatch,\r\n                      setLocalEntryData,\r\n                      moduleSummary: summary,\r\n                      moduleEntry: localEntryData,\r\n                      moduleName,\r\n                      warehouseUuid,\r\n                      areaId,\r\n                    })\r\n                  }\r\n                  check={data?.checked}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n              <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem, maxHeight:emptyItem }}>\r\n                {!responseCheck({ isLoading, summary }) ? (\r\n                  <img className=\"loading\" src={loading} alt=\"loading\" />\r\n                ) : areaId && summary?.length === 0 ? (\r\n                  <div>\r\n                    Sorry, we couldn't find any matches\r\n                    for '<span className='LatoBold'>{search}</span>' in {areaId?.label} area.\r\n                    <br/>\r\n                    Please Try search with another term.\r\n                  </div>\r\n                ) : 'Enter SKU'}\r\n              </div>\r\n            )}\r\n        </div>\r\n      </div>\r\n      <div className=\"h-screen-summary-footer d-flex flex-column justify-content-start\">\r\n        <div className=\"w-100 d-flex align-items-center justify-content-between mb-1\">\r\n          <button\r\n            tabIndex='0'\r\n            onClick={() => props.history.push(\"/inventory-entry/waste/CSV-upload\")}\r\n            type=\"button\"\r\n            className=\"btn sku-item px-4 no-shadow border-all bg-white fontSizeButton\"\r\n          >\r\n            Upload File\r\n          </button>\r\n          <button\r\n            tabIndex='0'\r\n            onClick={() => {\r\n              if (isReady) {\r\n                dispatch({ type: CREATE_JOB_SHEET, wasteEntryData: localEntryData })\r\n                props.history.push(\"/inventory-entry/waste/weight-entry\")\r\n              }\r\n            }\r\n            }\r\n            type=\"button\"\r\n            className={`btn sku-item px-5 fontSizeButton no-shadow text-white ${isReady ? \"bg-green\" : \"bg-lineGrey\"\r\n              }`}\r\n          >\r\n            {(!localEntryData || localEntryData?.jobPost?.list?.length === 0) && thereAreRequest === 0 ? 'Next' :isReady ? 'Next' : 'Processing...'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Waste);\r\n","import React from \"react\";\r\nimport {\r\n    CButton,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport \"Component/Modal/ModalConfirmation/index.scss\";\r\nconst PopUpDiscard = ({ discard, moduleEntry, close, discardEntry, module }) => {\r\n    const dimention = document.documentElement.clientHeight\r\n    const height = dimention - 900\r\n    return (\r\n        <CRow className={discard ? null : 'd-none'}>\r\n            <CCol>\r\n                <CModal\r\n                    show={discard}\r\n                    size=\"lg\"\r\n                    closeOnBackdrop={false}\r\n                >\r\n\r\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\r\n                        <i onClick={() => close()} className='iconU-modalClose' ></i>\r\n                    </div>\r\n\r\n                    <CModalHeader className=\"px-5 pb-4 mb-2 pt-4 mt-2 border-none\">\r\n                        <CModalTitle className=\"red LatoBold\">Discard? <span><i className=\"em em-astonished\"></i></span></CModalTitle>\r\n                        {/* <label onClick={() => close()} className='iconU-modalClose' /> */}\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody className=\"px-5 pb-5 mb-4 py-0\">\r\n                        <p className=\"text mb-3 h5 respon-txt\">\r\n                            Are you sure you want to discard <span className='green'>{` ${moduleEntry?.jobPost.list.length} selected SKU ${moduleEntry?.jobPost.list.length > 1 ? '(s)' : ''}`}</span>\r\n                             from this\r\n                            <div className='green h5 pt-2 respon-txt'>{module}</div>\r\n                        </p>\r\n                        <br />\r\n                        <CButton onClick={() => discardEntry(moduleEntry?.jobPost.id)} className=\"bg-background text no-shadow pl-5 pr-5 mr-3 LatoBlack\">\r\n                            Discard\r\n                        </CButton>\r\n                        <CButton onClick={() => close()} className=\"bg-green no-shadow pl-4 pr-4 LatoBlack\">\r\n                            Don't Discard\r\n                        </CButton>{\" \"}\r\n                    </CModalBody>\r\n                </CModal>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default PopUpDiscard\r\n","import moment from 'moment'\r\nimport { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET, SET_AREA } from 'apiServices/action'\r\nimport { getPoBySkuId, removeEntryModule } from 'apiServices'\r\nimport { getGrade } from 'apiServices/dropdown'\r\nimport { isFloat } from 'services'\r\nimport { checkIsSkuRequired, filterBySkuName, totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\r\n\r\n// update sku list tobe selected\r\nexport const selectSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    setLocalEntryData,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n    dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.jobPost.list.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade?.filter(grade => grade?.label === 'Waste' || grade?.label === 'Semi Waste')\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = Number.isInteger(poList.initialWeight) ? parseInt(poList.initialWeight) : parseFloat(poList.initialWeight)\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.jobPost.list.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n\r\n    const id = moduleEntry?.jobPost?.id\r\n    const jobSheet = {\r\n        jobPost: {\r\n            id: id ? id : 0,\r\n            warehouseSource: warehouseUuid,\r\n            warehouseDestination: warehouseUuid,\r\n            areaSource: parseInt(areaId?.value),\r\n            areaName: areaId?.label,\r\n            areaDestination: parseInt(areaId?.value),\r\n            list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\r\n        }\r\n    }\r\n    if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\r\n    setLocalEntryData(jobSheet)\r\n    // dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: jobSheet })\r\n}\r\n\r\n//pre Add SKU\r\nexport const preAddSku = async ({\r\n    idx,\r\n    checked,\r\n    dispatch,\r\n    moduleName,\r\n    moduleSummary,\r\n    moduleEntry,\r\n    warehouseUuid,\r\n    areaId,\r\n    preAddHandler }) => {\r\n    let moduleSummaryNew = [...moduleSummary]\r\n    moduleSummaryNew[idx].checked = checked\r\n\r\n    const selectedData = moduleSummaryNew?.filter(ldata => {\r\n        if (ldata.checked) return ldata\r\n    })\r\n    let jsSelector = []\r\n    if (moduleEntry) {\r\n        moduleEntry.map(data => {\r\n            const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\r\n            if (jsList.skuUuid) {\r\n                jsSelector.push(jsList.skuUuid)\r\n            }\r\n        })\r\n    }\r\n    let jsD = []\r\n    const a = selectedData.map(async (list, sI) => {\r\n        const isInclude = jsSelector.includes(list.skuUuid)\r\n        if (!isInclude) {\r\n            const grade = await getGrade({ skuId: list.skuUuid })\r\n            list['gradeList'] = grade?.filter(grade => grade?.label === 'Waste' || grade?.label === 'Semi Waste')\r\n            const data = await getPoBySkuId({ skuId: list.skuUuid, warehouseUuid, dispatch, areaId: areaId.value, moduleName })\r\n            if (data) {\r\n                const addPoItem = data.map(poList => {\r\n                    poList.itemList = []\r\n\r\n                    const expiryMs = poList.expiryDate ? moment(poList.expiryDate).valueOf() : null\r\n                    const inBoundyMs = poList.inboundDate ? moment(poList.inboundDate).valueOf() : null\r\n                    poList.expiryDate = expiryMs\r\n                    poList.inboundDate = inBoundyMs\r\n                    poList.skuUuid = list.skuUuid\r\n                    poList.uom = list.unitOfMeassures\r\n                    poList.category = list.category\r\n                    poList.initialWeight = isFloat(poList.initialWeight) ? isFloat(poList.initialWeight) : poList.initialWeight\r\n                    return poList\r\n                })\r\n                list['poList'] = addPoItem\r\n                list.isNewItem = true\r\n                jsD.push(list)\r\n            }\r\n\r\n        }\r\n    })\r\n    const aF = await Promise.all(a)\r\n    let newJs = []\r\n    if (moduleEntry) {\r\n        newJs = moduleEntry.concat(jsD)\r\n    }\r\n    if (!moduleEntry) newJs = jsD\r\n\r\n    const uncheckedSku = moduleSummaryNew[idx]\r\n    if (!uncheckedSku.checked) {\r\n        newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\r\n    }\r\n    preAddHandler(newJs);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired }) => {\r\n    let isClear = []\r\n    let js = { ...moduleEntry }\r\n\r\n    const jsR = moduleEntry.jobPost.list.map(data => {\r\n        data.poList.map(po => {\r\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\r\n            po.itemList.map(item => {\r\n                const { qty, wasteType, note } = item\r\n                if ((qty == 0 || isNaN(qty)) && wasteType?.value === null) {\r\n                    item.qtyIsEmpty = false\r\n                    item.wasteTypeIsEmpty = false\r\n                    item.uploadPhotoIsEmpty = false\r\n                    item.noteIsEmpty = false\r\n                }\r\n                else {\r\n                    isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                    !wasteType?.value ? item.wasteTypeIsEmpty = true : item.wasteTypeIsEmpty = false\r\n                    !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\r\n                    // !uploadPhoto ? item.uploadPhotoIsEmpty = true : item.uploadPhotoIsEmpty = false\r\n                }\r\n\r\n                if (!item.qtyIsEmpty) {\r\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\r\n                        item.qtyIsEmpty = true\r\n                    }\r\n                    else item.qtyIsEmpty = false\r\n                }\r\n\r\n                // if(!item.qtyIsEmpty) po.initialWeightOver > po.initialWeight ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\r\n                if (item?.qtyIsEmpty || item?.wasteTypeIsEmpty || item?.uploadPhotoIsEmpty || item?.noteIsEmpty) isClear.push(false)\r\n                else isClear.push(true)\r\n\r\n                return item\r\n            })\r\n            return po\r\n        })\r\n        return data\r\n    })\r\n\r\n\r\n    //validate there is value\r\n    let valid = false\r\n    jsR.map(data => {\r\n        data.poList.map(po => {\r\n            po.itemList.map(item => {\r\n                let i = false\r\n                if (item.qty) valid = true\r\n            })\r\n        })\r\n    })\r\n\r\n    js.jobPost.list = jsR\r\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\r\n    if (!isClear.includes(false) && valid) {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\r\n    }\r\n    else {\r\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\r\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\r\n    }\r\n\r\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\r\n}"],"sourceRoot":""}